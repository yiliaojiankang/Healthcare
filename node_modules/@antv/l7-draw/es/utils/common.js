import { isEqual } from 'lodash';
// @ts-ignore
export var isDev = process.env.NODE_ENV === 'development';
/**
 * 获取完全覆盖地图区域的DOM，会根据地图类型返回不同的结果
 * @param scene
 */
export var getMapDom = function getMapDom(scene) {
  var _ref, _container$querySelec;
  var container = scene.getContainer();
  return (_ref = (_container$querySelec = container === null || container === void 0 ? void 0 : container.querySelector('.l7-marker-container')) !== null && _container$querySelec !== void 0 ? _container$querySelec : container === null || container === void 0 ? void 0 : container.querySelector('.amap-maps')) !== null && _ref !== void 0 ? _ref : null;
};
/**
 * 磨平L7 Scene 鼠标事件返回的经纬度差异
 * @param e
 */
export var getLngLat = function getLngLat(e) {
  // @ts-ignore
  return e.lngLat || e.lnglat;
};
export var getPosition = function getPosition(e) {
  var _getLngLat = getLngLat(e),
    lng = _getLngLat.lng,
    lat = _getLngLat.lat;
  return [lng, lat];
};
/**
 * 将lnglat转换为position格式
 * @param lng
 * @param lat
 */
export var transLngLat2Position = function transLngLat2Position(_ref2) {
  var lng = _ref2.lng,
    lat = _ref2.lat;
  return [lng, lat];
};
/**
 * 找到最小值的下标
 * @param array
 */
export var findMinIndex = function findMinIndex(array) {
  var maxValue = Number.MAX_SAFE_INTEGER;
  var maxIndex = 0;
  var length = array.length;
  for (var index = 0; index < length; index++) {
    if (array[index] < maxValue) {
      maxValue = array[index];
      maxIndex = index;
    }
  }
  return maxIndex;
};
export var splitByPosition = function splitByPosition(positions, splitPosition) {
  var linePositionsList = [];
  var linePositions = [];
  positions.forEach(function (position) {
    if (!isEqual(position, splitPosition)) {
      linePositions.push(position);
    } else if (linePositions.length) {
      linePositionsList.push(linePositions);
      linePositions = [];
    }
  });
  if (linePositions.length) {
    linePositionsList.push(linePositions);
  }
  return linePositionsList;
};