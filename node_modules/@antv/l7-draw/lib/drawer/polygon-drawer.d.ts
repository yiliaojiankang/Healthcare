import { Scene } from '@antv/l7';
import { Feature, Polygon } from '@turf/turf';
import { IPolygonModeOptions, PolygonMode } from '../mode';
import { DeepPartial, ILayerMouseEvent, IMidPointFeature, IPointFeature, ISceneMouseEvent } from '../typings';
export interface IPolygonDrawerOptions extends IPolygonModeOptions<Feature<Polygon>> {
    liveUpdate: boolean;
}
export declare class PolygonDrawer extends PolygonMode<IPolygonDrawerOptions> {
    constructor(scene: Scene, options: DeepPartial<IPolygonDrawerOptions>);
    getDefaultOptions(options: DeepPartial<IPolygonDrawerOptions>): IPolygonDrawerOptions;
    setData(data: Feature<Polygon>[]): void;
    onPointCreate(e: ILayerMouseEvent): IPointFeature | undefined;
    drawPolygonFinish: () => void;
    onPointClick(e: ILayerMouseEvent<IPointFeature>): void;
    onPointDragging(e: ISceneMouseEvent): IPointFeature | undefined;
    onLineDragging(e: ISceneMouseEvent): import("../typings").ILineFeature | undefined;
    onMidPointClick(e: ILayerMouseEvent<IMidPointFeature>): IPointFeature | undefined;
    onSceneMouseMove(e: ISceneMouseEvent): void;
    removeNode(node: Feature | string, feature: Feature | string): void;
    onPointContextMenu(e: ILayerMouseEvent<IPointFeature>): IPointFeature | undefined;
    bindPointRenderEvent(): void;
    enablePointRenderAction(): void;
    disablePointRenderAction(): void;
}
