var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/parser/raster/ndi.ts
var ndi_exports = {};
__export(ndi_exports, {
  default: () => rasterRgb
});
module.exports = __toCommonJS(ndi_exports);
function rasterRgb(data, cfg) {
  const { extent, width, height, ...options } = cfg;
  if (data.length < 2) {
    console.warn("RGB解析需要2个波段的数据");
  }
  const [n, d] = options.bands || [0, 1];
  const bandsData = [data[n], data[d]];
  const ndidata = [];
  for (let i = 0; i < bandsData[0].length; i++) {
    ndidata.push((bandsData[1][i] - bandsData[0][i]) / (bandsData[1][i] + bandsData[0][i]));
  }
  const resultData = {
    _id: 1,
    dataArray: [
      {
        _id: 1,
        data: ndidata,
        width,
        height,
        ...options,
        coordinates: [
          [extent[0], extent[1]],
          [extent[2], extent[3]]
        ]
      }
    ]
  };
  return resultData;
}
