/* eslint-disable */
if (!window) {
  throw Error('Google Map JSAPI can only be used in Browser.');
}
var LoadStatus = /*#__PURE__*/function (LoadStatus) {
  LoadStatus["notload"] = "notload";
  LoadStatus["loading"] = "loading";
  LoadStatus["loaded"] = "loaded";
  LoadStatus["failed"] = "failed";
  return LoadStatus;
}(LoadStatus || {});
var config = {
  key: ''
};
var Status = {
  GMap: LoadStatus.notload
};
var onloadCBKs = [];
// @ts-ignore
var onload = function onload(callback) {
  if (typeof callback === 'function') {
    if (Status.GMap === LoadStatus.loaded) {
      // @ts-ignore
      callback(window.google.maps.Map);
      return;
    }
    onloadCBKs.push(callback);
  }
};
var load = function load(options) {
  return new Promise(function (resolve, reject) {
    if (Status.GMap === LoadStatus.failed) {
      reject('');
    } else if (Status.GMap === LoadStatus.notload) {
      var key = options.key;
      if (!key) {
        reject('请填写key');
        return;
      }
      config.key = key;
      Status.GMap = LoadStatus.loading;
      window.initMap = function (err) {
        delete window.initMap;
        if (err) {
          Status.GMap = LoadStatus.failed;
          reject(err);
        } else {
          Status.GMap = LoadStatus.loaded;
          while (onloadCBKs.length) {
            // @ts-ignore
            onloadCBKs.splice(0, 1)[0](window.google.maps.Map);
          }
        }
      };
      var script = document.createElement('script');
      script.type = 'text/javascript';
      script.async = false;
      script.src = "https://maps.googleapis.com/maps/api/js?key=".concat(config.key, "&callback=initMap");
      script.onerror = function (e) {
        Status.GMap = LoadStatus.failed;
        reject(e);
      };
      var parentNode = document.body || document.head;
      parentNode.appendChild(script);
      onload(resolve);
    } else if (Status.GMap === LoadStatus.loaded) {
      if (options.key && options.key !== config.key) {
        reject('多个不一致的 key');
        return;
      }
      onload(resolve);
    }
  });
};
var reset = function reset() {
  // @ts-ignore
  delete window.google;
  Status = {
    GMap: LoadStatus.notload
  };
};
export default {
  load: load,
  reset: reset
};