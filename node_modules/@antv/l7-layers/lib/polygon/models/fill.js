"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _l7Core = require("@antv/l7-core");
var _l7Utils = require("@antv/l7-utils");
var _BaseModel2 = _interopRequireDefault(require("../../core/BaseModel"));
var _triangulation = require("../../core/triangulation");
var _CommonStyleAttribute = require("../../core/CommonStyleAttribute");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/* babel-plugin-inline-import '../shaders/fill/fill_frag.glsl' */
var polygon_frag = "in vec4 v_color;\n#pragma include \"scene_uniforms\"\n#pragma include \"picking\"\nout vec4 outputColor;\nvoid main() {\n  outputColor = v_color;\n  outputColor = filterColor(outputColor);\n}\n";
/* babel-plugin-inline-import '../shaders/fill/fill_linear_frag.glsl' */
var polygon_linear_frag = "\nlayout(std140) uniform commonUniforms {\n  float u_raisingHeight;\n  float u_opacitylinear;\n  float u_dir;\n};\n\nin vec4 v_color;\nin vec3 v_linear;\nin vec2 v_pos;\nout vec4 outputColor;\n#pragma include \"scene_uniforms\"\n#pragma include \"picking\"\n\nvoid main() {\n  outputColor = v_color;\n  if (u_opacitylinear > 0.0) {\n    outputColor.a *= u_dir == 1.0 ? 1.0 - length(v_pos - v_linear.xy)/v_linear.z : length(v_pos - v_linear.xy)/v_linear.z;\n  }\n  outputColor = filterColor(outputColor);\n}\n";
/* babel-plugin-inline-import '../shaders/fill/fill_linear_vert.glsl' */
var polygon_linear_vert = "layout(location = 0) in vec3 a_Position;\nlayout(location = 1) in vec4 a_Color;\nlayout(location = 15) in vec3 a_linear;\n\nlayout(std140) uniform commonUniforms {\n  float u_raisingHeight;\n  float u_opacitylinear;\n  float u_dir;\n};\n\nout vec4 v_color;\nout vec3 v_linear;\nout vec2 v_pos;\n\n#pragma include \"projection\"\n#pragma include \"picking\"\n\nvoid main() {\n  if (u_opacitylinear > 0.0) {\n    v_linear = a_linear;\n    v_pos = a_Position.xy;\n  }\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\n  vec4 project_pos = project_position(vec4(a_Position, 1.0));\n  project_pos.z += u_raisingHeight;\n\n  if (u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\n    float mapboxZoomScale = 4.0/pow(2.0, 21.0 - u_Zoom);\n    project_pos.z *= mapboxZoomScale;\n    project_pos.z += u_raisingHeight * mapboxZoomScale;\n  }\n\n  gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xyz, 1.0));\n  setPickingColor(a_PickingColor);\n}";
/* babel-plugin-inline-import '../shaders/fill/fill_vert.glsl' */
var polygon_vert = "layout(location = 0) in vec3 a_Position;\nlayout(location = 1) in vec4 a_Color;\n\nlayout(std140) uniform commonUniforms {\n  float u_raisingHeight;\n};\n\n\nout vec4 v_color;\n\n\n#pragma include \"projection\"\n#pragma include \"picking\"\n\nvoid main() {\n  // cal style mapping - \u6570\u636E\u7EB9\u7406\u6620\u5C04\u90E8\u5206\u7684\u8BA1\u7B97\n\n  // cal style mapping - \u6570\u636E\u7EB9\u7406\u6620\u5C04\u90E8\u5206\u7684\u8BA1\u7B97\n\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\n  vec4 project_pos = project_position(vec4(a_Position, 1.0));\n  // gl_Position = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\n\n  project_pos.z += u_raisingHeight;\n\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\n    float mapboxZoomScale = 4.0/pow(2.0, 21.0 - u_Zoom);\n    project_pos.z *= mapboxZoomScale;\n    project_pos.z += u_raisingHeight * mapboxZoomScale;\n  }\n\n \n  gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xyz, 1.0));\n\n  setPickingColor(a_PickingColor);\n}\n\n";
var FillModel = exports.default = /*#__PURE__*/function (_BaseModel) {
  (0, _inherits2.default)(FillModel, _BaseModel);
  var _super = _createSuper(FillModel);
  function FillModel() {
    (0, _classCallCheck2.default)(this, FillModel);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(FillModel, [{
    key: "getUninforms",
    value: function getUninforms() {
      var commoninfo = this.getCommonUniformsInfo();
      var attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());
      this.updateStyleUnifoms();
      return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, commoninfo.uniformsOption), attributeInfo.uniformsOption);
    }
  }, {
    key: "getCommonUniformsInfo",
    value: function getCommonUniformsInfo() {
      var _ref = this.layer.getLayerConfig(),
        _ref$raisingHeight = _ref.raisingHeight,
        raisingHeight = _ref$raisingHeight === void 0 ? 0 : _ref$raisingHeight,
        _ref$opacityLinear = _ref.opacityLinear,
        opacityLinear = _ref$opacityLinear === void 0 ? {
          enable: false,
          dir: 'in'
        } : _ref$opacityLinear;
      var commonOptions = {
        u_raisingHeight: Number(raisingHeight),
        u_opacitylinear: Number(opacityLinear.enable),
        u_dir: opacityLinear.dir === 'in' ? 1.0 : 0.0
      };
      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);
      return commonBufferInfo;
    }
  }, {
    key: "initModels",
    value: function () {
      var _initModels = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", this.buildModels());
            case 1:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function initModels() {
        return _initModels.apply(this, arguments);
      }
      return initModels;
    }()
  }, {
    key: "buildModels",
    value: function () {
      var _buildModels = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var _this$getModelParams, frag, vert, triangulation, type, model;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _this$getModelParams = this.getModelParams(), frag = _this$getModelParams.frag, vert = _this$getModelParams.vert, triangulation = _this$getModelParams.triangulation, type = _this$getModelParams.type;
              this.initUniformsBuffer();
              this.layer.triangulation = triangulation;
              _context2.next = 5;
              return this.layer.buildLayerModel({
                moduleName: type,
                vertexShader: vert,
                fragmentShader: frag,
                inject: this.getInject(),
                triangulation: triangulation,
                primitive: _l7Core.gl.TRIANGLES,
                depth: {
                  enable: false
                }
              });
            case 5:
              model = _context2.sent;
              return _context2.abrupt("return", [model]);
            case 7:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function buildModels() {
        return _buildModels.apply(this, arguments);
      }
      return buildModels;
    }()
  }, {
    key: "registerBuiltinAttributes",
    value: function registerBuiltinAttributes() {
      var _ref2 = this.layer.getLayerConfig(),
        _ref2$opacityLinear = _ref2.opacityLinear,
        opacityLinear = _ref2$opacityLinear === void 0 ? {
          enable: false,
          dir: 'in'
        } : _ref2$opacityLinear;
      if (opacityLinear.enable) {
        this.styleAttributeService.registerStyleAttribute({
          name: 'linear',
          type: _l7Core.AttributeType.Attribute,
          descriptor: {
            name: 'a_linear',
            shaderLocation: _CommonStyleAttribute.ShaderLocation.LINEAR,
            buffer: {
              // give the WebGL driver a hint that this buffer may change
              usage: _l7Core.gl.STATIC_DRAW,
              data: [],
              type: _l7Core.gl.FLOAT
            },
            size: 3,
            update: function update(feature, featureIdx, vertex) {
              return [vertex[3], vertex[4], vertex[5]];
            }
          }
        });
      }
    }
  }, {
    key: "getModelParams",
    value: function getModelParams() {
      var _ref3 = this.layer.getLayerConfig(),
        _ref3$opacityLinear = _ref3.opacityLinear,
        opacityLinear = _ref3$opacityLinear === void 0 ? {
          enable: false
        } : _ref3$opacityLinear;
      if (opacityLinear.enable) {
        return {
          frag: polygon_linear_frag,
          vert: polygon_linear_vert,
          type: 'polygonLinear',
          triangulation: _triangulation.polygonTriangulationWithCenter
        };
      } else {
        return {
          frag: polygon_frag,
          vert: polygon_vert,
          type: 'polygonFill',
          triangulation: _l7Utils.polygonFillTriangulation
        };
      }
    }
  }]);
  return FillModel;
}(_BaseModel2.default);