"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _l7Core = require("@antv/l7-core");
var _l7Utils = require("@antv/l7-utils");
var _BaseModel2 = _interopRequireDefault(require("../../core/BaseModel"));
var _CommonStyleAttribute = require("../../core/CommonStyleAttribute");
var _triangulation = require("../../core/triangulation");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/* babel-plugin-inline-import '../shaders/image_frag.glsl' */
var ImageFrag = "uniform sampler2D u_texture;\nlayout(std140) uniform commonUniforms {\n    float u_opacity:1.0;\n    float u_brightness:1.0;\n    float u_contrast:1.0;\n    float u_saturation:1.0;\n    float u_gamma:1.0;\n};\n\nin vec2 v_texCoord;\nout vec4 outputColor;\nvec3 setContrast(vec3 rgb, float contrast) {\n  vec3 color = mix(vec3(0.5), rgb, contrast);\n  color = clamp(color, 0.0, 1.0);\n  return color;\n}\nvec3 setSaturation(vec3 rgb, float adjustment) {\n  const vec3 grayVector = vec3(0.2125, 0.7154, 0.0721);\n  vec3 intensity = vec3(dot(rgb, grayVector));\n  vec3 color = mix(intensity, rgb, adjustment);\n  color = clamp(color, 0.0, 1.0);\n  return color;\n}\nvoid main() {\n  vec4 color = texture(SAMPLER_2D(u_texture),vec2(v_texCoord.x,v_texCoord.y));\n  //brightness\n  color.rgb = mix(vec3(0.0, 0.0, 0.0), color.rgb, u_brightness);\n  //contrast\n  color.rgb = setContrast(color.rgb, u_contrast);\n  // saturation\n  color.rgb = setSaturation(color.rgb, u_saturation);\n  // gamma\n  color.rgb = pow(color.rgb, vec3(u_gamma));\n  outputColor = color;\n  outputColor.a *= u_opacity;\n  if(outputColor.a < 0.01)\n    discard;\n}\n";
/* babel-plugin-inline-import '../shaders/image_vert.glsl' */
var ImageVert = "layout(location = 0) in vec3 a_Position;\nlayout(location = 14) in vec2 a_Uv;\n\nlayout(std140) uniform commonUniforms {\n    float u_opacity:1.0;\n    float u_brightness:1.0;\n    float u_contrast:1.0;\n    float u_saturation:1.0;\n    float u_gamma:1.0;\n};\n\nout vec2 v_texCoord;\n#pragma include \"projection\"\nvoid main() {\n   v_texCoord = a_Uv;\n   vec4 project_pos = project_position(vec4(a_Position, 1.0));\n   gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xy,0., 1.0));\n \n}\n";
var ImageModel = exports.default = /*#__PURE__*/function (_BaseModel) {
  (0, _inherits2.default)(ImageModel, _BaseModel);
  var _super = _createSuper(ImageModel);
  function ImageModel() {
    (0, _classCallCheck2.default)(this, ImageModel);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(ImageModel, [{
    key: "getCommonUniformsInfo",
    value: function getCommonUniformsInfo() {
      var _ref = this.layer.getLayerConfig(),
        opacity = _ref.opacity,
        brightness = _ref.brightness,
        contrast = _ref.contrast,
        saturation = _ref.saturation,
        gamma = _ref.gamma;
      var commonOptions = {
        u_opacity: (0, _l7Utils.defaultValue)(opacity, 1.0),
        u_brightness: (0, _l7Utils.defaultValue)(brightness, 1.0),
        u_contrast: (0, _l7Utils.defaultValue)(contrast, 1.0),
        u_saturation: (0, _l7Utils.defaultValue)(saturation, 1.0),
        u_gamma: (0, _l7Utils.defaultValue)(gamma, 1.0)
      };
      this.textures = [this.texture];
      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);
      return commonBufferInfo;
    }
  }, {
    key: "initModels",
    value: function () {
      var _initModels = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.loadTexture();
            case 2:
              return _context.abrupt("return", this.buildModels());
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function initModels() {
        return _initModels.apply(this, arguments);
      }
      return initModels;
    }()
  }, {
    key: "clearModels",
    value: function clearModels() {
      var _this$texture;
      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();
    }
  }, {
    key: "loadTexture",
    value: function () {
      var _loadTexture = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var createTexture2D, source, imageData;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              createTexture2D = this.rendererService.createTexture2D;
              this.texture = createTexture2D({
                height: 1,
                width: 1
              });
              source = this.layer.getSource();
              _context2.next = 5;
              return source.data.images;
            case 5:
              imageData = _context2.sent;
              this.texture = createTexture2D({
                data: imageData[0],
                width: imageData[0].width,
                height: imageData[0].height,
                mag: _l7Core.gl.LINEAR,
                min: _l7Core.gl.LINEAR
              });
            case 7:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function loadTexture() {
        return _loadTexture.apply(this, arguments);
      }
      return loadTexture;
    }()
  }, {
    key: "buildModels",
    value: function () {
      var _buildModels = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        var model;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              this.initUniformsBuffer();
              _context3.next = 3;
              return this.layer.buildLayerModel({
                moduleName: 'rasterImage',
                vertexShader: ImageVert,
                fragmentShader: ImageFrag,
                triangulation: _triangulation.RasterImageTriangulation,
                primitive: _l7Core.gl.TRIANGLES,
                blend: {
                  // Tip: 优化显示效果
                  enable: true
                },
                depth: {
                  enable: false
                },
                pickingEnabled: false
              });
            case 3:
              model = _context3.sent;
              return _context3.abrupt("return", [model]);
            case 5:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function buildModels() {
        return _buildModels.apply(this, arguments);
      }
      return buildModels;
    }()
  }, {
    key: "registerBuiltinAttributes",
    value: function registerBuiltinAttributes() {
      this.styleAttributeService.registerStyleAttribute({
        name: 'uv',
        type: _l7Core.AttributeType.Attribute,
        descriptor: {
          name: 'a_Uv',
          shaderLocation: _CommonStyleAttribute.ShaderLocation.UV,
          buffer: {
            usage: _l7Core.gl.DYNAMIC_DRAW,
            data: [],
            type: _l7Core.gl.FLOAT
          },
          size: 2,
          update: function update(feature, featureIdx, vertex) {
            return [vertex[3], vertex[4]];
          }
        }
      });
    }
  }]);
  return ImageModel;
}(_BaseModel2.default);