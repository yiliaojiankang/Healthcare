import { Event } from '@antv/g-base';
import { GM } from '../gm';
/**
 * 事件数据定义
 */
export interface GestureEvent {
    readonly event: Event;
    readonly x: number;
    readonly y: number;
    readonly deltaX?: number;
    readonly deltaY?: number;
    readonly clientX?: number;
    readonly clientY?: number;
    readonly speedX?: number;
    readonly speedY?: number;
}
export declare type GestureCtor = new (cfg: any) => Gesture;
export declare abstract class Gesture {
    protected abstract EVENT: string;
    protected gm: GM;
    constructor(gm: GM);
    /**
     * 处理事件
     * @param ev
     */
    do(ev: Event): void;
    /**
     * 触发事件
     * @param e
     */
    protected emit(e: GestureEvent): void;
    protected abstract onTouchStart(ev: any): any;
    protected abstract onTouchMove(ev: any): any;
    protected abstract onTouchEnd(ev: any): any;
    protected abstract onTouchCancel(ev: any): any;
}
