import { __extends } from "tslib";
import { clock } from '../utils/clock';
import { Gesture } from './gesture';
var TIME = 300;
var DISTANCE = 2;
var Tap = /** @class */ (function (_super) {
    __extends(Tap, _super);
    function Tap() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.EVENT = 'tap';
        return _this;
    }
    Tap.prototype.onTouchCancel = function (ev) { };
    Tap.prototype.onTouchEnd = function (ev) {
        var x = ev.x, y = ev.y;
        if (x - this.touchStartX < DISTANCE &&
            y - this.touchStartY < DISTANCE &&
            clock.now() - this.touchStartTime < TIME) {
            this.emit({ x: x, y: y, event: ev });
        }
    };
    Tap.prototype.onTouchMove = function (ev) { };
    Tap.prototype.onTouchStart = function (ev) {
        var x = ev.x, y = ev.y;
        this.touchStartTime = clock.now();
        this.touchStartX = x;
        this.touchStartY = y;
    };
    return Tap;
}(Gesture));
export { Tap };
//# sourceMappingURL=tap.js.map