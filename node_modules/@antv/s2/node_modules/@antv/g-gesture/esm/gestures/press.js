import { __extends } from "tslib";
import { clock } from '../utils/clock';
import { Gesture } from './gesture';
var TIME = 300;
var DISTANCE = 10;
var Press = /** @class */ (function (_super) {
    __extends(Press, _super);
    function Press() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.EVENT = 'press';
        return _this;
    }
    Press.prototype.onTouchCancel = function (ev) {
        this.clearTimeout();
    };
    Press.prototype.onTouchEnd = function (ev) {
        this.clearTimeout();
    };
    Press.prototype.onTouchMove = function (ev) {
        var x = ev.x, y = ev.y;
        if (x - this.touchStartX > DISTANCE || y - this.touchStartY > DISTANCE) {
            this.clearTimeout();
        }
    };
    Press.prototype.onTouchStart = function (ev) {
        var _this = this;
        this.clearTimeout();
        var x = ev.x, y = ev.y;
        this.touchStartTime = clock.now();
        this.touchStartX = x;
        this.touchStartY = y;
        this.pressTimeout = window.setTimeout(function () {
            _this.emit({ x: x, y: y, event: ev });
        }, TIME);
    };
    Press.prototype.clearTimeout = function () {
        window.clearTimeout(this.pressTimeout);
    };
    return Press;
}(Gesture));
export { Press };
//# sourceMappingURL=press.js.map