{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { calculate } from \"./math\";\nimport { operationsSchema } from \"./operationSchema\";\n/**\n * 执行波段计算 format + operation\n * @param imageDataList\n * @param rasterFormat\n * @param operation\n * @returns\n */\nexport function bandsOperation(_x, _x2, _x3) {\n  return _bandsOperation.apply(this, arguments);\n}\nfunction _bandsOperation() {\n  _bandsOperation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(imageDataList, rasterFormat, operation) {\n    var formatData, bandsData, _bandsData$, width, height, rasterData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(imageDataList.length === 0)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            rasterData: [0],\n            width: 1,\n            heigh: 1\n          });\n        case 2:\n          _context.next = 4;\n          return Promise.all(imageDataList.map(function (_ref) {\n            var data = _ref.data,\n              _ref$bands = _ref.bands,\n              bands = _ref$bands === void 0 ? [0] : _ref$bands;\n            return rasterFormat(data, bands);\n          }));\n        case 4:\n          formatData = _context.sent;\n          bandsData = []; // Tip: rasterFormat 返回值 rasterData|rasterData[]\n          formatData.forEach(function (d) {\n            Array.isArray(d) ? bandsData.push.apply(bandsData, _toConsumableArray(d)) : bandsData.push(d);\n          });\n          // 多个栅格数据必须是相同大小才能进行相互之间的运算\n          _bandsData$ = bandsData[0], width = _bandsData$.width, height = _bandsData$.height;\n          _context.t0 = _typeof(operation);\n          _context.next = _context.t0 === 'function' ? 11 : _context.t0 === 'object' ? 13 : 15;\n          break;\n        case 11:\n          rasterData = operation(bandsData);\n          return _context.abrupt(\"break\", 16);\n        case 13:\n          // 波段计算表达式 - operation\n          // operation: ['+', ['band', 0], 1]\n          /**\n           * operation: {\n           *  r: ['+', ['band', 0], 1],\n           *  g: ['+', ['band', 0], 1],\n           *  b: ['+', ['band', 0], 1],\n           * }\n           */\n          if (!Array.isArray(operation)) {\n            // RGB 三通道\n            rasterData = processSchemaOperation(operation, bandsData);\n          } else {\n            // 数值计算\n            rasterData = {\n              rasterData: calculate(operation, bandsData)\n            };\n          }\n          return _context.abrupt(\"break\", 16);\n        case 15:\n          rasterData = {\n            rasterData: bandsData[0].rasterData\n          };\n        case 16:\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, rasterData), {}, {\n            width: width,\n            height: height\n          }));\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _bandsOperation.apply(this, arguments);\n}\nfunction processSchemaOperation(operation, bandsData) {\n  var schema = operationsSchema[operation.type];\n  if (schema.type === 'function') {\n    // @ts-ignore\n    return schema.method(bandsData, operation === null || operation === void 0 ? void 0 : operation.options);\n  } else if (schema.type === 'operation') {\n    if (operation.type === 'rgb') {\n      // TODO 临时处理\n      // @ts-ignore\n      return getRgbBands(schema.expression, bandsData);\n    } else {\n      // @ts-ignore\n      return {\n        rasterData: calculate(schema.expression, bandsData)\n      };\n    }\n  }\n}\nfunction getRgbBands(operation, bandsData) {\n  if (operation.r === undefined) {\n    console.warn('Channel R lost in Operation! Use band[0] to fill!');\n  }\n  if (operation.g === undefined) {\n    console.warn('Channel G lost in Operation! Use band[0] to fill!');\n  }\n  if (operation.b === undefined) {\n    console.warn('Channel B lost in Operation! Use band[0] to fill!');\n  }\n  var r = calculate(operation.r || ['band', 0], bandsData);\n  var g = calculate(operation.g || ['band', 0], bandsData);\n  var b = calculate(operation.b || ['band', 0], bandsData);\n  return [r, g, b];\n}\n\n/**\n * 处理每个请求得到的栅格文件数据\n */\nexport function processRasterData(_x4, _x5, _x6, _x7) {\n  return _processRasterData.apply(this, arguments);\n}\nfunction _processRasterData() {\n  _processRasterData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rasterFiles, rasterFormat, operation, callback) {\n    var rasterData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return bandsOperation(rasterFiles, rasterFormat, operation);\n        case 2:\n          rasterData = _context2.sent;\n          // 目前 max｜min 没有生效\n\n          callback(null, {\n            data: rasterData\n          });\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _processRasterData.apply(this, arguments);\n}","map":{"version":3,"names":["_objectSpread","_typeof","_toConsumableArray","_asyncToGenerator","_regeneratorRuntime","calculate","operationsSchema","bandsOperation","_x","_x2","_x3","_bandsOperation","apply","arguments","mark","_callee","imageDataList","rasterFormat","operation","formatData","bandsData","_bandsData$","width","height","rasterData","wrap","_callee$","_context","prev","next","length","abrupt","heigh","Promise","all","map","_ref","data","_ref$bands","bands","sent","forEach","d","Array","isArray","push","t0","processSchemaOperation","stop","schema","type","method","options","getRgbBands","expression","r","undefined","console","warn","g","b","processRasterData","_x4","_x5","_x6","_x7","_processRasterData","_callee2","rasterFiles","callback","_callee2$","_context2"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/utils/bandOperation/bands.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { calculate } from \"./math\";\nimport { operationsSchema } from \"./operationSchema\";\n/**\n * 执行波段计算 format + operation\n * @param imageDataList\n * @param rasterFormat\n * @param operation\n * @returns\n */\nexport function bandsOperation(_x, _x2, _x3) {\n  return _bandsOperation.apply(this, arguments);\n}\nfunction _bandsOperation() {\n  _bandsOperation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(imageDataList, rasterFormat, operation) {\n    var formatData, bandsData, _bandsData$, width, height, rasterData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(imageDataList.length === 0)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            rasterData: [0],\n            width: 1,\n            heigh: 1\n          });\n        case 2:\n          _context.next = 4;\n          return Promise.all(imageDataList.map(function (_ref) {\n            var data = _ref.data,\n              _ref$bands = _ref.bands,\n              bands = _ref$bands === void 0 ? [0] : _ref$bands;\n            return rasterFormat(data, bands);\n          }));\n        case 4:\n          formatData = _context.sent;\n          bandsData = []; // Tip: rasterFormat 返回值 rasterData|rasterData[]\n          formatData.forEach(function (d) {\n            Array.isArray(d) ? bandsData.push.apply(bandsData, _toConsumableArray(d)) : bandsData.push(d);\n          });\n          // 多个栅格数据必须是相同大小才能进行相互之间的运算\n          _bandsData$ = bandsData[0], width = _bandsData$.width, height = _bandsData$.height;\n          _context.t0 = _typeof(operation);\n          _context.next = _context.t0 === 'function' ? 11 : _context.t0 === 'object' ? 13 : 15;\n          break;\n        case 11:\n          rasterData = operation(bandsData);\n          return _context.abrupt(\"break\", 16);\n        case 13:\n          // 波段计算表达式 - operation\n          // operation: ['+', ['band', 0], 1]\n          /**\n           * operation: {\n           *  r: ['+', ['band', 0], 1],\n           *  g: ['+', ['band', 0], 1],\n           *  b: ['+', ['band', 0], 1],\n           * }\n           */\n          if (!Array.isArray(operation)) {\n            // RGB 三通道\n            rasterData = processSchemaOperation(operation, bandsData);\n          } else {\n            // 数值计算\n            rasterData = {\n              rasterData: calculate(operation, bandsData)\n            };\n          }\n          return _context.abrupt(\"break\", 16);\n        case 15:\n          rasterData = {\n            rasterData: bandsData[0].rasterData\n          };\n        case 16:\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, rasterData), {}, {\n            width: width,\n            height: height\n          }));\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _bandsOperation.apply(this, arguments);\n}\nfunction processSchemaOperation(operation, bandsData) {\n  var schema = operationsSchema[operation.type];\n  if (schema.type === 'function') {\n    // @ts-ignore\n    return schema.method(bandsData, operation === null || operation === void 0 ? void 0 : operation.options);\n  } else if (schema.type === 'operation') {\n    if (operation.type === 'rgb') {\n      // TODO 临时处理\n      // @ts-ignore\n      return getRgbBands(schema.expression, bandsData);\n    } else {\n      // @ts-ignore\n      return {\n        rasterData: calculate(schema.expression, bandsData)\n      };\n    }\n  }\n}\nfunction getRgbBands(operation, bandsData) {\n  if (operation.r === undefined) {\n    console.warn('Channel R lost in Operation! Use band[0] to fill!');\n  }\n  if (operation.g === undefined) {\n    console.warn('Channel G lost in Operation! Use band[0] to fill!');\n  }\n  if (operation.b === undefined) {\n    console.warn('Channel B lost in Operation! Use band[0] to fill!');\n  }\n  var r = calculate(operation.r || ['band', 0], bandsData);\n  var g = calculate(operation.g || ['band', 0], bandsData);\n  var b = calculate(operation.b || ['band', 0], bandsData);\n  return [r, g, b];\n}\n\n/**\n * 处理每个请求得到的栅格文件数据\n */\nexport function processRasterData(_x4, _x5, _x6, _x7) {\n  return _processRasterData.apply(this, arguments);\n}\nfunction _processRasterData() {\n  _processRasterData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rasterFiles, rasterFormat, operation, callback) {\n    var rasterData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return bandsOperation(rasterFiles, rasterFormat, operation);\n        case 2:\n          rasterData = _context2.sent;\n          // 目前 max｜min 没有生效\n\n          callback(null, {\n            data: rasterData\n          });\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _processRasterData.apply(this, arguments);\n}"],"mappings":";AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC3C,OAAOC,eAAe,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAC/C;AACA,SAASF,eAAeA,CAAA,EAAG;EACzBA,eAAe,GAAGR,iBAAiB,EAAE,aAAaC,mBAAmB,CAACU,IAAI,CAAC,SAASC,OAAOA,CAACC,aAAa,EAAEC,YAAY,EAAEC,SAAS,EAAE;IAClI,IAAIC,UAAU,EAAEC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU;IACjE,OAAOpB,mBAAmB,CAACqB,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;MAC1D,OAAO,CAAC,EAAE,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;QAC7C,KAAK,CAAC;UACJ,IAAI,EAAEb,aAAa,CAACc,MAAM,KAAK,CAAC,CAAC,EAAE;YACjCH,QAAQ,CAACE,IAAI,GAAG,CAAC;YACjB;UACF;UACA,OAAOF,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAE;YAC/BP,UAAU,EAAE,CAAC,CAAC,CAAC;YACfF,KAAK,EAAE,CAAC;YACRU,KAAK,EAAE;UACT,CAAC,CAAC;QACJ,KAAK,CAAC;UACJL,QAAQ,CAACE,IAAI,GAAG,CAAC;UACjB,OAAOI,OAAO,CAACC,GAAG,CAAClB,aAAa,CAACmB,GAAG,CAAC,UAAUC,IAAI,EAAE;YACnD,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;cAClBC,UAAU,GAAGF,IAAI,CAACG,KAAK;cACvBA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGA,UAAU;YAClD,OAAOrB,YAAY,CAACoB,IAAI,EAAEE,KAAK,CAAC;UAClC,CAAC,CAAC,CAAC;QACL,KAAK,CAAC;UACJpB,UAAU,GAAGQ,QAAQ,CAACa,IAAI;UAC1BpB,SAAS,GAAG,EAAE,CAAC,CAAC;UAChBD,UAAU,CAACsB,OAAO,CAAC,UAAUC,CAAC,EAAE;YAC9BC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,GAAGtB,SAAS,CAACyB,IAAI,CAACjC,KAAK,CAACQ,SAAS,EAAElB,kBAAkB,CAACwC,CAAC,CAAC,CAAC,GAAGtB,SAAS,CAACyB,IAAI,CAACH,CAAC,CAAC;UAC/F,CAAC,CAAC;UACF;UACArB,WAAW,GAAGD,SAAS,CAAC,CAAC,CAAC,EAAEE,KAAK,GAAGD,WAAW,CAACC,KAAK,EAAEC,MAAM,GAAGF,WAAW,CAACE,MAAM;UAClFI,QAAQ,CAACmB,EAAE,GAAG7C,OAAO,CAACiB,SAAS,CAAC;UAChCS,QAAQ,CAACE,IAAI,GAAGF,QAAQ,CAACmB,EAAE,KAAK,UAAU,GAAG,EAAE,GAAGnB,QAAQ,CAACmB,EAAE,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE;UACpF;QACF,KAAK,EAAE;UACLtB,UAAU,GAAGN,SAAS,CAACE,SAAS,CAAC;UACjC,OAAOO,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;QACrC,KAAK,EAAE;UACL;UACA;UACA;AACV;AACA;AACA;AACA;AACA;AACA;UACU,IAAI,CAACY,KAAK,CAACC,OAAO,CAAC1B,SAAS,CAAC,EAAE;YAC7B;YACAM,UAAU,GAAGuB,sBAAsB,CAAC7B,SAAS,EAAEE,SAAS,CAAC;UAC3D,CAAC,MAAM;YACL;YACAI,UAAU,GAAG;cACXA,UAAU,EAAEnB,SAAS,CAACa,SAAS,EAAEE,SAAS;YAC5C,CAAC;UACH;UACA,OAAOO,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;QACrC,KAAK,EAAE;UACLP,UAAU,GAAG;YACXA,UAAU,EAAEJ,SAAS,CAAC,CAAC,CAAC,CAACI;UAC3B,CAAC;QACH,KAAK,EAAE;UACL,OAAOG,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAE/B,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEwB,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE;YAChFF,KAAK,EAAEA,KAAK;YACZC,MAAM,EAAEA;UACV,CAAC,CAAC,CAAC;QACL,KAAK,EAAE;QACP,KAAK,KAAK;UACR,OAAOI,QAAQ,CAACqB,IAAI,CAAC,CAAC;MAC1B;IACF,CAAC,EAAEjC,OAAO,CAAC;EACb,CAAC,CAAC,CAAC;EACH,OAAOJ,eAAe,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAC/C;AACA,SAASkC,sBAAsBA,CAAC7B,SAAS,EAAEE,SAAS,EAAE;EACpD,IAAI6B,MAAM,GAAG3C,gBAAgB,CAACY,SAAS,CAACgC,IAAI,CAAC;EAC7C,IAAID,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B;IACA,OAAOD,MAAM,CAACE,MAAM,CAAC/B,SAAS,EAAEF,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACkC,OAAO,CAAC;EAC1G,CAAC,MAAM,IAAIH,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IACtC,IAAIhC,SAAS,CAACgC,IAAI,KAAK,KAAK,EAAE;MAC5B;MACA;MACA,OAAOG,WAAW,CAACJ,MAAM,CAACK,UAAU,EAAElC,SAAS,CAAC;IAClD,CAAC,MAAM;MACL;MACA,OAAO;QACLI,UAAU,EAAEnB,SAAS,CAAC4C,MAAM,CAACK,UAAU,EAAElC,SAAS;MACpD,CAAC;IACH;EACF;AACF;AACA,SAASiC,WAAWA,CAACnC,SAAS,EAAEE,SAAS,EAAE;EACzC,IAAIF,SAAS,CAACqC,CAAC,KAAKC,SAAS,EAAE;IAC7BC,OAAO,CAACC,IAAI,CAAC,mDAAmD,CAAC;EACnE;EACA,IAAIxC,SAAS,CAACyC,CAAC,KAAKH,SAAS,EAAE;IAC7BC,OAAO,CAACC,IAAI,CAAC,mDAAmD,CAAC;EACnE;EACA,IAAIxC,SAAS,CAAC0C,CAAC,KAAKJ,SAAS,EAAE;IAC7BC,OAAO,CAACC,IAAI,CAAC,mDAAmD,CAAC;EACnE;EACA,IAAIH,CAAC,GAAGlD,SAAS,CAACa,SAAS,CAACqC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAEnC,SAAS,CAAC;EACxD,IAAIuC,CAAC,GAAGtD,SAAS,CAACa,SAAS,CAACyC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAEvC,SAAS,CAAC;EACxD,IAAIwC,CAAC,GAAGvD,SAAS,CAACa,SAAS,CAAC0C,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAExC,SAAS,CAAC;EACxD,OAAO,CAACmC,CAAC,EAAEI,CAAC,EAAEC,CAAC,CAAC;AAClB;;AAEA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACpD,OAAOC,kBAAkB,CAACtD,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAClD;AACA,SAASqD,kBAAkBA,CAAA,EAAG;EAC5BA,kBAAkB,GAAG/D,iBAAiB,EAAE,aAAaC,mBAAmB,CAACU,IAAI,CAAC,SAASqD,QAAQA,CAACC,WAAW,EAAEnD,YAAY,EAAEC,SAAS,EAAEmD,QAAQ,EAAE;IAC9I,IAAI7C,UAAU;IACd,OAAOpB,mBAAmB,CAACqB,IAAI,CAAC,SAAS6C,SAASA,CAACC,SAAS,EAAE;MAC5D,OAAO,CAAC,EAAE,QAAQA,SAAS,CAAC3C,IAAI,GAAG2C,SAAS,CAAC1C,IAAI;QAC/C,KAAK,CAAC;UACJ0C,SAAS,CAAC1C,IAAI,GAAG,CAAC;UAClB,OAAOtB,cAAc,CAAC6D,WAAW,EAAEnD,YAAY,EAAEC,SAAS,CAAC;QAC7D,KAAK,CAAC;UACJM,UAAU,GAAG+C,SAAS,CAAC/B,IAAI;UAC3B;;UAEA6B,QAAQ,CAAC,IAAI,EAAE;YACbhC,IAAI,EAAEb;UACR,CAAC,CAAC;QACJ,KAAK,CAAC;QACN,KAAK,KAAK;UACR,OAAO+C,SAAS,CAACvB,IAAI,CAAC,CAAC;MAC3B;IACF,CAAC,EAAEmB,QAAQ,CAAC;EACd,CAAC,CAAC,CAAC;EACH,OAAOD,kBAAkB,CAACtD,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}