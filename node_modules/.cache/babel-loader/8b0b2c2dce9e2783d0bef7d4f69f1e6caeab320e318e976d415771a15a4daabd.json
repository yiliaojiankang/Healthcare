{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\n// 自定义Shape 部分\nregisterShape('point', 'gauge-indicator', {\n  draw: function (cfg, container) {\n    // 使用 customInfo 传递参数\n    var _a = cfg.customInfo,\n      indicator = _a.indicator,\n      defaultColor = _a.defaultColor;\n    var _b = indicator,\n      pointer = _b.pointer,\n      pin = _b.pin;\n    var group = container.addGroup();\n    // 获取极坐标系下画布中心点\n    var center = this.parsePoint({\n      x: 0,\n      y: 0\n    });\n    // 绘制指针\n    if (pointer) {\n      // pointer\n      group.addShape('line', {\n        name: 'pointer',\n        attrs: __assign({\n          x1: center.x,\n          y1: center.y,\n          x2: cfg.x,\n          y2: cfg.y,\n          stroke: defaultColor\n        }, pointer.style)\n      });\n    }\n    // pin\n    if (pin) {\n      group.addShape('circle', {\n        name: 'pin',\n        attrs: __assign({\n          x: center.x,\n          y: center.y,\n          stroke: defaultColor\n        }, pin.style)\n      });\n    }\n    return group;\n  }\n});","map":{"version":3,"names":["registerShape","draw","cfg","container","_a","customInfo","indicator","defaultColor","_b","pointer","pin","group","addGroup","center","parsePoint","x","y","addShape","name","attrs","__assign","x1","y1","x2","y2","stroke","style"],"sources":["../../../../src/plots/gauge/shapes/indicator.ts"],"sourcesContent":["import { registerShape, Types } from '@antv/g2';\nimport { Indicator } from '../types';\n\n// 自定义Shape 部分\nregisterShape('point', 'gauge-indicator', {\n  draw(cfg: Types.ShapeInfo, container) {\n    // 使用 customInfo 传递参数\n    const { indicator, defaultColor } = cfg.customInfo;\n    const { pointer, pin } = indicator as Indicator;\n\n    const group = container.addGroup();\n    // 获取极坐标系下画布中心点\n    const center = this.parsePoint({ x: 0, y: 0 });\n    // 绘制指针\n    if (pointer) {\n      // pointer\n      group.addShape('line', {\n        name: 'pointer',\n        attrs: {\n          x1: center.x,\n          y1: center.y,\n          x2: cfg.x,\n          y2: cfg.y,\n          stroke: defaultColor,\n          ...pointer.style,\n        },\n      });\n    }\n\n    // pin\n    if (pin) {\n      group.addShape('circle', {\n        name: 'pin',\n        attrs: {\n          x: center.x,\n          y: center.y,\n          stroke: defaultColor,\n          ...pin.style,\n        },\n      });\n    }\n    return group;\n  },\n});\n"],"mappings":";AAAA,SAASA,aAAa,QAAe,UAAU;AAG/C;AACAA,aAAa,CAAC,OAAO,EAAE,iBAAiB,EAAE;EACxCC,IAAI,WAAAA,CAACC,GAAoB,EAAEC,SAAS;IAClC;IACM,IAAAC,EAAA,GAA8BF,GAAG,CAACG,UAAU;MAA1CC,SAAS,GAAAF,EAAA,CAAAE,SAAA;MAAEC,YAAY,GAAAH,EAAA,CAAAG,YAAmB;IAC5C,IAAAC,EAAA,GAAmBF,SAAsB;MAAvCG,OAAO,GAAAD,EAAA,CAAAC,OAAA;MAAEC,GAAG,GAAAF,EAAA,CAAAE,GAA2B;IAE/C,IAAMC,KAAK,GAAGR,SAAS,CAACS,QAAQ,EAAE;IAClC;IACA,IAAMC,MAAM,GAAG,IAAI,CAACC,UAAU,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE,CAAC;IAC9C;IACA,IAAIP,OAAO,EAAE;MACX;MACAE,KAAK,CAACM,QAAQ,CAAC,MAAM,EAAE;QACrBC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAAC,QAAA;UACHC,EAAE,EAAER,MAAM,CAACE,CAAC;UACZO,EAAE,EAAET,MAAM,CAACG,CAAC;UACZO,EAAE,EAAErB,GAAG,CAACa,CAAC;UACTS,EAAE,EAAEtB,GAAG,CAACc,CAAC;UACTS,MAAM,EAAElB;QAAY,GACjBE,OAAO,CAACiB,KAAK;OAEnB,CAAC;;IAGJ;IACA,IAAIhB,GAAG,EAAE;MACPC,KAAK,CAACM,QAAQ,CAAC,QAAQ,EAAE;QACvBC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAAC,QAAA;UACHL,CAAC,EAAEF,MAAM,CAACE,CAAC;UACXC,CAAC,EAAEH,MAAM,CAACG,CAAC;UACXS,MAAM,EAAElB;QAAY,GACjBG,GAAG,CAACgB,KAAK;OAEf,CAAC;;IAEJ,OAAOf,KAAK;EACd;CACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}