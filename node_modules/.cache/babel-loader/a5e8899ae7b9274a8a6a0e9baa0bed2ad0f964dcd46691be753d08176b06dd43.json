{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { transformData } from './utils';\n/**\n * 瀑布图\n */\nvar Waterfall = /** @class */function (_super) {\n  __extends(Waterfall, _super);\n  function Waterfall() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'waterfall';\n    return _this;\n  }\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n  Waterfall.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n  Waterfall.prototype.changeData = function (data) {\n    var _a = this.options,\n      xField = _a.xField,\n      yField = _a.yField,\n      total = _a.total;\n    this.updateOption({\n      data: data\n    });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  };\n  /**\n   * 获取 瀑布图 的适配器\n   */\n  Waterfall.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n  Waterfall.prototype.getDefaultOptions = function () {\n    return Waterfall.getDefaultOptions();\n  };\n  return Waterfall;\n}(Plot);\nexport { Waterfall };","map":{"version":3,"names":["Plot","adaptor","DEFAULT_OPTIONS","transformData","Waterfall","_super","__extends","_this","apply","arguments","type","getDefaultOptions","prototype","changeData","data","_a","options","xField","yField","total","updateOption","chart","getSchemaAdaptor"],"sources":["../../../src/plots/waterfall/index.ts"],"sourcesContent":["import { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { WaterfallOptions } from './types';\nimport { transformData } from './utils';\n\nexport type { WaterfallOptions };\n\n/**\n * 瀑布图\n */\nexport class Waterfall extends Plot<WaterfallOptions> {\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<WaterfallOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'waterfall';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data) {\n    const { xField, yField, total } = this.options;\n    this.updateOption({ data });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  }\n\n  /**\n   * 获取 瀑布图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<WaterfallOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n  protected getDefaultOptions(): Partial<WaterfallOptions> {\n    return Waterfall.getDefaultOptions();\n  }\n}\n"],"mappings":";AACA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,eAAe,QAAQ,YAAY;AAE5C,SAASC,aAAa,QAAQ,SAAS;AAIvC;;;AAGA,IAAAC,SAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAA/B,SAAAD,UAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IASE;IACgBF,KAAA,CAAAG,IAAI,GAAW,WAAW;;EAyB5C;EAlCE;;;;EAION,SAAA,CAAAO,iBAAiB,GAAxB;IACE,OAAOT,eAAe;EACxB,CAAC;EAKD;;;;EAIOE,SAAA,CAAAQ,SAAA,CAAAC,UAAU,GAAjB,UAAkBC,IAAI;IACd,IAAAC,EAAA,GAA4B,IAAI,CAACC,OAAO;MAAtCC,MAAM,GAAAF,EAAA,CAAAE,MAAA;MAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;MAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAiB;IAC9C,IAAI,CAACC,YAAY,CAAC;MAAEN,IAAI,EAAAA;IAAA,CAAE,CAAC;IAC3B,IAAI,CAACO,KAAK,CAACR,UAAU,CAACV,aAAa,CAACW,IAAI,EAAEG,MAAM,EAAEC,MAAM,EAAEC,KAAK,CAAC,CAAC;EACnE,CAAC;EAED;;;EAGUf,SAAA,CAAAQ,SAAA,CAAAU,gBAAgB,GAA1B;IACE,OAAOrB,OAAO;EAChB,CAAC;EAED;;;EAGUG,SAAA,CAAAQ,SAAA,CAAAD,iBAAiB,GAA3B;IACE,OAAOP,SAAS,CAACO,iBAAiB,EAAE;EACtC,CAAC;EACH,OAAAP,SAAC;AAAD,CAAC,CAnC8BJ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}