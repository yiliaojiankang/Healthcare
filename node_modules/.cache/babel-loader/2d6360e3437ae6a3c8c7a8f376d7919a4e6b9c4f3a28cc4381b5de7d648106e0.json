{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { animation, annotation, interaction, theme, tooltip } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { execPlotAdaptor } from './utils';\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params) {\n  var chart = params.chart,\n    options = params.options;\n  var views = options.views,\n    legend = options.legend;\n  each(views, function (v) {\n    var region = v.region,\n      data = v.data,\n      meta = v.meta,\n      axes = v.axes,\n      coordinate = v.coordinate,\n      interactions = v.interactions,\n      annotations = v.annotations,\n      tooltip = v.tooltip,\n      geometries = v.geometries;\n    // 1. 创建 view\n    var viewOfG2 = chart.createView({\n      region: region\n    });\n    // 2. data\n    viewOfG2.data(data);\n    // 3. meta\n    var scales = {};\n    if (axes) {\n      each(axes, function (axis, field) {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, function (axis, field) {\n        viewOfG2.axis(field, axis);\n      });\n    }\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n    // 6. geometry\n    each(geometries, function (geometry) {\n      var ext = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry\n      }).ext;\n      // adjust\n      var adjust = geometry.adjust;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n    // 7. interactions\n    each(interactions, function (interaction) {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    });\n    // 8. annotations\n    each(annotations, function (annotation) {\n      viewOfG2.annotation()[annotation.type](__assign({}, annotation));\n    });\n    // 9. animation (先做动画)\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true);\n      // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n      each(viewOfG2.geometries, function (g) {\n        g.animate(v.animation);\n      });\n    }\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  });\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, function (l, field) {\n      chart.legend(field, l);\n    });\n  }\n  // tooltip\n  chart.tooltip(options.tooltip);\n  return params;\n}\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\nfunction multiPlot(params) {\n  var chart = params.chart,\n    options = params.options;\n  var plots = options.plots,\n    _a = options.data,\n    data = _a === void 0 ? [] : _a;\n  each(plots, function (plot) {\n    var type = plot.type,\n      region = plot.region,\n      _a = plot.options,\n      options = _a === void 0 ? {} : _a,\n      top = plot.top;\n    var tooltip = options.tooltip;\n    if (top) {\n      execPlotAdaptor(type, chart, __assign(__assign({}, options), {\n        data: data\n      }));\n      return;\n    }\n    var viewOfG2 = chart.createView(__assign({\n      region: region\n    }, pick(options, PLOT_CONTAINER_OPTIONS)));\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n    execPlotAdaptor(type, viewOfG2, __assign({\n      data: data\n    }, options));\n  });\n  return params;\n}\n/**\n * 处理缩略轴的 adaptor (mix)\n * @param params\n */\nexport function slider(params) {\n  var chart = params.chart,\n    options = params.options;\n  chart.option('slider', options.slider);\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(animation,\n  // 多 view 的图，动画配置放到最前面\n  multiView, multiPlot, interaction, animation, theme, tooltip, slider, annotation()\n  // ... 其他的 adaptor flow\n  )(params);\n}","map":{"version":3,"names":["each","animation","annotation","interaction","theme","tooltip","geometry","geometryAdaptor","AXIS_META_CONFIG_KEYS","PLOT_CONTAINER_OPTIONS","deepAssign","flow","pick","execPlotAdaptor","multiView","params","chart","options","views","legend","v","region","data","meta","axes","coordinate","interactions","annotations","geometries","viewOfG2","createView","scales","axis","field","scale","ext","adjust","enable","removeInteraction","type","cfg","__assign","animate","g","l","multiPlot","plots","_a","plot","top","slider","option","adaptor"],"sources":["../../../src/plots/mix/adaptor.ts"],"sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each } from '@antv/util';\nimport { animation, annotation, interaction, theme, tooltip } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { Params } from '../../core/adaptor';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { Axis } from '../../types/axis';\nimport { Interaction } from '../../types/interaction';\nimport { Legend } from '../../types/legend';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { IGeometry, IView, MixOptions } from './types';\nimport { execPlotAdaptor } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { views, legend } = options;\n\n  each(views, (v: IView) => {\n    const { region, data, meta, axes, coordinate, interactions, annotations, tooltip, geometries } = v;\n\n    // 1. 创建 view\n    const viewOfG2 = chart.createView({\n      region,\n    });\n\n    // 2. data\n    viewOfG2.data(data);\n\n    // 3. meta\n    let scales: Record<string, any> = {};\n    if (axes) {\n      each(axes, (axis: Axis, field: string) => {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, (axis: Axis, field: string) => {\n        viewOfG2.axis(field, axis);\n      });\n    }\n\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n\n    // 6. geometry\n    each(geometries, (geometry: IGeometry) => {\n      const { ext } = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry,\n      });\n\n      // adjust\n      const { adjust } = geometry;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n\n    // 7. interactions\n    each(interactions, (interaction: Interaction) => {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    });\n\n    // 8. annotations\n    each(annotations, (annotation) => {\n      viewOfG2.annotation()[annotation.type]({\n        ...annotation,\n      });\n    });\n\n    // 9. animation (先做动画)\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true);\n      // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n      each(viewOfG2.geometries, (g: Geometry) => {\n        g.animate(v.animation);\n      });\n    }\n\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  });\n\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, (l: Legend, field: string) => {\n      chart.legend(field, l);\n    });\n  }\n\n  // tooltip\n  chart.tooltip(options.tooltip);\n  return params;\n}\n\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\nfunction multiPlot(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { plots, data = [] } = options;\n\n  each(plots, (plot) => {\n    const { type, region, options = {}, top } = plot;\n    const { tooltip } = options;\n\n    if (top) {\n      execPlotAdaptor(type, chart, { ...options, data });\n      return;\n    }\n\n    const viewOfG2 = chart.createView({ region, ...pick(options, PLOT_CONTAINER_OPTIONS) });\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n\n    execPlotAdaptor(type, viewOfG2, { data, ...options });\n  });\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor (mix)\n * @param params\n */\nexport function slider(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n\n  chart.option('slider', options.slider);\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<MixOptions>) {\n  return flow(\n    animation, // 多 view 的图，动画配置放到最前面\n    multiView,\n    multiPlot,\n    interaction,\n    animation,\n    theme,\n    tooltip,\n    slider,\n    annotation()\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}