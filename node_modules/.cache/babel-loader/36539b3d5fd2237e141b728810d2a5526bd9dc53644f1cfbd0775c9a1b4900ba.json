{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _dec, _dec2, _dec3, _class, _class2, _descriptor;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { inject, injectable, postConstruct } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from \"../../../types\";\nimport { gl } from \"../gl\";\n\n/**\n * ported from Three.js EffectComposer\n * 后处理负责 pingpong read/write framebuffer，最后一个 pass 默认输出到屏幕\n */\nvar PostProcessor = (_dec = injectable(), _dec2 = inject(TYPES.IRendererService), _dec3 = postConstruct(), _dec(_class = (_class2 = /*#__PURE__*/function () {\n  function PostProcessor() {\n    _classCallCheck(this, PostProcessor);\n    _initializerDefineProperty(this, \"rendererService\", _descriptor, this);\n    _defineProperty(this, \"passes\", []);\n    _defineProperty(this, \"readFBO\", void 0);\n    _defineProperty(this, \"writeFBO\", void 0);\n  }\n  _createClass(PostProcessor, [{\n    key: \"getReadFBO\",\n    value: function getReadFBO() {\n      return this.readFBO;\n    }\n  }, {\n    key: \"getWriteFBO\",\n    value: function getWriteFBO() {\n      return this.writeFBO;\n    }\n\n    /**\n     * 从当前的 framebuffer 中获取贴图\n     * @returns\n     */\n  }, {\n    key: \"getCurrentFBOTex\",\n    value: function getCurrentFBOTex() {\n      var _this$rendererService = this.rendererService,\n        getViewportSize = _this$rendererService.getViewportSize,\n        createTexture2D = _this$rendererService.createTexture2D;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      return createTexture2D({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        copy: true\n      });\n    }\n\n    /**\n     * 从 readFBO 中获取贴图\n     * @returns\n     */\n  }, {\n    key: \"getReadFBOTex\",\n    value: function getReadFBOTex() {\n      var _this = this;\n      var useFramebuffer = this.rendererService.useFramebuffer;\n      return new Promise(function (resolve) {\n        useFramebuffer(_this.readFBO, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                resolve(_this.getCurrentFBOTex());\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })));\n      });\n    }\n  }, {\n    key: \"renderBloomPass\",\n    value: function () {\n      var _renderBloomPass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(layer, pass) {\n        var tex, count;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getReadFBOTex();\n            case 2:\n              tex = _context2.sent;\n              // count 定义 bloom 交替绘制的次数\n              count = 0;\n            case 4:\n              if (!(count < 4)) {\n                _context2.next = 11;\n                break;\n              }\n              _context2.next = 7;\n              return pass.render(layer, tex);\n            case 7:\n              this.swap();\n              count++;\n              _context2.next = 4;\n              break;\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function renderBloomPass(_x, _x2) {\n        return _renderBloomPass.apply(this, arguments);\n      }\n      return renderBloomPass;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(layer) {\n        var i, pass;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              i = 0;\n            case 1:\n              if (!(i < this.passes.length)) {\n                _context3.next = 15;\n                break;\n              }\n              pass = this.passes[i]; // last pass should render to screen\n              pass.setRenderToScreen(this.isLastEnabledPass(i));\n\n              // await pass.render(layer);\n              // // pingpong\n              // if (i !== this.passes.length - 1) {\n              //   this.swap();\n              // }\n              if (!(pass.getName() === 'bloom')) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 7;\n              return this.renderBloomPass(layer, pass);\n            case 7:\n              _context3.next = 12;\n              break;\n            case 9:\n              _context3.next = 11;\n              return pass.render(layer);\n            case 11:\n              // pingpong\n              if (i !== this.passes.length - 1) {\n                this.swap();\n              }\n            case 12:\n              i++;\n              _context3.next = 1;\n              break;\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function render(_x3) {\n        return _render.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      this.readFBO.resize({\n        width: width,\n        height: height\n      });\n      this.writeFBO.resize({\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(pass, layer, config) {\n      pass.init(layer, config);\n      this.passes.push(pass);\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(pass, index, layer, config) {\n      pass.init(layer, config);\n      this.passes.splice(index, 0, pass);\n    }\n  }, {\n    key: \"getPostProcessingPassByName\",\n    value: function getPostProcessingPassByName(name) {\n      return this.passes.find(function (p) {\n        return p.getName() === name;\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this$rendererService2 = this.rendererService,\n        createFramebuffer = _this$rendererService2.createFramebuffer,\n        createTexture2D = _this$rendererService2.createTexture2D;\n      this.readFBO = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.writeFBO = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n    }\n  }, {\n    key: \"isLastEnabledPass\",\n    value: function isLastEnabledPass(index) {\n      for (var i = index + 1; i < this.passes.length; i++) {\n        if (this.passes[i].isEnabled()) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"swap\",\n    value: function swap() {\n      var tmp = this.readFBO;\n      this.readFBO = this.writeFBO;\n      this.writeFBO = tmp;\n    }\n  }]);\n  return PostProcessor;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"rendererService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class2.prototype, \"init\", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, \"init\"), _class2.prototype)), _class2)) || _class);\nexport { PostProcessor as default };","map":{"version":3,"names":["_asyncToGenerator","_initializerDefineProperty","_classCallCheck","_createClass","_defineProperty","_applyDecoratedDescriptor","_initializerWarningHelper","_dec","_dec2","_dec3","_class","_class2","_descriptor","_regeneratorRuntime","inject","injectable","postConstruct","TYPES","gl","PostProcessor","IRendererService","key","value","getReadFBO","readFBO","getWriteFBO","writeFBO","getCurrentFBOTex","_this$rendererService","rendererService","getViewportSize","createTexture2D","_getViewportSize","width","height","x","y","copy","getReadFBOTex","_this","useFramebuffer","Promise","resolve","mark","_callee","wrap","_callee$","_context","prev","next","stop","_renderBloomPass","_callee2","layer","pass","tex","count","_callee2$","_context2","sent","render","swap","renderBloomPass","_x","_x2","apply","arguments","_render","_callee3","i","_callee3$","_context3","passes","length","setRenderToScreen","isLastEnabledPass","getName","_x3","resize","add","config","init","push","insert","index","splice","getPostProcessingPassByName","name","find","p","_this$rendererService2","createFramebuffer","color","wrapS","CLAMP_TO_EDGE","wrapT","isEnabled","tmp","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/renderer/passes/PostProcessor.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _dec, _dec2, _dec3, _class, _class2, _descriptor;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { inject, injectable, postConstruct } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from \"../../../types\";\nimport { gl } from \"../gl\";\n\n/**\n * ported from Three.js EffectComposer\n * 后处理负责 pingpong read/write framebuffer，最后一个 pass 默认输出到屏幕\n */\nvar PostProcessor = (_dec = injectable(), _dec2 = inject(TYPES.IRendererService), _dec3 = postConstruct(), _dec(_class = (_class2 = /*#__PURE__*/function () {\n  function PostProcessor() {\n    _classCallCheck(this, PostProcessor);\n    _initializerDefineProperty(this, \"rendererService\", _descriptor, this);\n    _defineProperty(this, \"passes\", []);\n    _defineProperty(this, \"readFBO\", void 0);\n    _defineProperty(this, \"writeFBO\", void 0);\n  }\n  _createClass(PostProcessor, [{\n    key: \"getReadFBO\",\n    value: function getReadFBO() {\n      return this.readFBO;\n    }\n  }, {\n    key: \"getWriteFBO\",\n    value: function getWriteFBO() {\n      return this.writeFBO;\n    }\n\n    /**\n     * 从当前的 framebuffer 中获取贴图\n     * @returns\n     */\n  }, {\n    key: \"getCurrentFBOTex\",\n    value: function getCurrentFBOTex() {\n      var _this$rendererService = this.rendererService,\n        getViewportSize = _this$rendererService.getViewportSize,\n        createTexture2D = _this$rendererService.createTexture2D;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      return createTexture2D({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        copy: true\n      });\n    }\n\n    /**\n     * 从 readFBO 中获取贴图\n     * @returns\n     */\n  }, {\n    key: \"getReadFBOTex\",\n    value: function getReadFBOTex() {\n      var _this = this;\n      var useFramebuffer = this.rendererService.useFramebuffer;\n      return new Promise(function (resolve) {\n        useFramebuffer(_this.readFBO, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                resolve(_this.getCurrentFBOTex());\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })));\n      });\n    }\n  }, {\n    key: \"renderBloomPass\",\n    value: function () {\n      var _renderBloomPass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(layer, pass) {\n        var tex, count;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getReadFBOTex();\n            case 2:\n              tex = _context2.sent;\n              // count 定义 bloom 交替绘制的次数\n              count = 0;\n            case 4:\n              if (!(count < 4)) {\n                _context2.next = 11;\n                break;\n              }\n              _context2.next = 7;\n              return pass.render(layer, tex);\n            case 7:\n              this.swap();\n              count++;\n              _context2.next = 4;\n              break;\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function renderBloomPass(_x, _x2) {\n        return _renderBloomPass.apply(this, arguments);\n      }\n      return renderBloomPass;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(layer) {\n        var i, pass;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              i = 0;\n            case 1:\n              if (!(i < this.passes.length)) {\n                _context3.next = 15;\n                break;\n              }\n              pass = this.passes[i]; // last pass should render to screen\n              pass.setRenderToScreen(this.isLastEnabledPass(i));\n\n              // await pass.render(layer);\n              // // pingpong\n              // if (i !== this.passes.length - 1) {\n              //   this.swap();\n              // }\n              if (!(pass.getName() === 'bloom')) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 7;\n              return this.renderBloomPass(layer, pass);\n            case 7:\n              _context3.next = 12;\n              break;\n            case 9:\n              _context3.next = 11;\n              return pass.render(layer);\n            case 11:\n              // pingpong\n              if (i !== this.passes.length - 1) {\n                this.swap();\n              }\n            case 12:\n              i++;\n              _context3.next = 1;\n              break;\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function render(_x3) {\n        return _render.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      this.readFBO.resize({\n        width: width,\n        height: height\n      });\n      this.writeFBO.resize({\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(pass, layer, config) {\n      pass.init(layer, config);\n      this.passes.push(pass);\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(pass, index, layer, config) {\n      pass.init(layer, config);\n      this.passes.splice(index, 0, pass);\n    }\n  }, {\n    key: \"getPostProcessingPassByName\",\n    value: function getPostProcessingPassByName(name) {\n      return this.passes.find(function (p) {\n        return p.getName() === name;\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this$rendererService2 = this.rendererService,\n        createFramebuffer = _this$rendererService2.createFramebuffer,\n        createTexture2D = _this$rendererService2.createTexture2D;\n      this.readFBO = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.writeFBO = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n    }\n  }, {\n    key: \"isLastEnabledPass\",\n    value: function isLastEnabledPass(index) {\n      for (var i = index + 1; i < this.passes.length; i++) {\n        if (this.passes[i].isEnabled()) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"swap\",\n    value: function swap() {\n      var tmp = this.readFBO;\n      this.readFBO = this.writeFBO;\n      this.writeFBO = tmp;\n    }\n  }]);\n  return PostProcessor;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"rendererService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class2.prototype, \"init\", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, \"init\"), _class2.prototype)), _class2)) || _class);\nexport { PostProcessor as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}