{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#attributes\n */\nvar ReglAttribute = /*#__PURE__*/function () {\n  function ReglAttribute(gl, options) {\n    _classCallCheck(this, ReglAttribute);\n    this.attribute = void 0;\n    this.buffer = void 0;\n    var buffer = options.buffer,\n      offset = options.offset,\n      stride = options.stride,\n      normalized = options.normalized,\n      size = options.size,\n      divisor = options.divisor;\n    this.buffer = buffer;\n    this.attribute = {\n      buffer: buffer.get(),\n      offset: offset || 0,\n      stride: stride || 0,\n      normalized: normalized || false,\n      divisor: divisor || 0\n    };\n    if (size) {\n      this.attribute.size = size;\n    }\n  }\n  _createClass(ReglAttribute, [{\n    key: \"get\",\n    value: function get() {\n      return this.attribute;\n    }\n  }, {\n    key: \"updateBuffer\",\n    value: function updateBuffer(options) {\n      this.buffer.subData(options);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.destroy();\n    }\n  }]);\n  return ReglAttribute;\n}();\nexport { ReglAttribute as default };","map":{"version":3,"names":["ReglAttribute","gl","options","_classCallCheck","attribute","buffer","offset","stride","normalized","size","divisor","get","_createClass","key","value","updateBuffer","subData","destroy","default"],"sources":["../../src/webgl/ReglAttribute.ts"],"sourcesContent":["import {\n  BufferData,\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport ReglBuffer from './ReglBuffer';\n\n/**\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#attributes\n */\nexport default class ReglAttribute implements IAttribute {\n  private attribute: regl.Attribute;\n  private buffer: IBuffer;\n\n  constructor(gl: regl.Regl, options: IAttributeInitializationOptions) {\n    const { buffer, offset, stride, normalized, size, divisor } = options;\n    this.buffer = buffer;\n    this.attribute = {\n      buffer: (buffer as ReglBuffer).get(),\n      offset: offset || 0,\n      stride: stride || 0,\n      normalized: normalized || false,\n      divisor: divisor || 0,\n    };\n\n    if (size) {\n      this.attribute.size = size;\n    }\n  }\n\n  public get() {\n    return this.attribute;\n  }\n\n  public updateBuffer(options: {\n    // 用于替换的数据\n    data: BufferData;\n    // 原 Buffer 替换位置，单位为 byte\n    offset: number;\n  }) {\n    this.buffer.subData(options);\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n}\n"],"mappings":";;AASA;AACA;AACA;AAFA,IAGqBA,aAAa;EAIhC,SAAAA,cAAYC,EAAa,EAAEC,OAAwC,EAAE;IAAAC,eAAA,OAAAH,aAAA;IAAA,KAH7DI,SAAS;IAAA,KACTC,MAAM;IAGZ,IAAQA,MAAM,GAAgDH,OAAO,CAA7DG,MAAM;MAAEC,MAAM,GAAwCJ,OAAO,CAArDI,MAAM;MAAEC,MAAM,GAAgCL,OAAO,CAA7CK,MAAM;MAAEC,UAAU,GAAoBN,OAAO,CAArCM,UAAU;MAAEC,IAAI,GAAcP,OAAO,CAAzBO,IAAI;MAAEC,OAAO,GAAKR,OAAO,CAAnBQ,OAAO;IACzD,IAAI,CAACL,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACD,SAAS,GAAG;MACfC,MAAM,EAAGA,MAAM,CAAgBM,GAAG,EAAE;MACpCL,MAAM,EAAEA,MAAM,IAAI,CAAC;MACnBC,MAAM,EAAEA,MAAM,IAAI,CAAC;MACnBC,UAAU,EAAEA,UAAU,IAAI,KAAK;MAC/BE,OAAO,EAAEA,OAAO,IAAI;IACtB,CAAC;IAED,IAAID,IAAI,EAAE;MACR,IAAI,CAACL,SAAS,CAACK,IAAI,GAAGA,IAAI;IAC5B;EACF;EAACG,YAAA,CAAAZ,aAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAH,IAAA,EAAa;MACX,OAAO,IAAI,CAACP,SAAS;IACvB;EAAC;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAoBb,OAKnB,EAAE;MACD,IAAI,CAACG,MAAM,CAACW,OAAO,CAACd,OAAO,CAAC;IAC9B;EAAC;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAG,QAAA,EAAiB;MACf,IAAI,CAACZ,MAAM,CAACY,OAAO,EAAE;IACvB;EAAC;EAAA,OAAAjB,aAAA;AAAA;AAAA,SAnCkBA,aAAa,IAAAkB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}