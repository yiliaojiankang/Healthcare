{"ast":null,"code":"\"use strict\";\n\n/**\n * @fileOverview MDS layout\n * @author shiwu.wyy@antfin.com\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDSLayout = void 0;\nvar ml_matrix_1 = require(\"ml-matrix\");\nvar util_1 = require(\"../util\");\nvar base_1 = require(\"./base\");\n/**\n * mds 布局\n */\nvar MDSLayout = /** @class */function (_super) {\n  __extends(MDSLayout, _super);\n  function MDSLayout(options) {\n    var _this = _super.call(this) || this;\n    /** 布局中心 */\n    _this.center = [0, 0];\n    /** 边长度 */\n    _this.linkDistance = 50;\n    _this.nodes = [];\n    _this.edges = [];\n    /** 迭代结束的回调函数 */\n    _this.onLayoutEnd = function () {};\n    _this.updateCfg(options);\n    return _this;\n  }\n  MDSLayout.prototype.getDefaultCfg = function () {\n    return {\n      center: [0, 0],\n      linkDistance: 50\n    };\n  };\n  /**\n   * 执行布局\n   */\n  MDSLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n      _a = self.edges,\n      edges = _a === void 0 ? [] : _a;\n    var center = self.center;\n    if (!nodes || nodes.length === 0) {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n    var linkDistance = self.linkDistance;\n    // the graph-theoretic distance (shortest path distance) matrix\n    var adjMatrix = (0, util_1.getAdjMatrix)({\n      nodes: nodes,\n      edges: edges\n    }, false);\n    var distances = (0, util_1.floydWarshall)(adjMatrix);\n    self.handleInfinity(distances);\n    // scale the ideal edge length acoording to linkDistance\n    var scaledD = (0, util_1.scaleMatrix)(distances, linkDistance);\n    self.scaledDistances = scaledD;\n    // get positions by MDS\n    var positions = self.runMDS();\n    self.positions = positions;\n    positions.forEach(function (p, i) {\n      nodes[i].x = p[0] + center[0];\n      nodes[i].y = p[1] + center[1];\n    });\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  };\n  /**\n   * mds 算法\n   * @return {array} positions 计算后的节点位置数组\n   */\n  MDSLayout.prototype.runMDS = function () {\n    var self = this;\n    var dimension = 2;\n    var distances = self.scaledDistances;\n    // square distances\n    var M = ml_matrix_1.Matrix.mul(ml_matrix_1.Matrix.pow(distances, 2), -0.5);\n    // double centre the rows/columns\n    var rowMeans = M.mean(\"row\");\n    var colMeans = M.mean(\"column\");\n    var totalMean = M.mean();\n    M.add(totalMean).subRowVector(rowMeans).subColumnVector(colMeans);\n    // take the SVD of the double centred matrix, and return the\n    // points from it\n    var ret = new ml_matrix_1.SingularValueDecomposition(M);\n    var eigenValues = ml_matrix_1.Matrix.sqrt(ret.diagonalMatrix).diagonal();\n    return ret.leftSingularVectors.toJSON().map(function (row) {\n      return ml_matrix_1.Matrix.mul([row], [eigenValues]).toJSON()[0].splice(0, dimension);\n    });\n  };\n  MDSLayout.prototype.handleInfinity = function (distances) {\n    var maxDistance = -999999;\n    distances.forEach(function (row) {\n      row.forEach(function (value) {\n        if (value === Infinity) {\n          return;\n        }\n        if (maxDistance < value) {\n          maxDistance = value;\n        }\n      });\n    });\n    distances.forEach(function (row, i) {\n      row.forEach(function (value, j) {\n        if (value === Infinity) {\n          distances[i][j] = maxDistance;\n        }\n      });\n    });\n  };\n  MDSLayout.prototype.getType = function () {\n    return \"mds\";\n  };\n  return MDSLayout;\n}(base_1.Base);\nexports.MDSLayout = MDSLayout;","map":{"version":3,"names":["ml_matrix_1","require","util_1","base_1","MDSLayout","_super","__extends","options","_this","call","center","linkDistance","nodes","edges","onLayoutEnd","updateCfg","prototype","getDefaultCfg","execute","self","_a","length","x","y","adjMatrix","getAdjMatrix","distances","floydWarshall","handleInfinity","scaledD","scaleMatrix","scaledDistances","positions","runMDS","forEach","p","i","dimension","M","Matrix","mul","pow","rowMeans","mean","colMeans","totalMean","add","subRowVector","subColumnVector","ret","SingularValueDecomposition","eigenValues","sqrt","diagonalMatrix","diagonal","leftSingularVectors","toJSON","map","row","splice","maxDistance","value","Infinity","j","getType","Base","exports"],"sources":["../../src/layout/mds.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}