{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar Point = require('@mapbox/point-geometry');\nmodule.exports = VectorTileFeature;\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n  // Public\n  this.properties = {};\n  this.extent = extent;\n  this.type = 0;\n\n  // Private\n  this._pbf = pbf;\n  this._geometry = -1;\n  this._keys = keys;\n  this._values = values;\n  pbf.readFields(readFeature, this, end);\n}\nfunction readFeature(tag, feature, pbf) {\n  if (tag == 1) feature.id = pbf.readVarint();else if (tag == 2) readTag(pbf, feature);else if (tag == 3) feature.type = pbf.readVarint();else if (tag == 4) feature._geometry = pbf.pos;\n}\nfunction readTag(pbf, feature) {\n  var end = pbf.readVarint() + pbf.pos;\n  while (pbf.pos < end) {\n    var key = feature._keys[pbf.readVarint()],\n      value = feature._values[pbf.readVarint()];\n    feature.properties[key] = value;\n  }\n}\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\nVectorTileFeature.prototype.loadGeometry = function () {\n  var pbf = this._pbf;\n  pbf.pos = this._geometry;\n  var end = pbf.readVarint() + pbf.pos,\n    cmd = 1,\n    length = 0,\n    x = 0,\n    y = 0,\n    lines = [],\n    line;\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      var cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n    length--;\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n      if (cmd === 1) {\n        // moveTo\n        if (line) lines.push(line);\n        line = [];\n      }\n      line.push(new Point(x, y));\n    } else if (cmd === 7) {\n      // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n      if (line) {\n        line.push(line[0].clone()); // closePolygon\n      }\n    } else {\n      throw new Error('unknown command ' + cmd);\n    }\n  }\n  if (line) lines.push(line);\n  return lines;\n};\nVectorTileFeature.prototype.bbox = function () {\n  var pbf = this._pbf;\n  pbf.pos = this._geometry;\n  var end = pbf.readVarint() + pbf.pos,\n    cmd = 1,\n    length = 0,\n    x = 0,\n    y = 0,\n    x1 = Infinity,\n    x2 = -Infinity,\n    y1 = Infinity,\n    y2 = -Infinity;\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      var cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n    length--;\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n      if (x < x1) x1 = x;\n      if (x > x2) x2 = x;\n      if (y < y1) y1 = y;\n      if (y > y2) y2 = y;\n    } else if (cmd !== 7) {\n      throw new Error('unknown command ' + cmd);\n    }\n  }\n  return [x1, y1, x2, y2];\n};\nVectorTileFeature.prototype.toGeoJSON = function (x, y, z) {\n  var size = this.extent * Math.pow(2, z),\n    x0 = this.extent * x,\n    y0 = this.extent * y,\n    coords = this.loadGeometry(),\n    type = VectorTileFeature.types[this.type],\n    i,\n    j;\n  function project(line) {\n    for (var j = 0; j < line.length; j++) {\n      var p = line[j],\n        y2 = 180 - (p.y + y0) * 360 / size;\n      line[j] = [(p.x + x0) * 360 / size - 180, 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90];\n    }\n  }\n  switch (this.type) {\n    case 1:\n      var points = [];\n      for (i = 0; i < coords.length; i++) {\n        points[i] = coords[i][0];\n      }\n      coords = points;\n      project(coords);\n      break;\n    case 2:\n      for (i = 0; i < coords.length; i++) {\n        project(coords[i]);\n      }\n      break;\n    case 3:\n      coords = classifyRings(coords);\n      for (i = 0; i < coords.length; i++) {\n        for (j = 0; j < coords[i].length; j++) {\n          project(coords[i][j]);\n        }\n      }\n      break;\n  }\n  if (coords.length === 1) {\n    coords = coords[0];\n  } else {\n    type = 'Multi' + type;\n  }\n  var result = {\n    type: \"Feature\",\n    geometry: {\n      type: type,\n      coordinates: coords\n    },\n    properties: this.properties\n  };\n  if ('id' in this) {\n    result.id = this.id;\n  }\n  return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n  var len = rings.length;\n  if (len <= 1) return [rings];\n  var polygons = [],\n    polygon,\n    ccw;\n  for (var i = 0; i < len; i++) {\n    var area = signedArea(rings[i]);\n    if (area === 0) continue;\n    if (ccw === undefined) ccw = area < 0;\n    if (ccw === area < 0) {\n      if (polygon) polygons.push(polygon);\n      polygon = [rings[i]];\n    } else {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) polygons.push(polygon);\n  return polygons;\n}\nfunction signedArea(ring) {\n  var sum = 0;\n  for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n  return sum;\n}","map":{"version":3,"names":["require","Point","module","exports","VectorTileFeature","pbf","end","extent","keys","values","properties","type","_pbf","_geometry","_keys","_values","readFields","readFeature","tag","feature","id","readVarint","readTag","pos","key","value","types","prototype","loadGeometry","cmd","length","x","y","lines","line","cmdLen","readSVarint","push","clone","Error","bbox","x1","Infinity","x2","y1","y2","toGeoJSON","z","size","Math","pow","x0","y0","coords","i","j","project","p","PI","atan","exp","points","classifyRings","result","geometry","coordinates","rings","len","polygons","polygon","ccw","area","signedArea","undefined","ring","sum","p1","p2"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@mapbox/vector-tile/lib/vectortilefeature.js"],"sourcesContent":["'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}