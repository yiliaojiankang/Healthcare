{"ast":null,"code":"/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object) {\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  // TODO - warn if options stringification is long\n  return JSON.parse(stringifyJSON(object));\n}\nfunction stringifyJSON(v) {\n  var cache = new Set();\n  return JSON.stringify(v, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // Circular reference found\n        try {\n          // If this value does not reference a parent it can be deduped\n          return JSON.parse(JSON.stringify(value));\n        } catch (err) {\n          // discard key if value cannot be deduped\n          return undefined;\n        }\n      }\n      // Store value in our set\n      cache.add(value);\n    }\n    return value;\n  });\n}","map":{"version":3,"names":["removeNontransferableOptions","object","JSON","parse","stringifyJSON","v","cache","Set","stringify","key","value","has","err","undefined","add"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/web-worker-helper/dist/esm/utils/worker-utils/remove-nontransferable-options.js"],"sourcesContent":["/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object) {\n    // options.log object contains functions which cannot be transferred\n    // TODO - decide how to handle logging on workers\n    // TODO - warn if options stringification is long\n    return JSON.parse(stringifyJSON(object));\n}\nfunction stringifyJSON(v) {\n    var cache = new Set();\n    return JSON.stringify(v, function (key, value) {\n        if (typeof value === 'object' && value !== null) {\n            if (cache.has(value)) {\n                // Circular reference found\n                try {\n                    // If this value does not reference a parent it can be deduped\n                    return JSON.parse(JSON.stringify(value));\n                }\n                catch (err) {\n                    // discard key if value cannot be deduped\n                    return undefined;\n                }\n            }\n            // Store value in our set\n            cache.add(value);\n        }\n        return value;\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,4BAA4BA,CAACC,MAAM,EAAE;EACjD;EACA;EACA;EACA,OAAOC,IAAI,CAACC,KAAK,CAACC,aAAa,CAACH,MAAM,CAAC,CAAC;AAC5C;AACA,SAASG,aAAaA,CAACC,CAAC,EAAE;EACtB,IAAIC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EACrB,OAAOL,IAAI,CAACM,SAAS,CAACH,CAAC,EAAE,UAAUI,GAAG,EAAEC,KAAK,EAAE;IAC3C,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;MAC7C,IAAIJ,KAAK,CAACK,GAAG,CAACD,KAAK,CAAC,EAAE;QAClB;QACA,IAAI;UACA;UACA,OAAOR,IAAI,CAACC,KAAK,CAACD,IAAI,CAACM,SAAS,CAACE,KAAK,CAAC,CAAC;QAC5C,CAAC,CACD,OAAOE,GAAG,EAAE;UACR;UACA,OAAOC,SAAS;QACpB;MACJ;MACA;MACAP,KAAK,CAACQ,GAAG,CAACJ,KAAK,CAAC;IACpB;IACA,OAAOA,KAAK;EAChB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}