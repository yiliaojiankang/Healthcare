{"ast":null,"code":"import { BBox } from '../../../../util/bbox';\nimport { findLabelTextShape } from '../../util';\nfunction shouldInShapeSingle(geometry, label, shape) {\n  var coordinate = geometry.coordinate;\n  var textShape = findLabelTextShape(label);\n  var textBBox = BBox.fromObject(textShape.getCanvasBBox());\n  var shapeBBox = BBox.fromObject(shape.getBBox());\n  return coordinate.isTransposed ? shapeBBox.height >= textBBox.height : shapeBBox.width >= textBBox.width;\n}\nfunction shouldInShape(geometry, labels, shapes) {\n  var isStack = !!geometry.getAdjust('stack');\n  return isStack || labels.every(function (label, index) {\n    var shape = shapes[index];\n    return shouldInShapeSingle(geometry, label, shape);\n  });\n}\nfunction moveInShape(geometry, label, shape) {\n  var coordinate = geometry.coordinate;\n  var shapeBBox = BBox.fromObject(shape.getBBox());\n  var textShape = findLabelTextShape(label);\n  if (coordinate.isTransposed) {\n    // 水平方向：条形图系列\n    textShape.attr({\n      x: shapeBBox.minX + shapeBBox.width / 2,\n      textAlign: 'center'\n    });\n  } else {\n    // 垂直方向：柱形图系列\n    textShape.attr({\n      y: shapeBBox.minY + shapeBBox.height / 2,\n      textBaseline: 'middle'\n    });\n  }\n}\n/**\n * 适用于 interval geometry 的数据标签位置自动调整布局方法\n * @param items\n * @param labels\n * @param shapes\n */\nexport function intervalAdjustPosition(items, labels, shapes) {\n  var _a;\n  if (shapes.length === 0) {\n    return;\n  }\n  var element = (_a = shapes[0]) === null || _a === void 0 ? void 0 : _a.get('element');\n  var geometry = element === null || element === void 0 ? void 0 : element.geometry;\n  if (!geometry || geometry.type !== 'interval') {\n    return;\n  }\n  var inShape = shouldInShape(geometry, labels, shapes);\n  if (inShape) {\n    shapes.forEach(function (shape, index) {\n      var label = labels[index];\n      moveInShape(geometry, label, shape);\n    });\n  }\n}","map":{"version":3,"names":["BBox","findLabelTextShape","shouldInShapeSingle","geometry","label","shape","coordinate","textShape","textBBox","fromObject","getCanvasBBox","shapeBBox","getBBox","isTransposed","height","width","shouldInShape","labels","shapes","isStack","getAdjust","every","index","moveInShape","attr","x","minX","textAlign","y","minY","textBaseline","intervalAdjustPosition","items","length","element","_a","get","type","inShape","forEach"],"sources":["../../../../../src/geometry/label/layout/interval/adjust-position.ts"],"sourcesContent":["import { IElement, IGroup, IShape } from '../../../../dependents';\nimport { BBox } from '../../../../util/bbox';\nimport Geometry from '../../../base';\nimport Element from '../../../element';\nimport { LabelItem } from '../../interface';\nimport { findLabelTextShape } from '../../util';\n\nfunction shouldInShapeSingle(geometry: Geometry, label: IGroup, shape: IElement): boolean {\n  const coordinate = geometry.coordinate;\n  const textShape = findLabelTextShape(label);\n  const textBBox = BBox.fromObject(textShape.getCanvasBBox());\n  const shapeBBox = BBox.fromObject(shape.getBBox());\n\n  return coordinate.isTransposed ? shapeBBox.height >= textBBox.height : shapeBBox.width >= textBBox.width;\n}\n\nfunction shouldInShape(geometry: Geometry, labels: IGroup[], shapes: IShape[] | IGroup[]): boolean {\n  const isStack = !!geometry.getAdjust('stack');\n\n  return (\n    isStack ||\n    labels.every((label: IGroup, index: number) => {\n      const shape = shapes[index];\n      return shouldInShapeSingle(geometry, label, shape);\n    })\n  );\n}\n\nfunction moveInShape(geometry: Geometry, label: IGroup, shape: IElement): void {\n  const coordinate = geometry.coordinate;\n  const shapeBBox = BBox.fromObject(shape.getBBox());\n  const textShape = findLabelTextShape(label);\n\n  if (coordinate.isTransposed) {\n    // 水平方向：条形图系列\n    textShape.attr({\n      x: shapeBBox.minX + shapeBBox.width / 2,\n      textAlign: 'center',\n    });\n  } else {\n    // 垂直方向：柱形图系列\n    textShape.attr({\n      y: shapeBBox.minY + shapeBBox.height / 2,\n      textBaseline: 'middle',\n    });\n  }\n}\n\n/**\n * 适用于 interval geometry 的数据标签位置自动调整布局方法\n * @param items\n * @param labels\n * @param shapes\n */\nexport function intervalAdjustPosition(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[]) {\n  if (shapes.length === 0) {\n    return;\n  }\n  const element: Element = shapes[0]?.get('element');\n  const geometry: Geometry = element?.geometry;\n  if (!geometry || geometry.type !== 'interval') {\n    return;\n  }\n\n  const inShape = shouldInShape(geometry, labels, shapes);\n  if (inShape) {\n    shapes.forEach((shape: IShape | IGroup, index: number) => {\n      const label = labels[index];\n      moveInShape(geometry, label, shape);\n    });\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,uBAAuB;AAI5C,SAASC,kBAAkB,QAAQ,YAAY;AAE/C,SAASC,mBAAmBA,CAACC,QAAkB,EAAEC,KAAa,EAAEC,KAAe;EAC7E,IAAMC,UAAU,GAAGH,QAAQ,CAACG,UAAU;EACtC,IAAMC,SAAS,GAAGN,kBAAkB,CAACG,KAAK,CAAC;EAC3C,IAAMI,QAAQ,GAAGR,IAAI,CAACS,UAAU,CAACF,SAAS,CAACG,aAAa,EAAE,CAAC;EAC3D,IAAMC,SAAS,GAAGX,IAAI,CAACS,UAAU,CAACJ,KAAK,CAACO,OAAO,EAAE,CAAC;EAElD,OAAON,UAAU,CAACO,YAAY,GAAGF,SAAS,CAACG,MAAM,IAAIN,QAAQ,CAACM,MAAM,GAAGH,SAAS,CAACI,KAAK,IAAIP,QAAQ,CAACO,KAAK;AAC1G;AAEA,SAASC,aAAaA,CAACb,QAAkB,EAAEc,MAAgB,EAAEC,MAA2B;EACtF,IAAMC,OAAO,GAAG,CAAC,CAAChB,QAAQ,CAACiB,SAAS,CAAC,OAAO,CAAC;EAE7C,OACED,OAAO,IACPF,MAAM,CAACI,KAAK,CAAC,UAACjB,KAAa,EAAEkB,KAAa;IACxC,IAAMjB,KAAK,GAAGa,MAAM,CAACI,KAAK,CAAC;IAC3B,OAAOpB,mBAAmB,CAACC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,CAAC;EACpD,CAAC,CAAC;AAEN;AAEA,SAASkB,WAAWA,CAACpB,QAAkB,EAAEC,KAAa,EAAEC,KAAe;EACrE,IAAMC,UAAU,GAAGH,QAAQ,CAACG,UAAU;EACtC,IAAMK,SAAS,GAAGX,IAAI,CAACS,UAAU,CAACJ,KAAK,CAACO,OAAO,EAAE,CAAC;EAClD,IAAML,SAAS,GAAGN,kBAAkB,CAACG,KAAK,CAAC;EAE3C,IAAIE,UAAU,CAACO,YAAY,EAAE;IAC3B;IACAN,SAAS,CAACiB,IAAI,CAAC;MACbC,CAAC,EAAEd,SAAS,CAACe,IAAI,GAAGf,SAAS,CAACI,KAAK,GAAG,CAAC;MACvCY,SAAS,EAAE;KACZ,CAAC;GACH,MAAM;IACL;IACApB,SAAS,CAACiB,IAAI,CAAC;MACbI,CAAC,EAAEjB,SAAS,CAACkB,IAAI,GAAGlB,SAAS,CAACG,MAAM,GAAG,CAAC;MACxCgB,YAAY,EAAE;KACf,CAAC;;AAEN;AAEA;;;;;;AAMA,OAAM,SAAUC,sBAAsBA,CAACC,KAAkB,EAAEf,MAAgB,EAAEC,MAA2B;;EACtG,IAAIA,MAAM,CAACe,MAAM,KAAK,CAAC,EAAE;IACvB;;EAEF,IAAMC,OAAO,GAAY,CAAAC,EAAA,GAAAjB,MAAM,CAAC,CAAC,CAAC,cAAAiB,EAAA,uBAAAA,EAAA,CAAEC,GAAG,CAAC,SAAS,CAAC;EAClD,IAAMjC,QAAQ,GAAa+B,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE/B,QAAQ;EAC5C,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACkC,IAAI,KAAK,UAAU,EAAE;IAC7C;;EAGF,IAAMC,OAAO,GAAGtB,aAAa,CAACb,QAAQ,EAAEc,MAAM,EAAEC,MAAM,CAAC;EACvD,IAAIoB,OAAO,EAAE;IACXpB,MAAM,CAACqB,OAAO,CAAC,UAAClC,KAAsB,EAAEiB,KAAa;MACnD,IAAMlB,KAAK,GAAGa,MAAM,CAACK,KAAK,CAAC;MAC3BC,WAAW,CAACpB,QAAQ,EAAEC,KAAK,EAAEC,KAAK,CAAC;IACrC,CAAC,CAAC;;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}