{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getElements, getElementsByState } from '../util';\nimport { clearHighlight } from './highlight-util';\nimport StateAction from './state';\nimport { ELEMENT_STATE } from '../../../constant';\nexport var STATUS_UNACTIVE = ELEMENT_STATE.INACTIVE;\nexport var STATUS_ACTIVE = ELEMENT_STATE.ACTIVE;\n/**\n * @ignore\n * highlight，指定图形高亮，其他图形变暗\n */\nvar ElementHighlight = /** @class */function (_super) {\n  __extends(ElementHighlight, _super);\n  function ElementHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stateName = STATUS_ACTIVE;\n    return _this;\n  }\n  // 多个元素设置、取消 highlight\n  ElementHighlight.prototype.setElementsStateByItem = function (elements, field, item, enable) {\n    var _this = this;\n    var callback = function (el) {\n      return _this.isMathItem(el, field, item);\n    };\n    this.setHighlightBy(elements, callback, enable);\n  };\n  // 设置元素的 highlight\n  ElementHighlight.prototype.setElementHighlight = function (el, callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, true);\n    } else if (!el.hasState(STATUS_ACTIVE)) {\n      el.setState(STATUS_UNACTIVE, true);\n    }\n  };\n  ElementHighlight.prototype.setHighlightBy = function (elements, callback, enable) {\n    var _this = this;\n    if (enable) {\n      // 如果是设置 highlight ，则将匹配的 element 设置成 active，\n      // 其他如果不是 active，则设置成 unactive\n      each(elements, function (el) {\n        _this.setElementHighlight(el, callback);\n      });\n    } else {\n      // 如果取消 highlight，则要检测是否全部取消 highlight\n      var activeElements = getElementsByState(this.context.view, STATUS_ACTIVE);\n      var allCancel_1 = true;\n      // 检测所有 activeElements 都要取消 highlight\n      each(activeElements, function (el) {\n        if (!callback(el)) {\n          allCancel_1 = false;\n          return false;\n        }\n      });\n      if (allCancel_1) {\n        // 都要取消，则取消所有的 active，unactive 状态\n        this.clear();\n      } else {\n        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive\n        // 其他 element 状态不变\n        each(elements, function (el) {\n          if (callback(el)) {\n            if (el.hasState(STATUS_ACTIVE)) {\n              el.setState(STATUS_ACTIVE, false);\n            }\n            el.setState(STATUS_UNACTIVE, true);\n          }\n        });\n      }\n    }\n  };\n  // 单个元素设置和取消 highlight\n  ElementHighlight.prototype.setElementState = function (element, enable) {\n    var view = this.context.view;\n    var elements = getElements(view);\n    this.setHighlightBy(elements, function (el) {\n      return element === el;\n    }, enable);\n  };\n  ElementHighlight.prototype.highlight = function () {\n    this.setState();\n  };\n  // 清理掉所有的 active， unactive 状态\n  ElementHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    clearHighlight(view);\n  };\n  return ElementHighlight;\n}(StateAction);\nexport default ElementHighlight;","map":{"version":3,"names":["each","getElements","getElementsByState","clearHighlight","StateAction","ELEMENT_STATE","STATUS_UNACTIVE","INACTIVE","STATUS_ACTIVE","ACTIVE","ElementHighlight","_super","__extends","_this","apply","arguments","stateName","prototype","setElementsStateByItem","elements","field","item","enable","callback","el","isMathItem","setHighlightBy","setElementHighlight","hasState","setState","activeElements","context","view","allCancel_1","clear","setElementState","element","highlight"],"sources":["../../../../src/interaction/action/element/highlight.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { ListItem } from '../../../dependents';\nimport Element from '../../../geometry/element/';\nimport { getElements, getElementsByState } from '../util';\nimport { clearHighlight } from './highlight-util';\nimport StateAction from './state';\n\nimport { ELEMENT_STATE } from '../../../constant';\n\nexport const STATUS_UNACTIVE = ELEMENT_STATE.INACTIVE;\nexport const STATUS_ACTIVE = ELEMENT_STATE.ACTIVE;\nexport type Callback = (el) => boolean;\n\n/**\n * @ignore\n * highlight，指定图形高亮，其他图形变暗\n */\nclass ElementHighlight extends StateAction {\n  protected stateName: string = STATUS_ACTIVE;\n\n  // 多个元素设置、取消 highlight\n  protected setElementsStateByItem(elements: Element[], field: string, item: ListItem, enable: boolean) {\n    const callback = (el) => this.isMathItem(el, field, item);\n    this.setHighlightBy(elements, callback, enable);\n  }\n\n  // 设置元素的 highlight\n  protected setElementHighlight(el: Element, callback: Callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, true);\n    } else if (!el.hasState(STATUS_ACTIVE)) {\n      el.setState(STATUS_UNACTIVE, true);\n    }\n  }\n\n  protected setHighlightBy(elements: Element[], callback: Callback, enable: boolean) {\n    if (enable) {\n      // 如果是设置 highlight ，则将匹配的 element 设置成 active，\n      // 其他如果不是 active，则设置成 unactive\n      each(elements, (el) => {\n        this.setElementHighlight(el, callback);\n      });\n    } else {\n      // 如果取消 highlight，则要检测是否全部取消 highlight\n      const activeElements = getElementsByState(this.context.view, STATUS_ACTIVE);\n      let allCancel = true;\n      // 检测所有 activeElements 都要取消 highlight\n      each(activeElements, (el) => {\n        if (!callback(el)) {\n          allCancel = false;\n          return false;\n        }\n      });\n      if (allCancel) {\n        // 都要取消，则取消所有的 active，unactive 状态\n        this.clear();\n      } else {\n        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive\n        // 其他 element 状态不变\n        each(elements, (el) => {\n          if (callback(el)) {\n            if (el.hasState(STATUS_ACTIVE)) {\n              el.setState(STATUS_ACTIVE, false);\n            }\n            el.setState(STATUS_UNACTIVE, true);\n          }\n        });\n      }\n    }\n  }\n\n  // 单个元素设置和取消 highlight\n  protected setElementState(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const elements = getElements(view);\n    this.setHighlightBy(elements, (el) => element === el, enable);\n  }\n\n  public highlight() {\n    this.setState();\n  }\n\n  // 清理掉所有的 active， unactive 状态\n  public clear() {\n    const view = this.context.view;\n    clearHighlight(view);\n  }\n}\n\nexport default ElementHighlight;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}