{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { TextureUsage as DeviceTextureUsage, FilterMode, Format, MipmapFilterMode } from '@antv/g-device-api';\nimport { TextureUsage, gl } from '@antv/l7-core';\nimport { wrapModeMap } from \"./constants\";\nimport { extend3ChannelsTo4 } from \"./utils/typedarray\";\nexport function isTexture2D(t) {\n  return !!(t && t['texture']);\n}\nvar DeviceTexture2D = /*#__PURE__*/function () {\n  function DeviceTexture2D(device, options) {\n    _classCallCheck(this, DeviceTexture2D);\n    _defineProperty(this, \"isDestroy\", false);\n    this.device = device;\n    this.options = options;\n    var _options$wrapS = options.wrapS,\n      wrapS = _options$wrapS === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapS,\n      _options$wrapT = options.wrapT,\n      wrapT = _options$wrapT === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapT,\n      aniso = options.aniso,\n      _options$mipmap = options.mipmap,\n      mipmap = _options$mipmap === void 0 ? false : _options$mipmap,\n      _options$mag = options.mag,\n      mag = _options$mag === void 0 ? gl.NEAREST : _options$mag,\n      _options$min = options.min,\n      min = _options$min === void 0 ? gl.NEAREST : _options$min;\n    this.createTexture(options);\n    this.sampler = device.createSampler({\n      addressModeU: wrapModeMap[wrapS],\n      addressModeV: wrapModeMap[wrapT],\n      minFilter: min === gl.NEAREST ? FilterMode.POINT : FilterMode.BILINEAR,\n      magFilter: mag === gl.NEAREST ? FilterMode.POINT : FilterMode.BILINEAR,\n      mipmapFilter: MipmapFilterMode.NO_MIP,\n      // lodMinClamp: 0,\n      // lodMaxClamp: 0,\n      maxAnisotropy: aniso\n    });\n  }\n  _createClass(DeviceTexture2D, [{\n    key: \"createTexture\",\n    value: function createTexture(options) {\n      var _options$type = options.type,\n        type = _options$type === void 0 ? gl.UNSIGNED_BYTE : _options$type,\n        width = options.width,\n        height = options.height,\n        _options$flipY = options.flipY,\n        flipY = _options$flipY === void 0 ? false : _options$flipY,\n        _options$format = options.format,\n        format = _options$format === void 0 ? gl.RGBA : _options$format,\n        aniso = options.aniso,\n        _options$alignment = options.alignment,\n        alignment = _options$alignment === void 0 ? 1 : _options$alignment,\n        _options$usage = options.usage,\n        usage = _options$usage === void 0 ? TextureUsage.SAMPLED : _options$usage,\n        _options$unorm = options.unorm,\n        unorm = _options$unorm === void 0 ? false : _options$unorm,\n        label = options.label;\n      var data = options.data;\n      this.width = width;\n      this.height = height;\n      var pixelFormat = Format.U8_RGBA_RT;\n      if (type === gl.UNSIGNED_BYTE && format === gl.RGBA) {\n        pixelFormat = unorm ? Format.U8_RGBA_NORM : Format.U8_RGBA_RT;\n      } else if (type === gl.UNSIGNED_BYTE && format === gl.LUMINANCE) {\n        pixelFormat = Format.U8_LUMINANCE;\n      } else if (type === gl.FLOAT && format === gl.RGB) {\n        // @see https://github.com/antvis/L7/pull/2262\n        if (this.device.queryVendorInfo().platformString === 'WebGPU') {\n          if (data) {\n            // @ts-ignore\n            data = extend3ChannelsTo4(data, 0);\n          }\n          pixelFormat = Format.F32_RGBA;\n        } else {\n          pixelFormat = Format.F32_RGB;\n        }\n      } else if (type === gl.FLOAT && format === gl.RGBA) {\n        pixelFormat = Format.F32_RGBA;\n      } else if (type === gl.FLOAT && format === gl.RED) {\n        pixelFormat = Format.F32_R;\n      } else {\n        throw new Error(\"create texture error, type: \".concat(type, \", format: \").concat(format));\n      }\n      this.texture = this.device.createTexture({\n        format: pixelFormat,\n        width: width,\n        height: height,\n        usage: usage === TextureUsage.SAMPLED ? DeviceTextureUsage.SAMPLED : DeviceTextureUsage.RENDER_TARGET,\n        pixelStore: {\n          unpackFlipY: flipY,\n          packAlignment: alignment\n        },\n        // mipLevelCount: usage === TextureUsage.RENDER_TARGET ? 1 : mipmap ? 1 : 0,\n        mipLevelCount: 1\n      });\n      if (label) {\n        this.device.setResourceName(this.texture, label);\n      }\n      if (data) {\n        // @ts-ignore\n        this.texture.setImageData([data]);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.texture;\n    }\n  }, {\n    key: \"update\",\n    value: function update(props) {\n      var data = props.data;\n      this.texture.setImageData([data]);\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      // this.texture._texture.bind();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      if (this.width !== width || this.height !== height) {\n        this.destroy();\n      }\n      this.options.width = width;\n      this.options.height = height;\n      this.createTexture(this.options);\n      this.isDestroy = false;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return [this.width, this.height];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // @ts-ignore\n      if (!this.isDestroy && !this.texture.destroyed) {\n        var _this$texture;\n        (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n      }\n      this.isDestroy = true;\n    }\n  }]);\n  return DeviceTexture2D;\n}();\nexport { DeviceTexture2D as default };","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","TextureUsage","DeviceTextureUsage","FilterMode","Format","MipmapFilterMode","gl","wrapModeMap","extend3ChannelsTo4","isTexture2D","t","DeviceTexture2D","device","options","_options$wrapS","wrapS","CLAMP_TO_EDGE","_options$wrapT","wrapT","aniso","_options$mipmap","mipmap","_options$mag","mag","NEAREST","_options$min","min","createTexture","sampler","createSampler","addressModeU","addressModeV","minFilter","POINT","BILINEAR","magFilter","mipmapFilter","NO_MIP","maxAnisotropy","key","value","_options$type","type","UNSIGNED_BYTE","width","height","_options$flipY","flipY","_options$format","format","RGBA","_options$alignment","alignment","_options$usage","usage","SAMPLED","_options$unorm","unorm","label","data","pixelFormat","U8_RGBA_RT","U8_RGBA_NORM","LUMINANCE","U8_LUMINANCE","FLOAT","RGB","queryVendorInfo","platformString","F32_RGBA","F32_RGB","RED","F32_R","Error","concat","texture","RENDER_TARGET","pixelStore","unpackFlipY","packAlignment","mipLevelCount","setResourceName","setImageData","get","update","props","bind","resize","_ref","destroy","isDestroy","getSize","destroyed","_this$texture","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-renderer/es/device/DeviceTexture2D.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { TextureUsage as DeviceTextureUsage, FilterMode, Format, MipmapFilterMode } from '@antv/g-device-api';\nimport { TextureUsage, gl } from '@antv/l7-core';\nimport { wrapModeMap } from \"./constants\";\nimport { extend3ChannelsTo4 } from \"./utils/typedarray\";\nexport function isTexture2D(t) {\n  return !!(t && t['texture']);\n}\nvar DeviceTexture2D = /*#__PURE__*/function () {\n  function DeviceTexture2D(device, options) {\n    _classCallCheck(this, DeviceTexture2D);\n    _defineProperty(this, \"isDestroy\", false);\n    this.device = device;\n    this.options = options;\n    var _options$wrapS = options.wrapS,\n      wrapS = _options$wrapS === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapS,\n      _options$wrapT = options.wrapT,\n      wrapT = _options$wrapT === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapT,\n      aniso = options.aniso,\n      _options$mipmap = options.mipmap,\n      mipmap = _options$mipmap === void 0 ? false : _options$mipmap,\n      _options$mag = options.mag,\n      mag = _options$mag === void 0 ? gl.NEAREST : _options$mag,\n      _options$min = options.min,\n      min = _options$min === void 0 ? gl.NEAREST : _options$min;\n    this.createTexture(options);\n    this.sampler = device.createSampler({\n      addressModeU: wrapModeMap[wrapS],\n      addressModeV: wrapModeMap[wrapT],\n      minFilter: min === gl.NEAREST ? FilterMode.POINT : FilterMode.BILINEAR,\n      magFilter: mag === gl.NEAREST ? FilterMode.POINT : FilterMode.BILINEAR,\n      mipmapFilter: MipmapFilterMode.NO_MIP,\n      // lodMinClamp: 0,\n      // lodMaxClamp: 0,\n      maxAnisotropy: aniso\n    });\n  }\n  _createClass(DeviceTexture2D, [{\n    key: \"createTexture\",\n    value: function createTexture(options) {\n      var _options$type = options.type,\n        type = _options$type === void 0 ? gl.UNSIGNED_BYTE : _options$type,\n        width = options.width,\n        height = options.height,\n        _options$flipY = options.flipY,\n        flipY = _options$flipY === void 0 ? false : _options$flipY,\n        _options$format = options.format,\n        format = _options$format === void 0 ? gl.RGBA : _options$format,\n        aniso = options.aniso,\n        _options$alignment = options.alignment,\n        alignment = _options$alignment === void 0 ? 1 : _options$alignment,\n        _options$usage = options.usage,\n        usage = _options$usage === void 0 ? TextureUsage.SAMPLED : _options$usage,\n        _options$unorm = options.unorm,\n        unorm = _options$unorm === void 0 ? false : _options$unorm,\n        label = options.label;\n      var data = options.data;\n      this.width = width;\n      this.height = height;\n      var pixelFormat = Format.U8_RGBA_RT;\n      if (type === gl.UNSIGNED_BYTE && format === gl.RGBA) {\n        pixelFormat = unorm ? Format.U8_RGBA_NORM : Format.U8_RGBA_RT;\n      } else if (type === gl.UNSIGNED_BYTE && format === gl.LUMINANCE) {\n        pixelFormat = Format.U8_LUMINANCE;\n      } else if (type === gl.FLOAT && format === gl.RGB) {\n        // @see https://github.com/antvis/L7/pull/2262\n        if (this.device.queryVendorInfo().platformString === 'WebGPU') {\n          if (data) {\n            // @ts-ignore\n            data = extend3ChannelsTo4(data, 0);\n          }\n          pixelFormat = Format.F32_RGBA;\n        } else {\n          pixelFormat = Format.F32_RGB;\n        }\n      } else if (type === gl.FLOAT && format === gl.RGBA) {\n        pixelFormat = Format.F32_RGBA;\n      } else if (type === gl.FLOAT && format === gl.RED) {\n        pixelFormat = Format.F32_R;\n      } else {\n        throw new Error(\"create texture error, type: \".concat(type, \", format: \").concat(format));\n      }\n      this.texture = this.device.createTexture({\n        format: pixelFormat,\n        width: width,\n        height: height,\n        usage: usage === TextureUsage.SAMPLED ? DeviceTextureUsage.SAMPLED : DeviceTextureUsage.RENDER_TARGET,\n        pixelStore: {\n          unpackFlipY: flipY,\n          packAlignment: alignment\n        },\n        // mipLevelCount: usage === TextureUsage.RENDER_TARGET ? 1 : mipmap ? 1 : 0,\n        mipLevelCount: 1\n      });\n      if (label) {\n        this.device.setResourceName(this.texture, label);\n      }\n      if (data) {\n        // @ts-ignore\n        this.texture.setImageData([data]);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.texture;\n    }\n  }, {\n    key: \"update\",\n    value: function update(props) {\n      var data = props.data;\n      this.texture.setImageData([data]);\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      // this.texture._texture.bind();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      if (this.width !== width || this.height !== height) {\n        this.destroy();\n      }\n      this.options.width = width;\n      this.options.height = height;\n      this.createTexture(this.options);\n      this.isDestroy = false;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return [this.width, this.height];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // @ts-ignore\n      if (!this.isDestroy && !this.texture.destroyed) {\n        var _this$texture;\n        (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n      }\n      this.isDestroy = true;\n    }\n  }]);\n  return DeviceTexture2D;\n}();\nexport { DeviceTexture2D as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}