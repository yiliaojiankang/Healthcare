{"ast":null,"code":"import { __assign, __extends, __read, __rest, __spreadArray } from \"tslib\";\nimport { Controller } from './base';\nimport { Scrollbar as ScrollbarComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\nvar DEFAULT_PADDING = 0;\nvar DEFAULT_SIZE = 8;\nvar DEFAULT_CATEGORY_SIZE = 32;\nvar MIN_THUMB_LENGTH = 20;\nvar Scrollbar = /** @class */function (_super) {\n  __extends(Scrollbar, _super);\n  function Scrollbar(view) {\n    var _this = _super.call(this, view) || this;\n    _this.onChangeFn = noop;\n    _this.resetMeasure = function () {\n      _this.clear();\n    };\n    _this.onValueChange = function (_a) {\n      var ratio = _a.ratio;\n      var animate = _this.getValidScrollbarCfg().animate;\n      _this.ratio = clamp(ratio, 0, 1);\n      var originalAnimate = _this.view.getOptions().animate;\n      if (!animate) {\n        _this.view.animate(false);\n      }\n      _this.changeViewData(_this.getScrollRange(), true);\n      _this.view.animate(originalAnimate);\n    };\n    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.onChangeFn = throttle(_this.onValueChange, 20, {\n      leading: true\n    });\n    _this.trackLen = 0;\n    _this.thumbLen = 0;\n    _this.ratio = 0;\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n    return _this;\n  }\n  Object.defineProperty(Scrollbar.prototype, \"name\", {\n    get: function () {\n      return 'scrollbar';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Scrollbar.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  };\n  Scrollbar.prototype.init = function () {};\n  /**\n   * 渲染\n   */\n  Scrollbar.prototype.render = function () {\n    this.option = this.view.getOptions().scrollbar;\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  };\n  /**\n   * 布局\n   */\n  Scrollbar.prototype.layout = function () {\n    var _this = this;\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(function () {\n        if (!_this.view.destroyed) {\n          _this.changeViewData(_this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      var width = this.view.coordinateBBox.width;\n      var padding = this.scrollbar.component.get('padding');\n      var bboxObject = this.scrollbar.component.getLayoutBBox();\n      var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n      var cfg = this.getScrollbarComponentCfg();\n      var x = void 0;\n      var y = void 0;\n      if (cfg.isHorizontal) {\n        var _a = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM), 2),\n          x1 = _a[0],\n          y1 = _a[1];\n        var _b = __read(directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM), 2),\n          x2 = _b[0],\n          y2 = _b[1];\n        x = x2;\n        y = y1;\n      } else {\n        var _c = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n          x1 = _c[0],\n          y1 = _c[1];\n        var _d = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n          x2 = _d[0],\n          y2 = _d[1];\n        x = x2;\n        y = y1;\n      }\n      x += padding[3];\n      y += padding[0];\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n        }));\n      } else {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y\n        }));\n      }\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  };\n  /**\n   * 更新\n   */\n  Scrollbar.prototype.update = function () {\n    // 逻辑和 render 保持一致\n    this.render();\n  };\n  Scrollbar.prototype.getComponents = function () {\n    return this.scrollbar ? [this.scrollbar] : [];\n  };\n  Scrollbar.prototype.clear = function () {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  };\n  /** 设置滚动条位置  */\n  Scrollbar.prototype.setValue = function (ratio) {\n    this.onValueChange({\n      ratio: ratio\n    });\n  };\n  /** 获得滚动条位置  */\n  Scrollbar.prototype.getValue = function () {\n    return this.ratio;\n  };\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  Scrollbar.prototype.getThemeOptions = function () {\n    var theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  };\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  Scrollbar.prototype.getScrollbarTheme = function (style) {\n    var theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    var _a = style || {},\n      thumbHighlightColor = _a.thumbHighlightColor,\n      restStyles = __rest(_a, [\"thumbHighlightColor\"]);\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), {\n        thumbColor: thumbHighlightColor\n      })\n    };\n  };\n  Scrollbar.prototype.measureScrollbar = function () {\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    var _a = this.getScrollbarComponentCfg(),\n      trackLen = _a.trackLen,\n      thumbLen = _a.thumbLen;\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || []\n    };\n    this.yScalesCfg = yScales;\n  };\n  Scrollbar.prototype.getScrollRange = function () {\n    var startIdx = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    var endIdx = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  };\n  Scrollbar.prototype.changeViewData = function (_a, render) {\n    var _this = this;\n    var _b = __read(_a, 2),\n      startIdx = _b[0],\n      endIdx = _b[1];\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var values = valuesOfKey(this.data, this.xScaleCfg.field);\n    // 如果是 xScale 数值类型，则进行排序\n    var xScaleValues = this.view.getXScale().isLinear ? values.sort(function (a, b) {\n      return Number(a) - Number(b);\n    }) : values;\n    var xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach(function (cfg) {\n      _this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type,\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, function (val) {\n      var idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  };\n  Scrollbar.prototype.createScrollbar = function () {\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var component = new ScrollbarComponent(__assign(__assign({\n      container: this.container\n    }, this.getScrollbarComponentCfg()), {\n      x: 0,\n      y: 0\n    }));\n    component.init();\n    return {\n      component: component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR\n    };\n  };\n  Scrollbar.prototype.updateScrollbar = function () {\n    var config = this.getScrollbarComponentCfg();\n    var realConfig = this.trackLen ? __assign(__assign({}, config), {\n      trackLen: this.trackLen,\n      thumbLen: this.thumbLen,\n      thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n    }) : __assign({}, config);\n    this.scrollbar.component.update(realConfig);\n    return this.scrollbar;\n  };\n  Scrollbar.prototype.getStep = function () {\n    if (this.step) {\n      return this.step;\n    }\n    var coordinateBBox = this.view.coordinateBBox;\n    var _a = this.getValidScrollbarCfg(),\n      type = _a.type,\n      categorySize = _a.categorySize;\n    var isHorizontal = type !== 'vertical';\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  };\n  Scrollbar.prototype.getCnt = function () {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    var xScale = this.view.getXScale();\n    var data = this.getScrollbarData();\n    var values = valuesOfKey(data, xScale.field);\n    return size(values);\n  };\n  Scrollbar.prototype.getScrollbarComponentCfg = function () {\n    var _a = this.view,\n      coordinateBBox = _a.coordinateBBox,\n      viewBBox = _a.viewBBox;\n    var _b = this.getValidScrollbarCfg(),\n      type = _b.type,\n      padding = _b.padding,\n      width = _b.width,\n      height = _b.height,\n      style = _b.style;\n    var isHorizontal = type !== 'vertical';\n    var _c = __read(padding, 4),\n      paddingTop = _c[0],\n      paddingRight = _c[1],\n      paddingBottom = _c[2],\n      paddingLeft = _c[3];\n    var position = isHorizontal ? {\n      x: coordinateBBox.minX + paddingLeft,\n      y: viewBBox.maxY - height - paddingBottom\n    } : {\n      x: viewBBox.maxX - width - paddingRight,\n      y: coordinateBBox.minY + paddingTop\n    };\n    var step = this.getStep();\n    var cnt = this.getCnt();\n    var trackLen = isHorizontal ? coordinateBBox.width - paddingLeft - paddingRight : coordinateBBox.height - paddingTop - paddingBottom;\n    var thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n    return __assign(__assign({}, this.getThemeOptions()), {\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal: isHorizontal,\n      trackLen: trackLen,\n      thumbLen: thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style)\n    });\n  };\n  /**\n   * 填充一些默认的配置项目\n   */\n  Scrollbar.prototype.getValidScrollbarCfg = function () {\n    var cfg = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {}\n    };\n    if (isObject(this.option)) {\n      cfg = __assign(__assign({}, cfg), this.option);\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding = cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n    return cfg;\n  };\n  /**\n   * 获取数据\n   */\n  Scrollbar.prototype.getScrollbarData = function () {\n    var coordinate = this.view.getCoordinate();\n    var cfg = this.getValidScrollbarCfg();\n    var data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = __spreadArray([], __read(data), false).reverse();\n    }\n    return data;\n  };\n  return Scrollbar;\n}(Controller);\nexport default Scrollbar;","map":{"version":3,"names":["Controller","Scrollbar","ScrollbarComponent","BBox","directionToPosition","COMPONENT_TYPE","DIRECTION","LAYER","VIEW_LIFE_CIRCLE","isObject","clamp","size","throttle","noop","get","valuesOfKey","deepMix","isBetween","DEFAULT_PADDING","DEFAULT_SIZE","DEFAULT_CATEGORY_SIZE","MIN_THUMB_LENGTH","_super","__extends","view","_this","call","onChangeFn","resetMeasure","clear","onValueChange","_a","ratio","animate","getValidScrollbarCfg","originalAnimate","getOptions","changeViewData","getScrollRange","container","getLayer","FORE","addGroup","leading","trackLen","thumbLen","on","BEFORE_CHANGE_DATA","BEFORE_CHANGE_SIZE","Object","defineProperty","prototype","destroy","off","init","render","option","scrollbar","updateScrollbar","createScrollbar","component","undefined","layout","measureScrollbar","setTimeout","destroyed","width","coordinateBBox","padding","bboxObject","getLayoutBBox","bbox","x","y","Math","min","height","expand","cfg","getScrollbarComponentCfg","isHorizontal","__read","viewBBox","BOTTOM","x1","y1","_b","x2","y2","_c","RIGHT","_d","update","__assign","thumbOffset","cut","getComponents","cnt","step","data","xScaleCfg","yScalesCfg","setValue","getValue","getThemeOptions","theme","getTheme","getScrollbarTheme","style","thumbHighlightColor","restStyles","__rest","default","hover","thumbColor","xScale","getXScale","yScales","getYScales","slice","getScrollbarData","getStep","getCnt","field","values","startIdx","floor","endIdx","type","xScaleValues","isLinear","sort","a","b","Number","xValues","reverse","forEach","scale","formatter","max","tickMethod","filter","val","idx","indexOf","layer","direction","SCROLLBAR","config","realConfig","categorySize","paddingTop","paddingRight","paddingBottom","paddingLeft","position","minX","maxY","maxX","minY","coordinate","getCoordinate","isReflect","__spreadArray"],"sources":["../../../src/chart/controller/scrollbar.ts"],"sourcesContent":["import { Controller } from './base';\nimport { IGroup, Scrollbar as ScrollbarComponent, Scale } from '../../dependents';\nimport { ScrollbarOption, ComponentOption, ScrollbarCfg, Data, ScaleOption, Padding } from '../../interface';\nimport View from '../view';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\n\nconst DEFAULT_PADDING: number = 0;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\n\nexport default class Scrollbar extends Controller<ScrollbarOption> {\n  private scrollbar: ComponentOption;\n  private container: IGroup;\n\n  private trackLen: number;\n  private thumbLen: number;\n  private cnt: number;\n  private step: number;\n  private ratio: number;\n  private data: Data;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'scrollbar';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  public init() { }\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(() => {\n        if (!this.view.destroyed) {\n          this.changeViewData(this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      const width = this.view.coordinateBBox.width;\n      const padding: Padding = this.scrollbar.component.get('padding') as Padding;\n      const bboxObject = this.scrollbar.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const cfg = this.getScrollbarComponentCfg();\n\n      let x: number;\n      let y: number;\n\n      if (cfg.isHorizontal) {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n        const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n        x = x2;\n        y = y1;\n      } else {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        const [x2, y2] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0];\n\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        });\n      } else {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n        });\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  public getComponents() {\n    return this.scrollbar ? [this.scrollbar] : [];\n  }\n\n  public clear() {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  }\n\n  /** 设置滚动条位置  */\n  public setValue(ratio: number) {\n    this.onValueChange({ ratio });\n  }\n\n  /** 获得滚动条位置  */\n  public getValue() {\n    return this.ratio;\n  }\n\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  }\n\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  private getScrollbarTheme(style?: ScrollbarCfg['style']) {\n    const theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    const { thumbHighlightColor, ...restStyles } = style || {};\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), { thumbColor: thumbHighlightColor }),\n    };\n  }\n\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  private onValueChange = ({ ratio }: { ratio: number }) => {\n    const { animate } = this.getValidScrollbarCfg();\n    this.ratio = clamp(ratio, 0, 1);\n    const originalAnimate = this.view.getOptions().animate;\n    if (!animate) {\n      this.view.animate(false);\n    }\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(originalAnimate);\n  };\n\n  private measureScrollbar(): void {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    const { trackLen, thumbLen } = this.getScrollbarComponentCfg();\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || [],\n    };\n    this.yScalesCfg = yScales;\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const values = valuesOfKey(this.data, this.xScaleCfg.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    const xScaleValues = this.view.getXScale().isLinear ? values.sort((a, b) => Number(a) - Number(b)) : values;\n\n    const xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach((cfg) => {\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type as ScaleOption['type'],\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, (val) => {\n      const idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  }\n\n  private createScrollbar(): ComponentOption {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const component = new ScrollbarComponent({\n      container: this.container,\n      ...this.getScrollbarComponentCfg(),\n      x: 0,\n      y: 0,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR,\n    };\n  }\n\n  private updateScrollbar(): ComponentOption {\n    const config = this.getScrollbarComponentCfg();\n    const realConfig = this.trackLen\n      ? {\n        ...config,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n      }\n      : { ...config };\n    this.scrollbar.component.update(realConfig);\n\n    return this.scrollbar;\n  }\n\n  private getStep() {\n    if (this.step) {\n      return this.step;\n    }\n    const { coordinateBBox } = this.view;\n    const { type, categorySize } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  }\n\n  private getCnt() {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    const xScale = this.view.getXScale();\n    const data = this.getScrollbarData();\n    const values = valuesOfKey(data, xScale.field);\n    return size(values);\n  }\n\n  private getScrollbarComponentCfg() {\n    const { coordinateBBox, viewBBox } = this.view;\n    const { type, padding, width, height, style } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const position = isHorizontal\n      ? {\n        x: coordinateBBox.minX + paddingLeft,\n        y: viewBBox.maxY - height - paddingBottom,\n      }\n      : {\n        x: viewBBox.maxX - width - paddingRight,\n        y: coordinateBBox.minY + paddingTop,\n      };\n    const step = this.getStep();\n    const cnt = this.getCnt();\n    const trackLen = isHorizontal\n      ? coordinateBBox.width - paddingLeft - paddingRight\n      : coordinateBBox.height - paddingTop - paddingBottom;\n    const thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n\n    return {\n      ...this.getThemeOptions(),\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal,\n      trackLen,\n      thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style),\n    };\n  }\n\n  /**\n   * 填充一些默认的配置项目\n   */\n  private getValidScrollbarCfg(): Required<ScrollbarCfg> {\n    let cfg: Required<ScrollbarCfg> = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {},\n    };\n    if (isObject(this.option)) {\n      cfg = { ...cfg, ...this.option };\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding =\n        cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  }\n\n  /**\n   * 获取数据\n   */\n  private getScrollbarData(): Data {\n    const coordinate = this.view.getCoordinate();\n    const cfg = this.getValidScrollbarCfg();\n    let data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = [...data].reverse();\n    }\n\n    return data;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}