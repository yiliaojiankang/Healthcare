{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Layouts = exports.Layout = void 0;\nvar registy_1 = require(\"../registy\");\nvar grid_1 = require(\"./grid\");\nvar random_1 = require(\"./random\");\nvar force2_1 = require(\"./force2\");\nvar gForce_1 = require(\"./gForce\");\nvar force_1 = require(\"./force\");\nvar circular_1 = require(\"./circular\");\nvar dagre_1 = require(\"./dagre\");\nvar radial_1 = require(\"./radial\");\nvar concentric_1 = require(\"./concentric\");\nvar mds_1 = require(\"./mds\");\nvar fruchterman_1 = require(\"./fruchterman\");\nvar fruchterman_2 = require(\"./gpu/fruchterman\");\nvar gForce_2 = require(\"./gpu/gForce\");\nvar comboForce_1 = require(\"./comboForce\");\nvar comboCombined_1 = require(\"./comboCombined\");\nvar forceAtlas2_1 = require(\"./forceAtlas2\");\nvar er_1 = require(\"./er\");\nvar dagreCompound_1 = require(\"./dagreCompound\");\nvar util_1 = require(\"../util\");\nvar Layout = /** @class */function () {\n  function Layout(options) {\n    var layoutClass = (0, registy_1.getLayoutByName)(options.type);\n    this.layoutInstance = new layoutClass(options);\n  }\n  Layout.prototype.layout = function (data) {\n    return this.layoutInstance.layout(data);\n  };\n  Layout.prototype.updateCfg = function (cfg) {\n    this.layoutInstance.updateCfg(cfg);\n  };\n  Layout.prototype.init = function (data) {\n    this.correctLayers(data.nodes);\n    this.layoutInstance.init(data);\n  };\n  /**\n   * correcting the layers on the node data\n   * if min(layer) <= 0, layers should begin from abs(min(layer)) + 1\n   * @param nodes\n   * @returns\n   */\n  Layout.prototype.correctLayers = function (nodes) {\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    var minLayer = Infinity;\n    var hasLayerNodes = [];\n    nodes.forEach(function (node) {\n      if ((0, util_1.isString)(node.layer)) {\n        node.layer = parseInt(node.layer, 10);\n      }\n      // keep node.layer === undefined for TS problem\n      if (node.layer === undefined || isNaN(node.layer)) return;\n      hasLayerNodes.push(node);\n      if (node.layer < minLayer) minLayer = node.layer;\n    });\n    if (minLayer <= 0) {\n      var layerOffset_1 = Math.abs(minLayer) + 1;\n      // @ts-ignore\n      hasLayerNodes.forEach(function (node) {\n        return node.layer += layerOffset_1;\n      });\n    }\n  };\n  Layout.prototype.execute = function () {\n    this.layoutInstance.execute();\n  };\n  Layout.prototype.getDefaultCfg = function () {\n    return this.layoutInstance.getDefaultCfg();\n  };\n  Layout.prototype.destroy = function () {\n    return this.layoutInstance.destroy();\n  };\n  return Layout;\n}();\nexports.Layout = Layout;\n// FIXME\n// FOR G6\n// tslint:disable-next-line\nexports.Layouts = {\n  force: force_1.ForceLayout,\n  fruchterman: fruchterman_1.FruchtermanLayout,\n  forceAtlas2: forceAtlas2_1.ForceAtlas2Layout,\n  gForce: gForce_1.GForceLayout,\n  force2: force2_1.Force2Layout,\n  dagre: dagre_1.DagreLayout,\n  dagreCompound: dagreCompound_1.DagreCompoundLayout,\n  circular: circular_1.CircularLayout,\n  radial: radial_1.RadialLayout,\n  concentric: concentric_1.ConcentricLayout,\n  grid: grid_1.GridLayout,\n  mds: mds_1.MDSLayout,\n  comboForce: comboForce_1.ComboForceLayout,\n  comboCombined: comboCombined_1.ComboCombinedLayout,\n  random: random_1.RandomLayout,\n  'gForce-gpu': gForce_2.GForceGPULayout,\n  'fruchterman-gpu': fruchterman_2.FruchtermanGPULayout,\n  er: er_1.ERLayout\n};","map":{"version":3,"names":["registy_1","require","grid_1","random_1","force2_1","gForce_1","force_1","circular_1","dagre_1","radial_1","concentric_1","mds_1","fruchterman_1","fruchterman_2","gForce_2","comboForce_1","comboCombined_1","forceAtlas2_1","er_1","dagreCompound_1","util_1","Layout","options","layoutClass","getLayoutByName","type","layoutInstance","prototype","layout","data","updateCfg","cfg","init","correctLayers","nodes","length","minLayer","Infinity","hasLayerNodes","forEach","node","isString","layer","parseInt","undefined","isNaN","push","layerOffset_1","Math","abs","execute","getDefaultCfg","destroy","exports","Layouts","force","ForceLayout","fruchterman","FruchtermanLayout","forceAtlas2","ForceAtlas2Layout","gForce","GForceLayout","force2","Force2Layout","dagre","DagreLayout","dagreCompound","DagreCompoundLayout","circular","CircularLayout","radial","RadialLayout","concentric","ConcentricLayout","grid","GridLayout","mds","MDSLayout","comboForce","ComboForceLayout","comboCombined","ComboCombinedLayout","random","RandomLayout","GForceGPULayout","FruchtermanGPULayout","er","ERLayout"],"sources":["../../src/layout/layout.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}