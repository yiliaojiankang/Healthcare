{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { isNil, isNumber, clamp } from '@antv/util';\nimport { __read, __extends, __values, __assign, __awaiter, __generator, __spreadArray, __rest } from 'tslib';\nimport EventEmitter from 'eventemitter3';\n\n/**\n * ported from @luma.gl/constants\n *\n * Standard WebGL and WebGL2 constants\n * These constants are also defined on the WebGLRenderingContext interface.\n */\nvar GL;\n(function (GL) {\n  // Clearing buffers\n  // Constants passed to clear() to clear buffer masks.\n  GL[GL[\"DEPTH_BUFFER_BIT\"] = 256] = \"DEPTH_BUFFER_BIT\";\n  GL[GL[\"STENCIL_BUFFER_BIT\"] = 1024] = \"STENCIL_BUFFER_BIT\";\n  GL[GL[\"COLOR_BUFFER_BIT\"] = 16384] = \"COLOR_BUFFER_BIT\";\n  // Rendering primitives\n  // Constants passed to drawElements() or drawArrays() to specify what kind of primitive to render.\n  GL[GL[\"POINTS\"] = 0] = \"POINTS\";\n  GL[GL[\"LINES\"] = 1] = \"LINES\";\n  GL[GL[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n  GL[GL[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n  GL[GL[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n  GL[GL[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n  GL[GL[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n  // Blending modes\n  // Constants passed to blendFunc() or blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately).\n  GL[GL[\"ZERO\"] = 0] = \"ZERO\";\n  GL[GL[\"ONE\"] = 1] = \"ONE\";\n  GL[GL[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\n  GL[GL[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\n  GL[GL[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n  GL[GL[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n  GL[GL[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n  GL[GL[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n  GL[GL[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\n  GL[GL[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\n  GL[GL[\"SRC_ALPHA_SATURATE\"] = 776] = \"SRC_ALPHA_SATURATE\";\n  GL[GL[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\n  GL[GL[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\n  GL[GL[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\n  GL[GL[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\n  // Blending equations\n  // Constants passed to blendEquation() or blendEquationSeparate() to control\n  // how the blending is calculated (for both, RBG and alpha, or separately).\n  GL[GL[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\n  GL[GL[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\n  GL[GL[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\n  // Getting GL parameter information\n  // Constants passed to getParameter() to specify what information to return.\n  GL[GL[\"BLEND_EQUATION\"] = 32777] = \"BLEND_EQUATION\";\n  GL[GL[\"BLEND_EQUATION_RGB\"] = 32777] = \"BLEND_EQUATION_RGB\";\n  GL[GL[\"BLEND_EQUATION_ALPHA\"] = 34877] = \"BLEND_EQUATION_ALPHA\";\n  GL[GL[\"BLEND_DST_RGB\"] = 32968] = \"BLEND_DST_RGB\";\n  GL[GL[\"BLEND_SRC_RGB\"] = 32969] = \"BLEND_SRC_RGB\";\n  GL[GL[\"BLEND_DST_ALPHA\"] = 32970] = \"BLEND_DST_ALPHA\";\n  GL[GL[\"BLEND_SRC_ALPHA\"] = 32971] = \"BLEND_SRC_ALPHA\";\n  GL[GL[\"BLEND_COLOR\"] = 32773] = \"BLEND_COLOR\";\n  GL[GL[\"ARRAY_BUFFER_BINDING\"] = 34964] = \"ARRAY_BUFFER_BINDING\";\n  GL[GL[\"ELEMENT_ARRAY_BUFFER_BINDING\"] = 34965] = \"ELEMENT_ARRAY_BUFFER_BINDING\";\n  GL[GL[\"LINE_WIDTH\"] = 2849] = \"LINE_WIDTH\";\n  GL[GL[\"ALIASED_POINT_SIZE_RANGE\"] = 33901] = \"ALIASED_POINT_SIZE_RANGE\";\n  GL[GL[\"ALIASED_LINE_WIDTH_RANGE\"] = 33902] = \"ALIASED_LINE_WIDTH_RANGE\";\n  GL[GL[\"CULL_FACE_MODE\"] = 2885] = \"CULL_FACE_MODE\";\n  GL[GL[\"FRONT_FACE\"] = 2886] = \"FRONT_FACE\";\n  GL[GL[\"DEPTH_RANGE\"] = 2928] = \"DEPTH_RANGE\";\n  GL[GL[\"DEPTH_WRITEMASK\"] = 2930] = \"DEPTH_WRITEMASK\";\n  GL[GL[\"DEPTH_CLEAR_VALUE\"] = 2931] = \"DEPTH_CLEAR_VALUE\";\n  GL[GL[\"DEPTH_FUNC\"] = 2932] = \"DEPTH_FUNC\";\n  GL[GL[\"STENCIL_CLEAR_VALUE\"] = 2961] = \"STENCIL_CLEAR_VALUE\";\n  GL[GL[\"STENCIL_FUNC\"] = 2962] = \"STENCIL_FUNC\";\n  GL[GL[\"STENCIL_FAIL\"] = 2964] = \"STENCIL_FAIL\";\n  GL[GL[\"STENCIL_PASS_DEPTH_FAIL\"] = 2965] = \"STENCIL_PASS_DEPTH_FAIL\";\n  GL[GL[\"STENCIL_PASS_DEPTH_PASS\"] = 2966] = \"STENCIL_PASS_DEPTH_PASS\";\n  GL[GL[\"STENCIL_REF\"] = 2967] = \"STENCIL_REF\";\n  GL[GL[\"STENCIL_VALUE_MASK\"] = 2963] = \"STENCIL_VALUE_MASK\";\n  GL[GL[\"STENCIL_WRITEMASK\"] = 2968] = \"STENCIL_WRITEMASK\";\n  GL[GL[\"STENCIL_BACK_FUNC\"] = 34816] = \"STENCIL_BACK_FUNC\";\n  GL[GL[\"STENCIL_BACK_FAIL\"] = 34817] = \"STENCIL_BACK_FAIL\";\n  GL[GL[\"STENCIL_BACK_PASS_DEPTH_FAIL\"] = 34818] = \"STENCIL_BACK_PASS_DEPTH_FAIL\";\n  GL[GL[\"STENCIL_BACK_PASS_DEPTH_PASS\"] = 34819] = \"STENCIL_BACK_PASS_DEPTH_PASS\";\n  GL[GL[\"STENCIL_BACK_REF\"] = 36003] = \"STENCIL_BACK_REF\";\n  GL[GL[\"STENCIL_BACK_VALUE_MASK\"] = 36004] = \"STENCIL_BACK_VALUE_MASK\";\n  GL[GL[\"STENCIL_BACK_WRITEMASK\"] = 36005] = \"STENCIL_BACK_WRITEMASK\";\n  GL[GL[\"VIEWPORT\"] = 2978] = \"VIEWPORT\";\n  GL[GL[\"SCISSOR_BOX\"] = 3088] = \"SCISSOR_BOX\";\n  GL[GL[\"COLOR_CLEAR_VALUE\"] = 3106] = \"COLOR_CLEAR_VALUE\";\n  GL[GL[\"COLOR_WRITEMASK\"] = 3107] = \"COLOR_WRITEMASK\";\n  GL[GL[\"UNPACK_ALIGNMENT\"] = 3317] = \"UNPACK_ALIGNMENT\";\n  GL[GL[\"PACK_ALIGNMENT\"] = 3333] = \"PACK_ALIGNMENT\";\n  GL[GL[\"MAX_TEXTURE_SIZE\"] = 3379] = \"MAX_TEXTURE_SIZE\";\n  GL[GL[\"MAX_VIEWPORT_DIMS\"] = 3386] = \"MAX_VIEWPORT_DIMS\";\n  GL[GL[\"SUBPIXEL_BITS\"] = 3408] = \"SUBPIXEL_BITS\";\n  GL[GL[\"RED_BITS\"] = 3410] = \"RED_BITS\";\n  GL[GL[\"GREEN_BITS\"] = 3411] = \"GREEN_BITS\";\n  GL[GL[\"BLUE_BITS\"] = 3412] = \"BLUE_BITS\";\n  GL[GL[\"ALPHA_BITS\"] = 3413] = \"ALPHA_BITS\";\n  GL[GL[\"DEPTH_BITS\"] = 3414] = \"DEPTH_BITS\";\n  GL[GL[\"STENCIL_BITS\"] = 3415] = \"STENCIL_BITS\";\n  GL[GL[\"POLYGON_OFFSET_UNITS\"] = 10752] = \"POLYGON_OFFSET_UNITS\";\n  GL[GL[\"POLYGON_OFFSET_FACTOR\"] = 32824] = \"POLYGON_OFFSET_FACTOR\";\n  GL[GL[\"TEXTURE_BINDING_2D\"] = 32873] = \"TEXTURE_BINDING_2D\";\n  GL[GL[\"SAMPLE_BUFFERS\"] = 32936] = \"SAMPLE_BUFFERS\";\n  GL[GL[\"SAMPLES\"] = 32937] = \"SAMPLES\";\n  GL[GL[\"SAMPLE_COVERAGE_VALUE\"] = 32938] = \"SAMPLE_COVERAGE_VALUE\";\n  GL[GL[\"SAMPLE_COVERAGE_INVERT\"] = 32939] = \"SAMPLE_COVERAGE_INVERT\";\n  GL[GL[\"COMPRESSED_TEXTURE_FORMATS\"] = 34467] = \"COMPRESSED_TEXTURE_FORMATS\";\n  GL[GL[\"VENDOR\"] = 7936] = \"VENDOR\";\n  GL[GL[\"RENDERER\"] = 7937] = \"RENDERER\";\n  GL[GL[\"VERSION\"] = 7938] = \"VERSION\";\n  GL[GL[\"IMPLEMENTATION_COLOR_READ_TYPE\"] = 35738] = \"IMPLEMENTATION_COLOR_READ_TYPE\";\n  GL[GL[\"IMPLEMENTATION_COLOR_READ_FORMAT\"] = 35739] = \"IMPLEMENTATION_COLOR_READ_FORMAT\";\n  GL[GL[\"BROWSER_DEFAULT_WEBGL\"] = 37444] = \"BROWSER_DEFAULT_WEBGL\";\n  // Buffers\n  // Constants passed to bufferData(), bufferSubData(), bindBuffer(), or\n  // getBufferParameter().\n  GL[GL[\"STATIC_DRAW\"] = 35044] = \"STATIC_DRAW\";\n  GL[GL[\"STREAM_DRAW\"] = 35040] = \"STREAM_DRAW\";\n  GL[GL[\"DYNAMIC_DRAW\"] = 35048] = \"DYNAMIC_DRAW\";\n  GL[GL[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  GL[GL[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n  GL[GL[\"BUFFER_SIZE\"] = 34660] = \"BUFFER_SIZE\";\n  GL[GL[\"BUFFER_USAGE\"] = 34661] = \"BUFFER_USAGE\";\n  // Vertex attributes\n  // Constants passed to getVertexAttrib().\n  GL[GL[\"CURRENT_VERTEX_ATTRIB\"] = 34342] = \"CURRENT_VERTEX_ATTRIB\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_ENABLED\"] = 34338] = \"VERTEX_ATTRIB_ARRAY_ENABLED\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_SIZE\"] = 34339] = \"VERTEX_ATTRIB_ARRAY_SIZE\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_STRIDE\"] = 34340] = \"VERTEX_ATTRIB_ARRAY_STRIDE\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_TYPE\"] = 34341] = \"VERTEX_ATTRIB_ARRAY_TYPE\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_NORMALIZED\"] = 34922] = \"VERTEX_ATTRIB_ARRAY_NORMALIZED\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_POINTER\"] = 34373] = \"VERTEX_ATTRIB_ARRAY_POINTER\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\"] = 34975] = \"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\";\n  // Culling\n  // Constants passed to cullFace().\n  GL[GL[\"CULL_FACE\"] = 2884] = \"CULL_FACE\";\n  GL[GL[\"FRONT\"] = 1028] = \"FRONT\";\n  GL[GL[\"BACK\"] = 1029] = \"BACK\";\n  GL[GL[\"FRONT_AND_BACK\"] = 1032] = \"FRONT_AND_BACK\";\n  // Enabling and disabling\n  // Constants passed to enable() or disable().\n  GL[GL[\"BLEND\"] = 3042] = \"BLEND\";\n  GL[GL[\"DEPTH_TEST\"] = 2929] = \"DEPTH_TEST\";\n  GL[GL[\"DITHER\"] = 3024] = \"DITHER\";\n  GL[GL[\"POLYGON_OFFSET_FILL\"] = 32823] = \"POLYGON_OFFSET_FILL\";\n  GL[GL[\"SAMPLE_ALPHA_TO_COVERAGE\"] = 32926] = \"SAMPLE_ALPHA_TO_COVERAGE\";\n  GL[GL[\"SAMPLE_COVERAGE\"] = 32928] = \"SAMPLE_COVERAGE\";\n  GL[GL[\"SCISSOR_TEST\"] = 3089] = \"SCISSOR_TEST\";\n  GL[GL[\"STENCIL_TEST\"] = 2960] = \"STENCIL_TEST\";\n  // Errors\n  // Constants returned from getError().\n  GL[GL[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  GL[GL[\"INVALID_ENUM\"] = 1280] = \"INVALID_ENUM\";\n  GL[GL[\"INVALID_VALUE\"] = 1281] = \"INVALID_VALUE\";\n  GL[GL[\"INVALID_OPERATION\"] = 1282] = \"INVALID_OPERATION\";\n  GL[GL[\"OUT_OF_MEMORY\"] = 1285] = \"OUT_OF_MEMORY\";\n  GL[GL[\"CONTEXT_LOST_WEBGL\"] = 37442] = \"CONTEXT_LOST_WEBGL\";\n  // Front face directions\n  // Constants passed to frontFace().\n  GL[GL[\"CW\"] = 2304] = \"CW\";\n  GL[GL[\"CCW\"] = 2305] = \"CCW\";\n  // Hints\n  // Constants passed to hint()\n  GL[GL[\"DONT_CARE\"] = 4352] = \"DONT_CARE\";\n  GL[GL[\"FASTEST\"] = 4353] = \"FASTEST\";\n  GL[GL[\"NICEST\"] = 4354] = \"NICEST\";\n  GL[GL[\"GENERATE_MIPMAP_HINT\"] = 33170] = \"GENERATE_MIPMAP_HINT\";\n  // Data types\n  GL[GL[\"BYTE\"] = 5120] = \"BYTE\";\n  GL[GL[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n  GL[GL[\"SHORT\"] = 5122] = \"SHORT\";\n  GL[GL[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n  GL[GL[\"INT\"] = 5124] = \"INT\";\n  GL[GL[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n  GL[GL[\"FLOAT\"] = 5126] = \"FLOAT\";\n  GL[GL[\"DOUBLE\"] = 5130] = \"DOUBLE\";\n  // Pixel formats\n  GL[GL[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n  GL[GL[\"ALPHA\"] = 6406] = \"ALPHA\";\n  GL[GL[\"RGB\"] = 6407] = \"RGB\";\n  GL[GL[\"RGBA\"] = 6408] = \"RGBA\";\n  GL[GL[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n  GL[GL[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n  // Pixel types\n  // UNSIGNED_BYTE = 0x1401,\n  GL[GL[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n  GL[GL[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n  GL[GL[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n  // Shaders\n  // Constants passed to createShader() or getShaderParameter()\n  GL[GL[\"FRAGMENT_SHADER\"] = 35632] = \"FRAGMENT_SHADER\";\n  GL[GL[\"VERTEX_SHADER\"] = 35633] = \"VERTEX_SHADER\";\n  GL[GL[\"COMPILE_STATUS\"] = 35713] = \"COMPILE_STATUS\";\n  GL[GL[\"DELETE_STATUS\"] = 35712] = \"DELETE_STATUS\";\n  GL[GL[\"LINK_STATUS\"] = 35714] = \"LINK_STATUS\";\n  GL[GL[\"VALIDATE_STATUS\"] = 35715] = \"VALIDATE_STATUS\";\n  GL[GL[\"ATTACHED_SHADERS\"] = 35717] = \"ATTACHED_SHADERS\";\n  GL[GL[\"ACTIVE_ATTRIBUTES\"] = 35721] = \"ACTIVE_ATTRIBUTES\";\n  GL[GL[\"ACTIVE_UNIFORMS\"] = 35718] = \"ACTIVE_UNIFORMS\";\n  GL[GL[\"MAX_VERTEX_ATTRIBS\"] = 34921] = \"MAX_VERTEX_ATTRIBS\";\n  GL[GL[\"MAX_VERTEX_UNIFORM_VECTORS\"] = 36347] = \"MAX_VERTEX_UNIFORM_VECTORS\";\n  GL[GL[\"MAX_VARYING_VECTORS\"] = 36348] = \"MAX_VARYING_VECTORS\";\n  GL[GL[\"MAX_COMBINED_TEXTURE_IMAGE_UNITS\"] = 35661] = \"MAX_COMBINED_TEXTURE_IMAGE_UNITS\";\n  GL[GL[\"MAX_VERTEX_TEXTURE_IMAGE_UNITS\"] = 35660] = \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\";\n  GL[GL[\"MAX_TEXTURE_IMAGE_UNITS\"] = 34930] = \"MAX_TEXTURE_IMAGE_UNITS\";\n  GL[GL[\"MAX_FRAGMENT_UNIFORM_VECTORS\"] = 36349] = \"MAX_FRAGMENT_UNIFORM_VECTORS\";\n  GL[GL[\"SHADER_TYPE\"] = 35663] = \"SHADER_TYPE\";\n  GL[GL[\"SHADING_LANGUAGE_VERSION\"] = 35724] = \"SHADING_LANGUAGE_VERSION\";\n  GL[GL[\"CURRENT_PROGRAM\"] = 35725] = \"CURRENT_PROGRAM\";\n  // Depth or stencil tests\n  // Constants passed to depthFunc() or stencilFunc().\n  GL[GL[\"NEVER\"] = 512] = \"NEVER\";\n  GL[GL[\"ALWAYS\"] = 519] = \"ALWAYS\";\n  GL[GL[\"LESS\"] = 513] = \"LESS\";\n  GL[GL[\"EQUAL\"] = 514] = \"EQUAL\";\n  GL[GL[\"LEQUAL\"] = 515] = \"LEQUAL\";\n  GL[GL[\"GREATER\"] = 516] = \"GREATER\";\n  GL[GL[\"GEQUAL\"] = 518] = \"GEQUAL\";\n  GL[GL[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n  // Stencil actions\n  // Constants passed to stencilOp().\n  GL[GL[\"KEEP\"] = 7680] = \"KEEP\";\n  GL[GL[\"REPLACE\"] = 7681] = \"REPLACE\";\n  GL[GL[\"INCR\"] = 7682] = \"INCR\";\n  GL[GL[\"DECR\"] = 7683] = \"DECR\";\n  GL[GL[\"INVERT\"] = 5386] = \"INVERT\";\n  GL[GL[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\n  GL[GL[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\n  // Textures\n  // Constants passed to texParameteri(),\n  // texParameterf(), bindTexture(), texImage2D(), and others.\n  GL[GL[\"NEAREST\"] = 9728] = \"NEAREST\";\n  GL[GL[\"LINEAR\"] = 9729] = \"LINEAR\";\n  GL[GL[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\n  GL[GL[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n  GL[GL[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\n  GL[GL[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\n  GL[GL[\"TEXTURE_MAG_FILTER\"] = 10240] = \"TEXTURE_MAG_FILTER\";\n  GL[GL[\"TEXTURE_MIN_FILTER\"] = 10241] = \"TEXTURE_MIN_FILTER\";\n  GL[GL[\"TEXTURE_WRAP_S\"] = 10242] = \"TEXTURE_WRAP_S\";\n  GL[GL[\"TEXTURE_WRAP_T\"] = 10243] = \"TEXTURE_WRAP_T\";\n  GL[GL[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n  GL[GL[\"TEXTURE\"] = 5890] = \"TEXTURE\";\n  GL[GL[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n  GL[GL[\"TEXTURE_BINDING_CUBE_MAP\"] = 34068] = \"TEXTURE_BINDING_CUBE_MAP\";\n  GL[GL[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n  GL[GL[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n  GL[GL[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n  GL[GL[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n  GL[GL[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n  GL[GL[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n  GL[GL[\"MAX_CUBE_MAP_TEXTURE_SIZE\"] = 34076] = \"MAX_CUBE_MAP_TEXTURE_SIZE\";\n  // TEXTURE0 - 31 0x84C0 - 0x84DF A texture unit.\n  GL[GL[\"TEXTURE0\"] = 33984] = \"TEXTURE0\";\n  GL[GL[\"ACTIVE_TEXTURE\"] = 34016] = \"ACTIVE_TEXTURE\";\n  GL[GL[\"REPEAT\"] = 10497] = \"REPEAT\";\n  GL[GL[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\n  GL[GL[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n  // Emulation\n  GL[GL[\"TEXTURE_WIDTH\"] = 4096] = \"TEXTURE_WIDTH\";\n  GL[GL[\"TEXTURE_HEIGHT\"] = 4097] = \"TEXTURE_HEIGHT\";\n  // Uniform types\n  GL[GL[\"FLOAT_VEC2\"] = 35664] = \"FLOAT_VEC2\";\n  GL[GL[\"FLOAT_VEC3\"] = 35665] = \"FLOAT_VEC3\";\n  GL[GL[\"FLOAT_VEC4\"] = 35666] = \"FLOAT_VEC4\";\n  GL[GL[\"INT_VEC2\"] = 35667] = \"INT_VEC2\";\n  GL[GL[\"INT_VEC3\"] = 35668] = \"INT_VEC3\";\n  GL[GL[\"INT_VEC4\"] = 35669] = \"INT_VEC4\";\n  GL[GL[\"BOOL\"] = 35670] = \"BOOL\";\n  GL[GL[\"BOOL_VEC2\"] = 35671] = \"BOOL_VEC2\";\n  GL[GL[\"BOOL_VEC3\"] = 35672] = \"BOOL_VEC3\";\n  GL[GL[\"BOOL_VEC4\"] = 35673] = \"BOOL_VEC4\";\n  GL[GL[\"FLOAT_MAT2\"] = 35674] = \"FLOAT_MAT2\";\n  GL[GL[\"FLOAT_MAT3\"] = 35675] = \"FLOAT_MAT3\";\n  GL[GL[\"FLOAT_MAT4\"] = 35676] = \"FLOAT_MAT4\";\n  GL[GL[\"SAMPLER_2D\"] = 35678] = \"SAMPLER_2D\";\n  GL[GL[\"SAMPLER_CUBE\"] = 35680] = \"SAMPLER_CUBE\";\n  // Shader precision-specified types\n  GL[GL[\"LOW_FLOAT\"] = 36336] = \"LOW_FLOAT\";\n  GL[GL[\"MEDIUM_FLOAT\"] = 36337] = \"MEDIUM_FLOAT\";\n  GL[GL[\"HIGH_FLOAT\"] = 36338] = \"HIGH_FLOAT\";\n  GL[GL[\"LOW_INT\"] = 36339] = \"LOW_INT\";\n  GL[GL[\"MEDIUM_INT\"] = 36340] = \"MEDIUM_INT\";\n  GL[GL[\"HIGH_INT\"] = 36341] = \"HIGH_INT\";\n  // Framebuffers and renderbuffers\n  GL[GL[\"FRAMEBUFFER\"] = 36160] = \"FRAMEBUFFER\";\n  GL[GL[\"RENDERBUFFER\"] = 36161] = \"RENDERBUFFER\";\n  GL[GL[\"RGBA4\"] = 32854] = \"RGBA4\";\n  GL[GL[\"RGB5_A1\"] = 32855] = \"RGB5_A1\";\n  GL[GL[\"RGB565\"] = 36194] = \"RGB565\";\n  GL[GL[\"DEPTH_COMPONENT16\"] = 33189] = \"DEPTH_COMPONENT16\";\n  GL[GL[\"STENCIL_INDEX\"] = 6401] = \"STENCIL_INDEX\";\n  GL[GL[\"STENCIL_INDEX8\"] = 36168] = \"STENCIL_INDEX8\";\n  GL[GL[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n  GL[GL[\"RENDERBUFFER_WIDTH\"] = 36162] = \"RENDERBUFFER_WIDTH\";\n  GL[GL[\"RENDERBUFFER_HEIGHT\"] = 36163] = \"RENDERBUFFER_HEIGHT\";\n  GL[GL[\"RENDERBUFFER_INTERNAL_FORMAT\"] = 36164] = \"RENDERBUFFER_INTERNAL_FORMAT\";\n  GL[GL[\"RENDERBUFFER_RED_SIZE\"] = 36176] = \"RENDERBUFFER_RED_SIZE\";\n  GL[GL[\"RENDERBUFFER_GREEN_SIZE\"] = 36177] = \"RENDERBUFFER_GREEN_SIZE\";\n  GL[GL[\"RENDERBUFFER_BLUE_SIZE\"] = 36178] = \"RENDERBUFFER_BLUE_SIZE\";\n  GL[GL[\"RENDERBUFFER_ALPHA_SIZE\"] = 36179] = \"RENDERBUFFER_ALPHA_SIZE\";\n  GL[GL[\"RENDERBUFFER_DEPTH_SIZE\"] = 36180] = \"RENDERBUFFER_DEPTH_SIZE\";\n  GL[GL[\"RENDERBUFFER_STENCIL_SIZE\"] = 36181] = \"RENDERBUFFER_STENCIL_SIZE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\"] = 36048] = \"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\"] = 36049] = \"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\"] = 36050] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\"] = 36051] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\";\n  GL[GL[\"COLOR_ATTACHMENT0\"] = 36064] = \"COLOR_ATTACHMENT0\";\n  GL[GL[\"DEPTH_ATTACHMENT\"] = 36096] = \"DEPTH_ATTACHMENT\";\n  GL[GL[\"STENCIL_ATTACHMENT\"] = 36128] = \"STENCIL_ATTACHMENT\";\n  GL[GL[\"DEPTH_STENCIL_ATTACHMENT\"] = 33306] = \"DEPTH_STENCIL_ATTACHMENT\";\n  GL[GL[\"NONE\"] = 0] = \"NONE\";\n  GL[GL[\"FRAMEBUFFER_COMPLETE\"] = 36053] = \"FRAMEBUFFER_COMPLETE\";\n  GL[GL[\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\"] = 36054] = \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";\n  GL[GL[\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\"] = 36055] = \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";\n  GL[GL[\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\"] = 36057] = \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";\n  GL[GL[\"FRAMEBUFFER_UNSUPPORTED\"] = 36061] = \"FRAMEBUFFER_UNSUPPORTED\";\n  GL[GL[\"FRAMEBUFFER_BINDING\"] = 36006] = \"FRAMEBUFFER_BINDING\";\n  GL[GL[\"RENDERBUFFER_BINDING\"] = 36007] = \"RENDERBUFFER_BINDING\";\n  GL[GL[\"READ_FRAMEBUFFER\"] = 36008] = \"READ_FRAMEBUFFER\";\n  GL[GL[\"DRAW_FRAMEBUFFER\"] = 36009] = \"DRAW_FRAMEBUFFER\";\n  GL[GL[\"MAX_RENDERBUFFER_SIZE\"] = 34024] = \"MAX_RENDERBUFFER_SIZE\";\n  GL[GL[\"INVALID_FRAMEBUFFER_OPERATION\"] = 1286] = \"INVALID_FRAMEBUFFER_OPERATION\";\n  // Pixel storage modes\n  // Constants passed to pixelStorei().\n  GL[GL[\"UNPACK_FLIP_Y_WEBGL\"] = 37440] = \"UNPACK_FLIP_Y_WEBGL\";\n  GL[GL[\"UNPACK_PREMULTIPLY_ALPHA_WEBGL\"] = 37441] = \"UNPACK_PREMULTIPLY_ALPHA_WEBGL\";\n  GL[GL[\"UNPACK_COLORSPACE_CONVERSION_WEBGL\"] = 37443] = \"UNPACK_COLORSPACE_CONVERSION_WEBGL\";\n  // /////////////////////////////////////////////////////\n  // Additional constants defined WebGL 2\n  // These constants are defined on the WebGL2RenderingContext interface.\n  // All WebGL 1 constants are also available in a WebGL 2 context.\n  // /////////////////////////////////////////////////////\n  // Getting GL parameter information\n  // Constants passed to getParameter()\n  // to specify what information to return.\n  GL[GL[\"READ_BUFFER\"] = 3074] = \"READ_BUFFER\";\n  GL[GL[\"UNPACK_ROW_LENGTH\"] = 3314] = \"UNPACK_ROW_LENGTH\";\n  GL[GL[\"UNPACK_SKIP_ROWS\"] = 3315] = \"UNPACK_SKIP_ROWS\";\n  GL[GL[\"UNPACK_SKIP_PIXELS\"] = 3316] = \"UNPACK_SKIP_PIXELS\";\n  GL[GL[\"PACK_ROW_LENGTH\"] = 3330] = \"PACK_ROW_LENGTH\";\n  GL[GL[\"PACK_SKIP_ROWS\"] = 3331] = \"PACK_SKIP_ROWS\";\n  GL[GL[\"PACK_SKIP_PIXELS\"] = 3332] = \"PACK_SKIP_PIXELS\";\n  GL[GL[\"TEXTURE_BINDING_3D\"] = 32874] = \"TEXTURE_BINDING_3D\";\n  GL[GL[\"UNPACK_SKIP_IMAGES\"] = 32877] = \"UNPACK_SKIP_IMAGES\";\n  GL[GL[\"UNPACK_IMAGE_HEIGHT\"] = 32878] = \"UNPACK_IMAGE_HEIGHT\";\n  GL[GL[\"MAX_3D_TEXTURE_SIZE\"] = 32883] = \"MAX_3D_TEXTURE_SIZE\";\n  GL[GL[\"MAX_ELEMENTS_VERTICES\"] = 33000] = \"MAX_ELEMENTS_VERTICES\";\n  GL[GL[\"MAX_ELEMENTS_INDICES\"] = 33001] = \"MAX_ELEMENTS_INDICES\";\n  GL[GL[\"MAX_TEXTURE_LOD_BIAS\"] = 34045] = \"MAX_TEXTURE_LOD_BIAS\";\n  GL[GL[\"MAX_FRAGMENT_UNIFORM_COMPONENTS\"] = 35657] = \"MAX_FRAGMENT_UNIFORM_COMPONENTS\";\n  GL[GL[\"MAX_VERTEX_UNIFORM_COMPONENTS\"] = 35658] = \"MAX_VERTEX_UNIFORM_COMPONENTS\";\n  GL[GL[\"MAX_ARRAY_TEXTURE_LAYERS\"] = 35071] = \"MAX_ARRAY_TEXTURE_LAYERS\";\n  GL[GL[\"MIN_PROGRAM_TEXEL_OFFSET\"] = 35076] = \"MIN_PROGRAM_TEXEL_OFFSET\";\n  GL[GL[\"MAX_PROGRAM_TEXEL_OFFSET\"] = 35077] = \"MAX_PROGRAM_TEXEL_OFFSET\";\n  GL[GL[\"MAX_VARYING_COMPONENTS\"] = 35659] = \"MAX_VARYING_COMPONENTS\";\n  GL[GL[\"FRAGMENT_SHADER_DERIVATIVE_HINT\"] = 35723] = \"FRAGMENT_SHADER_DERIVATIVE_HINT\";\n  GL[GL[\"RASTERIZER_DISCARD\"] = 35977] = \"RASTERIZER_DISCARD\";\n  GL[GL[\"VERTEX_ARRAY_BINDING\"] = 34229] = \"VERTEX_ARRAY_BINDING\";\n  GL[GL[\"MAX_VERTEX_OUTPUT_COMPONENTS\"] = 37154] = \"MAX_VERTEX_OUTPUT_COMPONENTS\";\n  GL[GL[\"MAX_FRAGMENT_INPUT_COMPONENTS\"] = 37157] = \"MAX_FRAGMENT_INPUT_COMPONENTS\";\n  GL[GL[\"MAX_SERVER_WAIT_TIMEOUT\"] = 37137] = \"MAX_SERVER_WAIT_TIMEOUT\";\n  GL[GL[\"MAX_ELEMENT_INDEX\"] = 36203] = \"MAX_ELEMENT_INDEX\";\n  // Textures\n  // Constants passed to texParameteri(),\n  // texParameterf(), bindTexture(), texImage2D(), and others.\n  GL[GL[\"RED\"] = 6403] = \"RED\";\n  GL[GL[\"RGB8\"] = 32849] = \"RGB8\";\n  GL[GL[\"RGBA8\"] = 32856] = \"RGBA8\";\n  GL[GL[\"RGB10_A2\"] = 32857] = \"RGB10_A2\";\n  GL[GL[\"TEXTURE_3D\"] = 32879] = \"TEXTURE_3D\";\n  GL[GL[\"TEXTURE_WRAP_R\"] = 32882] = \"TEXTURE_WRAP_R\";\n  GL[GL[\"TEXTURE_MIN_LOD\"] = 33082] = \"TEXTURE_MIN_LOD\";\n  GL[GL[\"TEXTURE_MAX_LOD\"] = 33083] = \"TEXTURE_MAX_LOD\";\n  GL[GL[\"TEXTURE_BASE_LEVEL\"] = 33084] = \"TEXTURE_BASE_LEVEL\";\n  GL[GL[\"TEXTURE_MAX_LEVEL\"] = 33085] = \"TEXTURE_MAX_LEVEL\";\n  GL[GL[\"TEXTURE_COMPARE_MODE\"] = 34892] = \"TEXTURE_COMPARE_MODE\";\n  GL[GL[\"TEXTURE_COMPARE_FUNC\"] = 34893] = \"TEXTURE_COMPARE_FUNC\";\n  GL[GL[\"SRGB\"] = 35904] = \"SRGB\";\n  GL[GL[\"SRGB8\"] = 35905] = \"SRGB8\";\n  GL[GL[\"SRGB8_ALPHA8\"] = 35907] = \"SRGB8_ALPHA8\";\n  GL[GL[\"COMPARE_REF_TO_TEXTURE\"] = 34894] = \"COMPARE_REF_TO_TEXTURE\";\n  GL[GL[\"RGBA32F\"] = 34836] = \"RGBA32F\";\n  GL[GL[\"RGB32F\"] = 34837] = \"RGB32F\";\n  GL[GL[\"RGBA16F\"] = 34842] = \"RGBA16F\";\n  GL[GL[\"RGB16F\"] = 34843] = \"RGB16F\";\n  GL[GL[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n  GL[GL[\"TEXTURE_BINDING_2D_ARRAY\"] = 35869] = \"TEXTURE_BINDING_2D_ARRAY\";\n  GL[GL[\"R11F_G11F_B10F\"] = 35898] = \"R11F_G11F_B10F\";\n  GL[GL[\"RGB9_E5\"] = 35901] = \"RGB9_E5\";\n  GL[GL[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\n  GL[GL[\"RGB32UI\"] = 36209] = \"RGB32UI\";\n  GL[GL[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\n  GL[GL[\"RGB16UI\"] = 36215] = \"RGB16UI\";\n  GL[GL[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\n  GL[GL[\"RGB8UI\"] = 36221] = \"RGB8UI\";\n  GL[GL[\"RGBA32I\"] = 36226] = \"RGBA32I\";\n  GL[GL[\"RGB32I\"] = 36227] = \"RGB32I\";\n  GL[GL[\"RGBA16I\"] = 36232] = \"RGBA16I\";\n  GL[GL[\"RGB16I\"] = 36233] = \"RGB16I\";\n  GL[GL[\"RGBA8I\"] = 36238] = \"RGBA8I\";\n  GL[GL[\"RGB8I\"] = 36239] = \"RGB8I\";\n  GL[GL[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n  GL[GL[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n  GL[GL[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n  GL[GL[\"R8\"] = 33321] = \"R8\";\n  GL[GL[\"RG8\"] = 33323] = \"RG8\";\n  GL[GL[\"R16F\"] = 33325] = \"R16F\";\n  GL[GL[\"R32F\"] = 33326] = \"R32F\";\n  GL[GL[\"RG16F\"] = 33327] = \"RG16F\";\n  GL[GL[\"RG32F\"] = 33328] = \"RG32F\";\n  GL[GL[\"R8I\"] = 33329] = \"R8I\";\n  GL[GL[\"R8UI\"] = 33330] = \"R8UI\";\n  GL[GL[\"R16I\"] = 33331] = \"R16I\";\n  GL[GL[\"R16UI\"] = 33332] = \"R16UI\";\n  GL[GL[\"R32I\"] = 33333] = \"R32I\";\n  GL[GL[\"R32UI\"] = 33334] = \"R32UI\";\n  GL[GL[\"RG8I\"] = 33335] = \"RG8I\";\n  GL[GL[\"RG8UI\"] = 33336] = \"RG8UI\";\n  GL[GL[\"RG16I\"] = 33337] = \"RG16I\";\n  GL[GL[\"RG16UI\"] = 33338] = \"RG16UI\";\n  GL[GL[\"RG32I\"] = 33339] = \"RG32I\";\n  GL[GL[\"RG32UI\"] = 33340] = \"RG32UI\";\n  GL[GL[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\n  GL[GL[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\n  GL[GL[\"RGB8_SNORM\"] = 36758] = \"RGB8_SNORM\";\n  GL[GL[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\n  GL[GL[\"RGB10_A2UI\"] = 36975] = \"RGB10_A2UI\";\n  /* covered by extension\n    COMPRESSED_R11_EAC  = 0x9270,\n    COMPRESSED_SIGNED_R11_EAC = 0x9271,\n    COMPRESSED_RG11_EAC = 0x9272,\n    COMPRESSED_SIGNED_RG11_EAC  = 0x9273,\n    COMPRESSED_RGB8_ETC2  = 0x9274,\n    COMPRESSED_SRGB8_ETC2 = 0x9275,\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2  = 0x9276,\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC  = 0x9277,\n    COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC  = 0x9279,\n    */\n  GL[GL[\"TEXTURE_IMMUTABLE_FORMAT\"] = 37167] = \"TEXTURE_IMMUTABLE_FORMAT\";\n  GL[GL[\"TEXTURE_IMMUTABLE_LEVELS\"] = 33503] = \"TEXTURE_IMMUTABLE_LEVELS\";\n  // Pixel types\n  GL[GL[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n  GL[GL[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n  GL[GL[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n  GL[GL[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n  GL[GL[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n  GL[GL[\"HALF_FLOAT\"] = 5131] = \"HALF_FLOAT\";\n  GL[GL[\"RG\"] = 33319] = \"RG\";\n  GL[GL[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n  GL[GL[\"INT_2_10_10_10_REV\"] = 36255] = \"INT_2_10_10_10_REV\";\n  // Queries\n  GL[GL[\"CURRENT_QUERY\"] = 34917] = \"CURRENT_QUERY\";\n  GL[GL[\"QUERY_RESULT\"] = 34918] = \"QUERY_RESULT\";\n  GL[GL[\"QUERY_RESULT_AVAILABLE\"] = 34919] = \"QUERY_RESULT_AVAILABLE\";\n  GL[GL[\"ANY_SAMPLES_PASSED\"] = 35887] = \"ANY_SAMPLES_PASSED\";\n  GL[GL[\"ANY_SAMPLES_PASSED_CONSERVATIVE\"] = 36202] = \"ANY_SAMPLES_PASSED_CONSERVATIVE\";\n  // Draw buffers\n  GL[GL[\"MAX_DRAW_BUFFERS\"] = 34852] = \"MAX_DRAW_BUFFERS\";\n  GL[GL[\"DRAW_BUFFER0\"] = 34853] = \"DRAW_BUFFER0\";\n  GL[GL[\"DRAW_BUFFER1\"] = 34854] = \"DRAW_BUFFER1\";\n  GL[GL[\"DRAW_BUFFER2\"] = 34855] = \"DRAW_BUFFER2\";\n  GL[GL[\"DRAW_BUFFER3\"] = 34856] = \"DRAW_BUFFER3\";\n  GL[GL[\"DRAW_BUFFER4\"] = 34857] = \"DRAW_BUFFER4\";\n  GL[GL[\"DRAW_BUFFER5\"] = 34858] = \"DRAW_BUFFER5\";\n  GL[GL[\"DRAW_BUFFER6\"] = 34859] = \"DRAW_BUFFER6\";\n  GL[GL[\"DRAW_BUFFER7\"] = 34860] = \"DRAW_BUFFER7\";\n  GL[GL[\"DRAW_BUFFER8\"] = 34861] = \"DRAW_BUFFER8\";\n  GL[GL[\"DRAW_BUFFER9\"] = 34862] = \"DRAW_BUFFER9\";\n  GL[GL[\"DRAW_BUFFER10\"] = 34863] = \"DRAW_BUFFER10\";\n  GL[GL[\"DRAW_BUFFER11\"] = 34864] = \"DRAW_BUFFER11\";\n  GL[GL[\"DRAW_BUFFER12\"] = 34865] = \"DRAW_BUFFER12\";\n  GL[GL[\"DRAW_BUFFER13\"] = 34866] = \"DRAW_BUFFER13\";\n  GL[GL[\"DRAW_BUFFER14\"] = 34867] = \"DRAW_BUFFER14\";\n  GL[GL[\"DRAW_BUFFER15\"] = 34868] = \"DRAW_BUFFER15\";\n  GL[GL[\"MAX_COLOR_ATTACHMENTS\"] = 36063] = \"MAX_COLOR_ATTACHMENTS\";\n  GL[GL[\"COLOR_ATTACHMENT1\"] = 36065] = \"COLOR_ATTACHMENT1\";\n  GL[GL[\"COLOR_ATTACHMENT2\"] = 36066] = \"COLOR_ATTACHMENT2\";\n  GL[GL[\"COLOR_ATTACHMENT3\"] = 36067] = \"COLOR_ATTACHMENT3\";\n  GL[GL[\"COLOR_ATTACHMENT4\"] = 36068] = \"COLOR_ATTACHMENT4\";\n  GL[GL[\"COLOR_ATTACHMENT5\"] = 36069] = \"COLOR_ATTACHMENT5\";\n  GL[GL[\"COLOR_ATTACHMENT6\"] = 36070] = \"COLOR_ATTACHMENT6\";\n  GL[GL[\"COLOR_ATTACHMENT7\"] = 36071] = \"COLOR_ATTACHMENT7\";\n  GL[GL[\"COLOR_ATTACHMENT8\"] = 36072] = \"COLOR_ATTACHMENT8\";\n  GL[GL[\"COLOR_ATTACHMENT9\"] = 36073] = \"COLOR_ATTACHMENT9\";\n  GL[GL[\"COLOR_ATTACHMENT10\"] = 36074] = \"COLOR_ATTACHMENT10\";\n  GL[GL[\"COLOR_ATTACHMENT11\"] = 36075] = \"COLOR_ATTACHMENT11\";\n  GL[GL[\"COLOR_ATTACHMENT12\"] = 36076] = \"COLOR_ATTACHMENT12\";\n  GL[GL[\"COLOR_ATTACHMENT13\"] = 36077] = \"COLOR_ATTACHMENT13\";\n  GL[GL[\"COLOR_ATTACHMENT14\"] = 36078] = \"COLOR_ATTACHMENT14\";\n  GL[GL[\"COLOR_ATTACHMENT15\"] = 36079] = \"COLOR_ATTACHMENT15\";\n  // Samplers\n  GL[GL[\"SAMPLER_3D\"] = 35679] = \"SAMPLER_3D\";\n  GL[GL[\"SAMPLER_2D_SHADOW\"] = 35682] = \"SAMPLER_2D_SHADOW\";\n  GL[GL[\"SAMPLER_2D_ARRAY\"] = 36289] = \"SAMPLER_2D_ARRAY\";\n  GL[GL[\"SAMPLER_2D_ARRAY_SHADOW\"] = 36292] = \"SAMPLER_2D_ARRAY_SHADOW\";\n  GL[GL[\"SAMPLER_CUBE_SHADOW\"] = 36293] = \"SAMPLER_CUBE_SHADOW\";\n  GL[GL[\"INT_SAMPLER_2D\"] = 36298] = \"INT_SAMPLER_2D\";\n  GL[GL[\"INT_SAMPLER_3D\"] = 36299] = \"INT_SAMPLER_3D\";\n  GL[GL[\"INT_SAMPLER_CUBE\"] = 36300] = \"INT_SAMPLER_CUBE\";\n  GL[GL[\"INT_SAMPLER_2D_ARRAY\"] = 36303] = \"INT_SAMPLER_2D_ARRAY\";\n  GL[GL[\"UNSIGNED_INT_SAMPLER_2D\"] = 36306] = \"UNSIGNED_INT_SAMPLER_2D\";\n  GL[GL[\"UNSIGNED_INT_SAMPLER_3D\"] = 36307] = \"UNSIGNED_INT_SAMPLER_3D\";\n  GL[GL[\"UNSIGNED_INT_SAMPLER_CUBE\"] = 36308] = \"UNSIGNED_INT_SAMPLER_CUBE\";\n  GL[GL[\"UNSIGNED_INT_SAMPLER_2D_ARRAY\"] = 36311] = \"UNSIGNED_INT_SAMPLER_2D_ARRAY\";\n  GL[GL[\"MAX_SAMPLES\"] = 36183] = \"MAX_SAMPLES\";\n  GL[GL[\"SAMPLER_BINDING\"] = 35097] = \"SAMPLER_BINDING\";\n  // Buffers\n  GL[GL[\"PIXEL_PACK_BUFFER\"] = 35051] = \"PIXEL_PACK_BUFFER\";\n  GL[GL[\"PIXEL_UNPACK_BUFFER\"] = 35052] = \"PIXEL_UNPACK_BUFFER\";\n  GL[GL[\"PIXEL_PACK_BUFFER_BINDING\"] = 35053] = \"PIXEL_PACK_BUFFER_BINDING\";\n  GL[GL[\"PIXEL_UNPACK_BUFFER_BINDING\"] = 35055] = \"PIXEL_UNPACK_BUFFER_BINDING\";\n  GL[GL[\"COPY_READ_BUFFER\"] = 36662] = \"COPY_READ_BUFFER\";\n  GL[GL[\"COPY_WRITE_BUFFER\"] = 36663] = \"COPY_WRITE_BUFFER\";\n  GL[GL[\"COPY_READ_BUFFER_BINDING\"] = 36662] = \"COPY_READ_BUFFER_BINDING\";\n  GL[GL[\"COPY_WRITE_BUFFER_BINDING\"] = 36663] = \"COPY_WRITE_BUFFER_BINDING\";\n  // Data types\n  GL[GL[\"FLOAT_MAT2x3\"] = 35685] = \"FLOAT_MAT2x3\";\n  GL[GL[\"FLOAT_MAT2x4\"] = 35686] = \"FLOAT_MAT2x4\";\n  GL[GL[\"FLOAT_MAT3x2\"] = 35687] = \"FLOAT_MAT3x2\";\n  GL[GL[\"FLOAT_MAT3x4\"] = 35688] = \"FLOAT_MAT3x4\";\n  GL[GL[\"FLOAT_MAT4x2\"] = 35689] = \"FLOAT_MAT4x2\";\n  GL[GL[\"FLOAT_MAT4x3\"] = 35690] = \"FLOAT_MAT4x3\";\n  GL[GL[\"UNSIGNED_INT_VEC2\"] = 36294] = \"UNSIGNED_INT_VEC2\";\n  GL[GL[\"UNSIGNED_INT_VEC3\"] = 36295] = \"UNSIGNED_INT_VEC3\";\n  GL[GL[\"UNSIGNED_INT_VEC4\"] = 36296] = \"UNSIGNED_INT_VEC4\";\n  GL[GL[\"UNSIGNED_NORMALIZED\"] = 35863] = \"UNSIGNED_NORMALIZED\";\n  GL[GL[\"SIGNED_NORMALIZED\"] = 36764] = \"SIGNED_NORMALIZED\";\n  // Vertex attributes\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_INTEGER\"] = 35069] = \"VERTEX_ATTRIB_ARRAY_INTEGER\";\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_DIVISOR\"] = 35070] = \"VERTEX_ATTRIB_ARRAY_DIVISOR\";\n  // Transform feedback\n  GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_MODE\"] = 35967] = \"TRANSFORM_FEEDBACK_BUFFER_MODE\";\n  GL[GL[\"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\"] = 35968] = \"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\";\n  GL[GL[\"TRANSFORM_FEEDBACK_VARYINGS\"] = 35971] = \"TRANSFORM_FEEDBACK_VARYINGS\";\n  GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_START\"] = 35972] = \"TRANSFORM_FEEDBACK_BUFFER_START\";\n  GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_SIZE\"] = 35973] = \"TRANSFORM_FEEDBACK_BUFFER_SIZE\";\n  GL[GL[\"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\"] = 35976] = \"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\";\n  GL[GL[\"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\"] = 35978] = \"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\";\n  GL[GL[\"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\"] = 35979] = \"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\";\n  GL[GL[\"INTERLEAVED_ATTRIBS\"] = 35980] = \"INTERLEAVED_ATTRIBS\";\n  GL[GL[\"SEPARATE_ATTRIBS\"] = 35981] = \"SEPARATE_ATTRIBS\";\n  GL[GL[\"TRANSFORM_FEEDBACK_BUFFER\"] = 35982] = \"TRANSFORM_FEEDBACK_BUFFER\";\n  GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_BINDING\"] = 35983] = \"TRANSFORM_FEEDBACK_BUFFER_BINDING\";\n  GL[GL[\"TRANSFORM_FEEDBACK\"] = 36386] = \"TRANSFORM_FEEDBACK\";\n  GL[GL[\"TRANSFORM_FEEDBACK_PAUSED\"] = 36387] = \"TRANSFORM_FEEDBACK_PAUSED\";\n  GL[GL[\"TRANSFORM_FEEDBACK_ACTIVE\"] = 36388] = \"TRANSFORM_FEEDBACK_ACTIVE\";\n  GL[GL[\"TRANSFORM_FEEDBACK_BINDING\"] = 36389] = \"TRANSFORM_FEEDBACK_BINDING\";\n  // Framebuffers and renderbuffers\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\"] = 33296] = \"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\"] = 33297] = \"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_RED_SIZE\"] = 33298] = \"FRAMEBUFFER_ATTACHMENT_RED_SIZE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\"] = 33299] = \"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\"] = 33300] = \"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\"] = 33301] = \"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\"] = 33302] = \"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\"] = 33303] = \"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\";\n  GL[GL[\"FRAMEBUFFER_DEFAULT\"] = 33304] = \"FRAMEBUFFER_DEFAULT\";\n  // DEPTH_STENCIL_ATTACHMENT  = 0x821A,\n  // DEPTH_STENCIL = 0x84F9,\n  GL[GL[\"DEPTH24_STENCIL8\"] = 35056] = \"DEPTH24_STENCIL8\";\n  GL[GL[\"DRAW_FRAMEBUFFER_BINDING\"] = 36006] = \"DRAW_FRAMEBUFFER_BINDING\";\n  GL[GL[\"READ_FRAMEBUFFER_BINDING\"] = 36010] = \"READ_FRAMEBUFFER_BINDING\";\n  GL[GL[\"RENDERBUFFER_SAMPLES\"] = 36011] = \"RENDERBUFFER_SAMPLES\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\"] = 36052] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\";\n  GL[GL[\"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\"] = 36182] = \"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\";\n  // Uniforms\n  GL[GL[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n  GL[GL[\"UNIFORM_BUFFER_BINDING\"] = 35368] = \"UNIFORM_BUFFER_BINDING\";\n  GL[GL[\"UNIFORM_BUFFER_START\"] = 35369] = \"UNIFORM_BUFFER_START\";\n  GL[GL[\"UNIFORM_BUFFER_SIZE\"] = 35370] = \"UNIFORM_BUFFER_SIZE\";\n  GL[GL[\"MAX_VERTEX_UNIFORM_BLOCKS\"] = 35371] = \"MAX_VERTEX_UNIFORM_BLOCKS\";\n  GL[GL[\"MAX_FRAGMENT_UNIFORM_BLOCKS\"] = 35373] = \"MAX_FRAGMENT_UNIFORM_BLOCKS\";\n  GL[GL[\"MAX_COMBINED_UNIFORM_BLOCKS\"] = 35374] = \"MAX_COMBINED_UNIFORM_BLOCKS\";\n  GL[GL[\"MAX_UNIFORM_BUFFER_BINDINGS\"] = 35375] = \"MAX_UNIFORM_BUFFER_BINDINGS\";\n  GL[GL[\"MAX_UNIFORM_BLOCK_SIZE\"] = 35376] = \"MAX_UNIFORM_BLOCK_SIZE\";\n  GL[GL[\"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\"] = 35377] = \"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\";\n  GL[GL[\"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\"] = 35379] = \"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\";\n  GL[GL[\"UNIFORM_BUFFER_OFFSET_ALIGNMENT\"] = 35380] = \"UNIFORM_BUFFER_OFFSET_ALIGNMENT\";\n  GL[GL[\"ACTIVE_UNIFORM_BLOCKS\"] = 35382] = \"ACTIVE_UNIFORM_BLOCKS\";\n  GL[GL[\"UNIFORM_TYPE\"] = 35383] = \"UNIFORM_TYPE\";\n  GL[GL[\"UNIFORM_SIZE\"] = 35384] = \"UNIFORM_SIZE\";\n  GL[GL[\"UNIFORM_BLOCK_INDEX\"] = 35386] = \"UNIFORM_BLOCK_INDEX\";\n  GL[GL[\"UNIFORM_OFFSET\"] = 35387] = \"UNIFORM_OFFSET\";\n  GL[GL[\"UNIFORM_ARRAY_STRIDE\"] = 35388] = \"UNIFORM_ARRAY_STRIDE\";\n  GL[GL[\"UNIFORM_MATRIX_STRIDE\"] = 35389] = \"UNIFORM_MATRIX_STRIDE\";\n  GL[GL[\"UNIFORM_IS_ROW_MAJOR\"] = 35390] = \"UNIFORM_IS_ROW_MAJOR\";\n  GL[GL[\"UNIFORM_BLOCK_BINDING\"] = 35391] = \"UNIFORM_BLOCK_BINDING\";\n  GL[GL[\"UNIFORM_BLOCK_DATA_SIZE\"] = 35392] = \"UNIFORM_BLOCK_DATA_SIZE\";\n  GL[GL[\"UNIFORM_BLOCK_ACTIVE_UNIFORMS\"] = 35394] = \"UNIFORM_BLOCK_ACTIVE_UNIFORMS\";\n  GL[GL[\"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\"] = 35395] = \"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\";\n  GL[GL[\"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\"] = 35396] = \"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\";\n  GL[GL[\"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\"] = 35398] = \"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\";\n  // Sync objects\n  GL[GL[\"OBJECT_TYPE\"] = 37138] = \"OBJECT_TYPE\";\n  GL[GL[\"SYNC_CONDITION\"] = 37139] = \"SYNC_CONDITION\";\n  GL[GL[\"SYNC_STATUS\"] = 37140] = \"SYNC_STATUS\";\n  GL[GL[\"SYNC_FLAGS\"] = 37141] = \"SYNC_FLAGS\";\n  GL[GL[\"SYNC_FENCE\"] = 37142] = \"SYNC_FENCE\";\n  GL[GL[\"SYNC_GPU_COMMANDS_COMPLETE\"] = 37143] = \"SYNC_GPU_COMMANDS_COMPLETE\";\n  GL[GL[\"UNSIGNALED\"] = 37144] = \"UNSIGNALED\";\n  GL[GL[\"SIGNALED\"] = 37145] = \"SIGNALED\";\n  GL[GL[\"ALREADY_SIGNALED\"] = 37146] = \"ALREADY_SIGNALED\";\n  GL[GL[\"TIMEOUT_EXPIRED\"] = 37147] = \"TIMEOUT_EXPIRED\";\n  GL[GL[\"CONDITION_SATISFIED\"] = 37148] = \"CONDITION_SATISFIED\";\n  GL[GL[\"WAIT_FAILED\"] = 37149] = \"WAIT_FAILED\";\n  GL[GL[\"SYNC_FLUSH_COMMANDS_BIT\"] = 1] = \"SYNC_FLUSH_COMMANDS_BIT\";\n  // Miscellaneous constants\n  GL[GL[\"COLOR\"] = 6144] = \"COLOR\";\n  GL[GL[\"DEPTH\"] = 6145] = \"DEPTH\";\n  GL[GL[\"STENCIL\"] = 6146] = \"STENCIL\";\n  GL[GL[\"MIN\"] = 32775] = \"MIN\";\n  GL[GL[\"MAX\"] = 32776] = \"MAX\";\n  GL[GL[\"DEPTH_COMPONENT24\"] = 33190] = \"DEPTH_COMPONENT24\";\n  GL[GL[\"STREAM_READ\"] = 35041] = \"STREAM_READ\";\n  GL[GL[\"STREAM_COPY\"] = 35042] = \"STREAM_COPY\";\n  GL[GL[\"STATIC_READ\"] = 35045] = \"STATIC_READ\";\n  GL[GL[\"STATIC_COPY\"] = 35046] = \"STATIC_COPY\";\n  GL[GL[\"DYNAMIC_READ\"] = 35049] = \"DYNAMIC_READ\";\n  GL[GL[\"DYNAMIC_COPY\"] = 35050] = \"DYNAMIC_COPY\";\n  GL[GL[\"DEPTH_COMPONENT32F\"] = 36012] = \"DEPTH_COMPONENT32F\";\n  GL[GL[\"DEPTH32F_STENCIL8\"] = 36013] = \"DEPTH32F_STENCIL8\";\n  GL[GL[\"INVALID_INDEX\"] = 4294967295] = \"INVALID_INDEX\";\n  GL[GL[\"TIMEOUT_IGNORED\"] = -1] = \"TIMEOUT_IGNORED\";\n  GL[GL[\"MAX_CLIENT_WAIT_TIMEOUT_WEBGL\"] = 37447] = \"MAX_CLIENT_WAIT_TIMEOUT_WEBGL\";\n  // Constants defined in WebGL extensions\n  // ANGLE_instanced_arrays\n  GL[GL[\"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\"] = 35070] = \"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\";\n  // WEBGL_debug_renderer_info\n  GL[GL[\"UNMASKED_VENDOR_WEBGL\"] = 37445] = \"UNMASKED_VENDOR_WEBGL\";\n  GL[GL[\"UNMASKED_RENDERER_WEBGL\"] = 37446] = \"UNMASKED_RENDERER_WEBGL\";\n  // EXT_texture_filter_anisotropic\n  GL[GL[\"MAX_TEXTURE_MAX_ANISOTROPY_EXT\"] = 34047] = \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\";\n  GL[GL[\"TEXTURE_MAX_ANISOTROPY_EXT\"] = 34046] = \"TEXTURE_MAX_ANISOTROPY_EXT\";\n  // WEBGL_compressed_texture_s3tc\n  GL[GL[\"COMPRESSED_RGB_S3TC_DXT1_EXT\"] = 33776] = \"COMPRESSED_RGB_S3TC_DXT1_EXT\";\n  GL[GL[\"COMPRESSED_RGBA_S3TC_DXT1_EXT\"] = 33777] = \"COMPRESSED_RGBA_S3TC_DXT1_EXT\";\n  GL[GL[\"COMPRESSED_RGBA_S3TC_DXT3_EXT\"] = 33778] = \"COMPRESSED_RGBA_S3TC_DXT3_EXT\";\n  GL[GL[\"COMPRESSED_RGBA_S3TC_DXT5_EXT\"] = 33779] = \"COMPRESSED_RGBA_S3TC_DXT5_EXT\";\n  // WEBGL_compressed_texture_es3\n  GL[GL[\"COMPRESSED_R11_EAC\"] = 37488] = \"COMPRESSED_R11_EAC\";\n  GL[GL[\"COMPRESSED_SIGNED_R11_EAC\"] = 37489] = \"COMPRESSED_SIGNED_R11_EAC\";\n  GL[GL[\"COMPRESSED_RG11_EAC\"] = 37490] = \"COMPRESSED_RG11_EAC\";\n  GL[GL[\"COMPRESSED_SIGNED_RG11_EAC\"] = 37491] = \"COMPRESSED_SIGNED_RG11_EAC\";\n  GL[GL[\"COMPRESSED_RGB8_ETC2\"] = 37492] = \"COMPRESSED_RGB8_ETC2\";\n  GL[GL[\"COMPRESSED_RGBA8_ETC2_EAC\"] = 37493] = \"COMPRESSED_RGBA8_ETC2_EAC\";\n  GL[GL[\"COMPRESSED_SRGB8_ETC2\"] = 37494] = \"COMPRESSED_SRGB8_ETC2\";\n  GL[GL[\"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\"] = 37495] = \"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\";\n  GL[GL[\"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\"] = 37496] = \"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\";\n  GL[GL[\"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\"] = 37497] = \"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\";\n  // WEBGL_compressed_texture_pvrtc\n  GL[GL[\"COMPRESSED_RGB_PVRTC_4BPPV1_IMG\"] = 35840] = \"COMPRESSED_RGB_PVRTC_4BPPV1_IMG\";\n  GL[GL[\"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\"] = 35842] = \"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\";\n  GL[GL[\"COMPRESSED_RGB_PVRTC_2BPPV1_IMG\"] = 35841] = \"COMPRESSED_RGB_PVRTC_2BPPV1_IMG\";\n  GL[GL[\"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\"] = 35843] = \"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\";\n  // WEBGL_compressed_texture_etc1\n  GL[GL[\"COMPRESSED_RGB_ETC1_WEBGL\"] = 36196] = \"COMPRESSED_RGB_ETC1_WEBGL\";\n  // WEBGL_compressed_texture_atc\n  GL[GL[\"COMPRESSED_RGB_ATC_WEBGL\"] = 35986] = \"COMPRESSED_RGB_ATC_WEBGL\";\n  GL[GL[\"COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL\"] = 35986] = \"COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL\";\n  GL[GL[\"COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\"] = 34798] = \"COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\";\n  // WEBGL_depth_texture\n  GL[GL[\"UNSIGNED_INT_24_8_WEBGL\"] = 34042] = \"UNSIGNED_INT_24_8_WEBGL\";\n  // OES_texture_half_float\n  GL[GL[\"HALF_FLOAT_OES\"] = 36193] = \"HALF_FLOAT_OES\";\n  // WEBGL_color_buffer_float\n  GL[GL[\"RGBA32F_EXT\"] = 34836] = \"RGBA32F_EXT\";\n  GL[GL[\"RGB32F_EXT\"] = 34837] = \"RGB32F_EXT\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT\"] = 33297] = \"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT\";\n  GL[GL[\"UNSIGNED_NORMALIZED_EXT\"] = 35863] = \"UNSIGNED_NORMALIZED_EXT\";\n  // EXT_blend_minmax\n  GL[GL[\"MIN_EXT\"] = 32775] = \"MIN_EXT\";\n  GL[GL[\"MAX_EXT\"] = 32776] = \"MAX_EXT\";\n  // EXT_sRGB\n  GL[GL[\"SRGB_EXT\"] = 35904] = \"SRGB_EXT\";\n  GL[GL[\"SRGB_ALPHA_EXT\"] = 35906] = \"SRGB_ALPHA_EXT\";\n  GL[GL[\"SRGB8_ALPHA8_EXT\"] = 35907] = \"SRGB8_ALPHA8_EXT\";\n  GL[GL[\"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT\"] = 33296] = \"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT\";\n  // OES_standard_derivatives\n  GL[GL[\"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\"] = 35723] = \"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\";\n  // WEBGL_draw_buffers\n  GL[GL[\"COLOR_ATTACHMENT0_WEBGL\"] = 36064] = \"COLOR_ATTACHMENT0_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT1_WEBGL\"] = 36065] = \"COLOR_ATTACHMENT1_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT2_WEBGL\"] = 36066] = \"COLOR_ATTACHMENT2_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT3_WEBGL\"] = 36067] = \"COLOR_ATTACHMENT3_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT4_WEBGL\"] = 36068] = \"COLOR_ATTACHMENT4_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT5_WEBGL\"] = 36069] = \"COLOR_ATTACHMENT5_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT6_WEBGL\"] = 36070] = \"COLOR_ATTACHMENT6_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT7_WEBGL\"] = 36071] = \"COLOR_ATTACHMENT7_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT8_WEBGL\"] = 36072] = \"COLOR_ATTACHMENT8_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT9_WEBGL\"] = 36073] = \"COLOR_ATTACHMENT9_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT10_WEBGL\"] = 36074] = \"COLOR_ATTACHMENT10_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT11_WEBGL\"] = 36075] = \"COLOR_ATTACHMENT11_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT12_WEBGL\"] = 36076] = \"COLOR_ATTACHMENT12_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT13_WEBGL\"] = 36077] = \"COLOR_ATTACHMENT13_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT14_WEBGL\"] = 36078] = \"COLOR_ATTACHMENT14_WEBGL\";\n  GL[GL[\"COLOR_ATTACHMENT15_WEBGL\"] = 36079] = \"COLOR_ATTACHMENT15_WEBGL\";\n  GL[GL[\"DRAW_BUFFER0_WEBGL\"] = 34853] = \"DRAW_BUFFER0_WEBGL\";\n  GL[GL[\"DRAW_BUFFER1_WEBGL\"] = 34854] = \"DRAW_BUFFER1_WEBGL\";\n  GL[GL[\"DRAW_BUFFER2_WEBGL\"] = 34855] = \"DRAW_BUFFER2_WEBGL\";\n  GL[GL[\"DRAW_BUFFER3_WEBGL\"] = 34856] = \"DRAW_BUFFER3_WEBGL\";\n  GL[GL[\"DRAW_BUFFER4_WEBGL\"] = 34857] = \"DRAW_BUFFER4_WEBGL\";\n  GL[GL[\"DRAW_BUFFER5_WEBGL\"] = 34858] = \"DRAW_BUFFER5_WEBGL\";\n  GL[GL[\"DRAW_BUFFER6_WEBGL\"] = 34859] = \"DRAW_BUFFER6_WEBGL\";\n  GL[GL[\"DRAW_BUFFER7_WEBGL\"] = 34860] = \"DRAW_BUFFER7_WEBGL\";\n  GL[GL[\"DRAW_BUFFER8_WEBGL\"] = 34861] = \"DRAW_BUFFER8_WEBGL\";\n  GL[GL[\"DRAW_BUFFER9_WEBGL\"] = 34862] = \"DRAW_BUFFER9_WEBGL\";\n  GL[GL[\"DRAW_BUFFER10_WEBGL\"] = 34863] = \"DRAW_BUFFER10_WEBGL\";\n  GL[GL[\"DRAW_BUFFER11_WEBGL\"] = 34864] = \"DRAW_BUFFER11_WEBGL\";\n  GL[GL[\"DRAW_BUFFER12_WEBGL\"] = 34865] = \"DRAW_BUFFER12_WEBGL\";\n  GL[GL[\"DRAW_BUFFER13_WEBGL\"] = 34866] = \"DRAW_BUFFER13_WEBGL\";\n  GL[GL[\"DRAW_BUFFER14_WEBGL\"] = 34867] = \"DRAW_BUFFER14_WEBGL\";\n  GL[GL[\"DRAW_BUFFER15_WEBGL\"] = 34868] = \"DRAW_BUFFER15_WEBGL\";\n  GL[GL[\"MAX_COLOR_ATTACHMENTS_WEBGL\"] = 36063] = \"MAX_COLOR_ATTACHMENTS_WEBGL\";\n  GL[GL[\"MAX_DRAW_BUFFERS_WEBGL\"] = 34852] = \"MAX_DRAW_BUFFERS_WEBGL\";\n  // OES_vertex_array_object\n  GL[GL[\"VERTEX_ARRAY_BINDING_OES\"] = 34229] = \"VERTEX_ARRAY_BINDING_OES\";\n  // EXT_disjoint_timer_query\n  GL[GL[\"QUERY_COUNTER_BITS_EXT\"] = 34916] = \"QUERY_COUNTER_BITS_EXT\";\n  GL[GL[\"CURRENT_QUERY_EXT\"] = 34917] = \"CURRENT_QUERY_EXT\";\n  GL[GL[\"QUERY_RESULT_EXT\"] = 34918] = \"QUERY_RESULT_EXT\";\n  GL[GL[\"QUERY_RESULT_AVAILABLE_EXT\"] = 34919] = \"QUERY_RESULT_AVAILABLE_EXT\";\n  GL[GL[\"TIME_ELAPSED_EXT\"] = 35007] = \"TIME_ELAPSED_EXT\";\n  GL[GL[\"TIMESTAMP_EXT\"] = 36392] = \"TIMESTAMP_EXT\";\n  GL[GL[\"GPU_DISJOINT_EXT\"] = 36795] = \"GPU_DISJOINT_EXT\";\n})(GL || (GL = {}));\nvar ResourceType;\n(function (ResourceType) {\n  ResourceType[ResourceType[\"Buffer\"] = 0] = \"Buffer\";\n  ResourceType[ResourceType[\"Texture\"] = 1] = \"Texture\";\n  ResourceType[ResourceType[\"RenderTarget\"] = 2] = \"RenderTarget\";\n  ResourceType[ResourceType[\"Sampler\"] = 3] = \"Sampler\";\n  ResourceType[ResourceType[\"Program\"] = 4] = \"Program\";\n  ResourceType[ResourceType[\"Bindings\"] = 5] = \"Bindings\";\n  ResourceType[ResourceType[\"InputLayout\"] = 6] = \"InputLayout\";\n  ResourceType[ResourceType[\"RenderPipeline\"] = 7] = \"RenderPipeline\";\n  ResourceType[ResourceType[\"ComputePipeline\"] = 8] = \"ComputePipeline\";\n  ResourceType[ResourceType[\"Readback\"] = 9] = \"Readback\";\n  ResourceType[ResourceType[\"QueryPool\"] = 10] = \"QueryPool\";\n  ResourceType[ResourceType[\"RenderBundle\"] = 11] = \"RenderBundle\";\n})(ResourceType || (ResourceType = {}));\nvar CompareFunction;\n(function (CompareFunction) {\n  CompareFunction[CompareFunction[\"NEVER\"] = 512] = \"NEVER\";\n  CompareFunction[CompareFunction[\"LESS\"] = 513] = \"LESS\";\n  CompareFunction[CompareFunction[\"EQUAL\"] = 514] = \"EQUAL\";\n  CompareFunction[CompareFunction[\"LEQUAL\"] = 515] = \"LEQUAL\";\n  CompareFunction[CompareFunction[\"GREATER\"] = 516] = \"GREATER\";\n  CompareFunction[CompareFunction[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n  CompareFunction[CompareFunction[\"GEQUAL\"] = 518] = \"GEQUAL\";\n  CompareFunction[CompareFunction[\"ALWAYS\"] = 519] = \"ALWAYS\";\n})(CompareFunction || (CompareFunction = {}));\nvar FrontFace;\n(function (FrontFace) {\n  FrontFace[FrontFace[\"CCW\"] = 2305] = \"CCW\";\n  FrontFace[FrontFace[\"CW\"] = 2304] = \"CW\";\n})(FrontFace || (FrontFace = {}));\nvar CullMode;\n(function (CullMode) {\n  CullMode[CullMode[\"NONE\"] = 0] = \"NONE\";\n  CullMode[CullMode[\"FRONT\"] = 1] = \"FRONT\";\n  CullMode[CullMode[\"BACK\"] = 2] = \"BACK\";\n  CullMode[CullMode[\"FRONT_AND_BACK\"] = 3] = \"FRONT_AND_BACK\";\n})(CullMode || (CullMode = {}));\n/**\n * Blend factor RGBA components.\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendfactor\n */\nvar BlendFactor;\n(function (BlendFactor) {\n  /**\n   * (0, 0, 0, 0)\n   */\n  BlendFactor[BlendFactor[\"ZERO\"] = 0] = \"ZERO\";\n  /**\n   * (1, 1, 1, 1)\n   */\n  BlendFactor[BlendFactor[\"ONE\"] = 1] = \"ONE\";\n  /**\n   * (Rsrc, Gsrc, Bsrc, Asrc)\n   */\n  BlendFactor[BlendFactor[\"SRC\"] = 768] = \"SRC\";\n  /**\n   * (1 - Rsrc, 1 - Gsrc, 1 - Bsrc, 1 - Asrc)\n   */\n  BlendFactor[BlendFactor[\"ONE_MINUS_SRC\"] = 769] = \"ONE_MINUS_SRC\";\n  /**\n   * (Rdst, Gdst, Bdst, Adst)\n   */\n  BlendFactor[BlendFactor[\"DST\"] = 774] = \"DST\";\n  /**\n   * (1 - Rdst, 1 - Gdst, 1 - Bdst, 1 - Adst)\n   */\n  BlendFactor[BlendFactor[\"ONE_MINUS_DST\"] = 775] = \"ONE_MINUS_DST\";\n  /**\n   * (Asrc, Asrc, Asrc, Asrc)\n   */\n  BlendFactor[BlendFactor[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n  /**\n   * (1 - Asrc, 1 - Asrc, 1 - Asrc, 1 - Asrc)\n   */\n  BlendFactor[BlendFactor[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n  /**\n   * (Adst, Adst, Adst, Adst)\n   */\n  BlendFactor[BlendFactor[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n  /**\n   * (1 - Adst, 1 - Adst, 1 - Adst, 1 - Adst)\n   */\n  BlendFactor[BlendFactor[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n  /**\n   * (Rconst, Gconst, Bconst, Aconst)\n   */\n  BlendFactor[BlendFactor[\"CONST\"] = 32769] = \"CONST\";\n  /**\n   * (1 - Rconst, 1 - Gconst, 1 - Bconst, 1 - Aconst)\n   */\n  BlendFactor[BlendFactor[\"ONE_MINUS_CONSTANT\"] = 32770] = \"ONE_MINUS_CONSTANT\";\n  /**\n   * (min(Asrc, 1 - Adst), min(Asrc, 1 - Adst), min(Asrc, 1 - Adst), 1)\n   */\n  BlendFactor[BlendFactor[\"SRC_ALPHA_SATURATE\"] = 776] = \"SRC_ALPHA_SATURATE\";\n})(BlendFactor || (BlendFactor = {}));\n/**\n * Defines the algorithm used to combine source and destination blend factors.\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendoperation\n */\nvar BlendMode;\n(function (BlendMode) {\n  /**\n   * RGBAsrc × RGBAsrcFactor + RGBAdst × RGBAdstFactor\n   */\n  BlendMode[BlendMode[\"ADD\"] = 32774] = \"ADD\";\n  /**\n   * RGBAsrc × RGBAsrcFactor - RGBAdst × RGBAdstFactor\n   */\n  BlendMode[BlendMode[\"SUBSTRACT\"] = 32778] = \"SUBSTRACT\";\n  /**\n   * RGBAdst × RGBAdstFactor - RGBAsrc × RGBAsrcFactor\n   */\n  BlendMode[BlendMode[\"REVERSE_SUBSTRACT\"] = 32779] = \"REVERSE_SUBSTRACT\";\n  // TODO: WebGL 1 should use ext\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation#parameters\n  /**\n   * min(RGBAsrc, RGBAdst)\n   */\n  BlendMode[BlendMode[\"MIN\"] = 32775] = \"MIN\";\n  /**\n   * max(RGBAsrc, RGBAdst)\n   */\n  BlendMode[BlendMode[\"MAX\"] = 32776] = \"MAX\";\n})(BlendMode || (BlendMode = {}));\nvar AddressMode;\n(function (AddressMode) {\n  AddressMode[AddressMode[\"CLAMP_TO_EDGE\"] = 0] = \"CLAMP_TO_EDGE\";\n  AddressMode[AddressMode[\"REPEAT\"] = 1] = \"REPEAT\";\n  AddressMode[AddressMode[\"MIRRORED_REPEAT\"] = 2] = \"MIRRORED_REPEAT\";\n})(AddressMode || (AddressMode = {}));\nvar FilterMode;\n(function (FilterMode) {\n  FilterMode[FilterMode[\"POINT\"] = 0] = \"POINT\";\n  FilterMode[FilterMode[\"BILINEAR\"] = 1] = \"BILINEAR\";\n})(FilterMode || (FilterMode = {}));\nvar MipmapFilterMode;\n(function (MipmapFilterMode) {\n  MipmapFilterMode[MipmapFilterMode[\"NO_MIP\"] = 0] = \"NO_MIP\";\n  MipmapFilterMode[MipmapFilterMode[\"NEAREST\"] = 1] = \"NEAREST\";\n  MipmapFilterMode[MipmapFilterMode[\"LINEAR\"] = 2] = \"LINEAR\";\n})(MipmapFilterMode || (MipmapFilterMode = {}));\nvar PrimitiveTopology;\n(function (PrimitiveTopology) {\n  PrimitiveTopology[PrimitiveTopology[\"POINTS\"] = 0] = \"POINTS\";\n  PrimitiveTopology[PrimitiveTopology[\"TRIANGLES\"] = 1] = \"TRIANGLES\";\n  PrimitiveTopology[PrimitiveTopology[\"TRIANGLE_STRIP\"] = 2] = \"TRIANGLE_STRIP\";\n  PrimitiveTopology[PrimitiveTopology[\"LINES\"] = 3] = \"LINES\";\n  PrimitiveTopology[PrimitiveTopology[\"LINE_STRIP\"] = 4] = \"LINE_STRIP\";\n})(PrimitiveTopology || (PrimitiveTopology = {}));\n/**\n * @see https://www.w3.org/TR/webgpu/#buffer-usage\n */\nvar BufferUsage;\n(function (BufferUsage) {\n  BufferUsage[BufferUsage[\"MAP_READ\"] = 1] = \"MAP_READ\";\n  BufferUsage[BufferUsage[\"MAP_WRITE\"] = 2] = \"MAP_WRITE\";\n  BufferUsage[BufferUsage[\"COPY_SRC\"] = 4] = \"COPY_SRC\";\n  BufferUsage[BufferUsage[\"COPY_DST\"] = 8] = \"COPY_DST\";\n  BufferUsage[BufferUsage[\"INDEX\"] = 16] = \"INDEX\";\n  BufferUsage[BufferUsage[\"VERTEX\"] = 32] = \"VERTEX\";\n  BufferUsage[BufferUsage[\"UNIFORM\"] = 64] = \"UNIFORM\";\n  BufferUsage[BufferUsage[\"STORAGE\"] = 128] = \"STORAGE\";\n  BufferUsage[BufferUsage[\"INDIRECT\"] = 256] = \"INDIRECT\";\n  BufferUsage[BufferUsage[\"QUERY_RESOLVE\"] = 512] = \"QUERY_RESOLVE\";\n})(BufferUsage || (BufferUsage = {}));\nvar BufferFrequencyHint;\n(function (BufferFrequencyHint) {\n  BufferFrequencyHint[BufferFrequencyHint[\"STATIC\"] = 1] = \"STATIC\";\n  BufferFrequencyHint[BufferFrequencyHint[\"DYNAMIC\"] = 2] = \"DYNAMIC\";\n})(BufferFrequencyHint || (BufferFrequencyHint = {}));\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpuvertexstepmode\n */\nvar VertexStepMode;\n(function (VertexStepMode) {\n  VertexStepMode[VertexStepMode[\"VERTEX\"] = 1] = \"VERTEX\";\n  VertexStepMode[VertexStepMode[\"INSTANCE\"] = 2] = \"INSTANCE\";\n})(VertexStepMode || (VertexStepMode = {}));\nvar TextureEvent;\n(function (TextureEvent) {\n  TextureEvent[\"LOADED\"] = \"loaded\";\n})(TextureEvent || (TextureEvent = {}));\nvar TextureDimension;\n(function (TextureDimension) {\n  TextureDimension[TextureDimension[\"TEXTURE_2D\"] = 0] = \"TEXTURE_2D\";\n  TextureDimension[TextureDimension[\"TEXTURE_2D_ARRAY\"] = 1] = \"TEXTURE_2D_ARRAY\";\n  TextureDimension[TextureDimension[\"TEXTURE_3D\"] = 2] = \"TEXTURE_3D\";\n  TextureDimension[TextureDimension[\"TEXTURE_CUBE_MAP\"] = 3] = \"TEXTURE_CUBE_MAP\";\n})(TextureDimension || (TextureDimension = {}));\nvar TextureUsage;\n(function (TextureUsage) {\n  TextureUsage[TextureUsage[\"SAMPLED\"] = 1] = \"SAMPLED\";\n  TextureUsage[TextureUsage[\"RENDER_TARGET\"] = 2] = \"RENDER_TARGET\";\n  TextureUsage[TextureUsage[\"STORAGE\"] = 4] = \"STORAGE\";\n})(TextureUsage || (TextureUsage = {}));\nvar ChannelWriteMask;\n(function (ChannelWriteMask) {\n  ChannelWriteMask[ChannelWriteMask[\"NONE\"] = 0] = \"NONE\";\n  ChannelWriteMask[ChannelWriteMask[\"RED\"] = 1] = \"RED\";\n  ChannelWriteMask[ChannelWriteMask[\"GREEN\"] = 2] = \"GREEN\";\n  ChannelWriteMask[ChannelWriteMask[\"BLUE\"] = 4] = \"BLUE\";\n  ChannelWriteMask[ChannelWriteMask[\"ALPHA\"] = 8] = \"ALPHA\";\n  ChannelWriteMask[ChannelWriteMask[\"RGB\"] = 7] = \"RGB\";\n  ChannelWriteMask[ChannelWriteMask[\"ALL\"] = 15] = \"ALL\";\n})(ChannelWriteMask || (ChannelWriteMask = {}));\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpustenciloperation\n */\nvar StencilOp;\n(function (StencilOp) {\n  StencilOp[StencilOp[\"KEEP\"] = 7680] = \"KEEP\";\n  StencilOp[StencilOp[\"ZERO\"] = 0] = \"ZERO\";\n  StencilOp[StencilOp[\"REPLACE\"] = 7681] = \"REPLACE\";\n  StencilOp[StencilOp[\"INVERT\"] = 5386] = \"INVERT\";\n  StencilOp[StencilOp[\"INCREMENT_CLAMP\"] = 7682] = \"INCREMENT_CLAMP\";\n  StencilOp[StencilOp[\"DECREMENT_CLAMP\"] = 7683] = \"DECREMENT_CLAMP\";\n  StencilOp[StencilOp[\"INCREMENT_WRAP\"] = 34055] = \"INCREMENT_WRAP\";\n  StencilOp[StencilOp[\"DECREMENT_WRAP\"] = 34056] = \"DECREMENT_WRAP\";\n})(StencilOp || (StencilOp = {}));\nfunction makeTextureDescriptor2D(format, width, height, mipLevelCount) {\n  var dimension = TextureDimension.TEXTURE_2D;\n  var depthOrArrayLayers = 1;\n  var usage = TextureUsage.SAMPLED;\n  return {\n    dimension: dimension,\n    format: format,\n    width: width,\n    height: height,\n    depthOrArrayLayers: depthOrArrayLayers,\n    mipLevelCount: mipLevelCount,\n    usage: usage\n  };\n}\nvar SamplerFormatKind;\n(function (SamplerFormatKind) {\n  SamplerFormatKind[SamplerFormatKind[\"Float\"] = 0] = \"Float\";\n  SamplerFormatKind[SamplerFormatKind[\"UnfilterableFloat\"] = 1] = \"UnfilterableFloat\";\n  SamplerFormatKind[SamplerFormatKind[\"Uint\"] = 2] = \"Uint\";\n  SamplerFormatKind[SamplerFormatKind[\"Sint\"] = 3] = \"Sint\";\n  SamplerFormatKind[SamplerFormatKind[\"Depth\"] = 4] = \"Depth\";\n})(SamplerFormatKind || (SamplerFormatKind = {}));\nvar ViewportOrigin;\n(function (ViewportOrigin) {\n  ViewportOrigin[ViewportOrigin[\"LOWER_LEFT\"] = 0] = \"LOWER_LEFT\";\n  ViewportOrigin[ViewportOrigin[\"UPPER_LEFT\"] = 1] = \"UPPER_LEFT\";\n})(ViewportOrigin || (ViewportOrigin = {}));\nvar ClipSpaceNearZ;\n(function (ClipSpaceNearZ) {\n  ClipSpaceNearZ[ClipSpaceNearZ[\"NEGATIVE_ONE\"] = 0] = \"NEGATIVE_ONE\";\n  ClipSpaceNearZ[ClipSpaceNearZ[\"ZERO\"] = 1] = \"ZERO\";\n})(ClipSpaceNearZ || (ClipSpaceNearZ = {}));\nvar QueryPoolType;\n(function (QueryPoolType) {\n  QueryPoolType[QueryPoolType[\"OcclusionConservative\"] = 0] = \"OcclusionConservative\";\n})(QueryPoolType || (QueryPoolType = {}));\nvar FormatTypeFlags;\n(function (FormatTypeFlags) {\n  FormatTypeFlags[FormatTypeFlags[\"U8\"] = 1] = \"U8\";\n  FormatTypeFlags[FormatTypeFlags[\"U16\"] = 2] = \"U16\";\n  FormatTypeFlags[FormatTypeFlags[\"U32\"] = 3] = \"U32\";\n  FormatTypeFlags[FormatTypeFlags[\"S8\"] = 4] = \"S8\";\n  FormatTypeFlags[FormatTypeFlags[\"S16\"] = 5] = \"S16\";\n  FormatTypeFlags[FormatTypeFlags[\"S32\"] = 6] = \"S32\";\n  FormatTypeFlags[FormatTypeFlags[\"F16\"] = 7] = \"F16\";\n  FormatTypeFlags[FormatTypeFlags[\"F32\"] = 8] = \"F32\";\n  // Compressed texture formats.\n  FormatTypeFlags[FormatTypeFlags[\"BC1\"] = 65] = \"BC1\";\n  FormatTypeFlags[FormatTypeFlags[\"BC2\"] = 66] = \"BC2\";\n  FormatTypeFlags[FormatTypeFlags[\"BC3\"] = 67] = \"BC3\";\n  FormatTypeFlags[FormatTypeFlags[\"BC4_UNORM\"] = 68] = \"BC4_UNORM\";\n  FormatTypeFlags[FormatTypeFlags[\"BC4_SNORM\"] = 69] = \"BC4_SNORM\";\n  FormatTypeFlags[FormatTypeFlags[\"BC5_UNORM\"] = 70] = \"BC5_UNORM\";\n  FormatTypeFlags[FormatTypeFlags[\"BC5_SNORM\"] = 71] = \"BC5_SNORM\";\n  // Special-case packed texture formats.\n  FormatTypeFlags[FormatTypeFlags[\"U16_PACKED_5551\"] = 97] = \"U16_PACKED_5551\";\n  FormatTypeFlags[FormatTypeFlags[\"U16_PACKED_565\"] = 98] = \"U16_PACKED_565\";\n  // Depth/stencil texture formats.\n  FormatTypeFlags[FormatTypeFlags[\"D24\"] = 129] = \"D24\";\n  FormatTypeFlags[FormatTypeFlags[\"D32F\"] = 130] = \"D32F\";\n  FormatTypeFlags[FormatTypeFlags[\"D24S8\"] = 131] = \"D24S8\";\n  FormatTypeFlags[FormatTypeFlags[\"D32FS8\"] = 132] = \"D32FS8\";\n})(FormatTypeFlags || (FormatTypeFlags = {}));\nvar FormatCompFlags;\n(function (FormatCompFlags) {\n  FormatCompFlags[FormatCompFlags[\"R\"] = 1] = \"R\";\n  FormatCompFlags[FormatCompFlags[\"RG\"] = 2] = \"RG\";\n  FormatCompFlags[FormatCompFlags[\"RGB\"] = 3] = \"RGB\";\n  FormatCompFlags[FormatCompFlags[\"RGBA\"] = 4] = \"RGBA\";\n  FormatCompFlags[FormatCompFlags[\"A\"] = 5] = \"A\";\n})(FormatCompFlags || (FormatCompFlags = {}));\nfunction getFormatCompFlagsComponentCount(n) {\n  // The number of components is the flag value. Easy.\n  return n;\n}\nvar FormatFlags;\n(function (FormatFlags) {\n  FormatFlags[FormatFlags[\"None\"] = 0] = \"None\";\n  FormatFlags[FormatFlags[\"Normalized\"] = 1] = \"Normalized\";\n  FormatFlags[FormatFlags[\"sRGB\"] = 2] = \"sRGB\";\n  FormatFlags[FormatFlags[\"Depth\"] = 4] = \"Depth\";\n  FormatFlags[FormatFlags[\"Stencil\"] = 8] = \"Stencil\";\n  FormatFlags[FormatFlags[\"RenderTarget\"] = 16] = \"RenderTarget\";\n  FormatFlags[FormatFlags[\"Luminance\"] = 32] = \"Luminance\";\n})(FormatFlags || (FormatFlags = {}));\nfunction makeFormat(type, comp, flags) {\n  return type << 16 | comp << 8 | flags;\n}\nvar Format;\n(function (Format) {\n  Format[Format[\"ALPHA\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.A, FormatFlags.None)] = \"ALPHA\";\n  Format[Format[\"U8_LUMINANCE\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.A, FormatFlags.Luminance)] = \"U8_LUMINANCE\";\n  Format[Format[\"F16_LUMINANCE\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.A, FormatFlags.Luminance)] = \"F16_LUMINANCE\";\n  Format[Format[\"F32_LUMINANCE\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.A, FormatFlags.Luminance)] = \"F32_LUMINANCE\";\n  Format[Format[\"F16_R\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.R, FormatFlags.None)] = \"F16_R\";\n  Format[Format[\"F16_RG\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.RG, FormatFlags.None)] = \"F16_RG\";\n  Format[Format[\"F16_RGB\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.RGB, FormatFlags.None)] = \"F16_RGB\";\n  Format[Format[\"F16_RGBA\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.RGBA, FormatFlags.None)] = \"F16_RGBA\";\n  Format[Format[\"F32_R\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.R, FormatFlags.None)] = \"F32_R\";\n  Format[Format[\"F32_RG\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.RG, FormatFlags.None)] = \"F32_RG\";\n  Format[Format[\"F32_RGB\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.RGB, FormatFlags.None)] = \"F32_RGB\";\n  Format[Format[\"F32_RGBA\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.RGBA, FormatFlags.None)] = \"F32_RGBA\";\n  Format[Format[\"U8_R\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.R, FormatFlags.None)] = \"U8_R\";\n  Format[Format[\"U8_R_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.R, FormatFlags.Normalized)] = \"U8_R_NORM\";\n  Format[Format[\"U8_RG\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RG, FormatFlags.None)] = \"U8_RG\";\n  Format[Format[\"U8_RG_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RG, FormatFlags.Normalized)] = \"U8_RG_NORM\";\n  Format[Format[\"U8_RGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.None)] = \"U8_RGB\";\n  Format[Format[\"U8_RGB_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"U8_RGB_NORM\";\n  Format[Format[\"U8_RGB_SRGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.sRGB | FormatFlags.Normalized)] = \"U8_RGB_SRGB\";\n  Format[Format[\"U8_RGBA\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.None)] = \"U8_RGBA\";\n  Format[Format[\"U8_RGBA_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"U8_RGBA_NORM\";\n  Format[Format[\"U8_RGBA_SRGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.sRGB | FormatFlags.Normalized)] = \"U8_RGBA_SRGB\";\n  Format[Format[\"U16_R\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.R, FormatFlags.None)] = \"U16_R\";\n  Format[Format[\"U16_R_NORM\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.R, FormatFlags.Normalized)] = \"U16_R_NORM\";\n  Format[Format[\"U16_RG_NORM\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RG, FormatFlags.Normalized)] = \"U16_RG_NORM\";\n  Format[Format[\"U16_RGBA_NORM\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"U16_RGBA_NORM\";\n  Format[Format[\"U16_RGBA\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RGBA, FormatFlags.None)] = \"U16_RGBA\";\n  Format[Format[\"U16_RGB\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RGB, FormatFlags.None)] = \"U16_RGB\";\n  Format[Format[\"U16_RG\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RG, FormatFlags.None)] = \"U16_RG\";\n  Format[Format[\"U32_R\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.R, FormatFlags.None)] = \"U32_R\";\n  Format[Format[\"U32_RG\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.RG, FormatFlags.None)] = \"U32_RG\";\n  Format[Format[\"U32_RGB\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.RGB, FormatFlags.None)] = \"U32_RGB\";\n  Format[Format[\"U32_RGBA\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.RGBA, FormatFlags.None)] = \"U32_RGBA\";\n  Format[Format[\"S8_R\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.R, FormatFlags.None)] = \"S8_R\";\n  Format[Format[\"S8_R_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.R, FormatFlags.Normalized)] = \"S8_R_NORM\";\n  Format[Format[\"S8_RG_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.RG, FormatFlags.Normalized)] = \"S8_RG_NORM\";\n  Format[Format[\"S8_RGB_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"S8_RGB_NORM\";\n  Format[Format[\"S8_RGBA_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"S8_RGBA_NORM\";\n  Format[Format[\"S16_R\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.R, FormatFlags.None)] = \"S16_R\";\n  Format[Format[\"S16_RG\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RG, FormatFlags.None)] = \"S16_RG\";\n  Format[Format[\"S16_RG_NORM\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RG, FormatFlags.Normalized)] = \"S16_RG_NORM\";\n  Format[Format[\"S16_RGB_NORM\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"S16_RGB_NORM\";\n  Format[Format[\"S16_RGBA\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RGBA, FormatFlags.None)] = \"S16_RGBA\";\n  Format[Format[\"S16_RGBA_NORM\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"S16_RGBA_NORM\";\n  Format[Format[\"S32_R\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.R, FormatFlags.None)] = \"S32_R\";\n  Format[Format[\"S32_RG\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.RG, FormatFlags.None)] = \"S32_RG\";\n  Format[Format[\"S32_RGB\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.RGB, FormatFlags.None)] = \"S32_RGB\";\n  Format[Format[\"S32_RGBA\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.RGBA, FormatFlags.None)] = \"S32_RGBA\";\n  // Packed texture formats.\n  Format[Format[\"U16_RGBA_5551\"] = makeFormat(FormatTypeFlags.U16_PACKED_5551, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"U16_RGBA_5551\";\n  Format[Format[\"U16_RGB_565\"] = makeFormat(FormatTypeFlags.U16_PACKED_565, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"U16_RGB_565\";\n  // Compressed\n  Format[Format[\"BC1\"] = makeFormat(FormatTypeFlags.BC1, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"BC1\";\n  Format[Format[\"BC1_SRGB\"] = makeFormat(FormatTypeFlags.BC1, FormatCompFlags.RGBA, FormatFlags.Normalized | FormatFlags.sRGB)] = \"BC1_SRGB\";\n  Format[Format[\"BC2\"] = makeFormat(FormatTypeFlags.BC2, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"BC2\";\n  Format[Format[\"BC2_SRGB\"] = makeFormat(FormatTypeFlags.BC2, FormatCompFlags.RGBA, FormatFlags.Normalized | FormatFlags.sRGB)] = \"BC2_SRGB\";\n  Format[Format[\"BC3\"] = makeFormat(FormatTypeFlags.BC3, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"BC3\";\n  Format[Format[\"BC3_SRGB\"] = makeFormat(FormatTypeFlags.BC3, FormatCompFlags.RGBA, FormatFlags.Normalized | FormatFlags.sRGB)] = \"BC3_SRGB\";\n  Format[Format[\"BC4_UNORM\"] = makeFormat(FormatTypeFlags.BC4_UNORM, FormatCompFlags.R, FormatFlags.Normalized)] = \"BC4_UNORM\";\n  Format[Format[\"BC4_SNORM\"] = makeFormat(FormatTypeFlags.BC4_SNORM, FormatCompFlags.R, FormatFlags.Normalized)] = \"BC4_SNORM\";\n  Format[Format[\"BC5_UNORM\"] = makeFormat(FormatTypeFlags.BC5_UNORM, FormatCompFlags.RG, FormatFlags.Normalized)] = \"BC5_UNORM\";\n  Format[Format[\"BC5_SNORM\"] = makeFormat(FormatTypeFlags.BC5_SNORM, FormatCompFlags.RG, FormatFlags.Normalized)] = \"BC5_SNORM\";\n  // Depth/Stencil\n  Format[Format[\"D24\"] = makeFormat(FormatTypeFlags.D24, FormatCompFlags.R, FormatFlags.Depth)] = \"D24\";\n  Format[Format[\"D24_S8\"] = makeFormat(FormatTypeFlags.D24S8, FormatCompFlags.RG, FormatFlags.Depth | FormatFlags.Stencil)] = \"D24_S8\";\n  Format[Format[\"D32F\"] = makeFormat(FormatTypeFlags.D32F, FormatCompFlags.R, FormatFlags.Depth)] = \"D32F\";\n  Format[Format[\"D32F_S8\"] = makeFormat(FormatTypeFlags.D32FS8, FormatCompFlags.RG, FormatFlags.Depth | FormatFlags.Stencil)] = \"D32F_S8\";\n  // Special RT formats for preferred backend support.\n  Format[Format[\"U8_RGB_RT\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.RenderTarget | FormatFlags.Normalized)] = \"U8_RGB_RT\";\n  Format[Format[\"U8_RGBA_RT\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.RenderTarget | FormatFlags.Normalized)] = \"U8_RGBA_RT\";\n  Format[Format[\"U8_RGBA_RT_SRGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.RenderTarget | FormatFlags.Normalized | FormatFlags.sRGB)] = \"U8_RGBA_RT_SRGB\";\n})(Format || (Format = {}));\nfunction getFormatCompFlags(fmt) {\n  return fmt >>> 8 & 0xff;\n}\nfunction getFormatTypeFlags(fmt) {\n  return fmt >>> 16 & 0xff;\n}\nfunction getFormatFlags(fmt) {\n  return fmt & 0xff;\n}\nfunction getFormatTypeFlagsByteSize(typeFlags) {\n  switch (typeFlags) {\n    case FormatTypeFlags.F32:\n    case FormatTypeFlags.U32:\n    case FormatTypeFlags.S32:\n      return 4;\n    case FormatTypeFlags.U16:\n    case FormatTypeFlags.S16:\n    case FormatTypeFlags.F16:\n      return 2;\n    case FormatTypeFlags.U8:\n    case FormatTypeFlags.S8:\n      return 1;\n    default:\n      throw new Error('whoops');\n  }\n}\n/**\n * Gets the byte size for an individual component.\n * e.g. for F32_RGB, this will return \"4\", since F32 has 4 bytes.\n */\nfunction getFormatCompByteSize(fmt) {\n  return getFormatTypeFlagsByteSize(getFormatTypeFlags(fmt));\n}\nfunction getFormatComponentCount(fmt) {\n  return getFormatCompFlagsComponentCount(getFormatCompFlags(fmt));\n}\nfunction getFormatByteSize(fmt) {\n  var typeByteSize = getFormatTypeFlagsByteSize(getFormatTypeFlags(fmt));\n  var componentCount = getFormatCompFlagsComponentCount(getFormatCompFlags(fmt));\n  return typeByteSize * componentCount;\n}\nfunction setFormatFlags(fmt, flags) {\n  return fmt & 0xffffff00 | flags;\n}\nfunction setFormatComponentCount(fmt, compFlags) {\n  return fmt & 0xffff00ff | compFlags << 8;\n}\nfunction getFormatSamplerKind(fmt) {\n  var flags = getFormatFlags(fmt);\n  if (flags & FormatFlags.Depth) {\n    return SamplerFormatKind.Depth;\n  }\n  if (flags & FormatFlags.Normalized) {\n    return SamplerFormatKind.Float;\n  }\n  var typeFlags = getFormatTypeFlags(fmt);\n  if (typeFlags === FormatTypeFlags.F16 || typeFlags === FormatTypeFlags.F32) {\n    return SamplerFormatKind.Float;\n  } else if (typeFlags === FormatTypeFlags.U8 || typeFlags === FormatTypeFlags.U16 || typeFlags === FormatTypeFlags.U32) {\n    return SamplerFormatKind.Uint;\n  } else if (typeFlags === FormatTypeFlags.S8 || typeFlags === FormatTypeFlags.S16 || typeFlags === FormatTypeFlags.S32) {\n    return SamplerFormatKind.Sint;\n  } else {\n    throw new Error('whoops');\n  }\n}\nfunction assert(b, message) {\n  if (message === void 0) {\n    message = '';\n  }\n  if (!b) {\n    // console.error(new Error().stack);\n    throw new Error(\"Assert fail: \".concat(message));\n  }\n}\nfunction assertExists(v) {\n  if (v !== undefined && v !== null) return v;else throw new Error('Missing object');\n}\nfunction colorEqual(c0, c1) {\n  return c0.r === c1.r && c0.g === c1.g && c0.b === c1.b && c0.a === c1.a;\n}\nfunction colorCopy(dst, src) {\n  dst.r = src.r;\n  dst.g = src.g;\n  dst.b = src.b;\n  dst.a = src.a;\n}\nfunction colorNewCopy(src) {\n  var r = src.r,\n    g = src.g,\n    b = src.b,\n    a = src.a;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction colorNewFromRGBA(r, g, b, a) {\n  if (a === void 0) {\n    a = 1.0;\n  }\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nvar TransparentBlack = colorNewFromRGBA(0, 0, 0, 0);\nvar OpaqueBlack = colorNewFromRGBA(0, 0, 0, 1);\nvar TransparentWhite = colorNewFromRGBA(1, 1, 1, 0);\nvar OpaqueWhite = colorNewFromRGBA(1, 1, 1, 1);\n\n/**\n * @see https://forum.babylonjs.com/t/reverse-depth-buffer-z-buffer/6905/2\n */\nvar IsDepthReversed = true;\nfunction reverseDepthForPerspectiveProjectionMatrix(m, isDepthReversed) {\n  if (isDepthReversed === void 0) {\n    isDepthReversed = IsDepthReversed;\n  }\n  if (isDepthReversed) {\n    m[10] = -m[10];\n    m[14] = -m[14];\n  }\n}\nfunction reverseDepthForOrthographicProjectionMatrix(m, isDepthReversed) {\n  if (isDepthReversed === void 0) {\n    isDepthReversed = IsDepthReversed;\n  }\n  if (isDepthReversed) {\n    m[10] = -m[10];\n    m[14] = -m[14] + 1;\n  }\n}\nfunction reverseDepthForCompareFunction(compareFunction, isDepthReversed) {\n  if (isDepthReversed === void 0) {\n    isDepthReversed = IsDepthReversed;\n  }\n  if (isDepthReversed) {\n    switch (compareFunction) {\n      case CompareFunction.LESS:\n        return CompareFunction.GREATER;\n      case CompareFunction.LEQUAL:\n        return CompareFunction.GEQUAL;\n      case CompareFunction.GEQUAL:\n        return CompareFunction.LEQUAL;\n      case CompareFunction.GREATER:\n        return CompareFunction.LESS;\n      default:\n        return compareFunction;\n    }\n  } else {\n    return compareFunction;\n  }\n}\nfunction reverseDepthForClearValue(n, isDepthReversed) {\n  if (isDepthReversed === void 0) {\n    isDepthReversed = IsDepthReversed;\n  }\n  if (isDepthReversed) {\n    return 1.0 - n;\n  } else {\n    return n;\n  }\n}\nfunction reverseDepthForDepthOffset(n, isDepthReversed) {\n  if (isDepthReversed === void 0) {\n    isDepthReversed = IsDepthReversed;\n  }\n  if (isDepthReversed) {\n    return -n;\n  } else {\n    return n;\n  }\n}\nfunction compareDepthValues(a, b, op, isDepthReversed) {\n  if (isDepthReversed === void 0) {\n    isDepthReversed = IsDepthReversed;\n  }\n  op = reverseDepthForCompareFunction(op, isDepthReversed);\n  if (op === CompareFunction.LESS) return a < b;else if (op === CompareFunction.LEQUAL) return a <= b;else if (op === CompareFunction.GREATER) return a > b;else if (op === CompareFunction.GEQUAL) return a >= b;else throw new Error('whoops');\n}\n\n// import { reverseDepthForCompareFunction } from './depth';\nfunction isPowerOfTwo(n) {\n  return !!(n && (n & n - 1) === 0);\n}\nfunction fallbackUndefined(v, fallback) {\n  return v !== null && v !== undefined ? v : fallback;\n}\nfunction nullify(v) {\n  return v === undefined ? null : v;\n}\nfunction fillArray(L, n, v) {\n  L.length = n;\n  L.fill(v);\n}\nfunction align(n, multiple) {\n  var mask = multiple - 1;\n  return n + mask & ~mask;\n}\nfunction alignNonPowerOfTwo(n, multiple) {\n  return ((n + multiple - 1) / multiple | 0) * multiple;\n}\n// @see https://github.com/d3/d3-array#bisectRight\nfunction bisectRight(L, e, compare) {\n  var lo = 0,\n    hi = L.length;\n  while (lo < hi) {\n    var mid = lo + (hi - lo >>> 1);\n    var cmp = compare(e, L[mid]);\n    if (cmp < 0) hi = mid;else lo = mid + 1;\n  }\n  return lo;\n}\nfunction spliceBisectRight(L, e, compare) {\n  var idx = bisectRight(L, e, compare);\n  L.splice(idx, 0, e);\n}\nfunction setBitFlagEnabled(v, mask, enabled) {\n  if (enabled) v |= mask;else v &= ~mask;\n  return v;\n}\nfunction nArray(n, c) {\n  var d = new Array(n);\n  for (var i = 0; i < n; i++) d[i] = c();\n  return d;\n}\nfunction prependLineNo(str, lineStart) {\n  if (lineStart === void 0) {\n    lineStart = 1;\n  }\n  var lines = str.split('\\n');\n  return lines.map(function (s, i) {\n    return \"\".concat(leftPad('' + (lineStart + i), 4, ' '), \"  \").concat(s);\n  }).join('\\n');\n}\nfunction leftPad(S, spaces, ch) {\n  if (ch === void 0) {\n    ch = '0';\n  }\n  while (S.length < spaces) S = \"\".concat(ch).concat(S);\n  return S;\n}\nfunction range(start, count) {\n  var L = [];\n  for (var i = start; i < start + count; i++) L.push(i);\n  return L;\n}\nfunction copyChannelBlendState(dst, src) {\n  dst.blendDstFactor = src.blendDstFactor;\n  dst.blendSrcFactor = src.blendSrcFactor;\n  dst.blendMode = src.blendMode;\n}\nfunction copyStencilFaceState(dst, src) {\n  if (dst === undefined) {\n    dst = {};\n  }\n  dst.compare = src.compare;\n  dst.depthFailOp = src.depthFailOp;\n  dst.passOp = src.passOp;\n  dst.failOp = src.failOp;\n  dst.mask = src.mask;\n  return dst;\n}\nfunction copyAttachmentState(dst, src) {\n  if (dst === undefined) {\n    dst = {\n      rgbBlendState: {},\n      alphaBlendState: {},\n      channelWriteMask: 0\n    };\n  }\n  copyChannelBlendState(dst.rgbBlendState, src.rgbBlendState);\n  copyChannelBlendState(dst.alphaBlendState, src.alphaBlendState);\n  dst.channelWriteMask = src.channelWriteMask;\n  return dst;\n}\nfunction copyAttachmentsState(dst, src) {\n  if (dst.length !== src.length) dst.length = src.length;\n  for (var i = 0; i < src.length; i++) dst[i] = copyAttachmentState(dst[i], src[i]);\n}\nfunction setMegaStateFlags(dst, src) {\n  if (src.attachmentsState !== undefined) {\n    copyAttachmentsState(dst.attachmentsState, src.attachmentsState);\n  }\n  if (dst.blendConstant && src.blendConstant) {\n    colorCopy(dst.blendConstant, src.blendConstant);\n  }\n  dst.depthCompare = fallbackUndefined(src.depthCompare, dst.depthCompare);\n  dst.depthWrite = fallbackUndefined(src.depthWrite, dst.depthWrite);\n  dst.stencilWrite = fallbackUndefined(src.stencilWrite, dst.stencilWrite);\n  if (dst.stencilFront && src.stencilFront) {\n    copyStencilFaceState(dst.stencilFront, src.stencilFront);\n  }\n  if (dst.stencilBack && src.stencilBack) {\n    copyStencilFaceState(dst.stencilBack, src.stencilBack);\n  }\n  dst.cullMode = fallbackUndefined(src.cullMode, dst.cullMode);\n  dst.frontFace = fallbackUndefined(src.frontFace, dst.frontFace);\n  dst.polygonOffset = fallbackUndefined(src.polygonOffset, dst.polygonOffset);\n}\nfunction copyMegaState(src) {\n  var dst = Object.assign({}, src);\n  // Copy fields that need copying.\n  dst.attachmentsState = [];\n  copyAttachmentsState(dst.attachmentsState, src.attachmentsState);\n  dst.blendConstant = dst.blendConstant && colorNewCopy(dst.blendConstant);\n  dst.stencilFront = copyStencilFaceState(undefined, src.stencilFront);\n  dst.stencilBack = copyStencilFaceState(undefined, src.stencilBack);\n  return dst;\n}\nfunction copyAttachmentStateFromSimple(dst, src) {\n  if (src.channelWriteMask !== undefined) {\n    dst.channelWriteMask = src.channelWriteMask;\n  }\n  if (src.rgbBlendMode !== undefined) {\n    dst.rgbBlendState.blendMode = src.rgbBlendMode;\n  }\n  if (src.alphaBlendMode !== undefined) {\n    dst.alphaBlendState.blendMode = src.alphaBlendMode;\n  }\n  if (src.rgbBlendSrcFactor !== undefined) {\n    dst.rgbBlendState.blendSrcFactor = src.rgbBlendSrcFactor;\n  }\n  if (src.alphaBlendSrcFactor !== undefined) {\n    dst.alphaBlendState.blendSrcFactor = src.alphaBlendSrcFactor;\n  }\n  if (src.rgbBlendDstFactor !== undefined) {\n    dst.rgbBlendState.blendDstFactor = src.rgbBlendDstFactor;\n  }\n  if (src.alphaBlendDstFactor !== undefined) {\n    dst.alphaBlendState.blendDstFactor = src.alphaBlendDstFactor;\n  }\n}\nvar defaultBlendState = {\n  blendMode: BlendMode.ADD,\n  blendSrcFactor: BlendFactor.ONE,\n  blendDstFactor: BlendFactor.ZERO\n};\nvar defaultMegaState = {\n  attachmentsState: [{\n    channelWriteMask: ChannelWriteMask.ALL,\n    rgbBlendState: defaultBlendState,\n    alphaBlendState: defaultBlendState\n  }],\n  blendConstant: colorNewCopy(TransparentBlack),\n  depthWrite: true,\n  depthCompare: CompareFunction.LEQUAL,\n  stencilWrite: false,\n  stencilFront: {\n    compare: CompareFunction.ALWAYS,\n    passOp: StencilOp.KEEP,\n    depthFailOp: StencilOp.KEEP,\n    failOp: StencilOp.KEEP\n  },\n  stencilBack: {\n    compare: CompareFunction.ALWAYS,\n    passOp: StencilOp.KEEP,\n    depthFailOp: StencilOp.KEEP,\n    failOp: StencilOp.KEEP\n  },\n  cullMode: CullMode.NONE,\n  frontFace: FrontFace.CCW,\n  polygonOffset: false\n};\nfunction makeMegaState(other, src) {\n  if (other === void 0) {\n    other = null;\n  }\n  if (src === void 0) {\n    src = defaultMegaState;\n  }\n  var dst = copyMegaState(src);\n  if (other !== null) setMegaStateFlags(dst, other);\n  return dst;\n}\nvar fullscreenMegaState = makeMegaState({\n  depthCompare: CompareFunction.ALWAYS,\n  depthWrite: false\n}, defaultMegaState);\nfunction setAttachmentStateSimple(dst, simple) {\n  if (dst.attachmentsState === undefined) {\n    dst.attachmentsState = [];\n    copyAttachmentsState(dst.attachmentsState, defaultMegaState.attachmentsState);\n  }\n  copyAttachmentStateFromSimple(dst.attachmentsState[0], simple);\n  return dst;\n}\nvar defaultBindingLayoutSamplerDescriptor = {\n  texture: null,\n  sampler: null,\n  formatKind: SamplerFormatKind.Float,\n  dimension: TextureDimension.TEXTURE_2D\n};\nfunction arrayEqual(a, b, e) {\n  if (a.length !== b.length) return false;\n  for (var i = 0; i < a.length; i++) if (!e(a[i], b[i])) return false;\n  return true;\n}\nfunction arrayCopy(a, copyFunc) {\n  var b = Array(a.length);\n  for (var i = 0; i < a.length; i++) b[i] = copyFunc(a[i]);\n  return b;\n}\nfunction textureBindingEquals(a, b) {\n  return a.texture === b.texture && a.binding === b.binding;\n}\nfunction bufferBindingEquals(a, b) {\n  return a.buffer === b.buffer && a.size === b.size && a.binding === b.binding && a.offset === b.offset;\n}\nfunction samplerBindingEquals(a, b) {\n  if (a === null) return b === null;\n  if (b === null) return false;\n  return a.sampler === b.sampler && a.texture === b.texture && a.dimension === b.dimension && a.formatKind === b.formatKind && a.comparison === b.comparison;\n}\nfunction bindingsDescriptorEquals(a, b) {\n  a.samplerBindings = a.samplerBindings || [];\n  a.uniformBufferBindings = a.uniformBufferBindings || [];\n  a.storageBufferBindings = a.storageBufferBindings || [];\n  a.storageTextureBindings = a.storageTextureBindings || [];\n  b.samplerBindings = b.samplerBindings || [];\n  b.uniformBufferBindings = b.uniformBufferBindings || [];\n  b.storageBufferBindings = b.storageBufferBindings || [];\n  b.storageTextureBindings = b.storageTextureBindings || [];\n  if (a.samplerBindings.length !== b.samplerBindings.length) return false;\n  if (!arrayEqual(a.samplerBindings, b.samplerBindings, samplerBindingEquals)) return false;\n  if (!arrayEqual(a.uniformBufferBindings, b.uniformBufferBindings, bufferBindingEquals)) return false;\n  if (!arrayEqual(a.storageBufferBindings, b.storageBufferBindings, bufferBindingEquals)) return false;\n  if (!arrayEqual(a.storageTextureBindings, b.storageTextureBindings, textureBindingEquals)) return false;\n  return true;\n}\nfunction channelBlendStateEquals(a, b) {\n  return a.blendMode == b.blendMode && a.blendSrcFactor === b.blendSrcFactor && a.blendDstFactor === b.blendDstFactor;\n}\nfunction attachmentStateEquals(a, b) {\n  if (!channelBlendStateEquals(a.rgbBlendState, b.rgbBlendState)) return false;\n  if (!channelBlendStateEquals(a.alphaBlendState, b.alphaBlendState)) return false;\n  if (a.channelWriteMask !== b.channelWriteMask) return false;\n  return true;\n}\nfunction stencilFaceStateEquals(a, b) {\n  return a.compare == b.compare && a.depthFailOp === b.depthFailOp && a.failOp === b.failOp && a.passOp === b.passOp && a.mask === b.mask;\n}\nfunction megaStateDescriptorEquals(a, b) {\n  if (!arrayEqual(a.attachmentsState, b.attachmentsState, attachmentStateEquals)) return false;\n  if (a.blendConstant && b.blendConstant && !colorEqual(a.blendConstant, b.blendConstant)) return false;\n  if (a.stencilFront && b.stencilFront && !stencilFaceStateEquals(a.stencilFront, b.stencilFront)) return false;\n  if (a.stencilBack && b.stencilBack && !stencilFaceStateEquals(a.stencilBack, b.stencilBack)) return false;\n  return a.depthCompare === b.depthCompare && a.depthWrite === b.depthWrite && a.stencilWrite === b.stencilWrite && a.cullMode === b.cullMode && a.frontFace === b.frontFace && a.polygonOffset === b.polygonOffset;\n}\nfunction programEquals(a, b) {\n  return a.id === b.id;\n}\nfunction formatEquals(a, b) {\n  return a === b;\n}\nfunction renderPipelineDescriptorEquals(a, b) {\n  if (a.topology !== b.topology) return false;\n  if (a.inputLayout !== b.inputLayout) return false;\n  if (a.sampleCount !== b.sampleCount) return false;\n  if (a.megaStateDescriptor && b.megaStateDescriptor && !megaStateDescriptorEquals(a.megaStateDescriptor, b.megaStateDescriptor)) return false;\n  if (!programEquals(a.program, b.program)) return false;\n  if (!arrayEqual(a.colorAttachmentFormats, b.colorAttachmentFormats, formatEquals)) return false;\n  if (a.depthStencilAttachmentFormat !== b.depthStencilAttachmentFormat) return false;\n  return true;\n}\nfunction vertexAttributeDescriptorEquals(a, b) {\n  return a.offset === b.offset && a.shaderLocation === b.shaderLocation && a.format === b.format && a.divisor === b.divisor;\n}\nfunction inputLayoutBufferDescriptorEquals(a, b) {\n  if (isNil(a)) return isNil(b);\n  if (isNil(b)) return false;\n  return a.arrayStride === b.arrayStride && a.stepMode === b.stepMode && arrayEqual(a.attributes, b.attributes, vertexAttributeDescriptorEquals);\n}\nfunction inputLayoutDescriptorEquals(a, b) {\n  if (a.indexBufferFormat !== b.indexBufferFormat) return false;\n  if (!arrayEqual(a.vertexBufferDescriptors, b.vertexBufferDescriptors, inputLayoutBufferDescriptorEquals)) return false;\n  if (!programEquals(a.program, b.program)) return false;\n  return true;\n}\nfunction samplerDescriptorEquals(a, b) {\n  return a.addressModeU === b.addressModeU && a.addressModeV === b.addressModeV && a.minFilter === b.minFilter && a.magFilter === b.magFilter && a.mipmapFilter === b.mipmapFilter && a.lodMinClamp === b.lodMinClamp && a.lodMaxClamp === b.lodMaxClamp && a.maxAnisotropy === b.maxAnisotropy && a.compareFunction === b.compareFunction;\n}\nfunction samplerBindingCopy(a) {\n  var sampler = a.sampler;\n  var texture = a.texture;\n  var dimension = a.dimension;\n  var formatKind = a.formatKind;\n  var comparison = a.comparison;\n  return {\n    sampler: sampler,\n    texture: texture,\n    dimension: dimension,\n    formatKind: formatKind,\n    comparison: comparison\n  };\n}\nfunction bufferBindingCopy(a) {\n  var buffer = a.buffer;\n  var size = a.size;\n  var binding = a.binding;\n  var offset = a.offset;\n  return {\n    binding: binding,\n    buffer: buffer,\n    offset: offset,\n    size: size\n  };\n}\nfunction textureBindingCopy(a) {\n  var binding = a.binding;\n  var texture = a.texture;\n  return {\n    binding: binding,\n    texture: texture\n  };\n}\nfunction bindingsDescriptorCopy(a) {\n  var samplerBindings = a.samplerBindings && arrayCopy(a.samplerBindings, samplerBindingCopy);\n  var uniformBufferBindings = a.uniformBufferBindings && arrayCopy(a.uniformBufferBindings, bufferBindingCopy);\n  var storageBufferBindings = a.storageBufferBindings && arrayCopy(a.storageBufferBindings, bufferBindingCopy);\n  var storageTextureBindings = a.storageTextureBindings && arrayCopy(a.storageTextureBindings, textureBindingCopy);\n  return {\n    samplerBindings: samplerBindings,\n    uniformBufferBindings: uniformBufferBindings,\n    storageBufferBindings: storageBufferBindings,\n    storageTextureBindings: storageTextureBindings,\n    pipeline: a.pipeline\n  };\n}\nfunction renderPipelineDescriptorCopy(a) {\n  var inputLayout = a.inputLayout;\n  var program = a.program;\n  var topology = a.topology;\n  var megaStateDescriptor = a.megaStateDescriptor && copyMegaState(a.megaStateDescriptor);\n  var colorAttachmentFormats = a.colorAttachmentFormats.slice();\n  var depthStencilAttachmentFormat = a.depthStencilAttachmentFormat;\n  var sampleCount = a.sampleCount;\n  return {\n    inputLayout: inputLayout,\n    megaStateDescriptor: megaStateDescriptor,\n    program: program,\n    topology: topology,\n    colorAttachmentFormats: colorAttachmentFormats,\n    depthStencilAttachmentFormat: depthStencilAttachmentFormat,\n    sampleCount: sampleCount\n  };\n}\nfunction vertexAttributeDescriptorCopy(a) {\n  var shaderLocation = a.shaderLocation;\n  var format = a.format;\n  var offset = a.offset;\n  var divisor = a.divisor;\n  return {\n    shaderLocation: shaderLocation,\n    format: format,\n    offset: offset,\n    divisor: divisor\n  };\n}\nfunction inputLayoutBufferDescriptorCopy(a) {\n  if (!isNil(a)) {\n    var arrayStride = a.arrayStride;\n    var stepMode = a.stepMode;\n    var attributes = arrayCopy(a.attributes, vertexAttributeDescriptorCopy);\n    return {\n      arrayStride: arrayStride,\n      stepMode: stepMode,\n      attributes: attributes\n    };\n  } else {\n    return a;\n  }\n}\nfunction inputLayoutDescriptorCopy(a) {\n  var vertexBufferDescriptors = arrayCopy(a.vertexBufferDescriptors, inputLayoutBufferDescriptorCopy);\n  var indexBufferFormat = a.indexBufferFormat;\n  var program = a.program;\n  return {\n    vertexBufferDescriptors: vertexBufferDescriptors,\n    indexBufferFormat: indexBufferFormat,\n    program: program\n  };\n}\nvar _a;\n// if array name then clean the array brackets\nvar UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\nfunction parseUniformName(name) {\n  // Shortcut to avoid redundant or bad matches\n  if (name[name.length - 1] !== ']') {\n    return {\n      name: name,\n      length: 1,\n      isArray: false\n    };\n  }\n  var matches = name.match(UNIFORM_NAME_REGEXP);\n  if (!matches || matches.length < 2) {\n    throw new Error(\"Failed to parse GLSL uniform name \".concat(name));\n  }\n  return {\n    name: matches[1],\n    length: Number(matches[2]) || 1,\n    isArray: Boolean(matches[2])\n  };\n}\nfunction getSamplerSetter() {\n  var cache = null;\n  return function (gl, location,\n  // eslint-disable-next-line\n  value) {\n    var update = cache !== value;\n    if (update) {\n      gl.uniform1i(location, value);\n      cache = value;\n    }\n    return update;\n  };\n}\nfunction getArraySetter(functionName, toArray, size, uniformSetter) {\n  var cache = null;\n  var cacheLength = null;\n  // eslint-disable-next-line\n  return function (gl, location, value) {\n    var arrayValue = toArray(value, size);\n    var length = arrayValue.length;\n    var update = false;\n    if (cache === null) {\n      cache = new Float32Array(length);\n      cacheLength = length;\n      update = true;\n    } else {\n      assert(cacheLength === length, 'Uniform length cannot change.');\n      for (var i = 0; i < length; ++i) {\n        if (arrayValue[i] !== cache[i]) {\n          update = true;\n          break;\n        }\n      }\n    }\n    if (update) {\n      uniformSetter(gl, functionName, location, arrayValue);\n      cache.set(arrayValue);\n    }\n    return update;\n  };\n}\nfunction setVectorUniform(gl, functionName, location,\n// eslint-disable-next-line\nvalue) {\n  gl[functionName](location, value);\n}\nfunction setMatrixUniform(gl, functionName, location,\n// eslint-disable-next-line\nvalue) {\n  gl[functionName](location, false, value);\n}\nvar FLOAT_ARRAY = {};\nvar INT_ARRAY = {};\nvar UINT_ARRAY = {};\nvar array1 = [0];\nfunction toTypedArray(value, uniformLength, Type,\n// eslint-disable-next-line\ncache) {\n  // convert boolean uniforms to Number\n  if (uniformLength === 1 && typeof value === 'boolean') {\n    value = value ? 1 : 0;\n  }\n  if (Number.isFinite(value)) {\n    array1[0] = value;\n    value = array1;\n  }\n  var length = value.length;\n  if (value instanceof Type) {\n    return value;\n  }\n  var result = cache[length];\n  if (!result) {\n    result = new Type(length);\n    cache[length] = result;\n  }\n  for (var i = 0; i < length; i++) {\n    result[i] = value[i];\n  }\n  return result;\n}\nfunction toFloatArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Float32Array, FLOAT_ARRAY);\n}\nfunction toIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Int32Array, INT_ARRAY);\n}\nfunction toUIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Uint32Array, UINT_ARRAY);\n}\nvar UNIFORM_SETTERS = (_a = {},\n// WEBGL1\n_a[GL.FLOAT] = getArraySetter.bind(null, 'uniform1fv', toFloatArray, 1, setVectorUniform), _a[GL.FLOAT_VEC2] = getArraySetter.bind(null, 'uniform2fv', toFloatArray, 2, setVectorUniform), _a[GL.FLOAT_VEC3] = getArraySetter.bind(null, 'uniform3fv', toFloatArray, 3, setVectorUniform), _a[GL.FLOAT_VEC4] = getArraySetter.bind(null, 'uniform4fv', toFloatArray, 4, setVectorUniform), _a[GL.INT] = getArraySetter.bind(null, 'uniform1iv', toIntArray, 1, setVectorUniform), _a[GL.INT_VEC2] = getArraySetter.bind(null, 'uniform2iv', toIntArray, 2, setVectorUniform), _a[GL.INT_VEC3] = getArraySetter.bind(null, 'uniform3iv', toIntArray, 3, setVectorUniform), _a[GL.INT_VEC4] = getArraySetter.bind(null, 'uniform4iv', toIntArray, 4, setVectorUniform), _a[GL.BOOL] = getArraySetter.bind(null, 'uniform1iv', toIntArray, 1, setVectorUniform), _a[GL.BOOL_VEC2] = getArraySetter.bind(null, 'uniform2iv', toIntArray, 2, setVectorUniform), _a[GL.BOOL_VEC3] = getArraySetter.bind(null, 'uniform3iv', toIntArray, 3, setVectorUniform), _a[GL.BOOL_VEC4] = getArraySetter.bind(null, 'uniform4iv', toIntArray, 4, setVectorUniform),\n// uniformMatrix(false): don't transpose the matrix\n_a[GL.FLOAT_MAT2] = getArraySetter.bind(null, 'uniformMatrix2fv', toFloatArray, 4, setMatrixUniform), _a[GL.FLOAT_MAT3] = getArraySetter.bind(null, 'uniformMatrix3fv', toFloatArray, 9, setMatrixUniform), _a[GL.FLOAT_MAT4] = getArraySetter.bind(null, 'uniformMatrix4fv', toFloatArray, 16, setMatrixUniform),\n// WEBGL2 - unsigned integers, irregular matrices, additional texture samplers\n_a[GL.UNSIGNED_INT] = getArraySetter.bind(null, 'uniform1uiv', toUIntArray, 1, setVectorUniform), _a[GL.UNSIGNED_INT_VEC2] = getArraySetter.bind(null, 'uniform2uiv', toUIntArray, 2, setVectorUniform), _a[GL.UNSIGNED_INT_VEC3] = getArraySetter.bind(null, 'uniform3uiv', toUIntArray, 3, setVectorUniform), _a[GL.UNSIGNED_INT_VEC4] = getArraySetter.bind(null, 'uniform4uiv', toUIntArray, 4, setVectorUniform),\n// uniformMatrix(false): don't transpose the matrix\n_a[GL.FLOAT_MAT2x3] = getArraySetter.bind(null, 'uniformMatrix2x3fv', toFloatArray, 6, setMatrixUniform), _a[GL.FLOAT_MAT2x4] = getArraySetter.bind(null, 'uniformMatrix2x4fv', toFloatArray, 8, setMatrixUniform), _a[GL.FLOAT_MAT3x2] = getArraySetter.bind(null, 'uniformMatrix3x2fv', toFloatArray, 6, setMatrixUniform), _a[GL.FLOAT_MAT3x4] = getArraySetter.bind(null, 'uniformMatrix3x4fv', toFloatArray, 12, setMatrixUniform), _a[GL.FLOAT_MAT4x2] = getArraySetter.bind(null, 'uniformMatrix4x2fv', toFloatArray, 8, setMatrixUniform), _a[GL.FLOAT_MAT4x3] = getArraySetter.bind(null, 'uniformMatrix4x3fv', toFloatArray, 12, setMatrixUniform), _a[GL.SAMPLER_2D] = getSamplerSetter, _a[GL.SAMPLER_CUBE] = getSamplerSetter, _a[GL.SAMPLER_3D] = getSamplerSetter, _a[GL.SAMPLER_2D_SHADOW] = getSamplerSetter, _a[GL.SAMPLER_2D_ARRAY] = getSamplerSetter, _a[GL.SAMPLER_2D_ARRAY_SHADOW] = getSamplerSetter, _a[GL.SAMPLER_CUBE_SHADOW] = getSamplerSetter, _a[GL.INT_SAMPLER_2D] = getSamplerSetter, _a[GL.INT_SAMPLER_3D] = getSamplerSetter, _a[GL.INT_SAMPLER_CUBE] = getSamplerSetter, _a[GL.INT_SAMPLER_2D_ARRAY] = getSamplerSetter, _a[GL.UNSIGNED_INT_SAMPLER_2D] = getSamplerSetter, _a[GL.UNSIGNED_INT_SAMPLER_3D] = getSamplerSetter, _a[GL.UNSIGNED_INT_SAMPLER_CUBE] = getSamplerSetter, _a[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY] = getSamplerSetter, _a);\nfunction getUniformSetter(gl, location, info) {\n  var setter = UNIFORM_SETTERS[info.type];\n  if (!setter) {\n    throw new Error(\"Unknown GLSL uniform type \".concat(info.type));\n  }\n  return setter().bind(null, gl, location);\n}\nvar dtypes = {\n  '[object Int8Array]': 5120,\n  '[object Int16Array]': 5122,\n  '[object Int32Array]': 5124,\n  '[object Uint8Array]': 5121,\n  '[object Uint8ClampedArray]': 5121,\n  '[object Uint16Array]': 5123,\n  '[object Uint32Array]': 5125,\n  '[object Float32Array]': 5126,\n  '[object Float64Array]': 5121,\n  '[object ArrayBuffer]': 5121\n};\n// eslint-disable-next-line\nfunction isTypedArray(x) {\n  return Object.prototype.toString.call(x) in dtypes;\n}\n\n// const ES100_REPLACEMENTS: [RegExp, string][] = [\n//   // In GLSL 1.00 ES these functions are provided by an extension\n//   [/\\btexture(2D|2DProj|Cube)Lod\\(/g, 'texture$1LodEXT('],\n//   // Overloads in GLSL 3.00 map to individual functions. Note that we cannot\n//   // differentiate 2D,2DProj,Cube without type analysis so we choose the most common variant.\n//   [/\\btexture\\(/g, 'texture2D('],\n//   [/\\btextureLod\\(/g, 'texture2DLodEXT('],\n// ];\nfunction defineStr(k, v) {\n  return \"#define \".concat(k, \" \").concat(v);\n}\nfunction getDefines(shader) {\n  var defines = {};\n  shader.replace(/^\\s*#define\\s*(\\S*)\\s*(\\S*)\\s*$/gm, function (_, name, value) {\n    var v = Number(value);\n    defines[name] = isNaN(v) ? value : v;\n    return '';\n  });\n  return defines;\n}\nfunction getAttributeLocations(vert, defines) {\n  var locations = [];\n  vert.replace(/^\\s*layout\\(location\\s*=\\s*(\\S*)\\)\\s*in\\s+\\S+\\s*(.*);$/gm, function (_, location, name) {\n    var l = Number(location);\n    locations.push({\n      location: isNaN(l) ? defines[location] : l,\n      name: name\n    });\n    return '';\n  });\n  return locations;\n}\nfunction getUniforms(vert) {\n  var uniformNames = [];\n  var structs = [];\n  vert.replace(/\\s*struct\\s*(.*)\\s*{((?:\\s*.*\\s*)*?)};/g, function (_, type, uniformStr) {\n    var uniforms = [];\n    uniformStr.trim().replace('\\r\\n', '\\n').split('\\n').forEach(function (line) {\n      var _a = __read(line.trim().split(/\\s+/), 2),\n        type = _a[0],\n        name = _a[1];\n      uniforms.push({\n        type: type.trim(),\n        name: name.replace(';', '').trim()\n      });\n    });\n    structs.push({\n      type: type.trim(),\n      uniforms: uniforms\n    });\n    return '';\n  });\n  vert.replace(/\\s*uniform(?:\\s+)(?:\\w+)(?:\\s?){([^]*?)};?/g, function (_, uniforms) {\n    uniforms.trim().replace('\\r\\n', '\\n').split('\\n').forEach(function (line) {\n      var result = line.trim().split(' ');\n      var type = result[0] || '';\n      var name = result[1] || '';\n      // DirectionalLight directionalLights[  NUM_DIR_LIGHTS ];\n      var isArray = name.indexOf('[') > -1;\n      name = name.replace(';', '').replace('[', '').trim();\n      // ignore conditional comments\n      if (type.startsWith('#')) {\n        return;\n      }\n      // account for structs\n      if (type) {\n        var struct = structs.find(function (struct) {\n          return type === struct.type;\n        });\n        if (struct) {\n          if (isArray) {\n            var _loop_1 = function (i) {\n              struct.uniforms.forEach(function (uniform) {\n                uniformNames.push(\"\".concat(name, \"[\").concat(i, \"].\").concat(uniform.name));\n              });\n            };\n            for (var i = 0; i < 5; i++) {\n              _loop_1(i);\n            }\n          } else {\n            struct.uniforms.forEach(function (uniform) {\n              uniformNames.push(\"\".concat(name, \".\").concat(uniform.name));\n            });\n          }\n        }\n      }\n      if (name) {\n        uniformNames.push(name);\n      }\n    });\n    return '';\n  });\n  return uniformNames;\n}\nfunction parseBinding(layout) {\n  if (layout === undefined) return null;\n  var g = /binding\\s*=\\s*(\\d+)/.exec(layout);\n  if (g !== null) {\n    var bindingNum = parseInt(g[1], 10);\n    if (!Number.isNaN(bindingNum)) return bindingNum;\n  }\n  return null;\n}\nfunction getSeparateSamplerTypes(combinedSamplerType) {\n  var samplerType = '';\n  var textureType = combinedSamplerType;\n  // if (combinedSamplerType.endsWith(`Shadow`)) {\n  //   textureType = textureType.slice(0, -6);\n  //   samplerType = `Shadow`;\n  // }\n  return [textureType, samplerType];\n}\nfunction preprocessShader_GLSL(vendorInfo, type, source, defines, usePrecision) {\n  var _a;\n  if (defines === void 0) {\n    defines = null;\n  }\n  if (usePrecision === void 0) {\n    usePrecision = true;\n  }\n  var isGLSL100 = vendorInfo.glslVersion === '#version 100';\n  var useMRT = type === 'frag' && ((_a = source.match(/^\\s*layout\\(location\\s*=\\s*\\d*\\)\\s*out\\s+vec4\\s*(.*);$/gm)) === null || _a === void 0 ? void 0 : _a.length) > 1;\n  var lines = source.replace('\\r\\n', '\\n').split('\\n').map(function (n) {\n    // Remove comments.\n    return n.replace(/[/][/].*$/, '');\n  }).filter(function (n) {\n    // Filter whitespace.\n    var isEmpty = !n || /^\\s+$/.test(n);\n    return !isEmpty;\n  });\n  // #define KEY VAR\n  var definesString = '';\n  if (defines !== null) definesString = Object.keys(defines).map(function (key) {\n    return defineStr(key, defines[key]);\n  }).join('\\n');\n  var precision = lines.find(function (line) {\n    return line.startsWith('precision');\n  }) || 'precision mediump float;';\n  var rest = usePrecision ? lines.filter(function (line) {\n    return !line.startsWith('precision');\n  }).join('\\n') : lines.join('\\n');\n  var extraDefines = '';\n  if (vendorInfo.viewportOrigin === ViewportOrigin.UPPER_LEFT) {\n    extraDefines += \"\".concat(defineStr(\"VIEWPORT_ORIGIN_TL\", \"1\"), \"\\n\");\n  }\n  if (vendorInfo.clipSpaceNearZ === ClipSpaceNearZ.ZERO) {\n    extraDefines += \"\".concat(defineStr(\"CLIPSPACE_NEAR_ZERO\", \"1\"), \"\\n\");\n  }\n  if (vendorInfo.explicitBindingLocations) {\n    var set_1 = 0,\n      implicitBinding_1 = 0,\n      location_1 = 0;\n    rest = rest.replace(/^\\s*(layout\\((.*)\\))?\\s*uniform(.+{)$/gm, function (substr, cap, layout, rest) {\n      var layout2 = layout ? \"\".concat(layout, \", \") : \"\";\n      return \"layout(\".concat(layout2, \"set = \").concat(set_1, \", binding = \").concat(implicitBinding_1++, \") uniform \").concat(rest);\n    });\n    // XXX(jstpierre): WebGPU now binds UBOs and textures in different sets as a porting hack, hrm...\n    set_1++;\n    implicitBinding_1 = 0;\n    assert(vendorInfo.separateSamplerTextures);\n    rest = rest.replace(/^\\s*(layout\\((.*)\\))?\\s*uniform sampler(\\w+) (.*);/gm, function (substr, cap, layout, combinedSamplerType, samplerName) {\n      var binding = parseBinding(layout);\n      if (binding === null) binding = implicitBinding_1++;\n      var _a = __read(getSeparateSamplerTypes(combinedSamplerType), 2),\n        textureType = _a[0],\n        samplerType = _a[1];\n      return type === 'frag' ? \"\\nlayout(set = \".concat(set_1, \", binding = \").concat(binding * 2 + 0, \") uniform texture\").concat(textureType, \" T_\").concat(samplerName, \";\\nlayout(set = \").concat(set_1, \", binding = \").concat(binding * 2 + 1, \") uniform sampler\").concat(samplerType, \" S_\").concat(samplerName, \";\").trim() : '';\n    });\n    rest = rest.replace(type === 'frag' ? /^\\s*\\b(varying|in)\\b/gm : /^\\s*\\b(varying|out)\\b/gm, function (substr, tok) {\n      return \"layout(location = \".concat(location_1++, \") \").concat(tok);\n    });\n    /**\n     * @see https://github.com/gfx-rs/naga/issues/1994\n     */\n    extraDefines += \"\".concat(defineStr(\"gl_VertexID\", \"gl_VertexIndex\"), \"\\n\");\n    extraDefines += \"\".concat(defineStr(\"gl_InstanceID\", \"gl_InstanceIndex\"), \"\\n\");\n    // Workaround for Naga\n    // https://github.com/gfx-rs/naga/issues/1353\n    precision = precision.replace(/^precision (.*) sampler(.*);$/gm, '');\n  } else {\n    var implicitBinding_2 = 0;\n    rest = rest.replace(/^\\s*(layout\\((.*)\\))?\\s*uniform sampler(\\w+) (.*);/gm, function (substr, cap, layout, combinedSamplerType, samplerName) {\n      var binding = parseBinding(layout);\n      if (binding === null) binding = implicitBinding_2++;\n      return \"uniform sampler\".concat(combinedSamplerType, \" \").concat(samplerName, \"; // BINDING=\").concat(binding);\n    });\n  }\n  if (vendorInfo.separateSamplerTextures) {\n    rest = rest.replace(/\\bSAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n      return \"sampler\".concat(combinedSamplerType, \"(T_\").concat(samplerName, \", S_\").concat(samplerName, \")\");\n    });\n    rest = rest.replace(/\\bTEXTURE\\((.*?)\\)/g, function (substr, samplerName) {\n      return \"T_\".concat(samplerName);\n    });\n  } else {\n    var samplerNames_1 = [];\n    rest = rest.replace(/\\bSAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n      samplerNames_1.push([samplerName, combinedSamplerType]);\n      return samplerName;\n    });\n    if (isGLSL100) {\n      samplerNames_1.forEach(function (_a) {\n        var _b = __read(_a, 2),\n          samplerName = _b[0],\n          combinedSamplerType = _b[1];\n        // texture(u_T) -> texture2D(u_T) or textureCube(u_T)\n        rest = rest.replace(new RegExp(\"texture\\\\(\".concat(samplerName), 'g'), function () {\n          return \"texture\".concat(combinedSamplerType, \"(\").concat(samplerName);\n        });\n      });\n    }\n    rest = rest.replace(/\\bTEXTURE\\((.*?)\\)/g, function (substr, samplerName) {\n      return samplerName;\n    });\n  }\n  // using #define means we can't use `const in/out` in params\n  //   ${isGLSL100 && type === 'vert' ? '#define in attribute\\n#define out varying' : ''}\n  // ${isGLSL100 && type === 'frag' ? '#define in varying' : ''}\n  // headless-gl will throw the following error if we prepend `#version 100`:\n  // #version directive must occur before anything else, except for comments and white space\n  var concat = \"\".concat(isGLSL100 ? '' : vendorInfo.glslVersion, \"\\n\").concat(isGLSL100 && useMRT ? '#extension GL_EXT_draw_buffers : require\\n' : '', \"\\n\").concat(isGLSL100 && type === 'frag' ? '#extension GL_OES_standard_derivatives : enable\\n' : '').concat(usePrecision ? precision : '', \"\\n\").concat(extraDefines ? extraDefines : '').concat(definesString ? definesString + '\\n' : '', \"\\n\").concat(rest, \"\\n\").trim();\n  // out vec4 outputColor; -> layout(location = 0) out vec4 outputColor;\n  if (vendorInfo.explicitBindingLocations && type === 'frag') {\n    concat = concat.replace(/^\\b(out)\\b/g, function (substr, tok) {\n      return \"layout(location = 0) \".concat(tok);\n    });\n  }\n  // GLSL 300 -> 100\n  // @see https://webgl2fundamentals.org/webgl/lessons/webgl1-to-webgl2.html\n  if (isGLSL100) {\n    // in -> varying\n    if (type === 'frag') {\n      concat = concat.replace(/^\\s*in\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n        return \"varying \".concat(dataType, \" \").concat(name, \";\\n\");\n      });\n    }\n    if (type === 'vert') {\n      // out -> varying\n      concat = concat.replace(/^\\s*out\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n        return \"varying \".concat(dataType, \" \").concat(name, \";\\n\");\n      });\n      // in -> attribute\n      concat = concat.replace(\n      // /^\\s*layout\\(location\\s*=\\s*\\d*\\)\\s*in\\s*(.*)\\s*(.*);$/gm,\n      /^\\s*layout\\(location\\s*=\\s*\\S*\\)\\s*in\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n        return \"attribute \".concat(dataType, \" \").concat(name, \";\\n\");\n      });\n    }\n    // interface blocks supported in GLSL ES 3.00 and above only\n    concat = concat.replace(/\\s*uniform\\s*.*\\s*{((?:\\s*.*\\s*)*?)};/g, function (substr, uniforms) {\n      return uniforms.trim().replace(/^.*$/gm, function (uniform) {\n        // eg. #ifdef\n        var trimmed = uniform.trim();\n        if (trimmed.startsWith('#')) {\n          return trimmed;\n        }\n        return uniform ? \"uniform \".concat(trimmed) : '';\n      });\n    });\n    if (type === 'frag') {\n      if (useMRT) {\n        var gBuffers_1 = [];\n        concat = concat.replace(/^\\s*layout\\(location\\s*=\\s*\\d*\\)\\s*out\\s+vec4\\s*(.*);$/gm, function (_, buffer) {\n          gBuffers_1.push(buffer);\n          return \"vec4 \".concat(buffer, \";\\n\");\n        });\n        var lastIndexOfMain = concat.lastIndexOf('}');\n        concat = concat.substring(0, lastIndexOfMain) + \"\\n    \".concat(gBuffers_1.map(function (gBuffer, i) {\n          return \"gl_FragData[\".concat(i, \"] = \").concat(gBuffer, \";\\n    \");\n        }).join('\\n')) + concat.substring(lastIndexOfMain);\n      } else {\n        var glFragColor_1;\n        concat = concat.replace(/^\\s*out\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n          glFragColor_1 = name;\n          return \"\".concat(dataType, \" \").concat(name, \";\\n\");\n        });\n        if (glFragColor_1) {\n          var lastIndexOfMain = concat.lastIndexOf('}');\n          concat = concat.substring(0, lastIndexOfMain) + \"\\n  gl_FragColor = vec4(\".concat(glFragColor_1, \");\\n\") + concat.substring(lastIndexOfMain);\n        }\n      }\n    }\n    // remove layout(location = 0)\n    concat = concat.replace(/^\\s*layout\\((.*)\\)/gm, '');\n    // replace texture with texture2D\n    // for (const [pattern, replacement] of ES100_REPLACEMENTS) {\n    //   concat = concat.replace(pattern, replacement);\n    // }\n  }\n\n  return concat;\n}\nfunction preprocessProgram_GLSL(vendorInfo, vert, frag, defines) {\n  if (defines === void 0) {\n    defines = null;\n  }\n  var preprocessedVert = preprocessShader_GLSL(vendorInfo, 'vert', vert, defines);\n  var preprocessedFrag = preprocessShader_GLSL(vendorInfo, 'frag', frag, defines);\n  return {\n    vert: vert,\n    frag: frag,\n    preprocessedVert: preprocessedVert,\n    preprocessedFrag: preprocessedFrag\n  };\n}\nvar ResourceBase_GL = /** @class */function (_super) {\n  __extends(ResourceBase_GL, _super);\n  function ResourceBase_GL(_a) {\n    var id = _a.id,\n      device = _a.device;\n    var _this = _super.call(this) || this;\n    _this.id = id;\n    _this.device = device;\n    if (_this.device['resourceCreationTracker'] !== null) {\n      _this.device['resourceCreationTracker'].trackResourceCreated(_this);\n    }\n    return _this;\n  }\n  ResourceBase_GL.prototype.destroy = function () {\n    if (this.device['resourceCreationTracker'] !== null) {\n      this.device['resourceCreationTracker'].trackResourceDestroyed(this);\n    }\n  };\n  return ResourceBase_GL;\n}(EventEmitter);\nvar Bindings_GL = /** @class */function (_super) {\n  __extends(Bindings_GL, _super);\n  function Bindings_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Bindings;\n    var uniformBufferBindings = descriptor.uniformBufferBindings,\n      samplerBindings = descriptor.samplerBindings;\n    _this.uniformBufferBindings = uniformBufferBindings || [];\n    _this.samplerBindings = samplerBindings || [];\n    _this.bindingLayouts = _this.createBindingLayouts();\n    return _this;\n  }\n  Bindings_GL.prototype.createBindingLayouts = function () {\n    var firstUniformBuffer = 0;\n    var firstSampler = 0;\n    var bindingLayoutTables = [];\n    // Support only 1 bindGroup for now.\n    var numUniformBuffers = this.uniformBufferBindings.length;\n    var numSamplers = this.samplerBindings.length;\n    bindingLayoutTables.push({\n      firstUniformBuffer: firstUniformBuffer,\n      numUniformBuffers: numUniformBuffers,\n      firstSampler: firstSampler,\n      numSamplers: numSamplers\n    });\n    firstUniformBuffer += numUniformBuffers;\n    firstSampler += numSamplers;\n    return {\n      numUniformBuffers: firstUniformBuffer,\n      numSamplers: firstSampler,\n      bindingLayoutTables: bindingLayoutTables\n    };\n  };\n  return Bindings_GL;\n}(ResourceBase_GL);\n\n// @see https://github.com/visgl/luma.gl/blob/30a1039573576d73641de7c1ba222e8992eb526e/modules/gltools/src/utils/webgl-checks.ts#L22\nfunction isWebGL2(gl) {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  // Look for debug contexts, headless gl etc\n  // @ts-ignore\n  return Boolean(gl && gl._version === 2);\n}\nfunction isTextureFormatCompressed(fmt) {\n  var typeFlags = getFormatTypeFlags(fmt);\n  switch (typeFlags) {\n    case FormatTypeFlags.BC1:\n    case FormatTypeFlags.BC2:\n    case FormatTypeFlags.BC3:\n    case FormatTypeFlags.BC4_UNORM:\n    case FormatTypeFlags.BC4_SNORM:\n    case FormatTypeFlags.BC5_UNORM:\n    case FormatTypeFlags.BC5_SNORM:\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFormatSizedInteger(fmt) {\n  var flags = getFormatFlags(fmt);\n  if (flags & FormatFlags.Normalized) return false;\n  var typeFlags = getFormatTypeFlags(fmt);\n  // Check for integer types.\n  if (typeFlags === FormatTypeFlags.S8 || typeFlags === FormatTypeFlags.S16 || typeFlags === FormatTypeFlags.S32) return true;\n  if (typeFlags === FormatTypeFlags.U8 || typeFlags === FormatTypeFlags.U16 || typeFlags === FormatTypeFlags.U32) return true;\n  return false;\n}\nfunction translateBufferHint(hint) {\n  switch (hint) {\n    case BufferFrequencyHint.STATIC:\n      return GL.STATIC_DRAW;\n    case BufferFrequencyHint.DYNAMIC:\n      return GL.DYNAMIC_DRAW;\n  }\n}\nfunction translateBufferUsageToTarget(usage) {\n  if (usage & BufferUsage.INDEX) {\n    return GL.ELEMENT_ARRAY_BUFFER;\n  } else if (usage & BufferUsage.VERTEX) {\n    return GL.ARRAY_BUFFER;\n  } else if (usage & BufferUsage.UNIFORM) {\n    return GL.UNIFORM_BUFFER;\n  }\n}\nfunction translatePrimitiveTopology(topology) {\n  switch (topology) {\n    case PrimitiveTopology.TRIANGLES:\n      return GL.TRIANGLES;\n    case PrimitiveTopology.POINTS:\n      return GL.POINTS;\n    case PrimitiveTopology.TRIANGLE_STRIP:\n      return GL.TRIANGLE_STRIP;\n    case PrimitiveTopology.LINES:\n      return GL.LINES;\n    case PrimitiveTopology.LINE_STRIP:\n      return GL.LINE_STRIP;\n    default:\n      throw new Error('Unknown primitive topology mode');\n  }\n}\nfunction translateType(flags) {\n  switch (flags) {\n    case FormatTypeFlags.U8:\n      return GL.UNSIGNED_BYTE;\n    case FormatTypeFlags.U16:\n      return GL.UNSIGNED_SHORT;\n    case FormatTypeFlags.U32:\n      return GL.UNSIGNED_INT;\n    case FormatTypeFlags.S8:\n      return GL.BYTE;\n    case FormatTypeFlags.S16:\n      return GL.SHORT;\n    case FormatTypeFlags.S32:\n      return GL.INT;\n    case FormatTypeFlags.F16:\n      return GL.HALF_FLOAT;\n    case FormatTypeFlags.F32:\n      return GL.FLOAT;\n    default:\n      throw new Error('whoops');\n  }\n}\nfunction translateSize(flags) {\n  switch (flags) {\n    case FormatCompFlags.R:\n      return 1;\n    case FormatCompFlags.RG:\n      return 2;\n    case FormatCompFlags.RGB:\n      return 3;\n    case FormatCompFlags.RGBA:\n      return 4;\n    default:\n      return 1;\n  }\n}\nfunction translateVertexFormat$1(fmt) {\n  var typeFlags = getFormatTypeFlags(fmt);\n  var compFlags = getFormatCompFlags(fmt);\n  var flags = getFormatFlags(fmt);\n  var type = translateType(typeFlags);\n  var size = translateSize(compFlags);\n  var normalized = !!(flags & FormatFlags.Normalized);\n  return {\n    size: size,\n    type: type,\n    normalized: normalized\n  };\n}\nfunction translateIndexFormat$1(format) {\n  switch (format) {\n    case Format.U8_R:\n      return GL.UNSIGNED_BYTE;\n    case Format.U16_R:\n      return GL.UNSIGNED_SHORT;\n    case Format.U32_R:\n      return GL.UNSIGNED_INT;\n    default:\n      throw new Error('whoops');\n  }\n}\nfunction translateAddressMode$1(wrapMode) {\n  switch (wrapMode) {\n    case AddressMode.CLAMP_TO_EDGE:\n      return GL.CLAMP_TO_EDGE;\n    case AddressMode.REPEAT:\n      return GL.REPEAT;\n    case AddressMode.MIRRORED_REPEAT:\n      return GL.MIRRORED_REPEAT;\n    default:\n      throw new Error('whoops');\n  }\n}\nfunction translateFilterMode(filter, mipmapFilter) {\n  if (mipmapFilter === MipmapFilterMode.LINEAR && filter === FilterMode.BILINEAR) {\n    return GL.LINEAR_MIPMAP_LINEAR;\n  }\n  if (mipmapFilter === MipmapFilterMode.LINEAR && filter === FilterMode.POINT) {\n    return GL.NEAREST_MIPMAP_LINEAR;\n  }\n  if (mipmapFilter === MipmapFilterMode.NEAREST && filter === FilterMode.BILINEAR) {\n    return GL.LINEAR_MIPMAP_NEAREST;\n  }\n  if (mipmapFilter === MipmapFilterMode.NEAREST && filter === FilterMode.POINT) {\n    return GL.NEAREST_MIPMAP_NEAREST;\n  }\n  if (mipmapFilter === MipmapFilterMode.NO_MIP && filter === FilterMode.BILINEAR) {\n    return GL.LINEAR;\n  }\n  if (mipmapFilter === MipmapFilterMode.NO_MIP && filter === FilterMode.POINT) {\n    return GL.NEAREST;\n  }\n  throw new Error('Unknown texture filter mode');\n}\nfunction getPlatformBuffer$1(buffer_, byteOffset) {\n  if (byteOffset === void 0) {\n    byteOffset = 0;\n  }\n  var buffer = buffer_;\n  return buffer.gl_buffer_pages[byteOffset / buffer.pageByteSize | 0];\n}\nfunction getPlatformTexture(texture_) {\n  var texture = texture_;\n  return texture.gl_texture;\n}\nfunction getPlatformSampler$1(sampler_) {\n  var sampler = sampler_;\n  return sampler.gl_sampler;\n}\n// eslint-disable-next-line\nfunction assignPlatformName(o, name) {\n  o.name = name;\n  o.__SPECTOR_Metadata = {\n    name: name\n  };\n}\nfunction findall(haystack, needle) {\n  var results = [];\n  while (true) {\n    var result = needle.exec(haystack);\n    if (!result) break;\n    results.push(result);\n  }\n  return results;\n}\nfunction isBlendStateNone(blendState) {\n  return blendState.blendMode == BlendMode.ADD && blendState.blendSrcFactor == BlendFactor.ONE && blendState.blendDstFactor === BlendFactor.ZERO;\n}\nfunction translateQueryPoolType$1(type) {\n  switch (type) {\n    case QueryPoolType.OcclusionConservative:\n      return GL.ANY_SAMPLES_PASSED_CONSERVATIVE;\n    default:\n      throw new Error('whoops');\n  }\n}\nfunction translateTextureDimension$1(dimension) {\n  if (dimension === TextureDimension.TEXTURE_2D) return GL.TEXTURE_2D;else if (dimension === TextureDimension.TEXTURE_2D_ARRAY) return GL.TEXTURE_2D_ARRAY;else if (dimension === TextureDimension.TEXTURE_CUBE_MAP) return GL.TEXTURE_CUBE_MAP;else if (dimension === TextureDimension.TEXTURE_3D) return GL.TEXTURE_3D;else throw new Error('whoops');\n}\nfunction isBlockCompressSized(w, h, bw, bh) {\n  if (w % bw !== 0) return false;\n  if (h % bh !== 0) return false;\n  return true;\n}\nvar Buffer_GL = /** @class */function (_super) {\n  __extends(Buffer_GL, _super);\n  function Buffer_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Buffer;\n    var viewOrSize = descriptor.viewOrSize,\n      usage = descriptor.usage,\n      _b = descriptor.hint,\n      hint = _b === void 0 ? BufferFrequencyHint.STATIC : _b;\n    var uniformBufferMaxPageByteSize = device.uniformBufferMaxPageByteSize,\n      gl = device.gl;\n    var isUBO = usage & BufferUsage.UNIFORM;\n    if (!isUBO) {\n      if (isWebGL2(gl)) {\n        // Temporarily unbind VAO when creating buffers to not stomp on the VAO configuration.\n        gl.bindVertexArray(null);\n      } else {\n        device.OES_vertex_array_object.bindVertexArrayOES(null);\n      }\n    }\n    // const byteSize = isNumber(viewOrSize)\n    //   ? viewOrSize * 4\n    //   : viewOrSize.byteLength * 4;\n    var byteSize = isNumber(viewOrSize) ? align(viewOrSize, 4) : align(viewOrSize.byteLength, 4);\n    _this.gl_buffer_pages = [];\n    var pageByteSize;\n    if (isUBO) {\n      // assert(byteSize % uniformBufferMaxPageByteSize === 0);\n      var byteSizeLeft = byteSize;\n      while (byteSizeLeft > 0) {\n        _this.gl_buffer_pages.push(_this.createBufferPage(Math.min(byteSizeLeft, uniformBufferMaxPageByteSize), usage, hint));\n        byteSizeLeft -= uniformBufferMaxPageByteSize;\n      }\n      pageByteSize = uniformBufferMaxPageByteSize;\n      // TODO: uniform in WebGL1\n    } else {\n      _this.gl_buffer_pages.push(_this.createBufferPage(byteSize, usage, hint));\n      pageByteSize = byteSize;\n    }\n    _this.pageByteSize = pageByteSize;\n    _this.byteSize = byteSize;\n    _this.usage = usage;\n    _this.gl_target = translateBufferUsageToTarget(usage);\n    // init data\n    if (!isNumber(viewOrSize)) {\n      _this.setSubData(0, new Uint8Array(viewOrSize.buffer));\n    }\n    if (!isUBO) {\n      if (isWebGL2(gl)) {\n        gl.bindVertexArray(_this.device['currentBoundVAO']);\n      } else {\n        device.OES_vertex_array_object.bindVertexArrayOES(_this.device['currentBoundVAO']);\n      }\n    }\n    return _this;\n  }\n  Buffer_GL.prototype.setSubData = function (dstByteOffset, data, srcByteOffset, byteSize) {\n    if (srcByteOffset === void 0) {\n      srcByteOffset = 0;\n    }\n    if (byteSize === void 0) {\n      byteSize = data.byteLength - srcByteOffset;\n    }\n    var gl = this.device.gl;\n    var\n    // gl_target,\n    // byteSize: dstByteSize,\n    dstPageByteSize = this.pageByteSize;\n    // Account for setSubData being called with a dstByteOffset that is beyond the end of the buffer.\n    // if (isWebGL2(gl) && gl_target === gl.UNIFORM_BUFFER) {\n    //   // Manually check asserts for speed.\n    //   if (!(dstByteOffset % dstPageByteSize === 0))\n    //     throw new Error(\n    //       `Assert fail: (dstByteOffset [${dstByteOffset}] % dstPageByteSize [${dstPageByteSize}]) === 0`,\n    //     );\n    //   if (!(byteSize % dstPageByteSize === 0))\n    //     throw new Error(\n    //       `Assert fail: (byteSize [${byteSize}] % dstPageByteSize [${dstPageByteSize}]) === 0`,\n    //     );\n    // }\n    // if (!(dstByteOffset + byteSize <= dstByteSize)) {\n    //   throw new Error(\n    //     `Assert fail: (dstByteOffset [${dstByteOffset}] + byteSize [${byteSize}]) <= dstByteSize [${dstByteSize}], gl_target ${gl_target}`,\n    //   );\n    //   // exceed, need to recreate\n    // }\n    var virtBufferByteOffsetEnd = dstByteOffset + byteSize;\n    var virtBufferByteOffset = dstByteOffset;\n    var physBufferByteOffset = dstByteOffset % dstPageByteSize;\n    while (virtBufferByteOffset < virtBufferByteOffsetEnd) {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer#parameters\n      var target = isWebGL2(gl) ? gl.COPY_WRITE_BUFFER : this.gl_target;\n      var buffer = getPlatformBuffer$1(this, virtBufferByteOffset);\n      // @ts-ignore\n      if (buffer.ubo) {\n        return;\n      }\n      gl.bindBuffer(target, buffer);\n      // only WebGL2 support srcOffset & length\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData\n      if (isWebGL2(gl)) {\n        gl.bufferSubData(target, physBufferByteOffset, data, srcByteOffset, Math.min(virtBufferByteOffsetEnd - virtBufferByteOffset, dstPageByteSize));\n      } else {\n        gl.bufferSubData(target, physBufferByteOffset, data);\n      }\n      virtBufferByteOffset += dstPageByteSize;\n      physBufferByteOffset = 0;\n      srcByteOffset += dstPageByteSize;\n      this.device['debugGroupStatisticsBufferUpload']();\n    }\n  };\n  Buffer_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    for (var i = 0; i < this.gl_buffer_pages.length; i++) {\n      // no ubo in WebGL1\n      // @ts-ignore\n      if (!this.gl_buffer_pages[i].ubo) {\n        this.device.gl.deleteBuffer(this.gl_buffer_pages[i]);\n      }\n    }\n    this.gl_buffer_pages = [];\n  };\n  Buffer_GL.prototype.createBufferPage = function (byteSize, usage, hint) {\n    var gl = this.device.gl;\n    var isUBO = usage & BufferUsage.UNIFORM;\n    if (!isWebGL2(gl) && isUBO) {\n      return {\n        ubo: true\n      };\n    } else {\n      var gl_buffer = this.device.ensureResourceExists(gl.createBuffer());\n      var gl_target = translateBufferUsageToTarget(usage);\n      var gl_hint = translateBufferHint(hint);\n      gl.bindBuffer(gl_target, gl_buffer);\n      gl.bufferData(gl_target, byteSize, gl_hint);\n      return gl_buffer;\n    }\n  };\n  return Buffer_GL;\n}(ResourceBase_GL);\nvar InputLayout_GL = /** @class */function (_super) {\n  __extends(InputLayout_GL, _super);\n  function InputLayout_GL(_a) {\n    var e_1, _b, e_2, _c;\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _d;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.InputLayout;\n    var vertexBufferDescriptors = descriptor.vertexBufferDescriptors,\n      indexBufferFormat = descriptor.indexBufferFormat,\n      program = descriptor.program;\n    assert(indexBufferFormat === Format.U16_R || indexBufferFormat === Format.U32_R || indexBufferFormat === null);\n    var indexBufferType = indexBufferFormat !== null ? translateIndexFormat$1(indexBufferFormat) : null;\n    var indexBufferCompByteSize = indexBufferFormat !== null ? getFormatCompByteSize(indexBufferFormat) : null;\n    var gl = _this.device.gl;\n    var vao = _this.device.ensureResourceExists(isWebGL2(gl) ? gl.createVertexArray() : device.OES_vertex_array_object.createVertexArrayOES());\n    if (isWebGL2(gl)) {\n      gl.bindVertexArray(vao);\n    } else {\n      device.OES_vertex_array_object.bindVertexArrayOES(vao);\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, getPlatformBuffer$1(_this.device['fallbackVertexBuffer']));\n    try {\n      // const vertexBufferFormats = [];\n      for (var _e = __values(descriptor.vertexBufferDescriptors), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var vertexBufferDescriptor = _f.value;\n        var stepMode = vertexBufferDescriptor.stepMode,\n          attributes = vertexBufferDescriptor.attributes;\n        try {\n          for (var attributes_1 = (e_2 = void 0, __values(attributes)), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n            var attribute = attributes_1_1.value;\n            var shaderLocation = attribute.shaderLocation,\n              format = attribute.format,\n              _g = attribute.divisor,\n              divisor = _g === void 0 ? 1 : _g;\n            // find location by name in WebGL1\n            var location_1 = isWebGL2(gl) ? shaderLocation : (_d = program.attributes[shaderLocation]) === null || _d === void 0 ? void 0 : _d.location;\n            var vertexFormat = translateVertexFormat$1(format);\n            // @ts-ignore\n            attribute.vertexFormat = vertexFormat;\n            if (!isNil(location_1)) {\n              if (isFormatSizedInteger(format)) {\n                // See https://groups.google.com/d/msg/angleproject/yQb5DaCzcWg/Ova0E3wcAQAJ for more info.\n                // console.warn(\"Vertex format uses sized integer types; this will cause a shader recompile on ANGLE platforms\");\n                // debugger;\n              }\n              var size = vertexFormat.size,\n                type = vertexFormat.type,\n                normalized = vertexFormat.normalized;\n              gl.vertexAttribPointer(location_1, size, type, normalized, 0, 0);\n              if (stepMode === VertexStepMode.INSTANCE) {\n                if (isWebGL2(gl)) {\n                  // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor\n                  gl.vertexAttribDivisor(location_1, divisor);\n                } else {\n                  device.ANGLE_instanced_arrays.vertexAttribDivisorANGLE(location_1, divisor);\n                }\n              }\n              gl.enableVertexAttribArray(location_1);\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (attributes_1_1 && !attributes_1_1.done && (_c = attributes_1.return)) _c.call(attributes_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    if (isWebGL2(gl)) {\n      gl.bindVertexArray(null);\n    } else {\n      device.OES_vertex_array_object.bindVertexArrayOES(null);\n    }\n    _this.vertexBufferDescriptors = vertexBufferDescriptors;\n    _this.vao = vao;\n    _this.indexBufferFormat = indexBufferFormat;\n    _this.indexBufferType = indexBufferType;\n    _this.indexBufferCompByteSize = indexBufferCompByteSize;\n    _this.program = program;\n    return _this;\n  }\n  InputLayout_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    if (this.device['currentBoundVAO'] === this.vao) {\n      if (isWebGL2(this.device.gl)) {\n        this.device.gl.bindVertexArray(null);\n        this.device.gl.deleteVertexArray(this.vao);\n      } else {\n        this.device.OES_vertex_array_object.bindVertexArrayOES(null);\n        this.device.OES_vertex_array_object.deleteVertexArrayOES(this.vao);\n      }\n      this.device['currentBoundVAO'] = null;\n    }\n  };\n  return InputLayout_GL;\n}(ResourceBase_GL);\nvar Texture_GL = /** @class */function (_super) {\n  __extends(Texture_GL, _super);\n  function Texture_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor,\n      fake = _a.fake;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Texture;\n    // Default values.\n    descriptor = __assign({\n      dimension: TextureDimension.TEXTURE_2D,\n      depthOrArrayLayers: 1,\n      mipLevelCount: 1\n    }, descriptor);\n    var gl = _this.device.gl;\n    var gl_target;\n    var gl_texture;\n    var mipLevelCount = _this.clampmipLevelCount(descriptor);\n    _this.immutable = descriptor.usage === TextureUsage.RENDER_TARGET;\n    _this.pixelStore = descriptor.pixelStore;\n    _this.format = descriptor.format;\n    _this.dimension = descriptor.dimension;\n    _this.formatKind = getFormatSamplerKind(descriptor.format);\n    _this.width = descriptor.width;\n    _this.height = descriptor.height;\n    _this.depthOrArrayLayers = descriptor.depthOrArrayLayers;\n    _this.mipmaps = mipLevelCount >= 1;\n    if (!fake) {\n      gl_texture = _this.device.ensureResourceExists(gl.createTexture());\n      var gl_type = _this.device.translateTextureType(descriptor.format);\n      var internalformat = _this.device.translateTextureInternalFormat(descriptor.format);\n      _this.device.setActiveTexture(gl.TEXTURE0);\n      _this.device['currentTextures'][0] = null;\n      _this.preprocessImage();\n      if (descriptor.dimension === TextureDimension.TEXTURE_2D) {\n        gl_target = GL.TEXTURE_2D;\n        gl.bindTexture(gl_target, gl_texture);\n        if (_this.immutable) {\n          if (isWebGL2(gl)) {\n            // texStorage2D will create an immutable texture(fixed size)\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage2D\n            // @see https://github.com/visgl/luma.gl/issues/193\n            // @see https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_immutable.html\n            gl.texStorage2D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height);\n          } else {\n            // texImage2D: level must be 0 for DEPTH_COMPONENT format\n            // const level = internalformat === GL.DEPTH_COMPONENT || this.isNPOT() ? 0 : mipLevelCount;\n            var level = internalformat === GL.DEPTH_COMPONENT || _this.isNPOT() ? 0 : 0;\n            if ((_this.format === Format.D32F || _this.format === Format.D24_S8) && !isWebGL2(gl) && !device.WEBGL_depth_texture) ;else {\n              // if (!isWebGL2(gl)) {\n              //   if (internalformat === GL.RGBA4) {\n              //     internalformat = GL.RGBA;\n              //   }\n              // }\n              // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n              gl.texImage2D(gl_target, level, internalformat, descriptor.width, descriptor.height, 0, internalformat, gl_type, null);\n              // @see https://stackoverflow.com/questions/21954036/dartweb-gl-render-warning-texture-bound-to-texture-unit-0-is-not-renderable\n              // [.WebGL-0x106ad0400]RENDER WARNING: texture bound to texture unit 0 is not renderable. It might be non-power-of-2 or have incompatible texture filtering (maybe)?\n              if (_this.mipmaps) {\n                _this.mipmaps = false;\n                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n              }\n            }\n          }\n        }\n        assert(descriptor.depthOrArrayLayers === 1);\n      } else if (descriptor.dimension === TextureDimension.TEXTURE_2D_ARRAY) {\n        gl_target = GL.TEXTURE_2D_ARRAY;\n        gl.bindTexture(gl_target, gl_texture);\n        if (_this.immutable) {\n          if (isWebGL2(gl)) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage3D\n            gl.texStorage3D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height, descriptor.depthOrArrayLayers);\n          }\n        }\n      } else if (descriptor.dimension === TextureDimension.TEXTURE_3D) {\n        gl_target = GL.TEXTURE_3D;\n        gl.bindTexture(gl_target, gl_texture);\n        if (_this.immutable) {\n          if (isWebGL2(gl)) {\n            gl.texStorage3D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height, descriptor.depthOrArrayLayers);\n          }\n        }\n      } else if (descriptor.dimension === TextureDimension.TEXTURE_CUBE_MAP) {\n        gl_target = GL.TEXTURE_CUBE_MAP;\n        gl.bindTexture(gl_target, gl_texture);\n        if (_this.immutable) {\n          if (isWebGL2(gl)) {\n            gl.texStorage2D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height);\n          }\n        }\n        assert(descriptor.depthOrArrayLayers === 6);\n      } else {\n        throw new Error('whoops');\n      }\n    }\n    _this.gl_texture = gl_texture;\n    _this.gl_target = gl_target;\n    _this.mipLevelCount = mipLevelCount;\n    return _this;\n  }\n  Texture_GL.prototype.setImageData = function (levelDatas, lod) {\n    if (lod === void 0) {\n      lod = 0;\n    }\n    var gl = this.device.gl;\n    isTextureFormatCompressed(this.format);\n    // @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-2.md#3d-texture\n    var is3D = this.gl_target === GL.TEXTURE_3D || this.gl_target === GL.TEXTURE_2D_ARRAY;\n    var isCube = this.gl_target === GL.TEXTURE_CUBE_MAP;\n    var isTA = isTypedArray(levelDatas[0]);\n    this.device.setActiveTexture(gl.TEXTURE0);\n    this.device['currentTextures'][0] = null;\n    var data = levelDatas[0];\n    var width;\n    var height;\n    if (isTA) {\n      width = this.width;\n      height = this.height;\n    } else {\n      // FIXME: Property 'width' does not exist on type 'TexImageSource'.\n      // Property 'width' does not exist on type 'VideoFrame'.\n      // @ts-ignore\n      width = data.width;\n      // @ts-ignore\n      height = data.height;\n      // update size\n      this.width = width;\n      this.height = height;\n    }\n    gl.bindTexture(this.gl_target, this.gl_texture);\n    var gl_format = this.device.translateTextureFormat(this.format);\n    // In WebGL 1, this must be the same as internalformat\n    var gl_internal_format = isWebGL2(gl) ? this.device.translateInternalTextureFormat(this.format) : gl_format;\n    var gl_type = this.device.translateTextureType(this.format);\n    this.preprocessImage();\n    for (var z = 0; z < this.depthOrArrayLayers; z++) {\n      var levelData = levelDatas[z];\n      var gl_target = this.gl_target;\n      if (isCube) {\n        gl_target = GL.TEXTURE_CUBE_MAP_POSITIVE_X + z % 6;\n      }\n      if (this.immutable) {\n        // must use texSubImage2D instead of texImage2D, since texture is immutable\n        // @see https://stackoverflow.com/questions/56123201/unity-plugin-texture-is-immutable?rq=1\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D\n        gl.texSubImage2D(gl_target, lod, 0, 0, width, height, gl_format, gl_type, levelData);\n      } else {\n        if (isWebGL2(gl)) {\n          if (is3D) {\n            gl.texImage3D(gl_target, lod, gl_internal_format, width, height, this.depthOrArrayLayers, 0,\n            // border must be 0\n            gl_format,\n            // TODO: can be different with gl_format\n            gl_type, levelData);\n          } else {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n            gl.texImage2D(gl_target, lod, gl_internal_format, width, height, 0,\n            // border must be 0\n            gl_format,\n            // TODO: can be different with gl_format\n            gl_type, levelData);\n          }\n        } else {\n          // WebGL1: upload Array & Image separately\n          if (isTA) {\n            gl.texImage2D(gl_target, lod, gl_format, width, height, 0, gl_format, gl_type, levelData);\n          } else {\n            gl.texImage2D(gl_target, lod, gl_format, gl_format, gl_type, levelData);\n          }\n        }\n      }\n    }\n    if (this.mipmaps) {\n      this.generateMipmap(is3D);\n    }\n  };\n  Texture_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.device.gl.deleteTexture(getPlatformTexture(this));\n  };\n  Texture_GL.prototype.clampmipLevelCount = function (descriptor) {\n    if (descriptor.dimension === TextureDimension.TEXTURE_2D_ARRAY && descriptor.depthOrArrayLayers > 1) {\n      var typeFlags = getFormatTypeFlags(descriptor.format);\n      if (typeFlags === FormatTypeFlags.BC1) {\n        // Chrome/ANGLE seems to have issues with compressed miplevels of size 1/2, so clamp before they arrive...\n        // https://bugs.chromium.org/p/angleproject/issues/detail?id=4056\n        var w = descriptor.width,\n          h = descriptor.height;\n        for (var i = 0; i < descriptor.mipLevelCount; i++) {\n          if (w <= 2 || h <= 2) return i - 1;\n          w = Math.max(w / 2 | 0, 1);\n          h = Math.max(h / 2 | 0, 1);\n        }\n      }\n    }\n    return descriptor.mipLevelCount;\n  };\n  Texture_GL.prototype.preprocessImage = function () {\n    var gl = this.device.gl;\n    if (this.pixelStore) {\n      if (this.pixelStore.unpackFlipY) {\n        gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, true);\n      }\n      if (this.pixelStore.packAlignment) {\n        gl.pixelStorei(GL.PACK_ALIGNMENT, this.pixelStore.packAlignment);\n      }\n      if (this.pixelStore.unpackAlignment) {\n        gl.pixelStorei(GL.UNPACK_ALIGNMENT, this.pixelStore.unpackAlignment);\n      }\n    }\n  };\n  Texture_GL.prototype.generateMipmap = function (is3D) {\n    if (is3D === void 0) {\n      is3D = false;\n    }\n    var gl = this.device.gl;\n    if (!isWebGL2(gl) && this.isNPOT()) {\n      return this;\n    }\n    if (this.gl_texture && this.gl_target) {\n      gl.bindTexture(this.gl_target, this.gl_texture);\n      if (is3D) {\n        gl.texParameteri(this.gl_target, GL.TEXTURE_BASE_LEVEL, 0);\n        gl.texParameteri(this.gl_target, GL.TEXTURE_MAX_LEVEL, Math.log2(this.width));\n        gl.texParameteri(this.gl_target, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_LINEAR);\n        gl.texParameteri(this.gl_target, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\n      } else {\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST_MIPMAP_LINEAR);\n      }\n      gl.generateMipmap(this.gl_target);\n      gl.bindTexture(this.gl_target, null);\n    }\n    return this;\n  };\n  Texture_GL.prototype.isNPOT = function () {\n    var gl = this.device.gl;\n    if (isWebGL2(gl)) {\n      // NPOT restriction is only for WebGL1\n      return false;\n    }\n    return !isPowerOfTwo(this.width) || !isPowerOfTwo(this.height);\n  };\n  return Texture_GL;\n}(ResourceBase_GL);\nvar RenderTarget_GL = /** @class */function (_super) {\n  __extends(RenderTarget_GL, _super);\n  function RenderTarget_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.RenderTarget;\n    _this.gl_renderbuffer = null;\n    _this.texture = null;\n    var gl = _this.device.gl;\n    var format = descriptor.format,\n      width = descriptor.width,\n      height = descriptor.height,\n      _b = descriptor.sampleCount,\n      sampleCount = _b === void 0 ? 1 : _b,\n      texture = descriptor.texture;\n    var useRenderbuffer = false;\n    // @see https://blog.tojicode.com/2012/07/using-webgldepthtexture.html\n    if ((format === Format.D32F || format === Format.D24_S8) && texture && !isWebGL2(gl) && !device.WEBGL_depth_texture) {\n      texture.destroy();\n      _this.texture = null;\n      useRenderbuffer = true;\n    }\n    if (!useRenderbuffer && texture) {\n      _this.texture = texture;\n    } else {\n      _this.gl_renderbuffer = _this.device.ensureResourceExists(gl.createRenderbuffer());\n      gl.bindRenderbuffer(gl.RENDERBUFFER, _this.gl_renderbuffer);\n      var gl_format = _this.device.translateTextureInternalFormat(format, true);\n      if (isWebGL2(gl)) {\n        if (sampleCount > 1) {\n          // @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-2.md#multisampled-renderbuffers\n          gl.renderbufferStorageMultisample(GL.RENDERBUFFER, sampleCount, gl_format, width, height);\n        } else {\n          gl.renderbufferStorage(GL.RENDERBUFFER, gl_format, width, height);\n        }\n      } else {\n        // WebGL1 can only use FXAA or other post-processing methods\n        gl.renderbufferStorage(GL.RENDERBUFFER, gl_format, width, height);\n      }\n    }\n    _this.format = format;\n    _this.width = width;\n    _this.height = height;\n    _this.sampleCount = sampleCount;\n    return _this;\n  }\n  RenderTarget_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    if (this.gl_renderbuffer !== null) {\n      this.device.gl.deleteRenderbuffer(this.gl_renderbuffer);\n    }\n    if (this.texture) {\n      this.texture.destroy();\n    }\n  };\n  return RenderTarget_GL;\n}(ResourceBase_GL);\n\n// const quadVert = `\n// layout(location = 0) in vec2 a_Position;\n// out vec2 v_TexCoord;\n// void main() {\n//   v_TexCoord = 0.5 * (a_Position + 1.0);\n//   gl_Position = vec4(a_Position, 0., 1.);\n//   #ifdef VIEWPORT_ORIGIN_TL\n//     v_TexCoord.y = 1.0 - v_TexCoord.y;\n//   #endif\n// }\n// `;\nvar ProgramCompileState_GL;\n(function (ProgramCompileState_GL) {\n  ProgramCompileState_GL[ProgramCompileState_GL[\"NeedsCompile\"] = 0] = \"NeedsCompile\";\n  ProgramCompileState_GL[ProgramCompileState_GL[\"Compiling\"] = 1] = \"Compiling\";\n  ProgramCompileState_GL[ProgramCompileState_GL[\"NeedsBind\"] = 2] = \"NeedsBind\";\n  ProgramCompileState_GL[ProgramCompileState_GL[\"ReadyToUse\"] = 3] = \"ReadyToUse\";\n})(ProgramCompileState_GL || (ProgramCompileState_GL = {}));\nvar Program_GL = /** @class */function (_super) {\n  __extends(Program_GL, _super);\n  function Program_GL(_a, rawVertexGLSL) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.rawVertexGLSL = rawVertexGLSL;\n    _this.type = ResourceType.Program;\n    // eslint-disable-next-line\n    _this.uniformSetters = {};\n    _this.attributes = [];\n    var gl = _this.device.gl;\n    _this.descriptor = descriptor;\n    _this.gl_program = _this.device.ensureResourceExists(gl.createProgram());\n    _this.gl_shader_vert = null;\n    _this.gl_shader_frag = null;\n    _this.compileState = ProgramCompileState_GL.NeedsCompile;\n    _this.tryCompileProgram();\n    return _this;\n  }\n  Program_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.device.gl.deleteProgram(this.gl_program);\n    this.device.gl.deleteShader(this.gl_shader_vert);\n    this.device.gl.deleteShader(this.gl_shader_frag);\n  };\n  Program_GL.prototype.tryCompileProgram = function () {\n    assert(this.compileState === ProgramCompileState_GL.NeedsCompile);\n    var _a = this.descriptor,\n      vertex = _a.vertex,\n      fragment = _a.fragment;\n    var gl = this.device.gl;\n    // if (this.gl_shader_vert !== null) gl.deleteShader(this.gl_shader_vert);\n    // if (this.gl_shader_frag !== null) gl.deleteShader(this.gl_shader_frag);\n    if ((vertex === null || vertex === void 0 ? void 0 : vertex.glsl) && (fragment === null || fragment === void 0 ? void 0 : fragment.glsl)) {\n      this.gl_shader_vert = this.compileShader(vertex.postprocess ? vertex.postprocess(vertex.glsl) : vertex.glsl, gl.VERTEX_SHADER);\n      this.gl_shader_frag = this.compileShader(fragment.postprocess ? fragment.postprocess(fragment.glsl) : fragment.glsl, gl.FRAGMENT_SHADER);\n      gl.attachShader(this.gl_program, this.gl_shader_vert);\n      gl.attachShader(this.gl_program, this.gl_shader_frag);\n      gl.linkProgram(this.gl_program);\n      this.compileState = ProgramCompileState_GL.Compiling;\n      if (!isWebGL2(gl)) {\n        // extract uniforms\n        this.readUniformLocationsFromLinkedProgram();\n        // extract attributes\n        this.readAttributesFromLinkedProgram();\n      }\n    }\n  };\n  Program_GL.prototype.readAttributesFromLinkedProgram = function () {\n    var _a;\n    var gl = this.device.gl;\n    var count = gl.getProgramParameter(this.gl_program, gl.ACTIVE_ATTRIBUTES);\n    var defines = getDefines(this.descriptor.vertex.glsl);\n    var locations = getAttributeLocations(\n    // Use raw GLSL\n    this.rawVertexGLSL, defines);\n    var _loop_1 = function (index) {\n      var _b = gl.getActiveAttrib(this_1.gl_program, index),\n        name_1 = _b.name,\n        type = _b.type,\n        size = _b.size;\n      var location_1 = gl.getAttribLocation(this_1.gl_program, name_1);\n      var definedLocation = (_a = locations.find(function (l) {\n        return l.name === name_1;\n      })) === null || _a === void 0 ? void 0 : _a.location;\n      // Add only user provided attributes, for built-in attributes like\n      // `gl_InstanceID` locaiton will be < 0\n      if (location_1 >= 0 && !isNil(definedLocation)) {\n        this_1.attributes[definedLocation] = {\n          name: name_1,\n          location: location_1,\n          type: type,\n          size: size\n        };\n      }\n    };\n    var this_1 = this;\n    for (var index = 0; index < count; index++) {\n      _loop_1(index);\n    }\n  };\n  Program_GL.prototype.readUniformLocationsFromLinkedProgram = function () {\n    var gl = this.device.gl;\n    var numUniforms = gl.getProgramParameter(this.gl_program, gl.ACTIVE_UNIFORMS);\n    for (var i = 0; i < numUniforms; i++) {\n      var info = gl.getActiveUniform(this.gl_program, i);\n      var name_2 = parseUniformName(info.name).name;\n      var location_2 = gl.getUniformLocation(this.gl_program, name_2);\n      this.uniformSetters[name_2] = getUniformSetter(gl, location_2, info);\n      if (info && info.size > 1) {\n        for (var l = 0; l < info.size; l++) {\n          location_2 = gl.getUniformLocation(this.gl_program, \"\".concat(name_2, \"[\").concat(l, \"]\"));\n          this.uniformSetters[\"\".concat(name_2, \"[\").concat(l, \"]\")] = getUniformSetter(gl, location_2, info);\n        }\n      }\n    }\n  };\n  Program_GL.prototype.compileShader = function (contents, type) {\n    var gl = this.device.gl;\n    var shader = this.device.ensureResourceExists(gl.createShader(type));\n    gl.shaderSource(shader, contents);\n    gl.compileShader(shader);\n    return shader;\n  };\n  // eslint-disable-next-line\n  Program_GL.prototype.setUniformsLegacy = function (uniforms) {\n    if (uniforms === void 0) {\n      uniforms = {};\n    }\n    var gl = this.device.gl;\n    if (!isWebGL2(gl)) {\n      var programUsed = false;\n      for (var uniformName in uniforms) {\n        if (!programUsed) {\n          gl.useProgram(this.gl_program);\n          programUsed = true;\n        }\n        var uniform = uniforms[uniformName];\n        var uniformSetter = this.uniformSetters[uniformName];\n        if (uniformSetter) {\n          var value = uniform;\n          if (value instanceof Texture_GL) {\n            value = value.textureIndex;\n          }\n          uniformSetter(value);\n        }\n      }\n    }\n    return this;\n  };\n  return Program_GL;\n}(ResourceBase_GL);\nvar QueryPool_GL = /** @class */function (_super) {\n  __extends(QueryPool_GL, _super);\n  function QueryPool_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.QueryPool;\n    var gl = _this.device.gl;\n    if (isWebGL2(gl)) {\n      var elemCount = descriptor.elemCount,\n        type = descriptor.type;\n      _this.gl_query = nArray(elemCount, function () {\n        return _this.device.ensureResourceExists(gl.createQuery());\n      });\n      _this.gl_query_type = translateQueryPoolType$1(type);\n    }\n    return _this;\n  }\n  QueryPool_GL.prototype.queryResultOcclusion = function (dstOffs) {\n    var gl = this.device.gl;\n    if (isWebGL2(gl)) {\n      var gl_query = this.gl_query[dstOffs];\n      if (!gl.getQueryParameter(gl_query, gl.QUERY_RESULT_AVAILABLE)) {\n        return null;\n      }\n      return !!gl.getQueryParameter(gl_query, gl.QUERY_RESULT);\n    }\n    return null;\n  };\n  QueryPool_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    var gl = this.device.gl;\n    if (isWebGL2(gl)) {\n      for (var i = 0; i < this.gl_query.length; i++) {\n        gl.deleteQuery(this.gl_query[i]);\n      }\n    }\n  };\n  return QueryPool_GL;\n}(ResourceBase_GL);\nvar Readback_GL = /** @class */function (_super) {\n  __extends(Readback_GL, _super);\n  function Readback_GL(_a) {\n    var id = _a.id,\n      device = _a.device;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Readback;\n    _this.gl_pbo = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLSync\n    _this.gl_sync = null;\n    return _this;\n  }\n  Readback_GL.prototype.clientWaitAsync = function (sync, flags, interval_ms) {\n    if (flags === void 0) {\n      flags = 0;\n    }\n    if (interval_ms === void 0) {\n      interval_ms = 10;\n    }\n    var gl = this.device.gl;\n    return new Promise(function (resolve, reject) {\n      function test() {\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/clientWaitSync\n        var res = gl.clientWaitSync(sync, flags, 0);\n        if (res == gl.WAIT_FAILED) {\n          reject();\n          return;\n        }\n        if (res == gl.TIMEOUT_EXPIRED) {\n          setTimeout(test, clamp(interval_ms, 0, gl.MAX_CLIENT_WAIT_TIMEOUT_WEBGL));\n          return;\n        }\n        resolve();\n      }\n      test();\n    });\n  };\n  Readback_GL.prototype.getBufferSubDataAsync = function (target, buffer, srcByteOffset, dstBuffer, dstOffset, length) {\n    return __awaiter(this, void 0, void 0, function () {\n      var gl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            gl = this.device.gl;\n            if (!isWebGL2(gl)) return [3 /*break*/, 2];\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/fenceSync\n            this.gl_sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n            gl.flush();\n            return [4 /*yield*/, this.clientWaitAsync(this.gl_sync, 0, 10)];\n          case 1:\n            _a.sent();\n            gl.bindBuffer(target, buffer);\n            gl.getBufferSubData(target, srcByteOffset, dstBuffer, dstOffset, length);\n            gl.bindBuffer(target, null);\n            return [2 /*return*/, dstBuffer];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#use_non-blocking_async_data_readback\n   */\n  Readback_GL.prototype.readTexture = function (t, x, y, width, height, dstBuffer, dstOffset, length) {\n    if (dstOffset === void 0) {\n      dstOffset = 0;\n    }\n    if (length === void 0) {\n      length = dstBuffer.byteLength || 0;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var gl, texture, gl_format, gl_type, formatByteSize;\n      return __generator(this, function (_a) {\n        gl = this.device.gl;\n        texture = t;\n        gl_format = this.device.translateTextureFormat(texture.format);\n        gl_type = this.device.translateTextureType(texture.format);\n        formatByteSize = getFormatByteSize(texture.format);\n        if (isWebGL2(gl)) {\n          this.gl_pbo = this.device.ensureResourceExists(gl.createBuffer());\n          // PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations\n          // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer\n          gl.bindBuffer(gl.PIXEL_PACK_BUFFER, this.gl_pbo);\n          // STREAM_READ: The contents are intended to be specified once by reading data from WebGL, and queried at most a few times by the application\n          // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData\n          gl.bufferData(gl.PIXEL_PACK_BUFFER, length, gl.STREAM_READ);\n          gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n          gl.bindFramebuffer(GL.READ_FRAMEBUFFER, this.device['readbackFramebuffer']);\n          gl.framebufferTexture2D(GL.READ_FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture.gl_texture, 0);\n          gl.bindBuffer(gl.PIXEL_PACK_BUFFER, this.gl_pbo);\n          gl.readPixels(x, y, width, height, gl_format, gl_type, dstOffset * formatByteSize);\n          gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n          return [2 /*return*/, this.getBufferSubDataAsync(gl.PIXEL_PACK_BUFFER, this.gl_pbo, 0, dstBuffer, dstOffset, 0)];\n        } else {\n          return [2 /*return*/, this.readTextureSync(t, x, y, width, height, dstBuffer, dstOffset, length)];\n        }\n      });\n    });\n  };\n  Readback_GL.prototype.readTextureSync = function (t, x, y, width, height, dstBuffer, dstOffset, length) {\n    if (length === void 0) {\n      length = dstBuffer.byteLength || 0;\n    }\n    var gl = this.device.gl;\n    var texture = t;\n    var gl_type = this.device.translateTextureType(texture.format);\n    gl.bindFramebuffer(GL.FRAMEBUFFER, this.device['readbackFramebuffer']);\n    gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture.gl_texture, 0);\n    // slow requires roundtrip to GPU\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n    gl.pixelStorei(gl.PACK_ALIGNMENT, 4);\n    gl.readPixels(x, y, width, height, gl.RGBA, gl_type, dstBuffer);\n    return dstBuffer;\n  };\n  Readback_GL.prototype.readBuffer = function (b, srcByteOffset, dstBuffer, dstOffset, length) {\n    return __awaiter(this, void 0, void 0, function () {\n      var gl;\n      return __generator(this, function (_a) {\n        gl = this.device.gl;\n        if (isWebGL2(gl)) {\n          return [2 /*return*/, this.getBufferSubDataAsync(gl.ARRAY_BUFFER, getPlatformBuffer$1(b, srcByteOffset), srcByteOffset, dstBuffer, dstOffset, length)];\n        }\n        // TODO: WebGL1\n        return [2 /*return*/, Promise.reject()];\n      });\n    });\n  };\n  Readback_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    if (isWebGL2(this.device.gl)) {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/deleteSync\n      if (this.gl_sync !== null) {\n        this.device.gl.deleteSync(this.gl_sync);\n      }\n      if (this.gl_pbo !== null) {\n        this.device.gl.deleteBuffer(this.gl_pbo);\n      }\n    }\n  };\n  return Readback_GL;\n}(ResourceBase_GL);\nvar RenderPipeline_GL = /** @class */function (_super) {\n  __extends(RenderPipeline_GL, _super);\n  function RenderPipeline_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _b, _c;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.RenderPipeline;\n    _this.drawMode = translatePrimitiveTopology((_b = descriptor.topology) !== null && _b !== void 0 ? _b : PrimitiveTopology.TRIANGLES);\n    _this.program = descriptor.program;\n    _this.inputLayout = descriptor.inputLayout;\n    _this.megaState = __assign(__assign({}, copyMegaState(defaultMegaState)), descriptor.megaStateDescriptor);\n    _this.colorAttachmentFormats = descriptor.colorAttachmentFormats.slice();\n    _this.depthStencilAttachmentFormat = descriptor.depthStencilAttachmentFormat;\n    _this.sampleCount = (_c = descriptor.sampleCount) !== null && _c !== void 0 ? _c : 1;\n    return _this;\n  }\n  return RenderPipeline_GL;\n}(ResourceBase_GL);\nvar ComputePipeline_GL = /** @class */function (_super) {\n  __extends(ComputePipeline_GL, _super);\n  function ComputePipeline_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.ComputePipeline;\n    _this.descriptor = descriptor;\n    return _this;\n    // const program = descriptor.program as Program_GL;\n  }\n\n  return ComputePipeline_GL;\n}(ResourceBase_GL);\nvar ResourceCreationTracker = /** @class */function () {\n  function ResourceCreationTracker() {\n    this.liveObjects = new Set();\n    this.creationStacks = new Map();\n    this.deletionStacks = new Map();\n  }\n  ResourceCreationTracker.prototype.trackResourceCreated = function (o) {\n    this.creationStacks.set(o, new Error().stack);\n    this.liveObjects.add(o);\n  };\n  ResourceCreationTracker.prototype.trackResourceDestroyed = function (o) {\n    if (this.deletionStacks.has(o)) console.warn(\"Object double freed:\", o, \"\\n\\nCreation stack: \", this.creationStacks.get(o), \"\\n\\nDeletion stack: \", this.deletionStacks.get(o), \"\\n\\nThis stack: \", new Error().stack);\n    this.deletionStacks.set(o, new Error().stack);\n    this.liveObjects.delete(o);\n  };\n  ResourceCreationTracker.prototype.checkForLeaks = function () {\n    var e_1, _a;\n    try {\n      for (var _b = __values(this.liveObjects.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var o = _c.value;\n        console.warn('Object leaked:', o, 'Creation stack:', this.creationStacks.get(o));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  ResourceCreationTracker.prototype.setResourceLeakCheck = function (o, v) {\n    if (v) {\n      this.liveObjects.add(o);\n    } else {\n      this.liveObjects.delete(o);\n    }\n  };\n  return ResourceCreationTracker;\n}();\n\n/**\n * In WebGL 1 texture image data and sampling information are both stored in texture objects\n * @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-2.md#sampler-objects\n */\nvar Sampler_GL = /** @class */function (_super) {\n  __extends(Sampler_GL, _super);\n  function Sampler_GL(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _b, _c;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Sampler;\n    var gl = _this.device.gl;\n    if (isWebGL2(gl)) {\n      var gl_sampler = _this.device.ensureResourceExists(gl.createSampler());\n      gl.samplerParameteri(gl_sampler, GL.TEXTURE_WRAP_S, translateAddressMode$1(descriptor.addressModeU));\n      gl.samplerParameteri(gl_sampler, GL.TEXTURE_WRAP_T, translateAddressMode$1(descriptor.addressModeV));\n      gl.samplerParameteri(gl_sampler, GL.TEXTURE_WRAP_R, translateAddressMode$1((_b = descriptor.addressModeW) !== null && _b !== void 0 ? _b : descriptor.addressModeU));\n      gl.samplerParameteri(gl_sampler, GL.TEXTURE_MIN_FILTER, translateFilterMode(descriptor.minFilter, descriptor.mipmapFilter));\n      gl.samplerParameteri(gl_sampler, GL.TEXTURE_MAG_FILTER, translateFilterMode(descriptor.magFilter, MipmapFilterMode.NO_MIP));\n      if (descriptor.lodMinClamp !== undefined) {\n        gl.samplerParameterf(gl_sampler, GL.TEXTURE_MIN_LOD, descriptor.lodMinClamp);\n      }\n      if (descriptor.lodMaxClamp !== undefined) {\n        gl.samplerParameterf(gl_sampler, GL.TEXTURE_MAX_LOD, descriptor.lodMaxClamp);\n      }\n      if (descriptor.compareFunction !== undefined) {\n        gl.samplerParameteri(gl_sampler, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n        gl.samplerParameteri(gl_sampler, gl.TEXTURE_COMPARE_FUNC, descriptor.compareFunction);\n      }\n      var maxAnisotropy = (_c = descriptor.maxAnisotropy) !== null && _c !== void 0 ? _c : 1;\n      if (maxAnisotropy > 1 && _this.device.EXT_texture_filter_anisotropic !== null) {\n        assert(descriptor.minFilter === FilterMode.BILINEAR && descriptor.magFilter === FilterMode.BILINEAR && descriptor.mipmapFilter === MipmapFilterMode.LINEAR);\n        gl.samplerParameterf(gl_sampler, _this.device.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, maxAnisotropy);\n      }\n      _this.gl_sampler = gl_sampler;\n    } else {\n      // use later in WebGL1\n      _this.descriptor = descriptor;\n    }\n    return _this;\n  }\n  Sampler_GL.prototype.setTextureParameters = function (gl_target, width, height) {\n    var _a;\n    var gl = this.device.gl;\n    var descriptor = this.descriptor;\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL#%E9%9D%9E2%E7%9A%84%E5%B9%82%E7%BA%B9%E7%90%86\n    if (this.isNPOT(width, height)) {\n      gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n    } else {\n      gl.texParameteri(gl_target, GL.TEXTURE_MIN_FILTER, translateFilterMode(descriptor.minFilter, descriptor.mipmapFilter));\n    }\n    gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, translateAddressMode$1(descriptor.addressModeU));\n    gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, translateAddressMode$1(descriptor.addressModeV));\n    gl.texParameteri(gl_target, GL.TEXTURE_MAG_FILTER, translateFilterMode(descriptor.magFilter, MipmapFilterMode.NO_MIP));\n    // if (descriptor.lodMinClamp !== undefined) {\n    //   gl.texParameterf(gl_target, GL.TEXTURE_MIN_LOD, descriptor.lodMinClamp);\n    // }\n    // if (descriptor.lodMaxClamp !== undefined) {\n    //   gl.texParameterf(gl_target, GL.TEXTURE_MAX_LOD, descriptor.lodMaxClamp);\n    // }\n    var maxAnisotropy = (_a = descriptor.maxAnisotropy) !== null && _a !== void 0 ? _a : 1;\n    if (maxAnisotropy > 1 && this.device.EXT_texture_filter_anisotropic !== null) {\n      assert(descriptor.minFilter === FilterMode.BILINEAR && descriptor.magFilter === FilterMode.BILINEAR && descriptor.mipmapFilter === MipmapFilterMode.LINEAR);\n      gl.texParameteri(gl_target, this.device.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, maxAnisotropy);\n    }\n  };\n  Sampler_GL.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    if (isWebGL2(this.device.gl)) {\n      this.device.gl.deleteSampler(getPlatformSampler$1(this));\n    }\n  };\n  Sampler_GL.prototype.isNPOT = function (width, height) {\n    return !isPowerOfTwo(width) || !isPowerOfTwo(height);\n  };\n  return Sampler_GL;\n}(ResourceBase_GL);\n\n// import { assert, assertExists } from '../api';\n// import type { ComputePipeline_GL } from './ComputePipeline';\nvar ComputePass_GL = /** @class */function () {\n  function ComputePass_GL() {}\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpucomputepassencoder-dispatch\n   */\n  ComputePass_GL.prototype.dispatchWorkgroups = function (workgroupCountX, workgroupCountY, workgroupCountZ) {};\n  ComputePass_GL.prototype.dispatchWorkgroupsIndirect = function (indirectBuffer, indirectOffset) {};\n  ComputePass_GL.prototype.setPipeline = function (pipeline_) {\n    // const pipeline = pipeline_ as ComputePipeline_WebGPU;\n    // const gpuComputePipeline = assertExists(pipeline.gpuComputePipeline);\n    // this.gpuComputePassEncoder.setPipeline(gpuComputePipeline);\n  };\n  ComputePass_GL.prototype.setBindings = function (bindings_) {\n    // const bindings = bindings_ as Bindings_WebGPU;\n    // this.gpuComputePassEncoder.setBindGroup(bindingLayoutIndex, bindings.gpuBindGroup[0]);\n  };\n  ComputePass_GL.prototype.pushDebugGroup = function (name) {};\n  ComputePass_GL.prototype.popDebugGroup = function () {};\n  ComputePass_GL.prototype.insertDebugMarker = function (markerLabel) {};\n  return ComputePass_GL;\n}();\nvar RenderBundle_GL = /** @class */function (_super) {\n  __extends(RenderBundle_GL, _super);\n  function RenderBundle_GL() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ResourceType.RenderBundle;\n    _this.commands = [];\n    return _this;\n  }\n  RenderBundle_GL.prototype.push = function (f) {\n    this.commands.push(f);\n  };\n  RenderBundle_GL.prototype.replay = function () {\n    this.commands.forEach(function (f) {\n      return f();\n    });\n  };\n  return RenderBundle_GL;\n}(ResourceBase_GL);\n\n// This is a workaround for ANGLE not supporting UBOs greater than 64kb (the limit of D3D).\n// https://bugs.chromium.org/p/angleproject/issues/detail?id=3388\nvar UBO_PAGE_MAX_BYTE_SIZE = 0x10000;\n/**\n * Extract uniform blocks from shader source.\n *\n * @example\n * ```glsl\n * layout(std140) uniform CommonUniforms {\n    float u_blur;\n  };\n * ```\n */\nvar UNIFROM_BLOCK_REGEXP = /uniform(?:\\s+)(\\w+)(?:\\s?){([^]*?)}/g;\nvar Device_GL = /** @class */function () {\n  function Device_GL(gl, configuration) {\n    if (configuration === void 0) {\n      configuration = {};\n    }\n    // Configuration\n    this.shaderDebug = false;\n    // GL extensions\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/OES_vertex_array_object\n    this.OES_vertex_array_object = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays\n    this.ANGLE_instanced_arrays = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n    this.OES_texture_float = null;\n    // @see https://www.khronos.org/registry/webgl/extensions/OES_draw_buffers_indexed/\n    this.OES_draw_buffers_indexed = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers\n    this.WEBGL_draw_buffers = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n    this.WEBGL_depth_texture = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_color_buffer_float\n    this.WEBGL_color_buffer_float = null;\n    this.EXT_color_buffer_half_float = null;\n    this.WEBGL_compressed_texture_s3tc = null;\n    this.WEBGL_compressed_texture_s3tc_srgb = null;\n    this.EXT_texture_compression_rgtc = null;\n    this.EXT_texture_filter_anisotropic = null;\n    this.KHR_parallel_shader_compile = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_norm16\n    this.EXT_texture_norm16 = null;\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n    this.EXT_color_buffer_float = null;\n    this.OES_texture_float_linear = null;\n    this.OES_texture_half_float_linear = null;\n    // Swap Chain\n    this.scTexture = null;\n    this.scPlatformFramebuffer = null;\n    // Device\n    this.currentActiveTexture = null;\n    this.currentBoundVAO = null;\n    this.currentProgram = null;\n    this.resourceCreationTracker = null;\n    this.resourceUniqueId = 0;\n    // Cached GL driver state\n    this.currentColorAttachments = [];\n    this.currentColorAttachmentLevels = [];\n    this.currentColorResolveTos = [];\n    this.currentColorResolveToLevels = [];\n    this.currentSampleCount = -1;\n    this.currentIndexBufferByteOffset = null;\n    this.currentMegaState = copyMegaState(defaultMegaState);\n    this.currentSamplers = [];\n    this.currentTextures = [];\n    this.currentUniformBuffers = [];\n    this.currentUniformBufferByteOffsets = [];\n    this.currentUniformBufferByteSizes = [];\n    this.currentScissorEnabled = false;\n    this.currentStencilRef = null;\n    // Pass Execution\n    this.currentRenderPassDescriptor = null;\n    this.currentRenderPassDescriptorStack = [];\n    this.debugGroupStack = [];\n    this.resolveColorAttachmentsChanged = false;\n    this.resolveDepthStencilAttachmentsChanged = false;\n    this.explicitBindingLocations = false;\n    this.separateSamplerTextures = false;\n    this.viewportOrigin = ViewportOrigin.LOWER_LEFT;\n    this.clipSpaceNearZ = ClipSpaceNearZ.NEGATIVE_ONE;\n    this.supportMRT = false;\n    this.inBlitRenderPass = false;\n    this.supportedSampleCounts = [];\n    this.occlusionQueriesRecommended = false;\n    this.computeShadersSupported = false;\n    this.gl = gl;\n    this.contextAttributes = assertExists(gl.getContextAttributes());\n    if (!isWebGL2(gl)) {\n      this.OES_vertex_array_object = gl.getExtension('OES_vertex_array_object');\n      // TODO: when ANGLE_instanced_arrays unavailable...\n      this.ANGLE_instanced_arrays = gl.getExtension('ANGLE_instanced_arrays');\n      this.OES_texture_float = gl.getExtension('OES_texture_float');\n      this.WEBGL_draw_buffers = gl.getExtension('WEBGL_draw_buffers');\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n      this.WEBGL_depth_texture = gl.getExtension('WEBGL_depth_texture');\n      this.WEBGL_color_buffer_float = gl.getExtension('WEBGL_color_buffer_float');\n      this.EXT_color_buffer_half_float = gl.getExtension('EXT_color_buffer_half_float');\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_frag_depth\n      gl.getExtension('EXT_frag_depth');\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/OES_element_index_uint\n      gl.getExtension('OES_element_index_uint');\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/OES_standard_derivatives\n      gl.getExtension('OES_standard_derivatives');\n    } else {\n      this.EXT_texture_norm16 = gl.getExtension('EXT_texture_norm16');\n      this.EXT_color_buffer_float = gl.getExtension('EXT_color_buffer_float');\n    }\n    this.WEBGL_compressed_texture_s3tc = gl.getExtension('WEBGL_compressed_texture_s3tc');\n    this.WEBGL_compressed_texture_s3tc_srgb = gl.getExtension('WEBGL_compressed_texture_s3tc_srgb');\n    this.EXT_texture_compression_rgtc = gl.getExtension('EXT_texture_compression_rgtc');\n    this.EXT_texture_filter_anisotropic = gl.getExtension('EXT_texture_filter_anisotropic');\n    this.EXT_texture_norm16 = gl.getExtension('EXT_texture_norm16');\n    this.OES_texture_float_linear = gl.getExtension('OES_texture_float_linear');\n    this.OES_texture_half_float_linear = gl.getExtension('OES_texture_half_float_linear');\n    this.KHR_parallel_shader_compile = gl.getExtension('KHR_parallel_shader_compile');\n    // this.OES_draw_buffers_indexed = gl.getExtension('OES_draw_buffers_indexed');\n    if (isWebGL2(gl)) {\n      this.platformString = 'WebGL2';\n      this.glslVersion = '#version 300 es';\n    } else {\n      this.platformString = 'WebGL1';\n      this.glslVersion = '#version 100'; // 100 es not supported\n    }\n    // Create our fake swap-chain texture.\n    this.scTexture = new Texture_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: {\n        width: 0,\n        height: 0,\n        depthOrArrayLayers: 1,\n        dimension: TextureDimension.TEXTURE_2D,\n        mipLevelCount: 1,\n        usage: TextureUsage.RENDER_TARGET,\n        format: this.contextAttributes.alpha === false ? Format.U8_RGB_RT : Format.U8_RGBA_RT\n      },\n      fake: true\n    });\n    this.scTexture.formatKind = SamplerFormatKind.Float;\n    this.scTexture.gl_target = null;\n    this.scTexture.gl_texture = null;\n    this.resolveColorReadFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n    this.resolveColorDrawFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n    this.resolveDepthStencilReadFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n    this.resolveDepthStencilDrawFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n    this.renderPassDrawFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n    this.readbackFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n    this.fallbackTexture2D = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Float);\n    this.fallbackTexture2DDepth = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Depth);\n    this.fallbackVertexBuffer = this.createBuffer({\n      viewOrSize: 1,\n      usage: BufferUsage.VERTEX,\n      hint: BufferFrequencyHint.STATIC\n    });\n    if (isWebGL2(gl)) {\n      this.fallbackTexture2DArray = this.createFallbackTexture(TextureDimension.TEXTURE_2D_ARRAY, SamplerFormatKind.Float);\n      this.fallbackTexture3D = this.createFallbackTexture(TextureDimension.TEXTURE_3D, SamplerFormatKind.Float);\n      this.fallbackTextureCube = this.createFallbackTexture(TextureDimension.TEXTURE_CUBE_MAP, SamplerFormatKind.Float);\n    }\n    // Adjust for GL defaults.\n    this.currentMegaState.depthCompare = CompareFunction.LESS;\n    this.currentMegaState.depthWrite = false;\n    this.currentMegaState.attachmentsState[0].channelWriteMask = ChannelWriteMask.ALL;\n    // always have depth test enabled.\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.STENCIL_TEST);\n    this.checkLimits();\n    if (configuration.shaderDebug) {\n      this.shaderDebug = true;\n    }\n    if (configuration.trackResources) {\n      this.resourceCreationTracker = new ResourceCreationTracker();\n    }\n  }\n  Device_GL.prototype.destroy = function () {\n    if (this.blitBindings) {\n      this.blitBindings.destroy();\n    }\n    if (this.blitInputLayout) {\n      this.blitInputLayout.destroy();\n    }\n    if (this.blitRenderPipeline) {\n      this.blitRenderPipeline.destroy();\n    }\n    if (this.blitVertexBuffer) {\n      this.blitVertexBuffer.destroy();\n    }\n    if (this.blitProgram) {\n      this.blitProgram.destroy();\n    }\n  };\n  Device_GL.prototype.createFallbackTexture = function (dimension, formatKind) {\n    var depthOrArrayLayers = dimension === TextureDimension.TEXTURE_CUBE_MAP ? 6 : 1;\n    // const supportDepthTexture =\n    //   isWebGL2(this.gl) || (!isWebGL2(this.gl) && !!this.WEBGL_depth_texture);\n    var format = formatKind === SamplerFormatKind.Depth ? Format.D32F : Format.U8_RGBA_NORM;\n    var texture = this.createTexture({\n      dimension: dimension,\n      format: format,\n      usage: TextureUsage.SAMPLED,\n      width: 1,\n      height: 1,\n      depthOrArrayLayers: depthOrArrayLayers,\n      mipLevelCount: 1\n    });\n    if (formatKind === SamplerFormatKind.Float) {\n      texture.setImageData([new Uint8Array(4 * depthOrArrayLayers)]);\n    }\n    return getPlatformTexture(texture);\n  };\n  Device_GL.prototype.getNextUniqueId = function () {\n    return ++this.resourceUniqueId;\n  };\n  Device_GL.prototype.checkLimits = function () {\n    var gl = this.gl;\n    this.maxVertexAttribs = gl.getParameter(GL.MAX_VERTEX_ATTRIBS);\n    if (isWebGL2(gl)) {\n      this.uniformBufferMaxPageByteSize = Math.min(gl.getParameter(GL.MAX_UNIFORM_BLOCK_SIZE), UBO_PAGE_MAX_BYTE_SIZE);\n      this.uniformBufferWordAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT) / 4;\n      var supportedSampleCounts = gl.getInternalformatParameter(gl.RENDERBUFFER, gl.DEPTH32F_STENCIL8, gl.SAMPLES);\n      this.supportedSampleCounts = supportedSampleCounts ? __spreadArray([], __read(supportedSampleCounts), false) : [];\n      this.occlusionQueriesRecommended = true;\n    } else {\n      // mock ubo in WebGL1\n      this.uniformBufferWordAlignment = 64;\n      this.uniformBufferMaxPageByteSize = UBO_PAGE_MAX_BYTE_SIZE;\n    }\n    this.uniformBufferMaxPageWordSize = this.uniformBufferMaxPageByteSize / 4;\n    if (!this.supportedSampleCounts.includes(1)) {\n      this.supportedSampleCounts.push(1);\n    }\n    this.supportedSampleCounts.sort(function (a, b) {\n      return a - b;\n    });\n  };\n  //#region SwapChain\n  Device_GL.prototype.configureSwapChain = function (width, height, platformFramebuffer) {\n    var texture = this.scTexture;\n    texture.width = width;\n    texture.height = height;\n    this.scPlatformFramebuffer = nullify(platformFramebuffer);\n  };\n  Device_GL.prototype.getDevice = function () {\n    return this;\n  };\n  Device_GL.prototype.getCanvas = function () {\n    return this.gl.canvas;\n  };\n  Device_GL.prototype.getOnscreenTexture = function () {\n    return this.scTexture;\n  };\n  Device_GL.prototype.beginFrame = function () {};\n  Device_GL.prototype.endFrame = function () {};\n  //#endregion\n  //#region Device\n  // @see https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n  Device_GL.prototype.translateTextureInternalFormat = function (fmt, isRenderbufferStorage) {\n    if (isRenderbufferStorage === void 0) {\n      isRenderbufferStorage = false;\n    }\n    switch (fmt) {\n      case Format.ALPHA:\n        return GL.ALPHA;\n      case Format.U8_LUMINANCE:\n      case Format.F16_LUMINANCE:\n      case Format.F32_LUMINANCE:\n        return GL.LUMINANCE;\n      // case Format.LUMINANCE_ALPHA:\n      //   return GL.LUMINANCE_ALPHA;\n      case Format.F16_R:\n        return GL.R16F;\n      case Format.F16_RG:\n        return GL.RG16F;\n      case Format.F16_RGB:\n        return GL.RGB16F;\n      case Format.F16_RGBA:\n        return GL.RGBA16F;\n      case Format.F32_R:\n        return GL.R32F;\n      case Format.F32_RG:\n        return GL.RG32F;\n      case Format.F32_RGB:\n        return GL.RGB32F;\n      case Format.F32_RGBA:\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_color_buffer_float\n        return isWebGL2(this.gl) ? GL.RGBA32F : isRenderbufferStorage ? this.WEBGL_color_buffer_float.RGBA32F_EXT : GL.RGBA;\n      case Format.U8_R_NORM:\n        return GL.R8;\n      case Format.U8_RG_NORM:\n        return GL.RG8;\n      case Format.U8_RGB_NORM:\n      case Format.U8_RGB_RT:\n        return GL.RGB8;\n      case Format.U8_RGB_SRGB:\n        return GL.SRGB8;\n      case Format.U8_RGBA_NORM:\n      case Format.U8_RGBA_RT:\n        // WebGL1 renderbuffer only support RGBA4 RGB565 RGB5_A1\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage#parameters\n        // But texImage2D allows RGBA\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n        return isWebGL2(this.gl) ? GL.RGBA8 : isRenderbufferStorage ? GL.RGBA4 : GL.RGBA;\n      case Format.U8_RGBA:\n        return GL.RGBA;\n      case Format.U8_RGBA_SRGB:\n      case Format.U8_RGBA_RT_SRGB:\n        return GL.SRGB8_ALPHA8;\n      case Format.U16_R:\n        return GL.R16UI;\n      case Format.U16_R_NORM:\n        return this.EXT_texture_norm16.R16_EXT;\n      case Format.U16_RG_NORM:\n        return this.EXT_texture_norm16.RG16_EXT;\n      case Format.U16_RGBA_NORM:\n        return this.EXT_texture_norm16.RGBA16_EXT;\n      case Format.U16_RGBA_5551:\n        return GL.RGB5_A1;\n      case Format.U16_RGB_565:\n        return GL.RGB565;\n      case Format.U32_R:\n        return GL.R32UI;\n      case Format.S8_RGBA_NORM:\n        return GL.RGBA8_SNORM;\n      case Format.S8_RG_NORM:\n        return GL.RG8_SNORM;\n      case Format.BC1:\n        return this.WEBGL_compressed_texture_s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      case Format.BC1_SRGB:\n        return this.WEBGL_compressed_texture_s3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n      case Format.BC2:\n        return this.WEBGL_compressed_texture_s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      case Format.BC2_SRGB:\n        return this.WEBGL_compressed_texture_s3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n      case Format.BC3:\n        return this.WEBGL_compressed_texture_s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      case Format.BC3_SRGB:\n        return this.WEBGL_compressed_texture_s3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n      case Format.BC4_UNORM:\n        return this.EXT_texture_compression_rgtc.COMPRESSED_RED_RGTC1_EXT;\n      case Format.BC4_SNORM:\n        return this.EXT_texture_compression_rgtc.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n      case Format.BC5_UNORM:\n        return this.EXT_texture_compression_rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT;\n      case Format.BC5_SNORM:\n        return this.EXT_texture_compression_rgtc.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n      case Format.D32F_S8:\n        return isWebGL2(this.gl) ? GL.DEPTH32F_STENCIL8 : this.WEBGL_depth_texture ? GL.DEPTH_STENCIL : GL.DEPTH_COMPONENT16;\n      case Format.D24_S8:\n        return isWebGL2(this.gl) ? GL.DEPTH24_STENCIL8 : this.WEBGL_depth_texture ? GL.DEPTH_STENCIL : GL.DEPTH_COMPONENT16;\n      case Format.D32F:\n        return isWebGL2(this.gl) ? GL.DEPTH_COMPONENT32F : this.WEBGL_depth_texture ? GL.DEPTH_COMPONENT : GL.DEPTH_COMPONENT16;\n      case Format.D24:\n        return isWebGL2(this.gl) ? GL.DEPTH_COMPONENT24 : this.WEBGL_depth_texture ? GL.DEPTH_COMPONENT : GL.DEPTH_COMPONENT16;\n      default:\n        throw new Error('whoops');\n    }\n  };\n  Device_GL.prototype.translateTextureType = function (fmt) {\n    var typeFlags = getFormatTypeFlags(fmt);\n    switch (typeFlags) {\n      case FormatTypeFlags.U8:\n        return GL.UNSIGNED_BYTE;\n      case FormatTypeFlags.U16:\n        return GL.UNSIGNED_SHORT;\n      case FormatTypeFlags.U32:\n        return GL.UNSIGNED_INT;\n      case FormatTypeFlags.S8:\n        return GL.BYTE;\n      case FormatTypeFlags.F16:\n        return GL.HALF_FLOAT;\n      case FormatTypeFlags.F32:\n        return GL.FLOAT;\n      case FormatTypeFlags.U16_PACKED_5551:\n        return GL.UNSIGNED_SHORT_5_5_5_1;\n      case FormatTypeFlags.D32F:\n        return isWebGL2(this.gl) ? GL.FLOAT : this.WEBGL_depth_texture ? GL.UNSIGNED_INT : GL.UNSIGNED_BYTE;\n      case FormatTypeFlags.D24:\n        return isWebGL2(this.gl) ? GL.UNSIGNED_INT_24_8 : this.WEBGL_depth_texture ? GL.UNSIGNED_SHORT : GL.UNSIGNED_BYTE;\n      case FormatTypeFlags.D24S8:\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n        return isWebGL2(this.gl) ? GL.UNSIGNED_INT_24_8 : this.WEBGL_depth_texture ? GL.UNSIGNED_INT_24_8_WEBGL : GL.UNSIGNED_BYTE;\n      case FormatTypeFlags.D32FS8:\n        return GL.FLOAT_32_UNSIGNED_INT_24_8_REV;\n      default:\n        throw new Error('whoops');\n    }\n  };\n  /**\n   * Only works in WebGL2\n   * @see https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n   */\n  Device_GL.prototype.translateInternalTextureFormat = function (fmt) {\n    switch (fmt) {\n      case Format.F32_R:\n        return GL.R32F;\n      case Format.F32_RG:\n        return GL.RG32F;\n      case Format.F32_RGB:\n        return GL.RGB32F;\n      case Format.F32_RGBA:\n        return GL.RGBA32F;\n      case Format.F16_R:\n        return GL.R16F;\n      case Format.F16_RG:\n        return GL.RG16F;\n      case Format.F16_RGB:\n        return GL.RGB16F;\n      case Format.F16_RGBA:\n        return GL.RGBA16F;\n    }\n    return this.translateTextureFormat(fmt);\n  };\n  Device_GL.prototype.translateTextureFormat = function (fmt) {\n    if (isTextureFormatCompressed(fmt) || fmt === Format.F32_LUMINANCE || fmt === Format.U8_LUMINANCE) {\n      return this.translateTextureInternalFormat(fmt);\n    }\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n    var supportDepthTexture = isWebGL2(this.gl) || !isWebGL2(this.gl) && !!this.WEBGL_depth_texture;\n    switch (fmt) {\n      case Format.D24_S8:\n      case Format.D32F_S8:\n        return supportDepthTexture ? GL.DEPTH_STENCIL : GL.RGBA;\n      case Format.D24:\n      case Format.D32F:\n        return supportDepthTexture ? GL.DEPTH_COMPONENT : GL.RGBA;\n    }\n    var isInteger = isFormatSizedInteger(fmt);\n    var compFlags = getFormatCompFlags(fmt);\n    switch (compFlags) {\n      case FormatCompFlags.A:\n        return GL.ALPHA;\n      case FormatCompFlags.R:\n        return isInteger ? GL.RED_INTEGER : GL.RED;\n      case FormatCompFlags.RG:\n        return isInteger ? GL.RG_INTEGER : GL.RG;\n      case FormatCompFlags.RGB:\n        return isInteger ? GL.RGB_INTEGER : GL.RGB;\n      case FormatCompFlags.RGBA:\n        // TODO: Chrome throw error when readPixels RGBA_INTEGER and UNSIGNED_BYTE\n        // @see https://github.com/KhronosGroup/WebGL/issues/2747\n        // return isInteger ? GL.RGBA_INTEGER : GL.RGBA;\n        return GL.RGBA;\n    }\n  };\n  Device_GL.prototype.setActiveTexture = function (texture) {\n    if (this.currentActiveTexture !== texture) {\n      this.gl.activeTexture(texture);\n      this.currentActiveTexture = texture;\n    }\n  };\n  Device_GL.prototype.bindVAO = function (vao) {\n    if (this.currentBoundVAO !== vao) {\n      if (isWebGL2(this.gl)) {\n        this.gl.bindVertexArray(vao);\n      } else {\n        this.OES_vertex_array_object.bindVertexArrayOES(vao);\n      }\n      this.currentBoundVAO = vao;\n    }\n  };\n  Device_GL.prototype.programCompiled = function (program) {\n    assert(program.compileState !== ProgramCompileState_GL.NeedsCompile);\n    if (program.compileState === ProgramCompileState_GL.Compiling) {\n      program.compileState = ProgramCompileState_GL.NeedsBind;\n      if (this.shaderDebug) {\n        this.checkProgramCompilationForErrors(program);\n      }\n    }\n  };\n  Device_GL.prototype.useProgram = function (program) {\n    if (this.currentProgram === program) return;\n    this.programCompiled(program);\n    this.gl.useProgram(program.gl_program);\n    this.currentProgram = program;\n  };\n  Device_GL.prototype.ensureResourceExists = function (resource) {\n    if (resource === null) {\n      var error = this.gl.getError();\n      throw new Error(\"Created resource is null; GL error encountered: \".concat(error));\n    } else {\n      return resource;\n    }\n  };\n  Device_GL.prototype.createBuffer = function (descriptor) {\n    return new Buffer_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createTexture = function (descriptor) {\n    return new Texture_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createSampler = function (descriptor) {\n    return new Sampler_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createRenderTarget = function (descriptor) {\n    return new RenderTarget_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createRenderTargetFromTexture = function (texture) {\n    var _a = texture,\n      format = _a.format,\n      width = _a.width,\n      height = _a.height,\n      mipLevelCount = _a.mipLevelCount;\n    // Render targets cannot have a mip chain currently.\n    assert(mipLevelCount === 1);\n    return this.createRenderTarget({\n      format: format,\n      width: width,\n      height: height,\n      sampleCount: 1,\n      texture: texture\n    });\n  };\n  Device_GL.prototype.createProgram = function (descriptor) {\n    var _a, _b, _c;\n    var rawVertexGLSL = (_a = descriptor.vertex) === null || _a === void 0 ? void 0 : _a.glsl;\n    // preprocess GLSL first\n    if ((_b = descriptor.vertex) === null || _b === void 0 ? void 0 : _b.glsl) {\n      descriptor.vertex.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'vert', descriptor.vertex.glsl);\n    }\n    if ((_c = descriptor.fragment) === null || _c === void 0 ? void 0 : _c.glsl) {\n      descriptor.fragment.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'frag', descriptor.fragment.glsl);\n    }\n    return this.createProgramSimple(descriptor, rawVertexGLSL);\n  };\n  Device_GL.prototype.createProgramSimple = function (descriptor, rawVertexGLSL) {\n    var program = new Program_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    }, rawVertexGLSL);\n    return program;\n  };\n  Device_GL.prototype.createBindings = function (descriptor) {\n    return new Bindings_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createInputLayout = function (descriptor) {\n    return new InputLayout_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createRenderPipeline = function (descriptor) {\n    return new RenderPipeline_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createComputePass = function () {\n    return new ComputePass_GL();\n  };\n  Device_GL.prototype.createComputePipeline = function (descriptor) {\n    return new ComputePipeline_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_GL.prototype.createReadback = function () {\n    return new Readback_GL({\n      id: this.getNextUniqueId(),\n      device: this\n    });\n  };\n  Device_GL.prototype.createQueryPool = function (type, elemCount) {\n    return new QueryPool_GL({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: {\n        type: type,\n        elemCount: elemCount\n      }\n    });\n  };\n  Device_GL.prototype.formatRenderPassDescriptor = function (descriptor) {\n    var _a, _b, _c, _d, _e, _f;\n    var colorAttachment = descriptor.colorAttachment;\n    descriptor.depthClearValue = (_a = descriptor.depthClearValue) !== null && _a !== void 0 ? _a : 'load';\n    descriptor.stencilClearValue = (_b = descriptor.stencilClearValue) !== null && _b !== void 0 ? _b : 'load';\n    for (var i = 0; i < colorAttachment.length; i++) {\n      if (!descriptor.colorAttachmentLevel) {\n        descriptor.colorAttachmentLevel = [];\n      }\n      descriptor.colorAttachmentLevel[i] = (_c = descriptor.colorAttachmentLevel[i]) !== null && _c !== void 0 ? _c : 0;\n      if (!descriptor.colorResolveToLevel) {\n        descriptor.colorResolveToLevel = [];\n      }\n      descriptor.colorResolveToLevel[i] = (_d = descriptor.colorResolveToLevel[i]) !== null && _d !== void 0 ? _d : 0;\n      if (!descriptor.colorClearColor) {\n        descriptor.colorClearColor = [];\n      }\n      descriptor.colorClearColor[i] = (_e = descriptor.colorClearColor[i]) !== null && _e !== void 0 ? _e : 'load';\n      if (!descriptor.colorStore) {\n        descriptor.colorStore = [];\n      }\n      descriptor.colorStore[i] = (_f = descriptor.colorStore[i]) !== null && _f !== void 0 ? _f : false;\n    }\n  };\n  Device_GL.prototype.createRenderBundle = function () {\n    return new RenderBundle_GL({\n      id: this.getNextUniqueId(),\n      device: this\n    });\n  };\n  Device_GL.prototype.beginBundle = function (bundle) {\n    this.renderBundle = bundle;\n  };\n  Device_GL.prototype.endBundle = function () {\n    this.renderBundle = undefined;\n  };\n  Device_GL.prototype.executeBundles = function (renderBundles) {\n    renderBundles.forEach(function (renderBundle) {\n      renderBundle.replay();\n    });\n  };\n  Device_GL.prototype.createRenderPass = function (descriptor) {\n    if (this.currentRenderPassDescriptor !== null) {\n      // Save current renderpass descriptor.\n      this.currentRenderPassDescriptorStack.push(this.currentRenderPassDescriptor);\n    }\n    this.currentRenderPassDescriptor = descriptor;\n    // Format renderpass descriptor\n    this.formatRenderPassDescriptor(descriptor);\n    var colorAttachment = descriptor.colorAttachment,\n      colorAttachmentLevel = descriptor.colorAttachmentLevel,\n      colorClearColor = descriptor.colorClearColor,\n      colorResolveTo = descriptor.colorResolveTo,\n      colorResolveToLevel = descriptor.colorResolveToLevel,\n      depthStencilAttachment = descriptor.depthStencilAttachment,\n      depthClearValue = descriptor.depthClearValue,\n      stencilClearValue = descriptor.stencilClearValue,\n      depthStencilResolveTo = descriptor.depthStencilResolveTo;\n    this.setRenderPassParametersBegin(colorAttachment.length);\n    for (var i = 0; i < colorAttachment.length; i++) {\n      this.setRenderPassParametersColor(i, colorAttachment[i], colorAttachmentLevel[i], colorResolveTo[i], colorResolveToLevel[i]);\n    }\n    this.setRenderPassParametersDepthStencil(depthStencilAttachment, depthStencilResolveTo);\n    this.validateCurrentAttachments();\n    for (var i = 0; i < colorAttachment.length; i++) {\n      var clearColor = colorClearColor[i];\n      if (clearColor === 'load') continue;\n      this.setRenderPassParametersClearColor(i, clearColor.r, clearColor.g, clearColor.b, clearColor.a);\n    }\n    this.setRenderPassParametersClearDepthStencil(depthClearValue, stencilClearValue);\n    return this;\n  };\n  Device_GL.prototype.submitPass = function (pass) {\n    assert(this.currentRenderPassDescriptor !== null);\n    this.endPass();\n    if (this.currentRenderPassDescriptorStack.length) {\n      // Restore previous renderpass descriptor.\n      this.currentRenderPassDescriptor = this.currentRenderPassDescriptorStack.pop();\n    } else {\n      this.currentRenderPassDescriptor = null;\n    }\n  };\n  Device_GL.prototype.copySubTexture2D = function (dst_, dstX, dstY, src_, srcX, srcY) {\n    var gl = this.gl;\n    var dst = dst_;\n    var src = src_;\n    assert(src.mipLevelCount === 1);\n    assert(dst.mipLevelCount === 1);\n    if (isWebGL2(gl)) {\n      if (dst === this.scTexture) {\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.scPlatformFramebuffer);\n      } else {\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.resolveColorDrawFramebuffer);\n        this.bindFramebufferAttachment(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, dst, 0);\n      }\n      gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.resolveColorReadFramebuffer);\n      this.bindFramebufferAttachment(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, src, 0);\n      gl.blitFramebuffer(srcX, srcY, srcX + src.width, srcY + src.height, dstX, dstY, dstX + src.width, dstY + src.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n      gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n    } else {\n      if (dst === this.scTexture) {\n        var rt = this.createRenderTargetFromTexture(src_);\n        this.submitBlitRenderPass(rt, dst);\n      }\n    }\n  };\n  Device_GL.prototype.queryLimits = function () {\n    return this;\n  };\n  Device_GL.prototype.queryTextureFormatSupported = function (format, width, height) {\n    switch (format) {\n      case Format.BC1_SRGB:\n      case Format.BC2_SRGB:\n      case Format.BC3_SRGB:\n        if (this.WEBGL_compressed_texture_s3tc_srgb !== null) return isBlockCompressSized(width, height, 4, 4);\n        return false;\n      case Format.BC1:\n      case Format.BC2:\n      case Format.BC3:\n        if (this.WEBGL_compressed_texture_s3tc !== null) return isBlockCompressSized(width, height, 4, 4);\n        return false;\n      case Format.BC4_UNORM:\n      case Format.BC4_SNORM:\n      case Format.BC5_UNORM:\n      case Format.BC5_SNORM:\n        if (this.EXT_texture_compression_rgtc !== null) return isBlockCompressSized(width, height, 4, 4);\n        return false;\n      case Format.U16_R_NORM:\n      case Format.U16_RG_NORM:\n      case Format.U16_RGBA_NORM:\n        return this.EXT_texture_norm16 !== null;\n      case Format.F32_R:\n      case Format.F32_RG:\n      case Format.F32_RGB:\n      case Format.F32_RGBA:\n        return this.OES_texture_float_linear !== null;\n      case Format.F16_R:\n      case Format.F16_RG:\n      case Format.F16_RGB:\n      case Format.F16_RGBA:\n        return this.OES_texture_half_float_linear !== null;\n      default:\n        return true;\n    }\n  };\n  Device_GL.prototype.queryProgramReady = function (program) {\n    var gl = this.gl;\n    if (program.compileState === ProgramCompileState_GL.NeedsCompile) {\n      // This should not happen.\n      throw new Error('whoops');\n    }\n    if (program.compileState === ProgramCompileState_GL.Compiling) {\n      var complete = void 0;\n      if (this.KHR_parallel_shader_compile !== null) {\n        complete = gl.getProgramParameter(program.gl_program, this.KHR_parallel_shader_compile.COMPLETION_STATUS_KHR);\n      } else {\n        // If we don't have async shader compilation, assume all compilation is done immediately :/\n        complete = true;\n      }\n      if (complete) {\n        this.programCompiled(program);\n      }\n      return complete;\n    }\n    return program.compileState === ProgramCompileState_GL.NeedsBind || program.compileState === ProgramCompileState_GL.ReadyToUse;\n  };\n  Device_GL.prototype.queryPlatformAvailable = function () {\n    return this.gl.isContextLost();\n  };\n  Device_GL.prototype.queryVendorInfo = function () {\n    return this;\n  };\n  Device_GL.prototype.queryRenderPass = function (o) {\n    return this.currentRenderPassDescriptor;\n  };\n  Device_GL.prototype.queryRenderTarget = function (o) {\n    var renderTarget = o;\n    return renderTarget;\n  };\n  //#endregion\n  //#region Debugging\n  Device_GL.prototype.setResourceName = function (o, name) {\n    o.name = name;\n    if (o.type === ResourceType.Buffer) {\n      var gl_buffer_pages = o.gl_buffer_pages;\n      for (var i = 0; i < gl_buffer_pages.length; i++) assignPlatformName(gl_buffer_pages[i], \"\".concat(name, \" Page \").concat(i));\n    } else if (o.type === ResourceType.Texture) {\n      assignPlatformName(getPlatformTexture(o), name);\n    } else if (o.type === ResourceType.Sampler) {\n      assignPlatformName(getPlatformSampler$1(o), name);\n    } else if (o.type === ResourceType.RenderTarget) {\n      var gl_renderbuffer = o.gl_renderbuffer;\n      if (gl_renderbuffer !== null) assignPlatformName(gl_renderbuffer, name);\n    } else if (o.type === ResourceType.InputLayout) {\n      assignPlatformName(o.vao, name);\n    }\n  };\n  Device_GL.prototype.setResourceLeakCheck = function (o, v) {\n    if (this.resourceCreationTracker !== null) this.resourceCreationTracker.setResourceLeakCheck(o, v);\n  };\n  Device_GL.prototype.checkForLeaks = function () {\n    if (this.resourceCreationTracker !== null) this.resourceCreationTracker.checkForLeaks();\n  };\n  Device_GL.prototype.pushDebugGroup = function (name) {};\n  Device_GL.prototype.popDebugGroup = function () {};\n  Device_GL.prototype.insertDebugMarker = function (markerLabel) {};\n  // pushDebugGroup(debugGroup: DebugGroup): void {\n  //   this.debugGroupStack.push(debugGroup);\n  // }\n  // popDebugGroup(): void {\n  //   this.debugGroupStack.pop();\n  // }\n  Device_GL.prototype.programPatched = function (o, descriptor) {\n    assert(this.shaderDebug);\n    // const program = o as Program_GL;\n    // const gl = this.gl;\n    // gl.deleteProgram(program.gl_program);\n    // program.descriptor = descriptor;\n    // program.gl_program = this.ensureResourceExists(gl.createProgram());\n    // program.compileState = ProgramCompileState_GL.NeedsCompile;\n    // this.tryCompileProgram(program);\n    // this.checkProgramCompilationForErrors(program);\n  };\n\n  Device_GL.prototype.getBufferData = function (buffer, dstBuffer, wordOffset) {\n    if (wordOffset === void 0) {\n      wordOffset = 0;\n    }\n    var gl = this.gl;\n    if (isWebGL2(gl)) {\n      gl.bindBuffer(gl.COPY_READ_BUFFER, getPlatformBuffer$1(buffer, wordOffset * 4));\n      gl.getBufferSubData(gl.COPY_READ_BUFFER, wordOffset * 4, dstBuffer);\n    }\n  };\n  //#endregion\n  Device_GL.prototype.debugGroupStatisticsDrawCall = function (count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    for (var i = this.debugGroupStack.length - 1; i >= 0; i--) this.debugGroupStack[i].drawCallCount += count;\n  };\n  Device_GL.prototype.debugGroupStatisticsBufferUpload = function (count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    for (var i = this.debugGroupStack.length - 1; i >= 0; i--) this.debugGroupStack[i].bufferUploadCount += count;\n  };\n  Device_GL.prototype.debugGroupStatisticsTextureBind = function (count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    for (var i = this.debugGroupStack.length - 1; i >= 0; i--) this.debugGroupStack[i].textureBindCount += count;\n  };\n  Device_GL.prototype.debugGroupStatisticsTriangles = function (count) {\n    for (var i = this.debugGroupStack.length - 1; i >= 0; i--) this.debugGroupStack[i].triangleCount += count;\n  };\n  Device_GL.prototype.reportShaderError = function (shader, str) {\n    var gl = this.gl;\n    var status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!status) {\n      console.error(prependLineNo(str));\n      var debug_shaders = gl.getExtension('WEBGL_debug_shaders');\n      if (debug_shaders) console.error(debug_shaders.getTranslatedShaderSource(shader));\n      console.error(gl.getShaderInfoLog(shader));\n    }\n    return status;\n  };\n  Device_GL.prototype.checkProgramCompilationForErrors = function (program) {\n    var gl = this.gl;\n    var prog = program.gl_program;\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n      var descriptor = program.descriptor;\n      if (!this.reportShaderError(program.gl_shader_vert, descriptor.vertex.glsl)) return;\n      if (!this.reportShaderError(program.gl_shader_frag, descriptor.fragment.glsl)) return;\n      // Neither shader had an error, report the program info log.\n      console.error(gl.getProgramInfoLog(program.gl_program));\n    }\n  };\n  Device_GL.prototype.bindFramebufferAttachment = function (framebuffer, binding, attachment, level) {\n    var gl = this.gl;\n    if (isNil(attachment)) {\n      gl.framebufferRenderbuffer(framebuffer, binding, gl.RENDERBUFFER, null);\n    } else if (attachment.type === ResourceType.RenderTarget) {\n      if (attachment.gl_renderbuffer !== null) {\n        gl.framebufferRenderbuffer(framebuffer, binding, gl.RENDERBUFFER, attachment.gl_renderbuffer);\n      } else if (attachment.texture !== null) {\n        gl.framebufferTexture2D(framebuffer, binding, GL.TEXTURE_2D, getPlatformTexture(attachment.texture), level);\n      }\n    } else if (attachment.type === ResourceType.Texture) {\n      var texture = getPlatformTexture(attachment);\n      if (attachment.dimension === TextureDimension.TEXTURE_2D) {\n        gl.framebufferTexture2D(framebuffer, binding, GL.TEXTURE_2D, texture, level);\n      } else if (isWebGL2(gl) && attachment.dimension === TextureDimension.TEXTURE_2D_ARRAY) ;\n    }\n  };\n  Device_GL.prototype.bindFramebufferDepthStencilAttachment = function (framebuffer, attachment) {\n    var gl = this.gl;\n    var flags = !isNil(attachment) ? getFormatFlags(attachment.format) : FormatFlags.Depth | FormatFlags.Stencil;\n    var depth = !!(flags & FormatFlags.Depth);\n    var stencil = !!(flags & FormatFlags.Stencil);\n    if (depth && stencil) {\n      var supportDepthTexture = isWebGL2(this.gl) || !isWebGL2(this.gl) && !!this.WEBGL_depth_texture;\n      if (supportDepthTexture) {\n        this.bindFramebufferAttachment(framebuffer, gl.DEPTH_STENCIL_ATTACHMENT, attachment, 0);\n      } else {\n        this.bindFramebufferAttachment(framebuffer, gl.DEPTH_ATTACHMENT, attachment, 0);\n      }\n    } else if (depth) {\n      this.bindFramebufferAttachment(framebuffer, gl.DEPTH_ATTACHMENT, attachment, 0);\n      this.bindFramebufferAttachment(framebuffer, gl.STENCIL_ATTACHMENT, null, 0);\n    } else if (stencil) {\n      this.bindFramebufferAttachment(framebuffer, gl.STENCIL_ATTACHMENT, attachment, 0);\n      this.bindFramebufferAttachment(framebuffer, gl.DEPTH_ATTACHMENT, null, 0);\n    }\n  };\n  Device_GL.prototype.validateCurrentAttachments = function () {\n    var sampleCount = -1,\n      width = -1,\n      height = -1;\n    for (var i = 0; i < this.currentColorAttachments.length; i++) {\n      var attachment = this.currentColorAttachments[i];\n      if (attachment === null) continue;\n      if (sampleCount === -1) {\n        sampleCount = attachment.sampleCount;\n        width = attachment.width;\n        height = attachment.height;\n      } else {\n        assert(sampleCount === attachment.sampleCount);\n        assert(width === attachment.width);\n        assert(height === attachment.height);\n      }\n    }\n    if (this.currentDepthStencilAttachment) {\n      if (sampleCount === -1) {\n        sampleCount = this.currentDepthStencilAttachment.sampleCount;\n      } else {\n        assert(sampleCount === this.currentDepthStencilAttachment.sampleCount);\n        assert(width === this.currentDepthStencilAttachment.width);\n        assert(height === this.currentDepthStencilAttachment.height);\n      }\n    }\n    this.currentSampleCount = sampleCount;\n  };\n  Device_GL.prototype.setRenderPassParametersBegin = function (numColorAttachments) {\n    var gl = this.gl;\n    if (isWebGL2(gl)) {\n      gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER, this.renderPassDrawFramebuffer);\n    } else {\n      if (!this.inBlitRenderPass) {\n        gl.bindFramebuffer(GL.FRAMEBUFFER, this.renderPassDrawFramebuffer);\n      }\n    }\n    if (isWebGL2(gl)) {\n      gl.drawBuffers([GL.COLOR_ATTACHMENT0, GL.COLOR_ATTACHMENT1, GL.COLOR_ATTACHMENT2, GL.COLOR_ATTACHMENT3]);\n    } else {\n      if (!this.inBlitRenderPass && this.WEBGL_draw_buffers) {\n        // MRT @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-1.md#multiple-render-targets\n        this.WEBGL_draw_buffers.drawBuffersWEBGL([GL.COLOR_ATTACHMENT0_WEBGL, GL.COLOR_ATTACHMENT1_WEBGL, GL.COLOR_ATTACHMENT2_WEBGL, GL.COLOR_ATTACHMENT3_WEBGL // gl_FragData[3]\n        ]);\n      }\n    }\n\n    if (!this.inBlitRenderPass) {\n      for (var i = numColorAttachments; i < this.currentColorAttachments.length; i++) {\n        var target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n        var attachment = isWebGL2(gl) ? GL.COLOR_ATTACHMENT0 : GL.COLOR_ATTACHMENT0_WEBGL;\n        gl.framebufferRenderbuffer(target, attachment + i, GL.RENDERBUFFER, null);\n        gl.framebufferTexture2D(target, attachment + i, GL.TEXTURE_2D, null, 0);\n      }\n    }\n    this.currentColorAttachments.length = numColorAttachments;\n  };\n  Device_GL.prototype.setRenderPassParametersColor = function (i, colorAttachment, attachmentLevel, colorResolveTo, resolveToLevel) {\n    var gl = this.gl;\n    var gl2 = isWebGL2(gl);\n    if (this.currentColorAttachments[i] !== colorAttachment || this.currentColorAttachmentLevels[i] !== attachmentLevel) {\n      this.currentColorAttachments[i] = colorAttachment;\n      this.currentColorAttachmentLevels[i] = attachmentLevel;\n      if (gl2 || !gl2 && this.WEBGL_draw_buffers) {\n        this.bindFramebufferAttachment(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, (gl2 ? GL.COLOR_ATTACHMENT0 : GL.COLOR_ATTACHMENT0_WEBGL) + i, colorAttachment, attachmentLevel);\n      }\n      this.resolveColorAttachmentsChanged = true;\n    }\n    if (this.currentColorResolveTos[i] !== colorResolveTo || this.currentColorResolveToLevels[i] !== resolveToLevel) {\n      this.currentColorResolveTos[i] = colorResolveTo;\n      this.currentColorResolveToLevels[i] = resolveToLevel;\n      if (colorResolveTo !== null) {\n        this.resolveColorAttachmentsChanged = true;\n      }\n    }\n  };\n  Device_GL.prototype.setRenderPassParametersDepthStencil = function (depthStencilAttachment, depthStencilResolveTo) {\n    var gl = this.gl;\n    if (this.currentDepthStencilAttachment !== depthStencilAttachment) {\n      this.currentDepthStencilAttachment = depthStencilAttachment;\n      if (!this.inBlitRenderPass) {\n        this.bindFramebufferDepthStencilAttachment(isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.currentDepthStencilAttachment);\n      }\n      this.resolveDepthStencilAttachmentsChanged = true;\n    }\n    if (this.currentDepthStencilResolveTo !== depthStencilResolveTo) {\n      this.currentDepthStencilResolveTo = depthStencilResolveTo;\n      if (depthStencilResolveTo) {\n        this.resolveDepthStencilAttachmentsChanged = true;\n      }\n    }\n  };\n  Device_GL.prototype.setRenderPassParametersClearColor = function (slot, r, g, b, a) {\n    var gl = this.gl;\n    if (this.OES_draw_buffers_indexed !== null) {\n      var attachment = this.currentMegaState.attachmentsState[slot];\n      if (attachment && attachment.channelWriteMask !== ChannelWriteMask.ALL) {\n        this.OES_draw_buffers_indexed.colorMaskiOES(slot, true, true, true, true);\n        attachment.channelWriteMask = ChannelWriteMask.ALL;\n      }\n    } else {\n      var attachment = this.currentMegaState.attachmentsState[0];\n      if (attachment && attachment.channelWriteMask !== ChannelWriteMask.ALL) {\n        gl.colorMask(true, true, true, true);\n        attachment.channelWriteMask = ChannelWriteMask.ALL;\n      }\n    }\n    this.setScissorRectEnabled(false);\n    if (isWebGL2(gl)) {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/clearBuffer\n      gl.clearBufferfv(gl.COLOR, slot, [r, g, b, a]);\n    } else {\n      gl.clearColor(r, g, b, a);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n  };\n  Device_GL.prototype.setRenderPassParametersClearDepthStencil = function (depthClearValue, stencilClearValue) {\n    if (depthClearValue === void 0) {\n      depthClearValue = 'load';\n    }\n    if (stencilClearValue === void 0) {\n      stencilClearValue = 'load';\n    }\n    var gl = this.gl;\n    if (depthClearValue !== 'load') {\n      assert(!!this.currentDepthStencilAttachment);\n      // GL clears obey the masks... bad API or worst API?\n      if (!this.currentMegaState.depthWrite) {\n        gl.depthMask(true);\n        this.currentMegaState.depthWrite = true;\n      }\n      if (isWebGL2(gl)) {\n        gl.clearBufferfv(gl.DEPTH, 0, [depthClearValue]);\n      } else {\n        gl.clearDepth(depthClearValue);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n    }\n    if (stencilClearValue !== 'load') {\n      assert(!!this.currentDepthStencilAttachment);\n      if (!this.currentMegaState.stencilWrite) {\n        gl.enable(gl.STENCIL_TEST);\n        gl.stencilMask(0xff);\n        this.currentMegaState.stencilWrite = true;\n      }\n      if (isWebGL2(gl)) {\n        gl.clearBufferiv(gl.STENCIL, 0, [stencilClearValue]);\n      } else {\n        gl.clearStencil(stencilClearValue);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n      }\n    }\n  };\n  Device_GL.prototype.setBindings = function (bindings_) {\n    var _this = this;\n    var _a;\n    if (this.renderBundle) {\n      this.renderBundle.push(function () {\n        return _this.setBindings(bindings_);\n      });\n      return;\n    }\n    var gl = this.gl;\n    var _b = bindings_,\n      uniformBufferBindings = _b.uniformBufferBindings,\n      samplerBindings = _b.samplerBindings,\n      bindingLayouts = _b.bindingLayouts;\n    assert(0 < bindingLayouts.bindingLayoutTables.length);\n    var bindingLayoutTable = bindingLayouts.bindingLayoutTables[0];\n    // Ignore extra bindings.\n    assert(uniformBufferBindings.length >= bindingLayoutTable.numUniformBuffers);\n    assert(samplerBindings.length >= bindingLayoutTable.numSamplers);\n    for (var i = 0; i < uniformBufferBindings.length; i++) {\n      var binding = uniformBufferBindings[i];\n      if (binding.size === 0) continue;\n      var index = bindingLayoutTable.firstUniformBuffer + i;\n      var buffer = binding.buffer;\n      var byteOffset = binding.offset || 0;\n      var byteSize = binding.size || buffer.byteSize;\n      if (buffer !== this.currentUniformBuffers[index] || byteOffset !== this.currentUniformBufferByteOffsets[index] || byteSize !== this.currentUniformBufferByteSizes[index]) {\n        var platformBufferByteOffset = byteOffset % buffer.pageByteSize;\n        var platformBuffer = buffer.gl_buffer_pages[byteOffset / buffer.pageByteSize | 0];\n        assert(platformBufferByteOffset + byteSize <= buffer.pageByteSize);\n        if (isWebGL2(gl)) {\n          gl.bindBufferRange(gl.UNIFORM_BUFFER, index, platformBuffer, platformBufferByteOffset, byteSize);\n        }\n        this.currentUniformBuffers[index] = buffer;\n        this.currentUniformBufferByteOffsets[index] = byteOffset;\n        this.currentUniformBufferByteSizes[index] = byteSize;\n      }\n    }\n    for (var i = 0; i < bindingLayoutTable.numSamplers; i++) {\n      var binding = samplerBindings[i];\n      var samplerIndex = bindingLayoutTable.firstSampler + i;\n      var gl_sampler = binding !== null && binding.sampler !== null ? getPlatformSampler$1(binding.sampler) : null;\n      var gl_texture = binding !== null && binding.texture !== null ? getPlatformTexture(binding.texture) : null;\n      if (this.currentSamplers[samplerIndex] !== gl_sampler) {\n        if (isWebGL2(gl)) {\n          gl.bindSampler(samplerIndex, gl_sampler);\n        }\n        this.currentSamplers[samplerIndex] = gl_sampler;\n      }\n      if (this.currentTextures[samplerIndex] !== gl_texture) {\n        this.setActiveTexture(gl.TEXTURE0 + samplerIndex);\n        if (gl_texture !== null) {\n          var _c = assertExists(binding).texture,\n            gl_target = _c.gl_target,\n            width = _c.width,\n            height = _c.height;\n          // update index\n          binding.texture.textureIndex = samplerIndex;\n          gl.bindTexture(gl_target, gl_texture);\n          // In WebGL1 set tex's parameters @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n          if (!isWebGL2(gl)) {\n            (_a = binding.sampler) === null || _a === void 0 ? void 0 : _a.setTextureParameters(gl_target, width, height);\n          }\n          this.debugGroupStatisticsTextureBind();\n        } else {\n          var samplerEntry = __assign(__assign({}, binding), defaultBindingLayoutSamplerDescriptor);\n          var dimension = samplerEntry.dimension,\n            formatKind = samplerEntry.formatKind;\n          var gl_target = translateTextureDimension$1(dimension);\n          gl.bindTexture(gl_target, this.getFallbackTexture(__assign({\n            gl_target: gl_target,\n            formatKind: formatKind\n          }, samplerEntry)));\n        }\n        this.currentTextures[samplerIndex] = gl_texture;\n      }\n    }\n  };\n  Device_GL.prototype.setViewport = function (x, y, w, h) {\n    var gl = this.gl;\n    gl.viewport(x, y, w, h);\n  };\n  Device_GL.prototype.setScissorRect = function (x, y, w, h) {\n    var gl = this.gl;\n    this.setScissorRectEnabled(true);\n    gl.scissor(x, y, w, h);\n  };\n  Device_GL.prototype.applyAttachmentStateIndexed = function (i, currentAttachmentState, newAttachmentState) {\n    var gl = this.gl;\n    var dbi = this.OES_draw_buffers_indexed;\n    if (currentAttachmentState.channelWriteMask !== newAttachmentState.channelWriteMask) {\n      dbi.colorMaskiOES(i, !!(newAttachmentState.channelWriteMask & ChannelWriteMask.RED), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.GREEN), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.BLUE), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.ALPHA));\n      currentAttachmentState.channelWriteMask = newAttachmentState.channelWriteMask;\n    }\n    var blendModeChanged = currentAttachmentState.rgbBlendState.blendMode !== newAttachmentState.rgbBlendState.blendMode || currentAttachmentState.alphaBlendState.blendMode !== newAttachmentState.alphaBlendState.blendMode;\n    var blendFuncChanged = currentAttachmentState.rgbBlendState.blendSrcFactor !== newAttachmentState.rgbBlendState.blendSrcFactor || currentAttachmentState.alphaBlendState.blendSrcFactor !== newAttachmentState.alphaBlendState.blendSrcFactor || currentAttachmentState.rgbBlendState.blendDstFactor !== newAttachmentState.rgbBlendState.blendDstFactor || currentAttachmentState.alphaBlendState.blendDstFactor !== newAttachmentState.alphaBlendState.blendDstFactor;\n    if (blendFuncChanged || blendModeChanged) {\n      if (isBlendStateNone(currentAttachmentState.rgbBlendState) && isBlendStateNone(currentAttachmentState.alphaBlendState)) dbi.enableiOES(i, gl.BLEND);else if (isBlendStateNone(newAttachmentState.rgbBlendState) && isBlendStateNone(newAttachmentState.alphaBlendState)) dbi.disableiOES(i, gl.BLEND);\n    }\n    if (blendModeChanged) {\n      dbi.blendEquationSeparateiOES(i, newAttachmentState.rgbBlendState.blendMode, newAttachmentState.alphaBlendState.blendMode);\n      currentAttachmentState.rgbBlendState.blendMode = newAttachmentState.rgbBlendState.blendMode;\n      currentAttachmentState.alphaBlendState.blendMode = newAttachmentState.alphaBlendState.blendMode;\n    }\n    if (blendFuncChanged) {\n      dbi.blendFuncSeparateiOES(i, newAttachmentState.rgbBlendState.blendSrcFactor, newAttachmentState.rgbBlendState.blendDstFactor, newAttachmentState.alphaBlendState.blendSrcFactor, newAttachmentState.alphaBlendState.blendDstFactor);\n      currentAttachmentState.rgbBlendState.blendSrcFactor = newAttachmentState.rgbBlendState.blendSrcFactor;\n      currentAttachmentState.alphaBlendState.blendSrcFactor = newAttachmentState.alphaBlendState.blendSrcFactor;\n      currentAttachmentState.rgbBlendState.blendDstFactor = newAttachmentState.rgbBlendState.blendDstFactor;\n      currentAttachmentState.alphaBlendState.blendDstFactor = newAttachmentState.alphaBlendState.blendDstFactor;\n    }\n  };\n  Device_GL.prototype.applyAttachmentState = function (currentAttachmentState, newAttachmentState) {\n    var gl = this.gl;\n    if (currentAttachmentState.channelWriteMask !== newAttachmentState.channelWriteMask) {\n      gl.colorMask(!!(newAttachmentState.channelWriteMask & ChannelWriteMask.RED), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.GREEN), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.BLUE), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.ALPHA));\n      currentAttachmentState.channelWriteMask = newAttachmentState.channelWriteMask;\n    }\n    var blendModeChanged = currentAttachmentState.rgbBlendState.blendMode !== newAttachmentState.rgbBlendState.blendMode || currentAttachmentState.alphaBlendState.blendMode !== newAttachmentState.alphaBlendState.blendMode;\n    var blendFuncChanged = currentAttachmentState.rgbBlendState.blendSrcFactor !== newAttachmentState.rgbBlendState.blendSrcFactor || currentAttachmentState.alphaBlendState.blendSrcFactor !== newAttachmentState.alphaBlendState.blendSrcFactor || currentAttachmentState.rgbBlendState.blendDstFactor !== newAttachmentState.rgbBlendState.blendDstFactor || currentAttachmentState.alphaBlendState.blendDstFactor !== newAttachmentState.alphaBlendState.blendDstFactor;\n    if (blendFuncChanged || blendModeChanged) {\n      if (isBlendStateNone(currentAttachmentState.rgbBlendState) && isBlendStateNone(currentAttachmentState.alphaBlendState)) {\n        gl.enable(gl.BLEND);\n      } else if (isBlendStateNone(newAttachmentState.rgbBlendState) && isBlendStateNone(newAttachmentState.alphaBlendState)) {\n        gl.disable(gl.BLEND);\n      }\n    }\n    if (blendModeChanged) {\n      gl.blendEquationSeparate(newAttachmentState.rgbBlendState.blendMode, newAttachmentState.alphaBlendState.blendMode);\n      currentAttachmentState.rgbBlendState.blendMode = newAttachmentState.rgbBlendState.blendMode;\n      currentAttachmentState.alphaBlendState.blendMode = newAttachmentState.alphaBlendState.blendMode;\n    }\n    if (blendFuncChanged) {\n      gl.blendFuncSeparate(newAttachmentState.rgbBlendState.blendSrcFactor, newAttachmentState.rgbBlendState.blendDstFactor, newAttachmentState.alphaBlendState.blendSrcFactor, newAttachmentState.alphaBlendState.blendDstFactor);\n      currentAttachmentState.rgbBlendState.blendSrcFactor = newAttachmentState.rgbBlendState.blendSrcFactor;\n      currentAttachmentState.alphaBlendState.blendSrcFactor = newAttachmentState.alphaBlendState.blendSrcFactor;\n      currentAttachmentState.rgbBlendState.blendDstFactor = newAttachmentState.rgbBlendState.blendDstFactor;\n      currentAttachmentState.alphaBlendState.blendDstFactor = newAttachmentState.alphaBlendState.blendDstFactor;\n    }\n  };\n  Device_GL.prototype.setMegaState = function (newMegaState) {\n    var gl = this.gl;\n    var currentMegaState = this.currentMegaState;\n    if (this.OES_draw_buffers_indexed !== null) {\n      for (var i = 0; i < newMegaState.attachmentsState.length; i++) this.applyAttachmentStateIndexed(i, currentMegaState.attachmentsState[0], newMegaState.attachmentsState[0]);\n    } else {\n      assert(newMegaState.attachmentsState.length === 1);\n      this.applyAttachmentState(currentMegaState.attachmentsState[0], newMegaState.attachmentsState[0]);\n    }\n    if (!colorEqual(currentMegaState.blendConstant, newMegaState.blendConstant)) {\n      gl.blendColor(newMegaState.blendConstant.r, newMegaState.blendConstant.g, newMegaState.blendConstant.b, newMegaState.blendConstant.a);\n      colorCopy(currentMegaState.blendConstant, newMegaState.blendConstant);\n    }\n    if (currentMegaState.depthCompare !== newMegaState.depthCompare) {\n      gl.depthFunc(newMegaState.depthCompare);\n      currentMegaState.depthCompare = newMegaState.depthCompare;\n    }\n    if (!!currentMegaState.depthWrite !== !!newMegaState.depthWrite) {\n      gl.depthMask(newMegaState.depthWrite);\n      currentMegaState.depthWrite = newMegaState.depthWrite;\n    }\n    if (!!currentMegaState.stencilWrite !== !!newMegaState.stencilWrite) {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMask\n      gl.stencilMask(newMegaState.stencilWrite ? 0xff : 0x00);\n      currentMegaState.stencilWrite = newMegaState.stencilWrite;\n    }\n    if (!stencilFaceStateEquals(currentMegaState.stencilFront, newMegaState.stencilFront)) {\n      var _a = newMegaState.stencilFront,\n        passOp = _a.passOp,\n        failOp = _a.failOp,\n        depthFailOp = _a.depthFailOp,\n        compare = _a.compare;\n      if (currentMegaState.stencilFront.passOp !== passOp || currentMegaState.stencilFront.failOp !== failOp || currentMegaState.stencilFront.depthFailOp !== depthFailOp) {\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate\n        gl.stencilOpSeparate(gl.FRONT, failOp, depthFailOp, passOp);\n        currentMegaState.stencilFront.passOp = passOp;\n        currentMegaState.stencilFront.failOp = failOp;\n        currentMegaState.stencilFront.depthFailOp = depthFailOp;\n      }\n      if (currentMegaState.stencilFront.compare !== compare) {\n        this.setStencilReference(0);\n        currentMegaState.stencilFront.compare = compare;\n      }\n    }\n    if (!stencilFaceStateEquals(currentMegaState.stencilBack, newMegaState.stencilBack)) {\n      var _b = newMegaState.stencilBack,\n        passOp = _b.passOp,\n        failOp = _b.failOp,\n        depthFailOp = _b.depthFailOp,\n        compare = _b.compare;\n      if (currentMegaState.stencilBack.passOp !== passOp || currentMegaState.stencilBack.failOp !== failOp || currentMegaState.stencilBack.depthFailOp !== depthFailOp) {\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate\n        gl.stencilOpSeparate(gl.BACK, failOp, depthFailOp, passOp);\n        currentMegaState.stencilBack.passOp = passOp;\n        currentMegaState.stencilBack.failOp = failOp;\n        currentMegaState.stencilBack.depthFailOp = depthFailOp;\n      }\n      if (currentMegaState.stencilBack.compare !== compare) {\n        this.setStencilReference(0);\n        currentMegaState.stencilBack.compare = compare;\n      }\n    }\n    if (currentMegaState.stencilFront.mask !== newMegaState.stencilFront.mask || currentMegaState.stencilBack.mask !== newMegaState.stencilBack.mask) {\n      currentMegaState.stencilFront.mask = newMegaState.stencilFront.mask;\n      currentMegaState.stencilBack.mask = newMegaState.stencilBack.mask;\n      this.applyStencil();\n    }\n    // if (\n    //   currentMegaState.stencilCompare !== newMegaState.stencilCompare\n    // ) {\n    //   currentMegaState.stencilCompare = newMegaState.stencilCompare;\n    //   this.setStencilReference(newMegaState.stencilRef);\n    // }\n    if (currentMegaState.cullMode !== newMegaState.cullMode) {\n      if (currentMegaState.cullMode === CullMode.NONE) {\n        gl.enable(gl.CULL_FACE);\n      } else if (newMegaState.cullMode === CullMode.NONE) {\n        gl.disable(gl.CULL_FACE);\n      }\n      if (newMegaState.cullMode === CullMode.BACK) {\n        gl.cullFace(gl.BACK);\n      } else if (newMegaState.cullMode === CullMode.FRONT) {\n        gl.cullFace(gl.FRONT);\n      } else if (newMegaState.cullMode === CullMode.FRONT_AND_BACK) {\n        gl.cullFace(gl.FRONT_AND_BACK);\n      }\n      currentMegaState.cullMode = newMegaState.cullMode;\n    }\n    if (currentMegaState.frontFace !== newMegaState.frontFace) {\n      gl.frontFace(newMegaState.frontFace);\n      currentMegaState.frontFace = newMegaState.frontFace;\n    }\n    if (currentMegaState.polygonOffset !== newMegaState.polygonOffset) {\n      if (newMegaState.polygonOffset) {\n        gl.polygonOffset(1, 1);\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n      } else {\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n      }\n      currentMegaState.polygonOffset = newMegaState.polygonOffset;\n    }\n  };\n  Device_GL.prototype.validatePipelineFormats = function (pipeline) {\n    for (var i = 0; i < this.currentColorAttachments.length; i++) {\n      var attachment = this.currentColorAttachments[i];\n      if (attachment === null) continue;\n      // assert(attachment.format === pipeline.colorAttachmentFormats[i]);\n    }\n\n    if (this.currentDepthStencilAttachment) {\n      assert(this.currentDepthStencilAttachment.format === pipeline.depthStencilAttachmentFormat);\n    }\n    if (this.currentSampleCount !== -1) {\n      assert(this.currentSampleCount === pipeline.sampleCount);\n    }\n  };\n  Device_GL.prototype.setPipeline = function (o) {\n    var _this = this;\n    if (this.renderBundle) {\n      this.renderBundle.push(function () {\n        return _this.setPipeline(o);\n      });\n      return;\n    }\n    this.currentPipeline = o;\n    this.validatePipelineFormats(this.currentPipeline);\n    // We allow users to use \"non-ready\" pipelines for emergencies. In this case, there can be a bit of stuttering.\n    // assert(this.queryPipelineReady(this.currentPipeline));\n    this.setMegaState(this.currentPipeline.megaState);\n    var program = this.currentPipeline.program;\n    this.useProgram(program);\n    if (program.compileState === ProgramCompileState_GL.NeedsBind) {\n      var gl = this.gl;\n      var prog = program.gl_program;\n      var deviceProgram = program.descriptor;\n      var uniformBlocks = findall(deviceProgram.vertex.glsl, UNIFROM_BLOCK_REGEXP);\n      if (isWebGL2(gl)) {\n        for (var i = 0; i < uniformBlocks.length; i++) {\n          var _a = __read(uniformBlocks[i], 2),\n            blockName = _a[1];\n          // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/getUniformBlockIndex\n          var blockIdx = gl.getUniformBlockIndex(prog, blockName);\n          if (blockIdx !== -1 && blockIdx !== 0xffffffff) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/uniformBlockBinding\n            gl.uniformBlockBinding(prog, blockIdx, i);\n          }\n        }\n      }\n      var samplers = findall(deviceProgram.fragment.glsl, /^uniform .*sampler\\S+ (\\w+);\\s* \\/\\/ BINDING=(\\d+)$/gm);\n      for (var i = 0; i < samplers.length; i++) {\n        var _b = __read(samplers[i], 3),\n          name_1 = _b[1],\n          location_1 = _b[2];\n        var samplerUniformLocation = gl.getUniformLocation(prog, name_1);\n        gl.uniform1i(samplerUniformLocation, parseInt(location_1));\n      }\n      program.compileState = ProgramCompileState_GL.ReadyToUse;\n    }\n  };\n  Device_GL.prototype.setVertexInput = function (inputLayout_, vertexBuffers, indexBuffer) {\n    var e_1, _a;\n    var _this = this;\n    var _b;\n    if (this.renderBundle) {\n      this.renderBundle.push(function () {\n        return _this.setVertexInput(inputLayout_, vertexBuffers, indexBuffer);\n      });\n      return;\n    }\n    if (inputLayout_ !== null) {\n      assert(this.currentPipeline.inputLayout === inputLayout_);\n      var inputLayout = inputLayout_;\n      this.bindVAO(inputLayout.vao);\n      var gl = this.gl;\n      for (var i = 0; i < inputLayout.vertexBufferDescriptors.length; i++) {\n        var vertexBufferDescriptor = inputLayout.vertexBufferDescriptors[i];\n        var arrayStride = vertexBufferDescriptor.arrayStride,\n          attributes = vertexBufferDescriptor.attributes;\n        try {\n          for (var attributes_1 = (e_1 = void 0, __values(attributes)), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n            var attribute = attributes_1_1.value;\n            var shaderLocation = attribute.shaderLocation,\n              offset = attribute.offset;\n            // find location by name in WebGL1\n            var location_2 = isWebGL2(gl) ? shaderLocation : (_b = inputLayout.program.attributes[shaderLocation]) === null || _b === void 0 ? void 0 : _b.location;\n            if (!isNil(location_2)) {\n              var vertexBuffer = vertexBuffers[i];\n              if (vertexBuffer === null) continue;\n              // @ts-ignore\n              var format = attribute.vertexFormat;\n              gl.bindBuffer(gl.ARRAY_BUFFER, getPlatformBuffer$1(vertexBuffer.buffer));\n              var bufferOffset = (vertexBuffer.offset || 0) + offset;\n              gl.vertexAttribPointer(location_2, format.size, format.type, format.normalized, arrayStride, bufferOffset);\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (attributes_1_1 && !attributes_1_1.done && (_a = attributes_1.return)) _a.call(attributes_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n      assert(indexBuffer !== null === (inputLayout.indexBufferFormat !== null));\n      if (indexBuffer !== null) {\n        var buffer = indexBuffer.buffer;\n        assert(buffer.usage === BufferUsage.INDEX);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, getPlatformBuffer$1(buffer));\n        this.currentIndexBufferByteOffset = indexBuffer.offset || 0;\n      } else {\n        this.currentIndexBufferByteOffset = null;\n      }\n    } else {\n      assert(this.currentPipeline.inputLayout === null);\n      assert(indexBuffer === null);\n      this.bindVAO(null);\n      this.currentIndexBufferByteOffset = 0;\n    }\n  };\n  Device_GL.prototype.setStencilReference = function (value) {\n    if (this.currentStencilRef === value) {\n      return;\n    }\n    this.currentStencilRef = value;\n    this.applyStencil();\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-draw\n   */\n  Device_GL.prototype.draw = function (vertexCount, instanceCount, firstVertex, firstInstance) {\n    var _a;\n    var _this = this;\n    if (this.renderBundle) {\n      this.renderBundle.push(function () {\n        return _this.draw(vertexCount, instanceCount, firstVertex, firstInstance);\n      });\n      return;\n    }\n    var gl = this.gl;\n    var pipeline = this.currentPipeline;\n    if (instanceCount) {\n      var params = [pipeline.drawMode, firstVertex || 0, vertexCount, instanceCount];\n      if (isWebGL2(gl)) {\n        gl.drawArraysInstanced.apply(gl, __spreadArray([], __read(params), false));\n      } else {\n        (_a = this.ANGLE_instanced_arrays).drawArraysInstancedANGLE.apply(_a, __spreadArray([], __read(params), false));\n      }\n    } else {\n      gl.drawArrays(pipeline.drawMode, firstVertex, vertexCount);\n    }\n    this.debugGroupStatisticsDrawCall();\n    this.debugGroupStatisticsTriangles(vertexCount / 3 * Math.max(instanceCount, 1));\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindexed\n   */\n  Device_GL.prototype.drawIndexed = function (indexCount, instanceCount, firstIndex, baseVertex, firstInstance) {\n    var _a;\n    var _this = this;\n    if (this.renderBundle) {\n      this.renderBundle.push(function () {\n        return _this.drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);\n      });\n      return;\n    }\n    var gl = this.gl;\n    var pipeline = this.currentPipeline,\n      inputLayout = assertExists(pipeline.inputLayout);\n    var byteOffset = assertExists(this.currentIndexBufferByteOffset) + firstIndex * inputLayout.indexBufferCompByteSize;\n    if (instanceCount) {\n      var params = [pipeline.drawMode, indexCount, inputLayout.indexBufferType, byteOffset, instanceCount];\n      if (isWebGL2(gl)) {\n        gl.drawElementsInstanced.apply(gl, __spreadArray([], __read(params), false));\n      } else {\n        (_a = this.ANGLE_instanced_arrays).drawElementsInstancedANGLE.apply(_a, __spreadArray([], __read(params), false));\n      }\n    } else {\n      gl.drawElements(pipeline.drawMode, indexCount, inputLayout.indexBufferType, byteOffset);\n    }\n    this.debugGroupStatisticsDrawCall();\n    this.debugGroupStatisticsTriangles(indexCount / 3 * Math.max(instanceCount, 1));\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindirect\n   */\n  Device_GL.prototype.drawIndirect = function (indirectBuffer, indirectOffset) {};\n  Device_GL.prototype.drawIndexedIndirect = function (indirectBuffer, indirectOffset) {};\n  Device_GL.prototype.beginOcclusionQuery = function (queryIndex) {\n    var gl = this.gl;\n    if (isWebGL2(gl)) {\n      var queryPool = this.currentRenderPassDescriptor.occlusionQueryPool;\n      gl.beginQuery(queryPool.gl_query_type, queryPool.gl_query[queryIndex]);\n    }\n  };\n  Device_GL.prototype.endOcclusionQuery = function () {\n    var gl = this.gl;\n    if (isWebGL2(gl)) {\n      var queryPool = this.currentRenderPassDescriptor.occlusionQueryPool;\n      gl.endQuery(queryPool.gl_query_type);\n    }\n  };\n  Device_GL.prototype.pipelineQueryReady = function (o) {\n    var pipeline = o;\n    return this.queryProgramReady(pipeline.program);\n  };\n  Device_GL.prototype.pipelineForceReady = function (o) {\n    // No need to do anything; it will be forced to compile when used naturally.\n  };\n  Device_GL.prototype.endPass = function () {\n    var gl = this.gl;\n    var gl2 = isWebGL2(gl);\n    var didUnbindDraw = false;\n    for (var i = 0; i < this.currentColorAttachments.length; i++) {\n      var colorResolveFrom = this.currentColorAttachments[i];\n      if (colorResolveFrom !== null) {\n        var colorResolveTo = this.currentColorResolveTos[i];\n        var didBindRead = false;\n        if (colorResolveTo !== null) {\n          assert(colorResolveFrom.width === colorResolveTo.width && colorResolveFrom.height === colorResolveTo.height);\n          // assert(colorResolveFrom.format === colorResolveTo.format);\n          this.setScissorRectEnabled(false);\n          if (gl2) {\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.resolveColorReadFramebuffer);\n          }\n          if (this.resolveColorAttachmentsChanged) {\n            if (gl2) {\n              this.bindFramebufferAttachment(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, colorResolveFrom, this.currentColorAttachmentLevels[i]);\n            }\n          }\n          didBindRead = true;\n          // Special case: Blitting to the on-screen.\n          if (colorResolveTo === this.scTexture) {\n            gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.scPlatformFramebuffer);\n          } else {\n            gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveColorDrawFramebuffer);\n            if (this.resolveColorAttachmentsChanged) gl.framebufferTexture2D(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorResolveTo.gl_texture, this.currentColorResolveToLevels[i]);\n          }\n          if (gl2) {\n            gl.blitFramebuffer(0, 0, colorResolveFrom.width, colorResolveFrom.height, 0, 0, colorResolveTo.width, colorResolveTo.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n          } else {\n            // need an extra render pass in WebGL1\n            this.submitBlitRenderPass(colorResolveFrom, colorResolveTo);\n          }\n          didUnbindDraw = true;\n        }\n        if (!this.currentRenderPassDescriptor.colorStore[i]) {\n          if (!didBindRead) {\n            gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveColorReadFramebuffer);\n            if (this.resolveColorAttachmentsChanged) this.bindFramebufferAttachment(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, colorResolveFrom, this.currentColorAttachmentLevels[i]);\n          }\n          // if (gl2) {\n          //   gl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [\n          //     gl.COLOR_ATTACHMENT0,\n          //   ]);\n          // }\n        }\n\n        gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n      }\n    }\n    this.resolveColorAttachmentsChanged = false;\n    var depthStencilResolveFrom = this.currentDepthStencilAttachment;\n    if (depthStencilResolveFrom) {\n      var depthStencilResolveTo = this.currentDepthStencilResolveTo;\n      var didBindRead = false;\n      if (depthStencilResolveTo) {\n        assert(depthStencilResolveFrom.width === depthStencilResolveTo.width && depthStencilResolveFrom.height === depthStencilResolveTo.height);\n        this.setScissorRectEnabled(false);\n        gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveDepthStencilReadFramebuffer);\n        gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveDepthStencilDrawFramebuffer);\n        if (this.resolveDepthStencilAttachmentsChanged) {\n          this.bindFramebufferDepthStencilAttachment(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, depthStencilResolveFrom);\n          this.bindFramebufferDepthStencilAttachment(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, depthStencilResolveTo);\n        }\n        didBindRead = true;\n        if (gl2) {\n          gl.blitFramebuffer(0, 0, depthStencilResolveFrom.width, depthStencilResolveFrom.height, 0, 0, depthStencilResolveTo.width, depthStencilResolveTo.height, gl.DEPTH_BUFFER_BIT, gl.NEAREST);\n        }\n        gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n        didUnbindDraw = true;\n      }\n      if (!this.currentRenderPassDescriptor.depthStencilStore) {\n        if (!didBindRead) {\n          gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveDepthStencilReadFramebuffer);\n          if (this.resolveDepthStencilAttachmentsChanged) this.bindFramebufferDepthStencilAttachment(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, depthStencilResolveFrom);\n          didBindRead = true;\n        }\n        if (gl2) {\n          gl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [gl.DEPTH_STENCIL_ATTACHMENT]);\n        }\n      }\n      if (didBindRead) gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n      this.resolveDepthStencilAttachmentsChanged = false;\n    }\n    if (!didUnbindDraw) {\n      // If we did not unbind from a resolve, then we need to unbind our render pass draw FBO here.\n      gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n    }\n  };\n  Device_GL.prototype.setScissorRectEnabled = function (v) {\n    if (this.currentScissorEnabled === v) {\n      return;\n    }\n    var gl = this.gl;\n    if (v) {\n      gl.enable(gl.SCISSOR_TEST);\n    } else {\n      gl.disable(gl.SCISSOR_TEST);\n    }\n    this.currentScissorEnabled = v;\n  };\n  Device_GL.prototype.applyStencil = function () {\n    if (isNil(this.currentStencilRef)) {\n      return;\n    }\n    this.gl.stencilFuncSeparate(GL.FRONT, this.currentMegaState.stencilFront.compare, this.currentStencilRef, this.currentMegaState.stencilFront.mask || 0xff);\n    this.gl.stencilFuncSeparate(GL.BACK, this.currentMegaState.stencilBack.compare, this.currentStencilRef, this.currentMegaState.stencilBack.mask || 0xff);\n  };\n  Device_GL.prototype.getFallbackTexture = function (samplerEntry) {\n    var gl_target = samplerEntry.gl_target,\n      formatKind = samplerEntry.formatKind;\n    if (gl_target === GL.TEXTURE_2D) return formatKind === SamplerFormatKind.Depth ? this.fallbackTexture2DDepth : this.fallbackTexture2D;else if (gl_target === GL.TEXTURE_2D_ARRAY) return this.fallbackTexture2DArray;else if (gl_target === GL.TEXTURE_3D) return this.fallbackTexture3D;else if (gl_target === GL.TEXTURE_CUBE_MAP) return this.fallbackTextureCube;else throw new Error('whoops');\n  };\n  Device_GL.prototype.submitBlitRenderPass = function (resolveFrom, resolveTo) {\n    if (!this.blitRenderPipeline) {\n      this.blitProgram = this.createProgram({\n        vertex: {\n          glsl: \"layout(location = 0) in vec2 a_Position;\\nout vec2 v_TexCoord;\\nvoid main() {\\n  v_TexCoord = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n\\n  #ifdef VIEWPORT_ORIGIN_TL\\n    v_TexCoord.y = 1.0 - v_TexCoord.y;\\n  #endif\\n}\"\n        },\n        fragment: {\n          glsl: \"uniform sampler2D u_Texture;\\nin vec2 v_TexCoord;\\nout vec4 outputColor;\\nvoid main() {\\n  outputColor = texture(SAMPLER_2D(u_Texture), v_TexCoord);\\n}\"\n        }\n      });\n      this.blitVertexBuffer = this.createBuffer({\n        usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n        viewOrSize: new Float32Array([-4, -4, 4, -4, 0, 4])\n      });\n      this.blitInputLayout = this.createInputLayout({\n        vertexBufferDescriptors: [{\n          arrayStride: 4 * 2,\n          stepMode: VertexStepMode.VERTEX,\n          attributes: [{\n            format: Format.F32_RG,\n            offset: 4 * 0,\n            shaderLocation: 0\n          }]\n        }],\n        indexBufferFormat: null,\n        program: this.blitProgram\n      });\n      this.blitRenderPipeline = this.createRenderPipeline({\n        topology: PrimitiveTopology.TRIANGLES,\n        sampleCount: 1,\n        program: this.blitProgram,\n        colorAttachmentFormats: [Format.U8_RGBA_RT],\n        depthStencilAttachmentFormat: null,\n        inputLayout: this.blitInputLayout,\n        megaStateDescriptor: copyMegaState(defaultMegaState)\n      });\n      this.blitBindings = this.createBindings({\n        samplerBindings: [{\n          sampler: null,\n          texture: resolveFrom.texture\n        }],\n        uniformBufferBindings: []\n      });\n      this.blitProgram.setUniformsLegacy({\n        u_Texture: resolveFrom\n      });\n    }\n    // save currentRenderPassDescriptor since we're already in a render pass\n    var currentRenderPassDescriptor = this.currentRenderPassDescriptor;\n    this.currentRenderPassDescriptor = null;\n    this.inBlitRenderPass = true;\n    var blitRenderPass = this.createRenderPass({\n      colorAttachment: [resolveFrom],\n      colorResolveTo: [resolveTo],\n      colorClearColor: [TransparentWhite]\n    });\n    var _a = this.getCanvas(),\n      width = _a.width,\n      height = _a.height;\n    blitRenderPass.setPipeline(this.blitRenderPipeline);\n    blitRenderPass.setBindings(this.blitBindings);\n    blitRenderPass.setVertexInput(this.blitInputLayout, [{\n      buffer: this.blitVertexBuffer\n    }], null);\n    blitRenderPass.setViewport(0, 0, width, height);\n    // disable blending for blit\n    this.gl.disable(this.gl.BLEND);\n    blitRenderPass.draw(3, 0);\n    this.gl.enable(this.gl.BLEND);\n    // restore\n    this.currentRenderPassDescriptor = currentRenderPassDescriptor;\n    this.inBlitRenderPass = false;\n  };\n  return Device_GL;\n}();\nvar WebGLDeviceContribution = /** @class */function () {\n  function WebGLDeviceContribution(pluginOptions) {\n    this.pluginOptions = pluginOptions;\n  }\n  WebGLDeviceContribution.prototype.createSwapChain = function ($canvas) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, targets, xrCompatible, _b, antialias, _c, preserveDrawingBuffer, _d, premultipliedAlpha, shaderDebug, trackResources, options, gl;\n      return __generator(this, function (_e) {\n        _a = this.pluginOptions, targets = _a.targets, xrCompatible = _a.xrCompatible, _b = _a.antialias, antialias = _b === void 0 ? false : _b, _c = _a.preserveDrawingBuffer, preserveDrawingBuffer = _c === void 0 ? false : _c, _d = _a.premultipliedAlpha, premultipliedAlpha = _d === void 0 ? true : _d, shaderDebug = _a.shaderDebug, trackResources = _a.trackResources;\n        options = {\n          // alpha: true,\n          antialias: antialias,\n          // @see https://stackoverflow.com/questions/27746091/preservedrawingbuffer-false-is-it-worth-the-effort\n          preserveDrawingBuffer: preserveDrawingBuffer,\n          // @see https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-the-stencil-buffer.html\n          stencil: true,\n          // @see https://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html\n          premultipliedAlpha: premultipliedAlpha,\n          xrCompatible: xrCompatible\n        };\n        this.handleContextEvents($canvas);\n        if (targets.includes('webgl2')) {\n          gl = $canvas.getContext('webgl2', options) || $canvas.getContext('experimental-webgl2', options);\n        }\n        if (!gl && targets.includes('webgl1')) {\n          gl = $canvas.getContext('webgl', options) || $canvas.getContext('experimental-webgl', options);\n        }\n        return [2 /*return*/, new Device_GL(gl, {\n          shaderDebug: shaderDebug,\n          trackResources: trackResources\n        })];\n      });\n    });\n  };\n  WebGLDeviceContribution.prototype.handleContextEvents = function ($canvas) {\n    var _a = this.pluginOptions,\n      onContextLost = _a.onContextLost,\n      onContextRestored = _a.onContextRestored,\n      onContextCreationError = _a.onContextCreationError;\n    // bind context event listeners\n    if (onContextCreationError) {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextcreationerror_event\n      $canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);\n    }\n    if (onContextLost) {\n      $canvas.addEventListener('webglcontextlost', onContextLost, false);\n    }\n    if (onContextRestored) {\n      $canvas.addEventListener('webglcontextrestored', onContextRestored, false);\n    }\n  };\n  return WebGLDeviceContribution;\n}();\nlet wasm;\nconst cachedTextDecoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n}) : {\n  decode: () => {\n    throw Error('TextDecoder not available');\n  }\n};\nif (typeof TextDecoder !== 'undefined') {\n  cachedTextDecoder.decode();\n}\nlet cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nconst heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction getObject(idx) {\n  return heap[idx];\n}\nfunction dropObject(idx) {\n  if (idx < 132) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nlet WASM_VECTOR_LEN = 0;\nconst cachedTextEncoder = typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : {\n  encode: () => {\n    throw Error('TextEncoder not available');\n  }\n};\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nlet cachedInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n/**\n * @param {string} source\n * @param {string} stage\n * @param {boolean} validation_enabled\n * @returns {string}\n */\nfunction glsl_compile(source, stage, validation_enabled) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(source, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(stage, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.glsl_compile(retptr, ptr0, len0, ptr1, len1, validation_enabled);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred3_0 = r0;\n    deferred3_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n  }\n}\n\n/**\n */\nclass WGSLComposer {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(WGSLComposer.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wgslcomposer_free(ptr);\n  }\n  /**\n   */\n  constructor() {\n    const ret = wasm.wgslcomposer_new();\n    return WGSLComposer.__wrap(ret);\n  }\n  /**\n   * @param {string} source\n   * @returns {string}\n   */\n  wgsl_compile(source) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(source, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.wgslcomposer_wgsl_compile(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      deferred2_0 = r0;\n      deferred2_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\nasync function __wbg_load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn('`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n', e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return {\n        instance,\n        module\n      };\n    } else {\n      return instance;\n    }\n  }\n}\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_log_1d3ae0273d8f4f8a = function (arg0) {\n    console.log(getObject(arg0));\n  };\n  imports.wbg.__wbg_log_576ca876af0d4a77 = function (arg0, arg1) {\n    console.log(getObject(arg0), getObject(arg1));\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  return imports;\n}\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n  return wasm;\n}\nasync function __wbg_init(input) {\n  if (wasm !== undefined) return wasm;\n  const imports = __wbg_get_imports();\n  if (typeof input === 'string' || typeof Request === 'function' && input instanceof Request || typeof URL === 'function' && input instanceof URL) {\n    input = fetch(input);\n  }\n  const {\n    instance,\n    module\n  } = await __wbg_load(await input, imports);\n  return __wbg_finalize_init(instance, module);\n}\n\n/**\n * @see https://github.com/gpuweb/cts/blob/main/src/webgpu/constants.ts\n */\nvar GPUTextureUsage$1;\n(function (GPUTextureUsage) {\n  GPUTextureUsage[GPUTextureUsage[\"COPY_SRC\"] = 1] = \"COPY_SRC\";\n  GPUTextureUsage[GPUTextureUsage[\"COPY_DST\"] = 2] = \"COPY_DST\";\n  GPUTextureUsage[GPUTextureUsage[\"TEXTURE_BINDING\"] = 4] = \"TEXTURE_BINDING\";\n  // SAMPLED= 0x04,\n  GPUTextureUsage[GPUTextureUsage[\"STORAGE_BINDING\"] = 8] = \"STORAGE_BINDING\";\n  GPUTextureUsage[GPUTextureUsage[\"STORAGE\"] = 8] = \"STORAGE\";\n  GPUTextureUsage[GPUTextureUsage[\"RENDER_ATTACHMENT\"] = 16] = \"RENDER_ATTACHMENT\";\n})(GPUTextureUsage$1 || (GPUTextureUsage$1 = {}));\n// @see https://www.w3.org/TR/webgpu/#typedefdef-gpumapmodeflags\nvar GPUMapMode;\n(function (GPUMapMode) {\n  GPUMapMode[GPUMapMode[\"READ\"] = 1] = \"READ\";\n  GPUMapMode[GPUMapMode[\"WRITE\"] = 2] = \"WRITE\";\n})(GPUMapMode || (GPUMapMode = {}));\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/usage#value\n */\nfunction translateTextureUsage(usage) {\n  var gpuUsage = 0;\n  if (usage & TextureUsage.SAMPLED) gpuUsage |= GPUTextureUsage$1.TEXTURE_BINDING | GPUTextureUsage$1.COPY_DST | GPUTextureUsage$1.COPY_SRC;\n  if (usage & TextureUsage.STORAGE) gpuUsage |= GPUTextureUsage$1.TEXTURE_BINDING | GPUTextureUsage$1.STORAGE_BINDING | GPUTextureUsage$1.COPY_SRC | GPUTextureUsage$1.COPY_DST;\n  if (usage & TextureUsage.RENDER_TARGET) gpuUsage |= GPUTextureUsage$1.RENDER_ATTACHMENT | GPUTextureUsage$1.TEXTURE_BINDING | GPUTextureUsage$1.COPY_SRC | GPUTextureUsage$1.COPY_DST;\n  return gpuUsage;\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gputextureformat\n */\nfunction translateTextureFormat(format) {\n  // 8-bit formats\n  if (format === Format.U8_R_NORM) return 'r8unorm';else if (format === Format.S8_R_NORM) return 'r8snorm';\n  // 16-bit formats\n  else if (format === Format.U8_RG_NORM) return 'rg8unorm';else if (format === Format.S8_RG_NORM) return 'rg8snorm';\n  // 32-bit formats\n  else if (format === Format.U32_R) return 'r32uint';else if (format === Format.S32_R) return 'r32sint';else if (format === Format.F32_R) return 'r32float';else if (format === Format.U16_RG) return 'rg16uint';else if (format === Format.S16_RG) return 'rg16sint';else if (format === Format.F16_RG) return 'rg16float';else if (format === Format.U8_RGBA_RT) return 'bgra8unorm';else if (format === Format.U8_RGBA_RT_SRGB) return 'bgra8unorm-srgb';else if (format === Format.U8_RGBA_NORM) return 'rgba8unorm';else if (format === Format.U8_RGBA_SRGB) return 'rgba8unorm-srgb';else if (format === Format.S8_RGBA_NORM) return 'rgba8snorm';else if (format === Format.F32_RGB) return 'rgb9e5ufloat';\n  // 64-bit formats\n  else if (format === Format.U32_RG) return 'rg32uint';else if (format === Format.S32_RG) return 'rg32sint';else if (format === Format.F32_RG) return 'rg32float';else if (format === Format.U16_RGBA) return 'rgba16uint';else if (format === Format.S16_RGBA) return 'rgba16sint';else if (format === Format.F16_RGBA) return 'rgba16float';\n  // 128-bit formats\n  else if (format === Format.F32_RGBA) return 'rgba32float';else if (format === Format.U32_RGBA) return 'rgba32uint';else if (format === Format.S32_RGBA) return 'rgba32sint';\n  // depth stencil formats\n  else if (format === Format.D24) return 'depth24plus';else if (format === Format.D24_S8) return 'depth24plus-stencil8';else if (format === Format.D32F) return 'depth32float';else if (format === Format.D32F_S8) return 'depth32float-stencil8';\n  // bc\n  else if (format === Format.BC1) return 'bc1-rgba-unorm';else if (format === Format.BC1_SRGB) return 'bc1-rgba-unorm-srgb';else if (format === Format.BC2) return 'bc2-rgba-unorm';else if (format === Format.BC2_SRGB) return 'bc2-rgba-unorm-srgb';else if (format === Format.BC3) return 'bc3-rgba-unorm';else if (format === Format.BC3_SRGB) return 'bc3-rgba-unorm-srgb';else if (format === Format.BC4_SNORM) return 'bc4-r-snorm';else if (format === Format.BC4_UNORM) return 'bc4-r-unorm';else if (format === Format.BC5_SNORM) return 'bc5-rg-snorm';else if (format === Format.BC5_UNORM) return 'bc5-rg-unorm';else throw 'whoops';\n}\nfunction translateTextureDimension(dimension) {\n  if (dimension === TextureDimension.TEXTURE_2D) return '2d';else if (dimension === TextureDimension.TEXTURE_CUBE_MAP) return '2d';else if (dimension === TextureDimension.TEXTURE_2D_ARRAY) return '2d';else if (dimension === TextureDimension.TEXTURE_3D) return '3d';else throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gputextureviewdimension\n */\nfunction translateTextureViewDimension(dimension) {\n  if (dimension === TextureDimension.TEXTURE_2D) return '2d';else if (dimension === TextureDimension.TEXTURE_CUBE_MAP) return 'cube';else if (dimension === TextureDimension.TEXTURE_2D_ARRAY) return '2d-array';else if (dimension === TextureDimension.TEXTURE_3D) return '3d';else throw new Error('whoops');\n}\nfunction translateBufferUsage(usage_) {\n  var usage = 0;\n  if (usage_ & BufferUsage.INDEX) usage |= GPUBufferUsage.INDEX;\n  if (usage_ & BufferUsage.VERTEX) usage |= GPUBufferUsage.VERTEX;\n  if (usage_ & BufferUsage.UNIFORM) usage |= GPUBufferUsage.UNIFORM;\n  if (usage_ & BufferUsage.STORAGE) usage |= GPUBufferUsage.STORAGE;\n  if (usage_ & BufferUsage.COPY_SRC) usage |= GPUBufferUsage.COPY_SRC;\n  if (usage_ & BufferUsage.INDIRECT) usage |= GPUBufferUsage.INDIRECT;\n  usage |= GPUBufferUsage.COPY_DST;\n  return usage;\n}\nfunction translateAddressMode(wrapMode) {\n  if (wrapMode === AddressMode.CLAMP_TO_EDGE) return 'clamp-to-edge';else if (wrapMode === AddressMode.REPEAT) return 'repeat';else if (wrapMode === AddressMode.MIRRORED_REPEAT) return 'mirror-repeat';else throw new Error('whoops');\n}\nfunction translateMinMagFilter(texFilter) {\n  if (texFilter === FilterMode.BILINEAR) return 'linear';else if (texFilter === FilterMode.POINT) return 'nearest';else throw new Error('whoops');\n}\n// @see https://www.w3.org/TR/webgpu/#enumdef-gpumipmapfiltermode\nfunction translateMipFilter(mipmapFilter) {\n  if (mipmapFilter === MipmapFilterMode.LINEAR) return 'linear';else if (mipmapFilter === MipmapFilterMode.NEAREST) return 'nearest';else if (mipmapFilter === MipmapFilterMode.NO_MIP) return 'nearest';else throw new Error('whoops');\n}\nfunction getPlatformBuffer(buffer_) {\n  var buffer = buffer_;\n  return buffer.gpuBuffer;\n}\nfunction getPlatformSampler(sampler_) {\n  var sampler = sampler_;\n  return sampler.gpuSampler;\n}\nfunction getPlatformQuerySet(queryPool_) {\n  var queryPool = queryPool_;\n  return queryPool.querySet;\n}\nfunction translateQueryPoolType(type) {\n  if (type === QueryPoolType.OcclusionConservative) return 'occlusion';else throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#primitive-state\n */\nfunction translateTopology(topology) {\n  switch (topology) {\n    case PrimitiveTopology.TRIANGLES:\n      return 'triangle-list';\n    case PrimitiveTopology.POINTS:\n      return 'point-list';\n    case PrimitiveTopology.TRIANGLE_STRIP:\n      return 'triangle-strip';\n    case PrimitiveTopology.LINES:\n      return 'line-list';\n    case PrimitiveTopology.LINE_STRIP:\n      return 'line-strip';\n    default:\n      throw new Error('Unknown primitive topology mode');\n  }\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpucullmode\n */\nfunction translateCullMode(cullMode) {\n  if (cullMode === CullMode.NONE) return 'none';else if (cullMode === CullMode.FRONT) return 'front';else if (cullMode === CullMode.BACK) return 'back';else throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpufrontface\n */\nfunction translateFrontFace(frontFaceMode) {\n  if (frontFaceMode === FrontFace.CCW) return 'ccw';else if (frontFaceMode === FrontFace.CW) return 'cw';else throw new Error('whoops');\n}\nfunction translatePrimitiveState(topology, megaStateDescriptor) {\n  return {\n    topology: translateTopology(topology),\n    cullMode: translateCullMode(megaStateDescriptor.cullMode),\n    frontFace: translateFrontFace(megaStateDescriptor.frontFace)\n  };\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendfactor\n */\nfunction translateBlendFactor(factor) {\n  if (factor === BlendFactor.ZERO) return 'zero';else if (factor === BlendFactor.ONE) return 'one';else if (factor === BlendFactor.SRC) return 'src';else if (factor === BlendFactor.ONE_MINUS_SRC) return 'one-minus-src';else if (factor === BlendFactor.DST) return 'dst';else if (factor === BlendFactor.ONE_MINUS_DST) return 'one-minus-dst';else if (factor === BlendFactor.SRC_ALPHA) return 'src-alpha';else if (factor === BlendFactor.ONE_MINUS_SRC_ALPHA) return 'one-minus-src-alpha';else if (factor === BlendFactor.DST_ALPHA) return 'dst-alpha';else if (factor === BlendFactor.ONE_MINUS_DST_ALPHA) return 'one-minus-dst-alpha';else if (factor === BlendFactor.CONST) return 'constant';else if (factor === BlendFactor.ONE_MINUS_CONSTANT) return 'one-minus-constant';else if (factor === BlendFactor.SRC_ALPHA_SATURATE) return 'src-alpha-saturated';else throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendoperation\n */\nfunction translateBlendMode(mode) {\n  if (mode === BlendMode.ADD) return 'add';else if (mode === BlendMode.SUBSTRACT) return 'subtract';else if (mode === BlendMode.REVERSE_SUBSTRACT) return 'reverse-subtract';else if (mode === BlendMode.MIN) return 'min';else if (mode === BlendMode.MAX) return 'max';else throw new Error('whoops');\n}\nfunction translateBlendComponent(ch) {\n  return {\n    operation: translateBlendMode(ch.blendMode),\n    srcFactor: translateBlendFactor(ch.blendSrcFactor),\n    dstFactor: translateBlendFactor(ch.blendDstFactor)\n  };\n}\nfunction blendComponentIsNil(ch) {\n  return ch.blendMode === BlendMode.ADD && ch.blendSrcFactor === BlendFactor.ONE && ch.blendDstFactor === BlendFactor.ZERO;\n}\nfunction translateBlendState(attachmentState) {\n  if (blendComponentIsNil(attachmentState.rgbBlendState) && blendComponentIsNil(attachmentState.alphaBlendState)) {\n    return undefined;\n  } else {\n    return {\n      color: translateBlendComponent(attachmentState.rgbBlendState),\n      alpha: translateBlendComponent(attachmentState.alphaBlendState)\n    };\n  }\n}\nfunction translateColorState(attachmentState, format) {\n  return {\n    format: translateTextureFormat(format),\n    blend: translateBlendState(attachmentState),\n    writeMask: attachmentState.channelWriteMask\n  };\n}\nfunction translateTargets(colorAttachmentFormats, megaStateDescriptor) {\n  return megaStateDescriptor.attachmentsState.map(function (attachmentState, i) {\n    return translateColorState(attachmentState, colorAttachmentFormats[i]);\n  });\n}\n// @see https://www.w3.org/TR/webgpu/#enumdef-gpucomparefunction\nfunction translateCompareFunction(compareFunction) {\n  if (compareFunction === CompareFunction.NEVER) return 'never';else if (compareFunction === CompareFunction.LESS) return 'less';else if (compareFunction === CompareFunction.EQUAL) return 'equal';else if (compareFunction === CompareFunction.LEQUAL) return 'less-equal';else if (compareFunction === CompareFunction.GREATER) return 'greater';else if (compareFunction === CompareFunction.NOTEQUAL) return 'not-equal';else if (compareFunction === CompareFunction.GEQUAL) return 'greater-equal';else if (compareFunction === CompareFunction.ALWAYS) return 'always';else throw new Error('whoops');\n}\nfunction translateStencilOperation(stencilOp) {\n  if (stencilOp === StencilOp.KEEP) return 'keep';else if (stencilOp === StencilOp.REPLACE) return 'replace';else if (stencilOp === StencilOp.ZERO) return 'zero';else if (stencilOp === StencilOp.DECREMENT_CLAMP) return 'decrement-clamp';else if (stencilOp === StencilOp.DECREMENT_WRAP) return 'decrement-wrap';else if (stencilOp === StencilOp.INCREMENT_CLAMP) return 'increment-clamp';else if (stencilOp === StencilOp.INCREMENT_WRAP) return 'increment-wrap';else if (stencilOp === StencilOp.INVERT) return 'invert';else throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#dictdef-gpudepthstencilstate\n */\nfunction translateDepthStencilState(format, megaStateDescriptor) {\n  if (isNil(format)) return undefined;\n  return {\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpudepthstencilstate-format\n     */\n    format: translateTextureFormat(format),\n    depthWriteEnabled: !!megaStateDescriptor.depthWrite,\n    depthCompare: translateCompareFunction(megaStateDescriptor.depthCompare),\n    depthBias: megaStateDescriptor.polygonOffset ? 1 : 0,\n    depthBiasSlopeScale: megaStateDescriptor.polygonOffset ? 1 : 0,\n    stencilFront: {\n      compare: translateCompareFunction(megaStateDescriptor.stencilFront.compare),\n      passOp: translateStencilOperation(megaStateDescriptor.stencilFront.passOp),\n      failOp: translateStencilOperation(megaStateDescriptor.stencilFront.failOp),\n      depthFailOp: translateStencilOperation(megaStateDescriptor.stencilFront.depthFailOp)\n    },\n    stencilBack: {\n      compare: translateCompareFunction(megaStateDescriptor.stencilBack.compare),\n      passOp: translateStencilOperation(megaStateDescriptor.stencilBack.passOp),\n      failOp: translateStencilOperation(megaStateDescriptor.stencilBack.failOp),\n      depthFailOp: translateStencilOperation(megaStateDescriptor.stencilBack.depthFailOp)\n    },\n    stencilReadMask: 1,\n    stencilWriteMask: 1\n  };\n}\nfunction translateIndexFormat(format) {\n  if (format === null) return undefined;else if (format === Format.U16_R) return 'uint16';else if (format === Format.U32_R) return 'uint32';else throw new Error('whoops');\n}\nfunction translateVertexStepMode(stepMode) {\n  if (stepMode === VertexStepMode.VERTEX) return 'vertex';else if (stepMode === VertexStepMode.INSTANCE) return 'instance';else throw new Error('whoops');\n}\nfunction translateVertexFormat(format) {\n  if (format === Format.U8_R) return 'uint8x2';else if (format === Format.U8_RG) return 'uint8x2';else if (format === Format.U8_RGB) return 'uint8x4';else if (format === Format.U8_RGBA) return 'uint8x4';else if (format === Format.U8_RG_NORM) return 'unorm8x2';else if (format === Format.U8_RGBA_NORM) return 'unorm8x4';else if (format === Format.S8_RGB_NORM) return 'snorm8x4';else if (format === Format.S8_RGBA_NORM) return 'snorm8x4';else if (format === Format.U16_RG_NORM) return 'unorm16x2';else if (format === Format.U16_RGBA_NORM) return 'unorm16x4';else if (format === Format.S16_RG_NORM) return 'snorm16x2';else if (format === Format.S16_RGBA_NORM) return 'snorm16x4';else if (format === Format.S16_RG) return 'uint16x2';else if (format === Format.F16_RG) return 'float16x2';else if (format === Format.F16_RGBA) return 'float16x4';else if (format === Format.F32_R) return 'float32';else if (format === Format.F32_RG) return 'float32x2';else if (format === Format.F32_RGB) return 'float32x3';else if (format === Format.F32_RGBA) return 'float32x4';else throw 'whoops';\n}\nfunction isFormatTextureCompressionBC(format) {\n  var formatTypeFlags = getFormatTypeFlags(format);\n  switch (formatTypeFlags) {\n    case FormatTypeFlags.BC1:\n    case FormatTypeFlags.BC2:\n    case FormatTypeFlags.BC3:\n    case FormatTypeFlags.BC4_SNORM:\n    case FormatTypeFlags.BC4_UNORM:\n    case FormatTypeFlags.BC5_SNORM:\n    case FormatTypeFlags.BC5_UNORM:\n      return true;\n    default:\n      return false;\n  }\n}\nfunction getFormatBlockSize(format) {\n  var formatTypeFlags = getFormatTypeFlags(format);\n  switch (formatTypeFlags) {\n    case FormatTypeFlags.BC1:\n    case FormatTypeFlags.BC2:\n    case FormatTypeFlags.BC3:\n    case FormatTypeFlags.BC4_SNORM:\n    case FormatTypeFlags.BC4_UNORM:\n    case FormatTypeFlags.BC5_SNORM:\n    case FormatTypeFlags.BC5_UNORM:\n      return 4;\n    default:\n      return 1;\n  }\n}\nfunction allocateAndCopyTypedBuffer(type, sizeOrDstBuffer, sizeInBytes, copyBuffer) {\n  if (sizeInBytes === void 0) {\n    sizeInBytes = false;\n  }\n  switch (type) {\n    case Format.S8_R:\n    case Format.S8_R_NORM:\n    case Format.S8_RG_NORM:\n    case Format.S8_RGB_NORM:\n    case Format.S8_RGBA_NORM:\n      {\n        var buffer_1 = sizeOrDstBuffer instanceof ArrayBuffer ? new Int8Array(sizeOrDstBuffer) : new Int8Array(sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_1.set(new Int8Array(copyBuffer));\n        }\n        return buffer_1;\n      }\n    case Format.U8_R:\n    case Format.U8_R_NORM:\n    case Format.U8_RG:\n    case Format.U8_RG_NORM:\n    case Format.U8_RGB:\n    case Format.U8_RGB_NORM:\n    case Format.U8_RGB_SRGB:\n    case Format.U8_RGBA:\n    case Format.U8_RGBA_NORM:\n    case Format.U8_RGBA_SRGB:\n      {\n        var buffer_2 = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint8Array(sizeOrDstBuffer) : new Uint8Array(sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_2.set(new Uint8Array(copyBuffer));\n        }\n        return buffer_2;\n      }\n    case Format.S16_R:\n    case Format.S16_RG:\n    case Format.S16_RG_NORM:\n    case Format.S16_RGB_NORM:\n    case Format.S16_RGBA:\n    case Format.S16_RGBA_NORM:\n      {\n        var buffer_3 = sizeOrDstBuffer instanceof ArrayBuffer ? new Int16Array(sizeOrDstBuffer) : new Int16Array(sizeInBytes ? sizeOrDstBuffer / 2 : sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_3.set(new Int16Array(copyBuffer));\n        }\n        return buffer_3;\n      }\n    case Format.U16_R:\n    case Format.U16_RGB:\n    case Format.U16_RGBA_5551:\n    case Format.U16_RGBA_NORM:\n    case Format.U16_RG_NORM:\n    case Format.U16_R_NORM:\n      {\n        var buffer_4 = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint16Array(sizeOrDstBuffer) : new Uint16Array(sizeInBytes ? sizeOrDstBuffer / 2 : sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_4.set(new Uint16Array(copyBuffer));\n        }\n        return buffer_4;\n      }\n    case Format.S32_R:\n      {\n        var buffer_5 = sizeOrDstBuffer instanceof ArrayBuffer ? new Int32Array(sizeOrDstBuffer) : new Int32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_5.set(new Int32Array(copyBuffer));\n        }\n        return buffer_5;\n      }\n    case Format.U32_R:\n    case Format.U32_RG:\n      {\n        var buffer_6 = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint32Array(sizeOrDstBuffer) : new Uint32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_6.set(new Uint32Array(copyBuffer));\n        }\n        return buffer_6;\n      }\n    case Format.F32_R:\n    case Format.F32_RG:\n    case Format.F32_RGB:\n    case Format.F32_RGBA:\n      {\n        var buffer_7 = sizeOrDstBuffer instanceof ArrayBuffer ? new Float32Array(sizeOrDstBuffer) : new Float32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n        if (copyBuffer) {\n          buffer_7.set(new Float32Array(copyBuffer));\n        }\n        return buffer_7;\n      }\n  }\n  var buffer = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint8Array(sizeOrDstBuffer) : new Uint8Array(sizeOrDstBuffer);\n  if (copyBuffer) {\n    buffer.set(new Uint8Array(copyBuffer));\n  }\n  return buffer;\n}\n/**\n * Converts a half float to a number\n * @param value half float to convert\n * @returns converted half float\n */\nfunction halfFloat2Number(value) {\n  var s = (value & 0x8000) >> 15;\n  var e = (value & 0x7c00) >> 10;\n  var f = value & 0x03ff;\n  if (e === 0) {\n    return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));\n  } else if (e == 0x1f) {\n    return f ? NaN : (s ? -1 : 1) * Infinity;\n  }\n  return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));\n}\nfunction getBlockInformationFromFormat(format) {\n  switch (format) {\n    // 8 bits formats\n    case 'r8unorm':\n    case 'r8snorm':\n    case 'r8uint':\n    case 'r8sint':\n      return {\n        width: 1,\n        height: 1,\n        length: 1\n      };\n    // 16 bits formats\n    case 'r16uint':\n    case 'r16sint':\n    case 'r16float':\n    case 'rg8unorm':\n    case 'rg8snorm':\n    case 'rg8uint':\n    case 'rg8sint':\n      return {\n        width: 1,\n        height: 1,\n        length: 2\n      };\n    // 32 bits formats\n    case 'r32uint':\n    case 'r32sint':\n    case 'r32float':\n    case 'rg16uint':\n    case 'rg16sint':\n    case 'rg16float':\n    case 'rgba8unorm':\n    case 'rgba8unorm-srgb':\n    case 'rgba8snorm':\n    case 'rgba8uint':\n    case 'rgba8sint':\n    case 'bgra8unorm':\n    case 'bgra8unorm-srgb':\n    case 'rgb9e5ufloat':\n    case 'rgb10a2unorm':\n    case 'rg11b10ufloat':\n      return {\n        width: 1,\n        height: 1,\n        length: 4\n      };\n    // 64 bits formats\n    case 'rg32uint':\n    case 'rg32sint':\n    case 'rg32float':\n    case 'rgba16uint':\n    case 'rgba16sint':\n    case 'rgba16float':\n      return {\n        width: 1,\n        height: 1,\n        length: 8\n      };\n    // 128 bits formats\n    case 'rgba32uint':\n    case 'rgba32sint':\n    case 'rgba32float':\n      return {\n        width: 1,\n        height: 1,\n        length: 16\n      };\n    // Depth and stencil formats\n    case 'stencil8':\n      throw new Error('No fixed size for Stencil8 format!');\n    case 'depth16unorm':\n      return {\n        width: 1,\n        height: 1,\n        length: 2\n      };\n    case 'depth24plus':\n      throw new Error('No fixed size for Depth24Plus format!');\n    case 'depth24plus-stencil8':\n      throw new Error('No fixed size for Depth24PlusStencil8 format!');\n    case 'depth32float':\n      return {\n        width: 1,\n        height: 1,\n        length: 4\n      };\n    // case 'depth24unorm-stencil8':\n    //   return { width: 1, height: 1, length: 4 };\n    case 'depth32float-stencil8':\n      return {\n        width: 1,\n        height: 1,\n        length: 5\n      };\n    // BC compressed formats usable if \"texture-compression-bc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    case 'bc7-rgba-unorm':\n    case 'bc7-rgba-unorm-srgb':\n    case 'bc6h-rgb-ufloat':\n    case 'bc6h-rgb-float':\n    case 'bc2-rgba-unorm':\n    case 'bc2-rgba-unorm-srgb':\n    case 'bc3-rgba-unorm':\n    case 'bc3-rgba-unorm-srgb':\n    case 'bc5-rg-unorm':\n    case 'bc5-rg-snorm':\n      return {\n        width: 4,\n        height: 4,\n        length: 16\n      };\n    case 'bc4-r-unorm':\n    case 'bc4-r-snorm':\n    case 'bc1-rgba-unorm':\n    case 'bc1-rgba-unorm-srgb':\n      return {\n        width: 4,\n        height: 4,\n        length: 8\n      };\n    default:\n      return {\n        width: 1,\n        height: 1,\n        length: 4\n      };\n  }\n}\nvar ResourceBase_WebGPU = /** @class */function (_super) {\n  __extends(ResourceBase_WebGPU, _super);\n  function ResourceBase_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device;\n    var _this = _super.call(this) || this;\n    _this.id = id;\n    _this.device = device;\n    return _this;\n  }\n  ResourceBase_WebGPU.prototype.destroy = function () {};\n  return ResourceBase_WebGPU;\n}(EventEmitter);\nvar Bindings_WebGPU = /** @class */function (_super) {\n  __extends(Bindings_WebGPU, _super);\n  function Bindings_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _b, _c;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Bindings;\n    var pipeline = descriptor.pipeline;\n    assert(!!pipeline);\n    var uniformBufferBindings = descriptor.uniformBufferBindings,\n      storageBufferBindings = descriptor.storageBufferBindings,\n      samplerBindings = descriptor.samplerBindings,\n      storageTextureBindings = descriptor.storageTextureBindings;\n    _this.numUniformBuffers = (uniformBufferBindings === null || uniformBufferBindings === void 0 ? void 0 : uniformBufferBindings.length) || 0;\n    // entries orders: Uniform Sampler StorageBuffer StorageTexture\n    var gpuBindGroupEntries = [[], [], [], []];\n    var numBindings = 0;\n    if (uniformBufferBindings && uniformBufferBindings.length) {\n      for (var i = 0; i < uniformBufferBindings.length; i++) {\n        var _d = descriptor.uniformBufferBindings[i],\n          binding = _d.binding,\n          size = _d.size,\n          offset = _d.offset,\n          buffer = _d.buffer;\n        var gpuBufferBinding = {\n          buffer: getPlatformBuffer(buffer),\n          offset: offset !== null && offset !== void 0 ? offset : 0,\n          size: size\n        };\n        gpuBindGroupEntries[0].push({\n          binding: binding !== null && binding !== void 0 ? binding : numBindings++,\n          resource: gpuBufferBinding\n        });\n      }\n    }\n    if (samplerBindings && samplerBindings.length) {\n      numBindings = 0;\n      for (var i = 0; i < samplerBindings.length; i++) {\n        var samplerEntry = __assign(__assign({}, samplerBindings[i]), defaultBindingLayoutSamplerDescriptor);\n        var binding = descriptor.samplerBindings[i];\n        var texture = binding.texture !== null ? binding.texture : _this.device['getFallbackTexture'](samplerEntry);\n        samplerEntry.dimension = texture.dimension;\n        samplerEntry.formatKind = getFormatSamplerKind(texture.format);\n        var gpuTextureView = texture.gpuTextureView;\n        gpuBindGroupEntries[1].push({\n          binding: (_b = binding.textureBinding) !== null && _b !== void 0 ? _b : numBindings++,\n          resource: gpuTextureView\n        });\n        if (binding.samplerBinding !== -1) {\n          var sampler = binding.sampler !== null ? binding.sampler : _this.device['getFallbackSampler'](samplerEntry);\n          var gpuSampler = getPlatformSampler(sampler);\n          gpuBindGroupEntries[1].push({\n            binding: (_c = binding.samplerBinding) !== null && _c !== void 0 ? _c : numBindings++,\n            resource: gpuSampler\n          });\n        }\n      }\n    }\n    if (storageBufferBindings && storageBufferBindings.length) {\n      numBindings = 0;\n      for (var i = 0; i < storageBufferBindings.length; i++) {\n        var _e = descriptor.storageBufferBindings[i],\n          binding = _e.binding,\n          size = _e.size,\n          offset = _e.offset,\n          buffer = _e.buffer;\n        var gpuBufferBinding = {\n          buffer: getPlatformBuffer(buffer),\n          offset: offset !== null && offset !== void 0 ? offset : 0,\n          size: size\n        };\n        gpuBindGroupEntries[2].push({\n          binding: binding !== null && binding !== void 0 ? binding : numBindings++,\n          resource: gpuBufferBinding\n        });\n      }\n    }\n    if (storageTextureBindings && storageTextureBindings.length) {\n      numBindings = 0;\n      for (var i = 0; i < storageTextureBindings.length; i++) {\n        var _f = descriptor.storageTextureBindings[i],\n          binding = _f.binding,\n          texture = _f.texture;\n        var gpuTextureView = texture.gpuTextureView;\n        gpuBindGroupEntries[3].push({\n          binding: binding !== null && binding !== void 0 ? binding : numBindings++,\n          resource: gpuTextureView\n        });\n      }\n    }\n    var lastGroupIndex = gpuBindGroupEntries.findLastIndex(function (group) {\n      return !!group.length;\n    });\n    _this.gpuBindGroup = gpuBindGroupEntries.map(function (gpuBindGroupEntries, i) {\n      return i <= lastGroupIndex && _this.device.device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(i),\n        entries: gpuBindGroupEntries\n      });\n    });\n    return _this;\n  }\n  return Bindings_WebGPU;\n}(ResourceBase_WebGPU);\nvar Buffer_WebGPU = /** @class */function (_super) {\n  __extends(Buffer_WebGPU, _super);\n  function Buffer_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Buffer;\n    var usage = descriptor.usage,\n      viewOrSize = descriptor.viewOrSize;\n    var useMapRead = !!(usage & BufferUsage.MAP_READ);\n    _this.usage = translateBufferUsage(usage);\n    // Buffer usages (BufferUsage::(MapRead|CopyDst|Storage)) is invalid. If a buffer usage contains BufferUsage::MapRead the only other allowed usage is BufferUsage::CopyDst.\n    // @see https://www.w3.org/TR/webgpu/#dom-gpubufferusage-copy_dst\n    if (useMapRead) {\n      _this.usage = BufferUsage.MAP_READ | BufferUsage.COPY_DST;\n    }\n    var mapBuffer = !isNumber(viewOrSize);\n    // this.size = isView(viewOrSize) ? viewOrSize.byteLength : viewOrSize * 4;\n    _this.view = !isNumber(viewOrSize) ? viewOrSize : null;\n    // 4 bytes alignments (because of the upload which requires this)\n    _this.size = isNumber(viewOrSize) ? align(viewOrSize, 4) : align(viewOrSize.byteLength, 4);\n    if (!isNumber(viewOrSize)) {\n      _this.gpuBuffer = _this.device.device.createBuffer({\n        usage: _this.usage,\n        size: _this.size,\n        mappedAtCreation: true\n      });\n      var ctor = viewOrSize && viewOrSize.constructor || Float32Array;\n      // @ts-ignore\n      new ctor(_this.gpuBuffer.getMappedRange()).set(viewOrSize);\n      _this.gpuBuffer.unmap();\n    } else {\n      _this.gpuBuffer = _this.device.device.createBuffer({\n        usage: _this.usage,\n        size: _this.size,\n        mappedAtCreation: useMapRead ? mapBuffer : false\n      });\n    }\n    return _this;\n  }\n  Buffer_WebGPU.prototype.setSubData = function (dstByteOffset, src, srcByteOffset, byteLength) {\n    if (srcByteOffset === void 0) {\n      srcByteOffset = 0;\n    }\n    if (byteLength === void 0) {\n      byteLength = 0;\n    }\n    var buffer = this.gpuBuffer;\n    byteLength = byteLength || src.byteLength;\n    byteLength = Math.min(byteLength, this.size - dstByteOffset);\n    // After Migration to Canary\n    var chunkStart = src.byteOffset + srcByteOffset;\n    var chunkEnd = chunkStart + byteLength;\n    // 4 bytes alignments for upload\n    var alignedLength = byteLength + 3 & ~3;\n    if (alignedLength !== byteLength) {\n      var tempView = new Uint8Array(src.buffer.slice(chunkStart, chunkEnd));\n      src = new Uint8Array(alignedLength);\n      src.set(tempView);\n      srcByteOffset = 0;\n      chunkStart = 0;\n      chunkEnd = alignedLength;\n      byteLength = alignedLength;\n    }\n    // Chunk\n    var maxChunk = 1024 * 1024 * 15;\n    var offset = 0;\n    while (chunkEnd - (chunkStart + offset) > maxChunk) {\n      this.device.device.queue.writeBuffer(buffer, dstByteOffset + offset, src.buffer, chunkStart + offset, maxChunk);\n      offset += maxChunk;\n    }\n    this.device.device.queue.writeBuffer(buffer, dstByteOffset + offset, src.buffer, chunkStart + offset, byteLength - offset);\n  };\n  Buffer_WebGPU.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    // @see https://www.w3.org/TR/webgpu/#dom-gpubuffer-destroy\n    this.gpuBuffer.destroy();\n  };\n  return Buffer_WebGPU;\n}(ResourceBase_WebGPU);\nvar ComputePass_WebGPU = /** @class */function () {\n  function ComputePass_WebGPU() {\n    this.gpuComputePassEncoder = null;\n  }\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpucomputepassencoder-dispatchworkgroups\n   */\n  ComputePass_WebGPU.prototype.dispatchWorkgroups = function (workgroupCountX, workgroupCountY, workgroupCountZ) {\n    this.gpuComputePassEncoder.dispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ);\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpucomputepassencoder-dispatchworkgroupsindirect\n   */\n  ComputePass_WebGPU.prototype.dispatchWorkgroupsIndirect = function (indirectBuffer, indirectOffset) {\n    this.gpuComputePassEncoder.dispatchWorkgroupsIndirect(indirectBuffer.gpuBuffer, indirectOffset);\n  };\n  ComputePass_WebGPU.prototype.finish = function () {\n    this.gpuComputePassEncoder.end();\n    this.gpuComputePassEncoder = null;\n    this.frameCommandEncoder = null;\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpucommandencoder-begincomputepass\n   */\n  ComputePass_WebGPU.prototype.beginComputePass = function (commandEncoder) {\n    assert(this.gpuComputePassEncoder === null);\n    this.frameCommandEncoder = commandEncoder;\n    this.gpuComputePassEncoder = this.frameCommandEncoder.beginComputePass(this.gpuComputePassDescriptor);\n  };\n  ComputePass_WebGPU.prototype.setPipeline = function (pipeline_) {\n    var pipeline = pipeline_;\n    var gpuComputePipeline = assertExists(pipeline.gpuComputePipeline);\n    this.gpuComputePassEncoder.setPipeline(gpuComputePipeline);\n  };\n  ComputePass_WebGPU.prototype.setBindings = function (bindings_) {\n    var _this = this;\n    var bindings = bindings_;\n    bindings.gpuBindGroup.forEach(function (gpuBindGroup, i) {\n      if (gpuBindGroup) {\n        _this.gpuComputePassEncoder.setBindGroup(i, bindings.gpuBindGroup[i]);\n      }\n    });\n  };\n  ComputePass_WebGPU.prototype.pushDebugGroup = function (name) {\n    this.gpuComputePassEncoder.pushDebugGroup(name);\n  };\n  ComputePass_WebGPU.prototype.popDebugGroup = function () {\n    this.gpuComputePassEncoder.popDebugGroup();\n  };\n  ComputePass_WebGPU.prototype.insertDebugMarker = function (markerLabel) {\n    this.gpuComputePassEncoder.insertDebugMarker(markerLabel);\n  };\n  return ComputePass_WebGPU;\n}();\nvar ComputePipeline_WebGPU = /** @class */function (_super) {\n  __extends(ComputePipeline_WebGPU, _super);\n  function ComputePipeline_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.ComputePipeline;\n    _this.gpuComputePipeline = null;\n    _this.descriptor = descriptor;\n    var program = descriptor.program;\n    var computeStage = program.computeStage;\n    if (computeStage === null) return _this;\n    var gpuComputePipeline = {\n      layout: 'auto',\n      compute: __assign({}, computeStage)\n    };\n    // @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createrenderpipeline\n    _this.gpuComputePipeline = _this.device.device.createComputePipeline(gpuComputePipeline);\n    if (_this.name !== undefined) {\n      _this.gpuComputePipeline.label = _this.name;\n    }\n    return _this;\n  }\n  ComputePipeline_WebGPU.prototype.getBindGroupLayout = function (index) {\n    return this.gpuComputePipeline.getBindGroupLayout(index);\n  };\n  return ComputePipeline_WebGPU;\n}(ResourceBase_WebGPU);\nvar InputLayout_WebGPU = /** @class */function (_super) {\n  __extends(InputLayout_WebGPU, _super);\n  function InputLayout_WebGPU(_a) {\n    var e_1, _b, e_2, _c;\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.InputLayout;\n    var buffers = [];\n    try {\n      for (var _d = __values(descriptor.vertexBufferDescriptors), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var vertexBufferDescriptor = _e.value;\n        var arrayStride = vertexBufferDescriptor.arrayStride,\n          stepMode = vertexBufferDescriptor.stepMode,\n          attributes = vertexBufferDescriptor.attributes;\n        buffers.push({\n          arrayStride: arrayStride,\n          stepMode: translateVertexStepMode(stepMode),\n          attributes: []\n        });\n        try {\n          for (var attributes_1 = (e_2 = void 0, __values(attributes)), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n            var attribute = attributes_1_1.value;\n            // TODO: divisor\n            var shaderLocation = attribute.shaderLocation,\n              format = attribute.format,\n              offset = attribute.offset;\n            buffers[buffers.length - 1].attributes.push({\n              shaderLocation: shaderLocation,\n              format: translateVertexFormat(format),\n              offset: offset\n            });\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (attributes_1_1 && !attributes_1_1.done && (_c = attributes_1.return)) _c.call(attributes_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    _this.indexFormat = translateIndexFormat(descriptor.indexBufferFormat);\n    _this.buffers = buffers;\n    return _this;\n  }\n  return InputLayout_WebGPU;\n}(ResourceBase_WebGPU);\nvar Program_WebGPU = /** @class */function (_super) {\n  __extends(Program_WebGPU, _super);\n  function Program_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Program;\n    _this.vertexStage = null;\n    _this.fragmentStage = null;\n    _this.computeStage = null;\n    _this.descriptor = descriptor;\n    if (descriptor.vertex) {\n      _this.vertexStage = _this.createShaderStage(descriptor.vertex, 'vertex');\n    }\n    if (descriptor.fragment) {\n      _this.fragmentStage = _this.createShaderStage(descriptor.fragment, 'fragment');\n    }\n    if (descriptor.compute) {\n      // Only support WGSL now\n      _this.computeStage = _this.createShaderStage(descriptor.compute, 'compute');\n    }\n    return _this;\n  }\n  // eslint-disable-next-line\n  Program_WebGPU.prototype.setUniformsLegacy = function (uniforms) {};\n  Program_WebGPU.prototype.createShaderStage = function (_a, shaderStage) {\n    var e_1, _b;\n    var glsl = _a.glsl,\n      wgsl = _a.wgsl,\n      entryPoint = _a.entryPoint,\n      postprocess = _a.postprocess;\n    var validationEnabled = false;\n    // Use user-defined WGSL first.\n    var code = wgsl;\n    if (!code) {\n      try {\n        code = this.device['glsl_compile'](glsl, shaderStage, validationEnabled);\n      } catch (e) {\n        console.error(e, glsl);\n        throw new Error('whoops');\n      }\n    }\n    var _loop_1 = function (depthTextureName) {\n      if (!code.includes(depthTextureName)) return \"continue\";\n      code = code.replace(\"var T_\".concat(depthTextureName, \": texture_2d<f32>;\"), \"var T_\".concat(depthTextureName, \": texture_depth_2d;\"));\n      code = code.replace(new RegExp(\"textureSample\\\\(T_\".concat(depthTextureName, \"(.*)\\\\);$\"), 'gm'), function (sub, cap) {\n        return \"vec4<f32>(textureSample(T_\".concat(depthTextureName).concat(cap, \"), 0.0, 0.0, 0.0);\");\n      });\n    };\n    try {\n      // Workaround for https://github.com/gfx-rs/naga/issues/1355\n      for (var _c = __values(['u_TextureFramebufferDepth']), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var depthTextureName = _d.value;\n        _loop_1(depthTextureName);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    if (postprocess) {\n      code = postprocess(code);\n    }\n    // @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createshadermodule\n    var shaderModule = this.device.device.createShaderModule({\n      code: code\n    });\n    return {\n      module: shaderModule,\n      entryPoint: entryPoint || 'main'\n    };\n  };\n  return Program_WebGPU;\n}(ResourceBase_WebGPU);\nvar QueryPool_WebGPU = /** @class */function (_super) {\n  __extends(QueryPool_WebGPU, _super);\n  function QueryPool_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.QueryPool;\n    var elemCount = descriptor.elemCount,\n      type = descriptor.type;\n    _this.querySet = _this.device.device.createQuerySet({\n      type: translateQueryPoolType(type),\n      count: elemCount\n    });\n    _this.resolveBuffer = _this.device.device.createBuffer({\n      size: elemCount * 8,\n      usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC\n    });\n    _this.cpuBuffer = _this.device.device.createBuffer({\n      size: elemCount * 8,\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\n    });\n    _this.results = null;\n    return _this;\n  }\n  QueryPool_WebGPU.prototype.queryResultOcclusion = function (dstOffs) {\n    if (this.results === null) return null;\n    return this.results[dstOffs] !== BigInt(0);\n  };\n  QueryPool_WebGPU.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.querySet.destroy();\n    this.resolveBuffer.destroy();\n    this.cpuBuffer.destroy();\n  };\n  return QueryPool_WebGPU;\n}(ResourceBase_WebGPU);\nvar Readback_WebGPU = /** @class */function (_super) {\n  __extends(Readback_WebGPU, _super);\n  function Readback_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Readback;\n    return _this;\n  }\n  Readback_WebGPU.prototype.readTexture = function (t, x, y, width, height, dst, dstOffset, length) {\n    if (dstOffset === void 0) {\n      dstOffset = 0;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var texture, faceIndex, blockInformation, bytesPerRow, bytesPerRowAligned, size, buffer, commandEncoder;\n      return __generator(this, function (_a) {\n        texture = t;\n        faceIndex = 0;\n        blockInformation = getBlockInformationFromFormat(texture.gpuTextureformat);\n        bytesPerRow = Math.ceil(width / blockInformation.width) * blockInformation.length;\n        bytesPerRowAligned = Math.ceil(bytesPerRow / 256) * 256;\n        size = bytesPerRowAligned * height;\n        buffer = this.device.createBuffer({\n          usage: BufferUsage.STORAGE | BufferUsage.MAP_READ | BufferUsage.COPY_DST,\n          hint: BufferFrequencyHint.STATIC,\n          viewOrSize: size\n        });\n        commandEncoder = this.device.device.createCommandEncoder();\n        // @see https://www.w3.org/TR/webgpu/#dom-gpucommandencoder-copytexturetobuffer\n        commandEncoder.copyTextureToBuffer({\n          texture: texture.gpuTexture,\n          mipLevel: 0,\n          origin: {\n            x: x,\n            y: y,\n            z: Math.max(faceIndex, 0)\n          }\n        }, {\n          buffer: buffer.gpuBuffer,\n          offset: 0,\n          bytesPerRow: bytesPerRowAligned\n        }, {\n          width: width,\n          height: height,\n          depthOrArrayLayers: 1\n        });\n        this.device.device.queue.submit([commandEncoder.finish()]);\n        return [2 /*return*/, this.readBuffer(buffer, 0, dst.byteLength === size ? dst : null, dstOffset, size, texture.format, true, false, bytesPerRow, bytesPerRowAligned, height)];\n      });\n    });\n  };\n  Readback_WebGPU.prototype.readTextureSync = function (t, x, y, width, height, dst, dstOffset, length) {\n    throw new Error('ERROR_MSG_METHOD_NOT_IMPLEMENTED');\n  };\n  Readback_WebGPU.prototype.readBuffer = function (b, srcByteOffset, dstArrayBufferView, dstOffset, _size, type, noDataConversion, destroy, bytesPerRow, bytesPerRowAligned, height) {\n    var _this = this;\n    if (srcByteOffset === void 0) {\n      srcByteOffset = 0;\n    }\n    if (dstArrayBufferView === void 0) {\n      dstArrayBufferView = null;\n    }\n    if (_size === void 0) {\n      _size = 0;\n    }\n    if (type === void 0) {\n      type = Format.U8_RGB;\n    }\n    if (noDataConversion === void 0) {\n      noDataConversion = false;\n    }\n    if (bytesPerRow === void 0) {\n      bytesPerRow = 0;\n    }\n    if (bytesPerRowAligned === void 0) {\n      bytesPerRowAligned = 0;\n    }\n    if (height === void 0) {\n      height = 0;\n    }\n    var buffer = b;\n    var size = _size || buffer.size;\n    var dst = dstArrayBufferView || buffer.view;\n    var floatFormat =\n    // @ts-ignore\n    dst && dst.constructor && dst.constructor.BYTES_PER_ELEMENT || getFormatCompByteSize(type);\n    var gpuReadBuffer = buffer;\n    // can read buffer directly?\n    if (!(buffer.usage & BufferUsage.MAP_READ && buffer.usage & BufferUsage.COPY_DST)) {\n      var commandEncoder = this.device.device.createCommandEncoder();\n      gpuReadBuffer = this.device.createBuffer({\n        usage: BufferUsage.STORAGE | BufferUsage.MAP_READ | BufferUsage.COPY_DST,\n        hint: BufferFrequencyHint.STATIC,\n        viewOrSize: size\n      });\n      // Encode commands for copying buffer to buffer.\n      commandEncoder.copyBufferToBuffer(buffer.gpuBuffer /* source buffer */, srcByteOffset /* source offset */, gpuReadBuffer.gpuBuffer /* destination buffer */, 0 /* destination offset */, size /* size */);\n      this.device.device.queue.submit([commandEncoder.finish()]);\n    }\n    return new Promise(function (resolve, reject) {\n      gpuReadBuffer.gpuBuffer.mapAsync(GPUMapMode.READ, srcByteOffset, size).then(function () {\n        var copyArrayBuffer = gpuReadBuffer.gpuBuffer.getMappedRange(srcByteOffset, size);\n        var data = dst;\n        if (noDataConversion) {\n          if (data === null) {\n            data = allocateAndCopyTypedBuffer(type, size, true, copyArrayBuffer);\n          } else {\n            // @ts-ignore\n            data = allocateAndCopyTypedBuffer(type, data.buffer, undefined, copyArrayBuffer);\n          }\n        } else {\n          if (data === null) {\n            switch (floatFormat) {\n              case 1:\n                // byte format\n                data = new Uint8Array(size);\n                data.set(new Uint8Array(copyArrayBuffer));\n                break;\n              case 2:\n                // half float\n                // TODO WEBGPU use computer shaders (or render pass) to make the conversion?\n                data = _this.getHalfFloatAsFloatRGBAArrayBuffer(size / 2, copyArrayBuffer);\n                break;\n              case 4:\n                // float\n                data = new Float32Array(size / 4);\n                data.set(new Float32Array(copyArrayBuffer));\n                break;\n            }\n          } else {\n            switch (floatFormat) {\n              case 1:\n                // byte format\n                data = new Uint8Array(data.buffer);\n                data.set(new Uint8Array(copyArrayBuffer));\n                break;\n              case 2:\n                // half float\n                // TODO WEBGPU use computer shaders (or render pass) to make the conversion?\n                data = _this.getHalfFloatAsFloatRGBAArrayBuffer(size / 2, copyArrayBuffer, dst);\n                break;\n              case 4:\n                // float\n                var ctor = dst && dst.constructor || Float32Array;\n                // @ts-ignore\n                data = new ctor(data.buffer);\n                // @ts-ignore\n                data.set(new ctor(copyArrayBuffer));\n                break;\n            }\n          }\n        }\n        if (bytesPerRow !== bytesPerRowAligned) {\n          // TODO WEBGPU use computer shaders (or render pass) to build the final buffer data?\n          if (floatFormat === 1 && !noDataConversion) {\n            // half float have been converted to float above\n            bytesPerRow *= 2;\n            bytesPerRowAligned *= 2;\n          }\n          var data2 = new Uint8Array(data.buffer);\n          var offset = bytesPerRow,\n            offset2 = 0;\n          for (var y = 1; y < height; ++y) {\n            offset2 = y * bytesPerRowAligned;\n            for (var x = 0; x < bytesPerRow; ++x) {\n              data2[offset++] = data2[offset2++];\n            }\n          }\n          if (floatFormat !== 0 && !noDataConversion) {\n            data = new Float32Array(data2.buffer, 0, offset / 4);\n          } else {\n            data = new Uint8Array(data2.buffer, 0, offset);\n          }\n        }\n        gpuReadBuffer.gpuBuffer.unmap();\n        resolve(data);\n      }, function (reason) {\n        return reject(reason);\n      });\n    });\n  };\n  Readback_WebGPU.prototype.getHalfFloatAsFloatRGBAArrayBuffer = function (dataLength, arrayBuffer, destArray) {\n    if (!destArray) {\n      destArray = new Float32Array(dataLength);\n    }\n    var srcData = new Uint16Array(arrayBuffer);\n    while (dataLength--) {\n      destArray[dataLength] = halfFloat2Number(srcData[dataLength]);\n    }\n    return destArray;\n  };\n  return Readback_WebGPU;\n}(ResourceBase_WebGPU);\nvar RenderPass_WebGPU = /** @class */function () {\n  function RenderPass_WebGPU(device) {\n    this.device = device;\n    this.gpuRenderPassEncoder = null;\n    this.gfxColorAttachment = [];\n    this.gfxColorAttachmentLevel = [];\n    this.gfxColorResolveTo = [];\n    this.gfxColorResolveToLevel = [];\n    this.gfxDepthStencilAttachment = null;\n    this.gfxDepthStencilResolveTo = null;\n    this.gpuColorAttachments = [];\n    this.gpuDepthStencilAttachment = {\n      view: null,\n      depthLoadOp: 'load',\n      depthStoreOp: 'store',\n      stencilLoadOp: 'load',\n      stencilStoreOp: 'store'\n    };\n    this.gpuRenderPassDescriptor = {\n      colorAttachments: this.gpuColorAttachments,\n      depthStencilAttachment: this.gpuDepthStencilAttachment\n    };\n  }\n  RenderPass_WebGPU.prototype.getEncoder = function () {\n    var _a;\n    return ((_a = this.renderBundle) === null || _a === void 0 ? void 0 : _a['renderBundleEncoder']) || this.gpuRenderPassEncoder;\n  };\n  RenderPass_WebGPU.prototype.getTextureView = function (target, level) {\n    assert(level < target.mipLevelCount);\n    if (target.mipLevelCount === 1) return target.gpuTextureView;else return target.gpuTexture.createView({\n      baseMipLevel: level,\n      mipLevelCount: 1\n    });\n  };\n  RenderPass_WebGPU.prototype.setRenderPassDescriptor = function (descriptor) {\n    var _a, _b, _c, _d, _e, _f;\n    this.descriptor = descriptor;\n    this.gpuRenderPassDescriptor.colorAttachments = this.gpuColorAttachments;\n    var numColorAttachments = descriptor.colorAttachment.length;\n    this.gfxColorAttachment.length = numColorAttachments;\n    this.gfxColorResolveTo.length = numColorAttachments;\n    for (var i = 0; i < descriptor.colorAttachment.length; i++) {\n      var colorAttachment = descriptor.colorAttachment[i];\n      var colorResolveTo = descriptor.colorResolveTo[i];\n      // Do some dumb juggling...\n      if (colorAttachment === null && colorResolveTo !== null) {\n        colorAttachment = colorResolveTo;\n        colorResolveTo = null;\n      }\n      this.gfxColorAttachment[i] = colorAttachment;\n      this.gfxColorResolveTo[i] = colorResolveTo;\n      this.gfxColorAttachmentLevel[i] = ((_a = descriptor.colorAttachmentLevel) === null || _a === void 0 ? void 0 : _a[i]) || 0;\n      this.gfxColorResolveToLevel[i] = ((_b = descriptor.colorResolveToLevel) === null || _b === void 0 ? void 0 : _b[i]) || 0;\n      if (colorAttachment !== null) {\n        if (this.gpuColorAttachments[i] === undefined) {\n          this.gpuColorAttachments[i] = {};\n        }\n        var dstAttachment = this.gpuColorAttachments[i];\n        dstAttachment.view = this.getTextureView(colorAttachment, ((_c = this.gfxColorAttachmentLevel) === null || _c === void 0 ? void 0 : _c[i]) || 0);\n        var clearColor = (_e = (_d = descriptor.colorClearColor) === null || _d === void 0 ? void 0 : _d[i]) !== null && _e !== void 0 ? _e : 'load';\n        if (clearColor === 'load') {\n          dstAttachment.loadOp = 'load';\n        } else {\n          dstAttachment.loadOp = 'clear';\n          dstAttachment.clearValue = clearColor;\n        }\n        dstAttachment.storeOp = ((_f = descriptor.colorStore) === null || _f === void 0 ? void 0 : _f[i]) ? 'store' : 'discard';\n        dstAttachment.resolveTarget = undefined;\n        if (colorResolveTo !== null) {\n          if (colorAttachment.sampleCount > 1) {\n            dstAttachment.resolveTarget = this.getTextureView(colorResolveTo, this.gfxColorResolveToLevel[i]);\n          } else {\n            dstAttachment.storeOp = 'store';\n          }\n        }\n      } else {\n        // https://github.com/gpuweb/gpuweb/issues/1250\n        this.gpuColorAttachments.length = i;\n        this.gfxColorAttachment.length = i;\n        this.gfxColorResolveTo.length = i;\n        break;\n      }\n    }\n    this.gfxDepthStencilAttachment = descriptor.depthStencilAttachment;\n    this.gfxDepthStencilResolveTo = descriptor.depthStencilResolveTo;\n    if (descriptor.depthStencilAttachment) {\n      var dsAttachment = descriptor.depthStencilAttachment;\n      var dstAttachment = this.gpuDepthStencilAttachment;\n      dstAttachment.view = dsAttachment.gpuTextureView;\n      var hasDepth = !!(getFormatFlags(dsAttachment.format) & FormatFlags.Depth);\n      if (hasDepth) {\n        if (descriptor.depthClearValue === 'load') {\n          dstAttachment.depthLoadOp = 'load';\n        } else {\n          dstAttachment.depthLoadOp = 'clear';\n          dstAttachment.depthClearValue = descriptor.depthClearValue;\n        }\n        if (descriptor.depthStencilStore || this.gfxDepthStencilResolveTo !== null) dstAttachment.depthStoreOp = 'store';else dstAttachment.depthStoreOp = 'discard';\n      } else {\n        dstAttachment.depthLoadOp = undefined;\n        dstAttachment.depthStoreOp = undefined;\n      }\n      var hasStencil = !!(getFormatFlags(dsAttachment.format) & FormatFlags.Stencil);\n      if (hasStencil) {\n        if (descriptor.stencilClearValue === 'load') {\n          dstAttachment.stencilLoadOp = 'load';\n        } else {\n          dstAttachment.stencilLoadOp = 'clear';\n          dstAttachment.stencilClearValue = descriptor.stencilClearValue;\n        }\n        if (descriptor.depthStencilStore || this.gfxDepthStencilResolveTo !== null) dstAttachment.stencilStoreOp = 'store';else dstAttachment.stencilStoreOp = 'discard';\n      } else {\n        dstAttachment.stencilLoadOp = undefined;\n        dstAttachment.stencilStoreOp = undefined;\n      }\n      this.gpuRenderPassDescriptor.depthStencilAttachment = this.gpuDepthStencilAttachment;\n    } else {\n      this.gpuRenderPassDescriptor.depthStencilAttachment = undefined;\n    }\n    this.gpuRenderPassDescriptor.occlusionQuerySet = !isNil(descriptor.occlusionQueryPool) ? getPlatformQuerySet(descriptor.occlusionQueryPool) : undefined;\n  };\n  RenderPass_WebGPU.prototype.beginRenderPass = function (commandEncoder, renderPassDescriptor) {\n    assert(this.gpuRenderPassEncoder === null);\n    this.setRenderPassDescriptor(renderPassDescriptor);\n    this.frameCommandEncoder = commandEncoder;\n    this.gpuRenderPassEncoder = this.frameCommandEncoder.beginRenderPass(this.gpuRenderPassDescriptor);\n  };\n  RenderPass_WebGPU.prototype.flipY = function (y, h) {\n    var height = this.device['swapChainHeight'];\n    return height - y - h;\n  };\n  RenderPass_WebGPU.prototype.setViewport = function (x, y, w, h, minDepth, maxDepth) {\n    if (minDepth === void 0) {\n      minDepth = 0;\n    }\n    if (maxDepth === void 0) {\n      maxDepth = 1;\n    }\n    this.gpuRenderPassEncoder.setViewport(x, this.flipY(y, h), w, h, minDepth, maxDepth);\n  };\n  RenderPass_WebGPU.prototype.setScissorRect = function (x, y, w, h) {\n    this.gpuRenderPassEncoder.setScissorRect(x, this.flipY(y, h), w, h);\n  };\n  RenderPass_WebGPU.prototype.setPipeline = function (pipeline_) {\n    var pipeline = pipeline_;\n    var gpuRenderPipeline = assertExists(pipeline.gpuRenderPipeline);\n    this.getEncoder().setPipeline(gpuRenderPipeline);\n  };\n  RenderPass_WebGPU.prototype.setVertexInput = function (inputLayout_, vertexBuffers, indexBuffer) {\n    if (inputLayout_ === null) return;\n    var encoder = this.getEncoder();\n    var inputLayout = inputLayout_;\n    if (indexBuffer !== null) encoder.setIndexBuffer(getPlatformBuffer(indexBuffer.buffer), assertExists(inputLayout.indexFormat), indexBuffer.offset);\n    for (var i = 0; i < vertexBuffers.length; i++) {\n      var b = vertexBuffers[i];\n      if (b === null) continue;\n      encoder.setVertexBuffer(i, getPlatformBuffer(b.buffer), b.offset);\n    }\n  };\n  RenderPass_WebGPU.prototype.setBindings = function (bindings_) {\n    var bindings = bindings_;\n    var encoder = this.getEncoder();\n    bindings.gpuBindGroup.forEach(function (gpuBindGroup, i) {\n      if (gpuBindGroup) {\n        encoder.setBindGroup(i, bindings.gpuBindGroup[i]);\n      }\n    });\n  };\n  RenderPass_WebGPU.prototype.setStencilReference = function (ref) {\n    this.gpuRenderPassEncoder.setStencilReference(ref);\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-draw\n   */\n  RenderPass_WebGPU.prototype.draw = function (vertexCount, instanceCount, firstVertex, firstInstance) {\n    this.getEncoder().draw(vertexCount, instanceCount, firstVertex, firstInstance);\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindexed\n   */\n  RenderPass_WebGPU.prototype.drawIndexed = function (indexCount, instanceCount, firstIndex, baseVertex, firstInstance) {\n    this.getEncoder().drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindirect\n   */\n  RenderPass_WebGPU.prototype.drawIndirect = function (indirectBuffer, indirectOffset) {\n    this.getEncoder().drawIndirect(getPlatformBuffer(indirectBuffer), indirectOffset);\n  };\n  RenderPass_WebGPU.prototype.drawIndexedIndirect = function (indirectBuffer, indirectOffset) {\n    this.getEncoder().drawIndexedIndirect(getPlatformBuffer(indirectBuffer), indirectOffset);\n  };\n  RenderPass_WebGPU.prototype.beginOcclusionQuery = function (queryIndex) {\n    this.gpuRenderPassEncoder.beginOcclusionQuery(queryIndex);\n  };\n  RenderPass_WebGPU.prototype.endOcclusionQuery = function () {\n    this.gpuRenderPassEncoder.endOcclusionQuery();\n  };\n  RenderPass_WebGPU.prototype.pushDebugGroup = function (name) {\n    this.gpuRenderPassEncoder.pushDebugGroup(name);\n  };\n  RenderPass_WebGPU.prototype.popDebugGroup = function () {\n    this.gpuRenderPassEncoder.popDebugGroup();\n  };\n  RenderPass_WebGPU.prototype.insertDebugMarker = function (markerLabel) {\n    this.gpuRenderPassEncoder.insertDebugMarker(markerLabel);\n  };\n  RenderPass_WebGPU.prototype.beginBundle = function (renderBundle) {\n    this.renderBundle = renderBundle;\n  };\n  RenderPass_WebGPU.prototype.endBundle = function () {\n    this.renderBundle.finish();\n  };\n  RenderPass_WebGPU.prototype.executeBundles = function (renderBundles) {\n    this.gpuRenderPassEncoder.executeBundles(renderBundles.map(function (bundle) {\n      return bundle.renderBundle;\n    }));\n  };\n  RenderPass_WebGPU.prototype.finish = function () {\n    var _a;\n    (_a = this.gpuRenderPassEncoder) === null || _a === void 0 ? void 0 : _a.end();\n    this.gpuRenderPassEncoder = null;\n    // Fake a resolve with a copy for non-MSAA.\n    for (var i = 0; i < this.gfxColorAttachment.length; i++) {\n      var colorAttachment = this.gfxColorAttachment[i];\n      var colorResolveTo = this.gfxColorResolveTo[i];\n      if (colorAttachment !== null && colorResolveTo !== null && colorAttachment.sampleCount === 1) {\n        this.copyAttachment(colorResolveTo, this.gfxColorAttachmentLevel[i], colorAttachment, this.gfxColorResolveToLevel[i]);\n      }\n    }\n    if (this.gfxDepthStencilAttachment && this.gfxDepthStencilResolveTo) {\n      if (this.gfxDepthStencilAttachment.sampleCount > 1) ;else {\n        this.copyAttachment(this.gfxDepthStencilResolveTo, 0, this.gfxDepthStencilAttachment, 0);\n      }\n    }\n    this.frameCommandEncoder = null;\n  };\n  RenderPass_WebGPU.prototype.copyAttachment = function (dst, dstLevel, src, srcLevel) {\n    assert(src.sampleCount === 1);\n    var srcCopy = {\n      texture: src.gpuTexture,\n      mipLevel: srcLevel\n    };\n    var dstCopy = {\n      texture: dst.gpuTexture,\n      mipLevel: dstLevel\n    };\n    assert(src.width >>> srcLevel === dst.width >>> dstLevel);\n    assert(src.height >>> srcLevel === dst.height >>> dstLevel);\n    assert(!!(src.usage & GPUTextureUsage$1.COPY_SRC));\n    assert(!!(dst.usage & GPUTextureUsage$1.COPY_DST));\n    this.frameCommandEncoder.copyTextureToTexture(srcCopy, dstCopy, [dst.width, dst.height, 1]);\n  };\n  return RenderPass_WebGPU;\n}();\nvar RenderPipeline_WebGPU = /** @class */function (_super) {\n  __extends(RenderPipeline_WebGPU, _super);\n  function RenderPipeline_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.RenderPipeline;\n    _this.isCreatingAsync = false;\n    _this.gpuRenderPipeline = null;\n    _this.descriptor = descriptor;\n    _this.device['createRenderPipelineInternal'](_this, false);\n    return _this;\n  }\n  RenderPipeline_WebGPU.prototype.getBindGroupLayout = function (index) {\n    return this.gpuRenderPipeline.getBindGroupLayout(index);\n  };\n  return RenderPipeline_WebGPU;\n}(ResourceBase_WebGPU);\nvar Sampler_WebGPU = /** @class */function (_super) {\n  __extends(Sampler_WebGPU, _super);\n  function Sampler_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor;\n    var _b, _c;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Sampler;\n    var lodMinClamp = descriptor.lodMinClamp;\n    var lodMaxClamp = descriptor.mipmapFilter === MipmapFilterMode.NO_MIP ? descriptor.lodMinClamp : descriptor.lodMaxClamp;\n    var maxAnisotropy = (_b = descriptor.maxAnisotropy) !== null && _b !== void 0 ? _b : 1;\n    if (maxAnisotropy > 1) assert(descriptor.minFilter === FilterMode.BILINEAR && descriptor.magFilter === FilterMode.BILINEAR && descriptor.mipmapFilter === MipmapFilterMode.LINEAR);\n    _this.gpuSampler = _this.device.device.createSampler({\n      addressModeU: translateAddressMode(descriptor.addressModeU),\n      addressModeV: translateAddressMode(descriptor.addressModeV),\n      addressModeW: translateAddressMode((_c = descriptor.addressModeW) !== null && _c !== void 0 ? _c : descriptor.addressModeU),\n      lodMinClamp: lodMinClamp,\n      lodMaxClamp: lodMaxClamp,\n      minFilter: translateMinMagFilter(descriptor.minFilter),\n      magFilter: translateMinMagFilter(descriptor.magFilter),\n      mipmapFilter: translateMipFilter(descriptor.mipmapFilter),\n      compare: descriptor.compareFunction !== undefined ? translateCompareFunction(descriptor.compareFunction) : undefined,\n      maxAnisotropy: maxAnisotropy\n    });\n    return _this;\n  }\n  return Sampler_WebGPU;\n}(ResourceBase_WebGPU);\nvar Texture_WebGPU = /** @class */function (_super) {\n  __extends(Texture_WebGPU, _super);\n  function Texture_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device,\n      descriptor = _a.descriptor,\n      skipCreate = _a.skipCreate,\n      sampleCount = _a.sampleCount;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.Texture;\n    _this.flipY = false;\n    var format = descriptor.format,\n      dimension = descriptor.dimension,\n      width = descriptor.width,\n      height = descriptor.height,\n      depthOrArrayLayers = descriptor.depthOrArrayLayers,\n      mipLevelCount = descriptor.mipLevelCount,\n      usage = descriptor.usage,\n      pixelStore = descriptor.pixelStore;\n    _this.flipY = !!(pixelStore === null || pixelStore === void 0 ? void 0 : pixelStore.unpackFlipY);\n    _this.device.createTextureShared({\n      format: format,\n      dimension: dimension !== null && dimension !== void 0 ? dimension : TextureDimension.TEXTURE_2D,\n      width: width,\n      height: height,\n      depthOrArrayLayers: depthOrArrayLayers !== null && depthOrArrayLayers !== void 0 ? depthOrArrayLayers : 1,\n      mipLevelCount: mipLevelCount !== null && mipLevelCount !== void 0 ? mipLevelCount : 1,\n      usage: usage,\n      sampleCount: sampleCount !== null && sampleCount !== void 0 ? sampleCount : 1\n    }, _this, skipCreate);\n    return _this;\n  }\n  Texture_WebGPU.prototype.textureFromImageBitmapOrCanvas = function (device, sources, depthOrArrayLayers) {\n    var width = sources[0].width;\n    var height = sources[0].height;\n    var textureDescriptor = {\n      // Unlike in WebGL, the size of our texture must be set at texture creation time.\n      // This means we have to wait until the image is loaded to create the texture, since we won't\n      // know the size until then.\n      size: {\n        width: width,\n        height: height,\n        depthOrArrayLayers: depthOrArrayLayers\n      },\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT\n    };\n    var texture = device.createTexture(textureDescriptor);\n    for (var i = 0; i < sources.length; i++) {\n      device.queue.copyExternalImageToTexture({\n        source: sources[i],\n        flipY: this.flipY\n      }, {\n        texture: texture,\n        origin: [0, 0, i]\n      }, [width, height]);\n    }\n    return [texture, width, height];\n  };\n  Texture_WebGPU.prototype.isImageBitmapOrCanvases = function (datas) {\n    var data = datas[0];\n    return data instanceof ImageBitmap || data instanceof HTMLCanvasElement || data instanceof OffscreenCanvas;\n  };\n  Texture_WebGPU.prototype.isVideo = function (datas) {\n    var data = datas[0];\n    return data instanceof HTMLVideoElement;\n  };\n  /**\n   * @see https://toji.dev/webgpu-best-practices/img-textures\n   */\n  Texture_WebGPU.prototype.setImageData = function (datas, lod) {\n    var _a;\n    var _this = this;\n    var device = this.device.device;\n    var texture;\n    var width;\n    var height;\n    if (this.isImageBitmapOrCanvases(datas)) {\n      _a = __read(this.textureFromImageBitmapOrCanvas(device, datas, this.depthOrArrayLayers), 3), texture = _a[0], width = _a[1], height = _a[2];\n    } else if (this.isVideo(datas)) {\n      // @see https://toji.dev/webgpu-best-practices/img-textures#creating-a-texture-from-an-htmlvideoelement-video-tag\n      texture = device.importExternalTexture({\n        source: datas[0]\n      });\n    } else {\n      var blockInformation = getBlockInformationFromFormat(this.gpuTextureformat);\n      var bytesPerRow_1 = Math.ceil(this.width / blockInformation.width) * blockInformation.length;\n      // TODO: support ArrayBufferView[]\n      datas.forEach(function (data) {\n        device.queue.writeTexture({\n          texture: _this.gpuTexture\n        }, data, {\n          bytesPerRow: bytesPerRow_1\n        }, {\n          width: _this.width,\n          height: _this.height\n        });\n      });\n    }\n    this.width = width;\n    this.height = height;\n    if (texture) {\n      this.gpuTexture = texture;\n    }\n    this.gpuTextureView = this.gpuTexture.createView({\n      dimension: translateTextureViewDimension(this.dimension)\n    });\n  };\n  Texture_WebGPU.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    // @see https://www.w3.org/TR/webgpu/#dom-gputexture-destroy\n    this.gpuTexture.destroy();\n  };\n  return Texture_WebGPU;\n}(ResourceBase_WebGPU);\n\n/**\n * It works by recording the draw calls during one frame and by replaying this recording for all subsequent frames.\n * So, the scene should be mostly static for this mode to work as expected.\n * @see https://doc.babylonjs.com/setup/support/webGPU/webGPUOptimization/webGPUSnapshotRendering\n */\nvar RenderBundle_WebGPU = /** @class */function (_super) {\n  __extends(RenderBundle_WebGPU, _super);\n  function RenderBundle_WebGPU(_a) {\n    var id = _a.id,\n      device = _a.device;\n    var _this = _super.call(this, {\n      id: id,\n      device: device\n    }) || this;\n    _this.type = ResourceType.RenderBundle;\n    _this.renderBundleEncoder = _this.device.device.createRenderBundleEncoder({\n      colorFormats: [_this.device['swapChainFormat']]\n    });\n    return _this;\n  }\n  RenderBundle_WebGPU.prototype.finish = function () {\n    this.renderBundle = this.renderBundleEncoder.finish();\n  };\n  return RenderBundle_WebGPU;\n}(ResourceBase_WebGPU);\nvar Device_WebGPU = /** @class */function () {\n  function Device_WebGPU(adapter, device, canvas, canvasContext, glsl_compile, wGSLComposer) {\n    this.swapChainWidth = 0;\n    this.swapChainHeight = 0;\n    this.swapChainTextureUsage = GPUTextureUsage$1.RENDER_ATTACHMENT | GPUTextureUsage$1.COPY_DST;\n    this._resourceUniqueId = 0;\n    this.renderPassPool = [];\n    this.computePassPool = [];\n    this.frameCommandEncoderPool = [];\n    this.featureTextureCompressionBC = false;\n    // VendorInfo\n    this.platformString = 'WebGPU';\n    this.glslVersion = \"#version 440\";\n    this.explicitBindingLocations = true;\n    this.separateSamplerTextures = true;\n    this.viewportOrigin = ViewportOrigin.UPPER_LEFT;\n    this.clipSpaceNearZ = ClipSpaceNearZ.ZERO;\n    this.supportsSyncPipelineCompilation = false;\n    this.supportMRT = true;\n    this.device = device;\n    this.canvas = canvas;\n    this.canvasContext = canvasContext;\n    this.glsl_compile = glsl_compile;\n    this.WGSLComposer = wGSLComposer;\n    this.fallbackTexture2D = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Float);\n    this.setResourceName(this.fallbackTexture2D, 'Fallback Texture2D');\n    this.fallbackTexture2DDepth = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Depth);\n    this.setResourceName(this.fallbackTexture2DDepth, 'Fallback Depth Texture2D');\n    this.fallbackTexture2DArray = this.createFallbackTexture(TextureDimension.TEXTURE_2D_ARRAY, SamplerFormatKind.Float);\n    this.setResourceName(this.fallbackTexture2DArray, 'Fallback Texture2DArray');\n    this.fallbackTexture3D = this.createFallbackTexture(TextureDimension.TEXTURE_3D, SamplerFormatKind.Float);\n    this.setResourceName(this.fallbackTexture3D, 'Fallback Texture3D');\n    this.fallbackTextureCube = this.createFallbackTexture(TextureDimension.TEXTURE_CUBE_MAP, SamplerFormatKind.Float);\n    this.setResourceName(this.fallbackTextureCube, 'Fallback TextureCube');\n    this.fallbackSamplerFiltering = this.createSampler({\n      addressModeU: AddressMode.REPEAT,\n      addressModeV: AddressMode.REPEAT,\n      minFilter: FilterMode.POINT,\n      magFilter: FilterMode.POINT,\n      mipmapFilter: MipmapFilterMode.NEAREST\n    });\n    this.setResourceName(this.fallbackSamplerFiltering, 'Fallback Sampler Filtering');\n    this.fallbackSamplerComparison = this.createSampler({\n      addressModeU: AddressMode.REPEAT,\n      addressModeV: AddressMode.REPEAT,\n      minFilter: FilterMode.POINT,\n      magFilter: FilterMode.POINT,\n      mipmapFilter: MipmapFilterMode.NEAREST,\n      compareFunction: CompareFunction.ALWAYS\n    });\n    this.setResourceName(this.fallbackSamplerComparison, 'Fallback Sampler Comparison Filtering');\n    // Firefox doesn't support GPUDevice.features yet...\n    if (this.device.features) {\n      this.featureTextureCompressionBC = this.device.features.has('texture-compression-bc');\n    }\n    this.device.onuncapturederror = function (event) {\n      console.error(event.error);\n    };\n    this.swapChainFormat = navigator.gpu.getPreferredCanvasFormat();\n    // @see https://www.w3.org/TR/webgpu/#canvas-configuration\n    this.canvasContext.configure({\n      device: this.device,\n      format: this.swapChainFormat,\n      usage: this.swapChainTextureUsage,\n      // @see https://www.w3.org/TR/webgpu/#gpucanvasalphamode\n      // alphaMode: 'opaque',\n      alphaMode: 'premultiplied'\n    });\n  }\n  Device_WebGPU.prototype.destroy = function () {};\n  // SwapChain\n  Device_WebGPU.prototype.configureSwapChain = function (width, height) {\n    if (this.swapChainWidth === width && this.swapChainHeight === height) return;\n    this.swapChainWidth = width;\n    this.swapChainHeight = height;\n  };\n  Device_WebGPU.prototype.getOnscreenTexture = function () {\n    // @see https://www.w3.org/TR/webgpu/#dom-gpucanvascontext-getcurrenttexture\n    var gpuTexture = this.canvasContext.getCurrentTexture();\n    var gpuTextureView = gpuTexture.createView();\n    var texture = new Texture_WebGPU({\n      id: 0,\n      device: this,\n      descriptor: {\n        format: Format.U8_RGBA_RT,\n        width: this.swapChainWidth,\n        height: this.swapChainHeight,\n        depthOrArrayLayers: 0,\n        dimension: TextureDimension.TEXTURE_2D,\n        mipLevelCount: 1,\n        usage: this.swapChainTextureUsage\n      },\n      skipCreate: true\n    });\n    texture.depthOrArrayLayers = 1;\n    texture.sampleCount = 1;\n    texture.gpuTexture = gpuTexture;\n    texture.gpuTextureView = gpuTextureView;\n    texture.name = 'Onscreen';\n    this.setResourceName(texture, 'Onscreen Texture');\n    return texture;\n  };\n  Device_WebGPU.prototype.getDevice = function () {\n    return this;\n  };\n  Device_WebGPU.prototype.getCanvas = function () {\n    return this.canvas;\n  };\n  Device_WebGPU.prototype.beginFrame = function () {\n    assert(this.frameCommandEncoderPool.length === 0);\n  };\n  Device_WebGPU.prototype.endFrame = function () {\n    assert(this.frameCommandEncoderPool.every(function (frameCommandEncoder) {\n      return frameCommandEncoder !== null;\n    }));\n    this.device.queue.submit(this.frameCommandEncoderPool.map(function (frameCommandEncoder) {\n      return frameCommandEncoder.finish();\n    }));\n    this.frameCommandEncoderPool = [];\n    // for (let i = 0; i < this.queryPoolsSubmitted.length; i++) {\n    //   const queryPool = this.queryPoolsSubmitted[i];\n    //   queryPool.cpuBuffer.mapAsync(GPUMapMode.READ).then(() => {\n    //     queryPool.results = new BigUint64Array(\n    //       queryPool.cpuBuffer.getMappedRange(),\n    //     );\n    //   });\n    // }\n    // this.queryPoolsSubmitted.length = 0;\n  };\n\n  Device_WebGPU.prototype.getNextUniqueId = function () {\n    return ++this._resourceUniqueId;\n  };\n  Device_WebGPU.prototype.createBuffer = function (descriptor) {\n    return new Buffer_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createTexture = function (descriptor) {\n    return new Texture_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  /**\n   * @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createsampler\n   * @see https://www.w3.org/TR/webgpu/#GPUSamplerDescriptor\n   */\n  Device_WebGPU.prototype.createSampler = function (descriptor) {\n    return new Sampler_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createRenderTarget = function (descriptor) {\n    var texture = new Texture_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: __assign(__assign({}, descriptor), {\n        dimension: TextureDimension.TEXTURE_2D,\n        mipLevelCount: 1,\n        depthOrArrayLayers: 1,\n        usage: TextureUsage.RENDER_TARGET\n      }),\n      sampleCount: descriptor.sampleCount\n    });\n    texture.depthOrArrayLayers = 1;\n    // @ts-ignore\n    texture.type = ResourceType.RenderTarget;\n    return texture;\n  };\n  Device_WebGPU.prototype.createRenderTargetFromTexture = function (texture) {\n    var _a = texture,\n      format = _a.format,\n      width = _a.width,\n      height = _a.height,\n      depthOrArrayLayers = _a.depthOrArrayLayers,\n      sampleCount = _a.sampleCount,\n      mipLevelCount = _a.mipLevelCount,\n      gpuTexture = _a.gpuTexture,\n      gpuTextureView = _a.gpuTextureView,\n      usage = _a.usage;\n    assert(!!(usage & GPUTextureUsage$1.RENDER_ATTACHMENT));\n    var attachment = new Texture_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: {\n        format: format,\n        width: width,\n        height: height,\n        depthOrArrayLayers: depthOrArrayLayers,\n        dimension: TextureDimension.TEXTURE_2D,\n        mipLevelCount: mipLevelCount,\n        usage: usage\n      },\n      skipCreate: true\n    });\n    attachment.depthOrArrayLayers = depthOrArrayLayers;\n    attachment.sampleCount = sampleCount;\n    attachment.gpuTexture = gpuTexture;\n    attachment.gpuTextureView = gpuTextureView;\n    return attachment;\n  };\n  Device_WebGPU.prototype.createProgram = function (descriptor) {\n    var _a, _b;\n    // preprocess GLSL first\n    if ((_a = descriptor.vertex) === null || _a === void 0 ? void 0 : _a.glsl) {\n      descriptor.vertex.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'vert', descriptor.vertex.glsl);\n    }\n    if ((_b = descriptor.fragment) === null || _b === void 0 ? void 0 : _b.glsl) {\n      descriptor.fragment.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'frag', descriptor.fragment.glsl);\n    }\n    return new Program_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createProgramSimple = function (descriptor) {\n    return new Program_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createTextureShared = function (descriptor, texture, skipCreate) {\n    var size = {\n      width: descriptor.width,\n      height: descriptor.height,\n      depthOrArrayLayers: descriptor.depthOrArrayLayers\n    };\n    var mipLevelCount = descriptor.mipLevelCount;\n    var format = translateTextureFormat(descriptor.format);\n    var dimension = translateTextureDimension(descriptor.dimension);\n    var usage = translateTextureUsage(descriptor.usage);\n    texture.gpuTextureformat = format;\n    texture.dimension = descriptor.dimension;\n    texture.format = descriptor.format;\n    texture.width = descriptor.width;\n    texture.height = descriptor.height;\n    texture.depthOrArrayLayers = descriptor.depthOrArrayLayers;\n    texture.mipLevelCount = mipLevelCount;\n    texture.usage = usage;\n    texture.sampleCount = descriptor.sampleCount;\n    if (!skipCreate) {\n      var gpuTexture = this.device.createTexture({\n        size: size,\n        mipLevelCount: mipLevelCount,\n        format: format,\n        dimension: dimension,\n        sampleCount: descriptor.sampleCount,\n        usage: usage\n      });\n      var gpuTextureView = gpuTexture.createView();\n      texture.gpuTexture = gpuTexture;\n      texture.gpuTextureView = gpuTextureView;\n    }\n  };\n  Device_WebGPU.prototype.getFallbackSampler = function (samplerEntry) {\n    var formatKind = samplerEntry.formatKind;\n    if (formatKind === SamplerFormatKind.Depth && samplerEntry.comparison) {\n      return this.fallbackSamplerComparison;\n    } else {\n      return this.fallbackSamplerFiltering;\n    }\n  };\n  Device_WebGPU.prototype.getFallbackTexture = function (samplerEntry) {\n    var dimension = samplerEntry.dimension,\n      formatKind = samplerEntry.formatKind;\n    if (dimension === TextureDimension.TEXTURE_2D) return formatKind === SamplerFormatKind.Depth ? this.fallbackTexture2DDepth : this.fallbackTexture2D;else if (dimension === TextureDimension.TEXTURE_2D_ARRAY) return this.fallbackTexture2DArray;else if (dimension === TextureDimension.TEXTURE_3D) return this.fallbackTexture3D;else if (dimension === TextureDimension.TEXTURE_CUBE_MAP) return this.fallbackTextureCube;else throw new Error('whoops');\n  };\n  Device_WebGPU.prototype.createFallbackTexture = function (dimension, formatKind) {\n    var depthOrArrayLayers = dimension === TextureDimension.TEXTURE_CUBE_MAP ? 6 : 1;\n    var format = formatKind === SamplerFormatKind.Float ? Format.U8_RGBA_NORM : Format.D24;\n    return this.createTexture({\n      dimension: dimension,\n      format: format,\n      usage: TextureUsage.SAMPLED,\n      width: 1,\n      height: 1,\n      depthOrArrayLayers: depthOrArrayLayers,\n      mipLevelCount: 1\n    });\n  };\n  Device_WebGPU.prototype.createBindings = function (descriptor) {\n    return new Bindings_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createInputLayout = function (descriptor) {\n    return new InputLayout_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createComputePipeline = function (descriptor) {\n    return new ComputePipeline_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: descriptor\n    });\n  };\n  Device_WebGPU.prototype.createRenderPipeline = function (descriptor) {\n    return new RenderPipeline_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: __assign({}, descriptor)\n    });\n  };\n  Device_WebGPU.prototype.createQueryPool = function (type, elemCount) {\n    return new QueryPool_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this,\n      descriptor: {\n        type: type,\n        elemCount: elemCount\n      }\n    });\n  };\n  Device_WebGPU.prototype.createRenderPipelineInternal = function (renderPipeline, async) {\n    // if (this.device.createRenderPipelineAsync === undefined) {\n    //   async = false;\n    // }\n    var _a;\n    // // If we're already in the process of creating a the pipeline async, no need to kick the process off again...\n    // if (async && renderPipeline.isCreatingAsync) {\n    //   return;\n    // }\n    if (renderPipeline.gpuRenderPipeline !== null) {\n      return;\n    }\n    var descriptor = renderPipeline.descriptor;\n    var program = descriptor.program;\n    var vertexStage = program.vertexStage,\n      fragmentStage = program.fragmentStage;\n    if (vertexStage === null || fragmentStage === null) return;\n    var _b = descriptor.megaStateDescriptor || {},\n      stencilBack = _b.stencilBack,\n      stencilFront = _b.stencilFront,\n      rest = __rest(_b, [\"stencilBack\", \"stencilFront\"]);\n    var copied = copyMegaState(defaultMegaState);\n    descriptor.megaStateDescriptor = __assign(__assign(__assign({}, copied), {\n      stencilBack: __assign(__assign({}, copied.stencilBack), stencilBack),\n      stencilFront: __assign(__assign({}, copied.stencilFront), stencilFront)\n    }), rest);\n    var defaultAttachmentState = descriptor.megaStateDescriptor.attachmentsState[0];\n    descriptor.colorAttachmentFormats.forEach(function (format, i) {\n      if (!descriptor.megaStateDescriptor.attachmentsState[i]) {\n        descriptor.megaStateDescriptor.attachmentsState[i] = copyAttachmentState(undefined, defaultAttachmentState);\n      }\n    });\n    var primitive = translatePrimitiveState((_a = descriptor.topology) !== null && _a !== void 0 ? _a : PrimitiveTopology.TRIANGLES, descriptor.megaStateDescriptor);\n    var targets = translateTargets(descriptor.colorAttachmentFormats, descriptor.megaStateDescriptor);\n    var depthStencil = translateDepthStencilState(descriptor.depthStencilAttachmentFormat, descriptor.megaStateDescriptor);\n    var buffers = undefined;\n    if (descriptor.inputLayout !== null) buffers = descriptor.inputLayout.buffers;\n    var sampleCount = descriptor.sampleCount;\n    // renderPipeline.isCreatingAsync = true;\n    var gpuRenderPipelineDescriptor = {\n      // layout,\n      layout: 'auto',\n      vertex: __assign(__assign({}, vertexStage), {\n        buffers: buffers\n      }),\n      primitive: primitive,\n      depthStencil: depthStencil,\n      multisample: {\n        count: sampleCount\n      },\n      fragment: __assign(__assign({}, fragmentStage), {\n        targets: targets\n      })\n    };\n    // TODO: async creation\n    // @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createrenderpipeline\n    // renderPipeline.gpuRenderPipeline =\n    //   this.device.createRenderPipeline(gpuRenderPipeline);\n    // if (renderPipeline.name !== undefined)\n    //   renderPipeline.gpuRenderPipeline.label = renderPipeline.name;\n    // if (async) {\n    //   const gpuRenderPipeline = await this.device.createRenderPipelineAsync(\n    //     gpuRenderPipelineDescriptor,\n    //   );\n    //   // We might have created a sync pipeline while we were async building; no way to cancel the async\n    //   // pipeline build at this point, so just chuck it out :/\n    //   if (renderPipeline.gpuRenderPipeline === null)\n    //     renderPipeline.gpuRenderPipeline = gpuRenderPipeline;\n    // } else {\n    renderPipeline.gpuRenderPipeline = this.device.createRenderPipeline(gpuRenderPipelineDescriptor);\n    // }\n    // // if (renderPipeline.ResourceName !== undefined)\n    // //     renderPipeline.gpuRenderPipeline.label = renderPipeline.ResourceName;\n    // renderPipeline.isCreatingAsync = false;\n  };\n\n  Device_WebGPU.prototype.createReadback = function () {\n    return new Readback_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this\n    });\n  };\n  Device_WebGPU.prototype.createRenderBundle = function () {\n    return new RenderBundle_WebGPU({\n      id: this.getNextUniqueId(),\n      device: this\n    });\n  };\n  Device_WebGPU.prototype.createRenderPass = function (renderPassDescriptor) {\n    var pass = this.renderPassPool.pop();\n    if (pass === undefined) {\n      pass = new RenderPass_WebGPU(this);\n    }\n    var frameCommandEncoder = this.frameCommandEncoderPool.pop();\n    if (frameCommandEncoder === undefined) {\n      frameCommandEncoder = this.device.createCommandEncoder();\n    }\n    pass.beginRenderPass(frameCommandEncoder, renderPassDescriptor);\n    return pass;\n  };\n  Device_WebGPU.prototype.createComputePass = function () {\n    var pass = this.computePassPool.pop();\n    if (pass === undefined) pass = new ComputePass_WebGPU();\n    var frameCommandEncoder = this.frameCommandEncoderPool.pop();\n    if (frameCommandEncoder === undefined) {\n      frameCommandEncoder = this.device.createCommandEncoder();\n    }\n    pass.beginComputePass(frameCommandEncoder);\n    return pass;\n  };\n  Device_WebGPU.prototype.submitPass = function (_pass) {\n    var pass = _pass;\n    if (pass instanceof RenderPass_WebGPU) {\n      // release encoder\n      this.frameCommandEncoderPool.push(pass.frameCommandEncoder);\n      pass.finish();\n      this.renderPassPool.push(pass);\n      // if (pass.occlusionQueryPool !== null) {\n      //   this.queryPoolsSubmitted.push(pass.occlusionQueryPool);\n      // }\n    } else if (pass instanceof ComputePass_WebGPU) {\n      this.frameCommandEncoderPool.push(pass.frameCommandEncoder);\n      pass.finish();\n      this.computePassPool.push(pass);\n    }\n  };\n  Device_WebGPU.prototype.copySubTexture2D = function (dst_, dstX, dstY, src_, srcX, srcY, depthOrArrayLayers) {\n    var cmd = this.device.createCommandEncoder();\n    var dst = dst_;\n    var src = src_;\n    var srcCopy = {\n      texture: src.gpuTexture,\n      origin: [srcX, srcY, 0],\n      mipLevel: 0,\n      aspect: 'all'\n    };\n    var dstCopy = {\n      texture: dst.gpuTexture,\n      origin: [dstX, dstY, 0],\n      mipLevel: 0,\n      aspect: 'all'\n    };\n    assert(!!(src.usage & GPUTextureUsage$1.COPY_SRC));\n    assert(!!(dst.usage & GPUTextureUsage$1.COPY_DST));\n    cmd.copyTextureToTexture(srcCopy, dstCopy, [src.width, src.height, depthOrArrayLayers || 1]);\n    this.device.queue.submit([cmd.finish()]);\n  };\n  Device_WebGPU.prototype.queryLimits = function () {\n    // GPUAdapter.limits\n    // @see https://www.w3.org/TR/webgpu/#gpu-supportedlimits\n    return {\n      uniformBufferMaxPageWordSize: this.device.limits.maxUniformBufferBindingSize >>> 2,\n      uniformBufferWordAlignment: this.device.limits.minUniformBufferOffsetAlignment >>> 2,\n      supportedSampleCounts: [1],\n      occlusionQueriesRecommended: true,\n      computeShadersSupported: true\n    };\n  };\n  Device_WebGPU.prototype.queryTextureFormatSupported = function (format, width, height) {\n    if (isFormatTextureCompressionBC(format)) {\n      if (!this.featureTextureCompressionBC) return false;\n      var bb = getFormatBlockSize(format);\n      if (width % bb !== 0 || height % bb !== 0) return false;\n      return this.featureTextureCompressionBC;\n    }\n    switch (format) {\n      case Format.U16_RGBA_NORM:\n        return false;\n      case Format.F32_RGBA:\n        return false;\n      // unfilterable\n    }\n\n    return true;\n  };\n  Device_WebGPU.prototype.queryPlatformAvailable = function () {\n    // TODO: should listen to lost event\n    return true;\n  };\n  Device_WebGPU.prototype.queryVendorInfo = function () {\n    return this;\n  };\n  Device_WebGPU.prototype.queryRenderPass = function (o) {\n    var pass = o;\n    return pass.descriptor;\n  };\n  Device_WebGPU.prototype.queryRenderTarget = function (o) {\n    var attachment = o;\n    return attachment;\n  };\n  Device_WebGPU.prototype.setResourceName = function (o, s) {\n    o.name = s;\n    if (o.type === ResourceType.Buffer) {\n      var r = o;\n      r.gpuBuffer.label = s;\n    } else if (o.type === ResourceType.Texture) {\n      var r = o;\n      r.gpuTexture.label = s;\n      r.gpuTextureView.label = s;\n    } else if (o.type === ResourceType.RenderTarget) {\n      var r = o;\n      r.gpuTexture.label = s;\n      r.gpuTextureView.label = s;\n    } else if (o.type === ResourceType.Sampler) {\n      var r = o;\n      r.gpuSampler.label = s;\n    } else if (o.type === ResourceType.RenderPipeline) {\n      var r = o;\n      if (r.gpuRenderPipeline !== null) r.gpuRenderPipeline.label = s;\n    }\n  };\n  Device_WebGPU.prototype.setResourceLeakCheck = function (o, v) {};\n  Device_WebGPU.prototype.checkForLeaks = function () {};\n  Device_WebGPU.prototype.programPatched = function (o) {};\n  Device_WebGPU.prototype.pipelineQueryReady = function (o) {\n    var renderPipeline = o;\n    return renderPipeline.gpuRenderPipeline !== null;\n  };\n  Device_WebGPU.prototype.pipelineForceReady = function (o) {\n    var renderPipeline = o;\n    this.createRenderPipelineInternal(renderPipeline, false);\n  };\n  return Device_WebGPU;\n}();\nvar WebGPUDeviceContribution = /** @class */function () {\n  function WebGPUDeviceContribution(pluginOptions) {\n    this.pluginOptions = pluginOptions;\n  }\n  WebGPUDeviceContribution.prototype.createSwapChain = function ($canvas) {\n    return __awaiter(this, void 0, void 0, function () {\n      var adapter, xrCompatible, e_1, optionalFeatures, requiredFeatures, device, onContextLost_1, context;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // eslint-disable-next-line\n            if (globalThis.navigator.gpu === undefined) return [2 /*return*/, null];\n            adapter = null;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            xrCompatible = this.pluginOptions.xrCompatible;\n            return [4 /*yield*/, globalThis.navigator.gpu.requestAdapter({\n              xrCompatible: xrCompatible\n            })];\n          case 2:\n            // eslint-disable-next-line\n            adapter = _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            console.log(e_1);\n            return [3 /*break*/, 4];\n          case 4:\n            if (adapter === null) return [2 /*return*/, null];\n            optionalFeatures = [\n            // 'depth24unorm-stencil8',\n            'depth32float-stencil8', 'texture-compression-bc', 'float32-filterable'];\n            requiredFeatures = optionalFeatures.filter(function (feature) {\n              return adapter.features.has(feature);\n            });\n            return [4 /*yield*/, adapter.requestDevice({\n              requiredFeatures: requiredFeatures\n            })];\n          case 5:\n            device = _a.sent();\n            if (device) {\n              onContextLost_1 = this.pluginOptions.onContextLost;\n              device.lost.then(function () {\n                if (onContextLost_1) {\n                  onContextLost_1();\n                }\n              });\n            }\n            if (device === null) return [2 /*return*/, null];\n            context = $canvas.getContext('webgpu');\n            if (!context) return [2 /*return*/, null];\n            _a.label = 6;\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n            return [4 /*yield*/, __wbg_init(this.pluginOptions.shaderCompilerPath)];\n          case 7:\n            _a.sent();\n            return [3 /*break*/, 9];\n          case 8:\n            _a.sent();\n            return [3 /*break*/, 9];\n          case 9:\n            return [2 /*return*/, new Device_WebGPU(adapter, device, $canvas, context, glsl_compile, WGSLComposer && new WGSLComposer())];\n        }\n      });\n    });\n  };\n  return WebGPUDeviceContribution;\n}();\nexport { AddressMode, BlendFactor, BlendMode, BufferFrequencyHint, BufferUsage, ChannelWriteMask, ClipSpaceNearZ, CompareFunction, CullMode, FilterMode, Format, FormatCompFlags, FormatFlags, FormatTypeFlags, FrontFace, GL, IsDepthReversed, MipmapFilterMode, OpaqueBlack, OpaqueWhite, PrimitiveTopology, QueryPoolType, ResourceType, SamplerFormatKind, StencilOp, TextureDimension, TextureEvent, TextureUsage, TransparentBlack, TransparentWhite, UNIFORM_SETTERS, VertexStepMode, ViewportOrigin, WebGLDeviceContribution, WebGPUDeviceContribution, align, alignNonPowerOfTwo, arrayCopy, arrayEqual, assert, assertExists, bindingsDescriptorCopy, bindingsDescriptorEquals, bisectRight, bufferBindingCopy, colorCopy, colorEqual, colorNewCopy, colorNewFromRGBA, compareDepthValues, copyAttachmentState, copyAttachmentStateFromSimple, copyMegaState, copyStencilFaceState, defaultBindingLayoutSamplerDescriptor, defaultMegaState, fallbackUndefined, fillArray, fullscreenMegaState, getAttributeLocations, getDefines, getFormatByteSize, getFormatCompByteSize, getFormatCompFlags, getFormatCompFlagsComponentCount, getFormatComponentCount, getFormatFlags, getFormatSamplerKind, getFormatTypeFlags, getFormatTypeFlagsByteSize, getUniformSetter, getUniforms, inputLayoutBufferDescriptorCopy, inputLayoutBufferDescriptorEquals, inputLayoutDescriptorCopy, inputLayoutDescriptorEquals, isPowerOfTwo, isTypedArray, leftPad, makeFormat, makeMegaState, makeTextureDescriptor2D, nArray, nullify, parseUniformName, prependLineNo, preprocessProgram_GLSL, preprocessShader_GLSL, range, renderPipelineDescriptorCopy, renderPipelineDescriptorEquals, reverseDepthForClearValue, reverseDepthForCompareFunction, reverseDepthForDepthOffset, reverseDepthForOrthographicProjectionMatrix, reverseDepthForPerspectiveProjectionMatrix, samplerBindingCopy, samplerDescriptorEquals, setAttachmentStateSimple, setBitFlagEnabled, setFormatComponentCount, setFormatFlags, setMegaStateFlags, spliceBisectRight, stencilFaceStateEquals, textureBindingCopy, vertexAttributeDescriptorCopy, vertexAttributeDescriptorEquals };","map":{"version":3,"names":["GL","ResourceType","CompareFunction","FrontFace","CullMode","BlendFactor","BlendMode","AddressMode","FilterMode","MipmapFilterMode","PrimitiveTopology","BufferUsage","BufferFrequencyHint","VertexStepMode","TextureEvent","TextureDimension","TextureUsage","ChannelWriteMask","StencilOp","makeTextureDescriptor2D","format","width","height","mipLevelCount","dimension","TEXTURE_2D","depthOrArrayLayers","usage","SAMPLED","SamplerFormatKind","ViewportOrigin","ClipSpaceNearZ","QueryPoolType","FormatTypeFlags","FormatCompFlags","getFormatCompFlagsComponentCount","n","FormatFlags","makeFormat","type","comp","flags","Format","U8","A","None","Luminance","F16","F32","R","RG","RGB","RGBA","Normalized","sRGB","U16","U32","S8","S16","S32","U16_PACKED_5551","U16_PACKED_565","BC1","BC2","BC3","BC4_UNORM","BC4_SNORM","BC5_UNORM","BC5_SNORM","D24","Depth","D24S8","Stencil","D32F","D32FS8","RenderTarget","getFormatCompFlags","fmt","getFormatTypeFlags","getFormatFlags","getFormatTypeFlagsByteSize","typeFlags","Error","getFormatCompByteSize","getFormatComponentCount","getFormatByteSize","typeByteSize","componentCount","setFormatFlags","setFormatComponentCount","compFlags","getFormatSamplerKind","Float","Uint","Sint","assert","b","message","concat","assertExists","v","undefined","colorEqual","c0","c1","r","g","a","colorCopy","dst","src","colorNewCopy","colorNewFromRGBA","TransparentBlack","OpaqueBlack","TransparentWhite","OpaqueWhite","IsDepthReversed","reverseDepthForPerspectiveProjectionMatrix","m","isDepthReversed","reverseDepthForOrthographicProjectionMatrix","reverseDepthForCompareFunction","compareFunction","LESS","GREATER","LEQUAL","GEQUAL","reverseDepthForClearValue","reverseDepthForDepthOffset","compareDepthValues","op","isPowerOfTwo","fallbackUndefined","fallback","nullify","fillArray","L","length","fill","align","multiple","mask","alignNonPowerOfTwo","bisectRight","e","compare","lo","hi","mid","cmp","spliceBisectRight","idx","splice","setBitFlagEnabled","enabled","nArray","c","d","Array","i","prependLineNo","str","lineStart","lines","split","map","s","leftPad","join","S","spaces","ch","range","start","count","push","copyChannelBlendState","blendDstFactor","blendSrcFactor","blendMode","copyStencilFaceState","depthFailOp","passOp","failOp","copyAttachmentState","rgbBlendState","alphaBlendState","channelWriteMask","copyAttachmentsState","setMegaStateFlags","attachmentsState","blendConstant","depthCompare","depthWrite","stencilWrite","stencilFront","stencilBack","cullMode","frontFace","polygonOffset","copyMegaState","Object","assign","copyAttachmentStateFromSimple","rgbBlendMode","alphaBlendMode","rgbBlendSrcFactor","alphaBlendSrcFactor","rgbBlendDstFactor","alphaBlendDstFactor","defaultBlendState","ADD","ONE","ZERO","defaultMegaState","ALL","ALWAYS","KEEP","NONE","CCW","makeMegaState","other","fullscreenMegaState","setAttachmentStateSimple","simple","defaultBindingLayoutSamplerDescriptor","texture","sampler","formatKind","arrayEqual","arrayCopy","copyFunc","textureBindingEquals","binding","bufferBindingEquals","buffer","size","offset","samplerBindingEquals","comparison","bindingsDescriptorEquals","samplerBindings","uniformBufferBindings","storageBufferBindings","storageTextureBindings","channelBlendStateEquals","attachmentStateEquals","stencilFaceStateEquals","megaStateDescriptorEquals","programEquals","id","formatEquals","renderPipelineDescriptorEquals","topology","inputLayout","sampleCount","megaStateDescriptor","program","colorAttachmentFormats","depthStencilAttachmentFormat","vertexAttributeDescriptorEquals","shaderLocation","divisor","inputLayoutBufferDescriptorEquals","isNil","arrayStride","stepMode","attributes","inputLayoutDescriptorEquals","indexBufferFormat","vertexBufferDescriptors","samplerDescriptorEquals","addressModeU","addressModeV","minFilter","magFilter","mipmapFilter","lodMinClamp","lodMaxClamp","maxAnisotropy","samplerBindingCopy","bufferBindingCopy","textureBindingCopy","bindingsDescriptorCopy","pipeline","renderPipelineDescriptorCopy","slice","vertexAttributeDescriptorCopy","inputLayoutBufferDescriptorCopy","inputLayoutDescriptorCopy","UNIFORM_NAME_REGEXP","parseUniformName","name","isArray","matches","match","Number","Boolean","getSamplerSetter","cache","gl","location","value","update","uniform1i","getArraySetter","functionName","toArray","uniformSetter","cacheLength","arrayValue","Float32Array","set","setVectorUniform","setMatrixUniform","FLOAT_ARRAY","INT_ARRAY","UINT_ARRAY","array1","toTypedArray","uniformLength","Type","isFinite","result","toFloatArray","toIntArray","Int32Array","toUIntArray","Uint32Array","UNIFORM_SETTERS","_a","FLOAT","bind","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","getUniformSetter","info","setter","dtypes","isTypedArray","x","prototype","toString","call","defineStr","k","getDefines","shader","defines","replace","_","isNaN","getAttributeLocations","vert","locations","l","getUniforms","uniformNames","structs","uniformStr","uniforms","trim","forEach","line","__read","indexOf","startsWith","struct","find","uniform","parseBinding","layout","exec","bindingNum","parseInt","getSeparateSamplerTypes","combinedSamplerType","samplerType","textureType","preprocessShader_GLSL","vendorInfo","source","usePrecision","isGLSL100","glslVersion","useMRT","filter","isEmpty","test","definesString","keys","key","precision","rest","extraDefines","viewportOrigin","UPPER_LEFT","clipSpaceNearZ","explicitBindingLocations","set_1","implicitBinding_1","location_1","substr","cap","layout2","separateSamplerTextures","samplerName","tok","implicitBinding_2","samplerNames_1","_b","RegExp","dataType","trimmed","gBuffers_1","lastIndexOfMain","lastIndexOf","substring","gBuffer","glFragColor_1","preprocessProgram_GLSL","frag","preprocessedVert","preprocessedFrag","ResourceBase_GL","_super","__extends","device","_this","trackResourceCreated","destroy","trackResourceDestroyed","EventEmitter","Bindings_GL","descriptor","Bindings","bindingLayouts","createBindingLayouts","firstUniformBuffer","firstSampler","bindingLayoutTables","numUniformBuffers","numSamplers","isWebGL2","WebGL2RenderingContext","_version","isTextureFormatCompressed","isFormatSizedInteger","translateBufferHint","hint","STATIC","STATIC_DRAW","DYNAMIC","DYNAMIC_DRAW","translateBufferUsageToTarget","INDEX","ELEMENT_ARRAY_BUFFER","VERTEX","ARRAY_BUFFER","UNIFORM","UNIFORM_BUFFER","translatePrimitiveTopology","TRIANGLES","POINTS","TRIANGLE_STRIP","LINES","LINE_STRIP","translateType","UNSIGNED_BYTE","UNSIGNED_SHORT","BYTE","SHORT","HALF_FLOAT","translateSize","translateVertexFormat$1","translateVertexFormat","normalized","translateIndexFormat$1","translateIndexFormat","U8_R","U16_R","U32_R","translateAddressMode$1","translateAddressMode","wrapMode","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","translateFilterMode","LINEAR","BILINEAR","LINEAR_MIPMAP_LINEAR","POINT","NEAREST_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_NEAREST","NO_MIP","getPlatformBuffer$1","getPlatformBuffer","buffer_","byteOffset","gl_buffer_pages","pageByteSize","getPlatformTexture","texture_","gl_texture","getPlatformSampler$1","getPlatformSampler","sampler_","gl_sampler","assignPlatformName","o","__SPECTOR_Metadata","findall","haystack","needle","results","isBlendStateNone","blendState","translateQueryPoolType$1","translateQueryPoolType","OcclusionConservative","ANY_SAMPLES_PASSED_CONSERVATIVE","translateTextureDimension$1","translateTextureDimension","TEXTURE_2D_ARRAY","TEXTURE_CUBE_MAP","TEXTURE_3D","isBlockCompressSized","w","h","bw","bh","Buffer_GL","Buffer","viewOrSize","uniformBufferMaxPageByteSize","isUBO","bindVertexArray","OES_vertex_array_object","bindVertexArrayOES","byteSize","isNumber","byteLength","byteSizeLeft","createBufferPage","Math","min","gl_target","setSubData","Uint8Array","dstByteOffset","data","srcByteOffset","dstPageByteSize","virtBufferByteOffsetEnd","virtBufferByteOffset","physBufferByteOffset","target","COPY_WRITE_BUFFER","ubo","bindBuffer","bufferSubData","deleteBuffer","gl_buffer","ensureResourceExists","createBuffer","gl_hint","bufferData","InputLayout_GL","InputLayout","indexBufferType","indexBufferCompByteSize","vao","createVertexArray","createVertexArrayOES","_e","__values","_f","next","done","vertexBufferDescriptor","attributes_1","e_2","attributes_1_1","attribute","_g","_d","vertexFormat","vertexAttribPointer","INSTANCE","vertexAttribDivisor","ANGLE_instanced_arrays","vertexAttribDivisorANGLE","enableVertexAttribArray","deleteVertexArray","deleteVertexArrayOES","Texture_GL","fake","Texture","__assign","clampmipLevelCount","immutable","RENDER_TARGET","pixelStore","mipmaps","createTexture","gl_type","translateTextureType","internalformat","translateTextureInternalFormat","setActiveTexture","TEXTURE0","preprocessImage","bindTexture","texStorage2D","level","DEPTH_COMPONENT","isNPOT","D24_S8","WEBGL_depth_texture","texImage2D","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texStorage3D","setImageData","levelDatas","lod","is3D","isCube","isTA","gl_format","translateTextureFormat","gl_internal_format","translateInternalTextureFormat","z","levelData","TEXTURE_CUBE_MAP_POSITIVE_X","texSubImage2D","texImage3D","generateMipmap","deleteTexture","max","unpackFlipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","packAlignment","PACK_ALIGNMENT","unpackAlignment","UNPACK_ALIGNMENT","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","log2","TEXTURE_MAG_FILTER","RenderTarget_GL","gl_renderbuffer","useRenderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","renderbufferStorage","deleteRenderbuffer","ProgramCompileState_GL","Program_GL","rawVertexGLSL","Program","uniformSetters","gl_program","createProgram","gl_shader_vert","gl_shader_frag","compileState","NeedsCompile","tryCompileProgram","deleteProgram","deleteShader","vertex","fragment","glsl","compileShader","postprocess","VERTEX_SHADER","FRAGMENT_SHADER","attachShader","linkProgram","Compiling","readUniformLocationsFromLinkedProgram","readAttributesFromLinkedProgram","getProgramParameter","ACTIVE_ATTRIBUTES","index","getActiveAttrib","this_1","name_1","getAttribLocation","definedLocation","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","name_2","location_2","getUniformLocation","contents","createShader","shaderSource","setUniformsLegacy","programUsed","uniformName","useProgram","textureIndex","QueryPool_GL","QueryPool","elemCount","gl_query","createQuery","gl_query_type","queryResultOcclusion","dstOffs","getQueryParameter","QUERY_RESULT_AVAILABLE","QUERY_RESULT","deleteQuery","Readback_GL","Readback","gl_pbo","gl_sync","clientWaitAsync","sync","interval_ms","Promise","resolve","reject","res","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","clamp","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","getBufferSubDataAsync","dstBuffer","dstOffset","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","sent","getBufferSubData","readTexture","t","y","formatByteSize","PIXEL_PACK_BUFFER","STREAM_READ","bindFramebuffer","READ_FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","readPixels","readTextureSync","FRAMEBUFFER","readBuffer","deleteSync","RenderPipeline_GL","RenderPipeline","drawMode","megaState","_c","ComputePipeline_GL","ComputePipeline","ResourceCreationTracker","liveObjects","Set","creationStacks","Map","deletionStacks","stack","add","has","console","warn","get","delete","checkForLeaks","values","setResourceLeakCheck","Sampler_GL","Sampler","createSampler","samplerParameteri","TEXTURE_WRAP_R","addressModeW","samplerParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","EXT_texture_filter_anisotropic","TEXTURE_MAX_ANISOTROPY_EXT","setTextureParameters","deleteSampler","ComputePass_GL","dispatchWorkgroups","workgroupCountX","workgroupCountY","workgroupCountZ","dispatchWorkgroupsIndirect","indirectBuffer","indirectOffset","setPipeline","pipeline_","setBindings","bindings_","pushDebugGroup","popDebugGroup","insertDebugMarker","markerLabel","RenderBundle_GL","apply","arguments","RenderBundle","commands","f","replay","UBO_PAGE_MAX_BYTE_SIZE","UNIFROM_BLOCK_REGEXP","Device_GL","configuration","shaderDebug","OES_texture_float","OES_draw_buffers_indexed","WEBGL_draw_buffers","WEBGL_color_buffer_float","EXT_color_buffer_half_float","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","EXT_texture_compression_rgtc","KHR_parallel_shader_compile","EXT_texture_norm16","EXT_color_buffer_float","OES_texture_float_linear","OES_texture_half_float_linear","scTexture","scPlatformFramebuffer","currentActiveTexture","currentBoundVAO","currentProgram","resourceCreationTracker","resourceUniqueId","currentColorAttachments","currentColorAttachmentLevels","currentColorResolveTos","currentColorResolveToLevels","currentSampleCount","currentIndexBufferByteOffset","currentMegaState","currentSamplers","currentTextures","currentUniformBuffers","currentUniformBufferByteOffsets","currentUniformBufferByteSizes","currentScissorEnabled","currentStencilRef","currentRenderPassDescriptor","currentRenderPassDescriptorStack","debugGroupStack","resolveColorAttachmentsChanged","resolveDepthStencilAttachmentsChanged","LOWER_LEFT","NEGATIVE_ONE","supportMRT","inBlitRenderPass","supportedSampleCounts","occlusionQueriesRecommended","computeShadersSupported","contextAttributes","getContextAttributes","getExtension","platformString","getNextUniqueId","alpha","U8_RGB_RT","U8_RGBA_RT","resolveColorReadFramebuffer","createFramebuffer","resolveColorDrawFramebuffer","resolveDepthStencilReadFramebuffer","resolveDepthStencilDrawFramebuffer","renderPassDrawFramebuffer","readbackFramebuffer","fallbackTexture2D","createFallbackTexture","fallbackTexture2DDepth","fallbackVertexBuffer","fallbackTexture2DArray","fallbackTexture3D","fallbackTextureCube","enable","DEPTH_TEST","STENCIL_TEST","checkLimits","trackResources","blitBindings","blitInputLayout","blitRenderPipeline","blitVertexBuffer","blitProgram","U8_RGBA_NORM","maxVertexAttribs","getParameter","MAX_VERTEX_ATTRIBS","MAX_UNIFORM_BLOCK_SIZE","uniformBufferWordAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","getInternalformatParameter","DEPTH32F_STENCIL8","SAMPLES","__spreadArray","uniformBufferMaxPageWordSize","includes","sort","configureSwapChain","platformFramebuffer","getDevice","getCanvas","canvas","getOnscreenTexture","beginFrame","endFrame","isRenderbufferStorage","ALPHA","U8_LUMINANCE","F16_LUMINANCE","F32_LUMINANCE","LUMINANCE","F16_R","R16F","F16_RG","RG16F","F16_RGB","RGB16F","F16_RGBA","RGBA16F","F32_R","R32F","F32_RG","RG32F","F32_RGB","RGB32F","F32_RGBA","RGBA32F","RGBA32F_EXT","U8_R_NORM","R8","U8_RG_NORM","RG8","U8_RGB_NORM","RGB8","U8_RGB_SRGB","SRGB8","RGBA8","RGBA4","U8_RGBA","U8_RGBA_SRGB","U8_RGBA_RT_SRGB","SRGB8_ALPHA8","R16UI","U16_R_NORM","R16_EXT","U16_RG_NORM","RG16_EXT","U16_RGBA_NORM","RGBA16_EXT","U16_RGBA_5551","RGB5_A1","U16_RGB_565","RGB565","R32UI","S8_RGBA_NORM","RGBA8_SNORM","S8_RG_NORM","RG8_SNORM","COMPRESSED_RGBA_S3TC_DXT1_EXT","BC1_SRGB","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","BC2_SRGB","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","BC3_SRGB","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","D32F_S8","DEPTH_STENCIL","DEPTH_COMPONENT16","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","FLOAT_32_UNSIGNED_INT_24_8_REV","supportDepthTexture","isInteger","RED_INTEGER","RED","RG_INTEGER","RGB_INTEGER","activeTexture","bindVAO","programCompiled","NeedsBind","checkProgramCompilationForErrors","resource","error","getError","createRenderTarget","createRenderTargetFromTexture","queryVendorInfo","createProgramSimple","createBindings","createInputLayout","createRenderPipeline","createComputePass","createComputePipeline","createReadback","createQueryPool","formatRenderPassDescriptor","colorAttachment","depthClearValue","stencilClearValue","colorAttachmentLevel","colorResolveToLevel","colorClearColor","colorStore","createRenderBundle","beginBundle","bundle","renderBundle","endBundle","executeBundles","renderBundles","createRenderPass","colorResolveTo","depthStencilAttachment","depthStencilResolveTo","setRenderPassParametersBegin","setRenderPassParametersColor","setRenderPassParametersDepthStencil","validateCurrentAttachments","clearColor","setRenderPassParametersClearColor","setRenderPassParametersClearDepthStencil","submitPass","pass","endPass","pop","copySubTexture2D","dst_","dstX","dstY","src_","srcX","srcY","DRAW_FRAMEBUFFER","bindFramebufferAttachment","blitFramebuffer","COLOR_BUFFER_BIT","rt","submitBlitRenderPass","queryLimits","queryTextureFormatSupported","queryProgramReady","complete","COMPLETION_STATUS_KHR","ReadyToUse","queryPlatformAvailable","isContextLost","queryRenderPass","queryRenderTarget","renderTarget","setResourceName","programPatched","getBufferData","wordOffset","COPY_READ_BUFFER","debugGroupStatisticsDrawCall","drawCallCount","debugGroupStatisticsBufferUpload","bufferUploadCount","debugGroupStatisticsTextureBind","textureBindCount","debugGroupStatisticsTriangles","triangleCount","reportShaderError","status","getShaderParameter","COMPILE_STATUS","debug_shaders","getTranslatedShaderSource","getShaderInfoLog","prog","LINK_STATUS","getProgramInfoLog","framebuffer","attachment","framebufferRenderbuffer","bindFramebufferDepthStencilAttachment","depth","stencil","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","currentDepthStencilAttachment","numColorAttachments","drawBuffers","COLOR_ATTACHMENT1","COLOR_ATTACHMENT2","COLOR_ATTACHMENT3","drawBuffersWEBGL","COLOR_ATTACHMENT0_WEBGL","COLOR_ATTACHMENT1_WEBGL","COLOR_ATTACHMENT2_WEBGL","COLOR_ATTACHMENT3_WEBGL","attachmentLevel","resolveToLevel","gl2","currentDepthStencilResolveTo","slot","colorMaskiOES","colorMask","setScissorRectEnabled","clearBufferfv","COLOR","clear","depthMask","DEPTH","clearDepth","DEPTH_BUFFER_BIT","stencilMask","clearBufferiv","STENCIL","clearStencil","STENCIL_BUFFER_BIT","bindingLayoutTable","platformBufferByteOffset","platformBuffer","bindBufferRange","samplerIndex","bindSampler","samplerEntry","getFallbackTexture","setViewport","viewport","setScissorRect","scissor","applyAttachmentStateIndexed","currentAttachmentState","newAttachmentState","dbi","GREEN","BLUE","blendModeChanged","blendFuncChanged","enableiOES","BLEND","disableiOES","blendEquationSeparateiOES","blendFuncSeparateiOES","applyAttachmentState","disable","blendEquationSeparate","blendFuncSeparate","setMegaState","newMegaState","blendColor","depthFunc","stencilOpSeparate","FRONT","setStencilReference","BACK","applyStencil","CULL_FACE","cullFace","FRONT_AND_BACK","POLYGON_OFFSET_FILL","validatePipelineFormats","currentPipeline","deviceProgram","uniformBlocks","blockName","blockIdx","getUniformBlockIndex","uniformBlockBinding","samplers","samplerUniformLocation","setVertexInput","inputLayout_","vertexBuffers","indexBuffer","e_1","vertexBuffer","bufferOffset","draw","vertexCount","instanceCount","firstVertex","firstInstance","params","drawArraysInstanced","drawArraysInstancedANGLE","drawArrays","drawIndexed","indexCount","firstIndex","baseVertex","drawElementsInstanced","drawElementsInstancedANGLE","drawElements","drawIndirect","drawIndexedIndirect","beginOcclusionQuery","queryIndex","queryPool","occlusionQueryPool","beginQuery","endOcclusionQuery","endQuery","pipelineQueryReady","pipelineForceReady","didUnbindDraw","colorResolveFrom","didBindRead","depthStencilResolveFrom","depthStencilStore","invalidateFramebuffer","SCISSOR_TEST","stencilFuncSeparate","resolveFrom","resolveTo","COPY_DST","u_Texture","blitRenderPass","WebGLDeviceContribution","pluginOptions","createSwapChain","$canvas","targets","xrCompatible","antialias","preserveDrawingBuffer","premultipliedAlpha","options","handleContextEvents","getContext","onContextLost","onContextRestored","onContextCreationError","addEventListener","wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","getUint8Memory0","memory","getStringFromWasm0","ptr","len","subarray","heap","heap_next","addHeapObject","obj","getObject","dropObject","takeObject","ret","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encode","encodeString","encodeInto","arg","view","buf","read","written","passStringToWasm0","malloc","realloc","mem","code","charCodeAt","cachedInt32Memory0","getInt32Memory0","glsl_compile","stage","validation_enabled","deferred3_0","deferred3_1","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","r0","r1","__wbindgen_free","WGSLComposer","__wrap","create","__wbg_ptr","__destroy_into_raw","free","__wbg_wgslcomposer_free","constructor","wgslcomposer_new","wgsl_compile","deferred2_0","deferred2_1","wgslcomposer_wgsl_compile","__wbg_load","module","imports","Response","WebAssembly","instantiateStreaming","headers","bytes","arrayBuffer","instantiate","instance","Instance","__wbg_get_imports","wbg","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbg_log_1d3ae0273d8f4f8a","log","__wbg_log_576ca876af0d4a77","__wbindgen_throw","__wbg_finalize_init","exports","__wbg_init","__wbindgen_wasm_module","input","Request","URL","fetch","GPUTextureUsage$1","GPUTextureUsage","GPUMapMode","translateTextureUsage","gpuUsage","TEXTURE_BINDING","COPY_SRC","STORAGE","STORAGE_BINDING","RENDER_ATTACHMENT","S8_R_NORM","S32_R","U16_RG","S16_RG","U32_RG","S32_RG","U16_RGBA","S16_RGBA","U32_RGBA","S32_RGBA","translateTextureViewDimension","translateBufferUsage","usage_","GPUBufferUsage","INDIRECT","translateMinMagFilter","texFilter","translateMipFilter","gpuBuffer","gpuSampler","getPlatformQuerySet","queryPool_","querySet","translateTopology","translateCullMode","translateFrontFace","frontFaceMode","CW","translatePrimitiveState","translateBlendFactor","factor","SRC","ONE_MINUS_SRC","DST","ONE_MINUS_DST","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","CONST","ONE_MINUS_CONSTANT","SRC_ALPHA_SATURATE","translateBlendMode","mode","SUBSTRACT","REVERSE_SUBSTRACT","MIN","MAX","translateBlendComponent","operation","srcFactor","dstFactor","blendComponentIsNil","translateBlendState","attachmentState","color","translateColorState","blend","writeMask","translateTargets","translateCompareFunction","NEVER","EQUAL","NOTEQUAL","translateStencilOperation","stencilOp","REPLACE","DECREMENT_CLAMP","DECREMENT_WRAP","INCREMENT_CLAMP","INCREMENT_WRAP","INVERT","translateDepthStencilState","depthWriteEnabled","depthBias","depthBiasSlopeScale","stencilReadMask","stencilWriteMask","translateVertexStepMode","U8_RG","U8_RGB","S8_RGB_NORM","S16_RG_NORM","S16_RGBA_NORM","isFormatTextureCompressionBC","formatTypeFlags","getFormatBlockSize","allocateAndCopyTypedBuffer","sizeOrDstBuffer","sizeInBytes","copyBuffer","S8_R","buffer_1","ArrayBuffer","Int8Array","buffer_2","S16_R","S16_RGB_NORM","buffer_3","Int16Array","U16_RGB","buffer_4","Uint16Array","buffer_5","buffer_6","buffer_7","halfFloat2Number","pow","NaN","Infinity","getBlockInformationFromFormat","ResourceBase_WebGPU","Bindings_WebGPU","gpuBindGroupEntries","numBindings","gpuBufferBinding","gpuTextureView","textureBinding","samplerBinding","lastGroupIndex","findLastIndex","group","gpuBindGroup","createBindGroup","getBindGroupLayout","entries","Buffer_WebGPU","useMapRead","MAP_READ","mapBuffer","mappedAtCreation","ctor","getMappedRange","unmap","chunkStart","chunkEnd","alignedLength","tempView","maxChunk","queue","writeBuffer","ComputePass_WebGPU","gpuComputePassEncoder","finish","end","frameCommandEncoder","beginComputePass","commandEncoder","gpuComputePassDescriptor","gpuComputePipeline","bindings","setBindGroup","ComputePipeline_WebGPU","computeStage","compute","label","InputLayout_WebGPU","buffers","indexFormat","Program_WebGPU","vertexStage","fragmentStage","createShaderStage","shaderStage","wgsl","entryPoint","validationEnabled","depthTextureName","sub","shaderModule","createShaderModule","QueryPool_WebGPU","createQuerySet","resolveBuffer","QUERY_RESOLVE","cpuBuffer","BigInt","Readback_WebGPU","faceIndex","blockInformation","gpuTextureformat","bytesPerRow","ceil","bytesPerRowAligned","createCommandEncoder","copyTextureToBuffer","gpuTexture","mipLevel","origin","submit","dstArrayBufferView","_size","noDataConversion","floatFormat","BYTES_PER_ELEMENT","gpuReadBuffer","copyBufferToBuffer","mapAsync","READ","then","copyArrayBuffer","getHalfFloatAsFloatRGBAArrayBuffer","data2","offset2","reason","dataLength","destArray","srcData","RenderPass_WebGPU","gpuRenderPassEncoder","gfxColorAttachment","gfxColorAttachmentLevel","gfxColorResolveTo","gfxColorResolveToLevel","gfxDepthStencilAttachment","gfxDepthStencilResolveTo","gpuColorAttachments","gpuDepthStencilAttachment","depthLoadOp","depthStoreOp","stencilLoadOp","stencilStoreOp","gpuRenderPassDescriptor","colorAttachments","getEncoder","getTextureView","createView","baseMipLevel","setRenderPassDescriptor","dstAttachment","loadOp","clearValue","storeOp","resolveTarget","dsAttachment","hasDepth","hasStencil","occlusionQuerySet","beginRenderPass","renderPassDescriptor","flipY","minDepth","maxDepth","gpuRenderPipeline","encoder","setIndexBuffer","setVertexBuffer","ref","copyAttachment","dstLevel","srcLevel","srcCopy","dstCopy","copyTextureToTexture","RenderPipeline_WebGPU","isCreatingAsync","Sampler_WebGPU","Texture_WebGPU","skipCreate","createTextureShared","textureFromImageBitmapOrCanvas","sources","textureDescriptor","copyExternalImageToTexture","isImageBitmapOrCanvases","datas","ImageBitmap","HTMLCanvasElement","OffscreenCanvas","isVideo","HTMLVideoElement","importExternalTexture","bytesPerRow_1","writeTexture","RenderBundle_WebGPU","renderBundleEncoder","createRenderBundleEncoder","colorFormats","Device_WebGPU","adapter","canvasContext","wGSLComposer","swapChainWidth","swapChainHeight","swapChainTextureUsage","_resourceUniqueId","renderPassPool","computePassPool","frameCommandEncoderPool","featureTextureCompressionBC","supportsSyncPipelineCompilation","fallbackSamplerFiltering","fallbackSamplerComparison","features","onuncapturederror","event","swapChainFormat","navigator","gpu","getPreferredCanvasFormat","configure","alphaMode","getCurrentTexture","every","getFallbackSampler","createRenderPipelineInternal","renderPipeline","async","__rest","copied","defaultAttachmentState","primitive","depthStencil","gpuRenderPipelineDescriptor","multisample","_pass","cmd","aspect","limits","maxUniformBufferBindingSize","minUniformBufferOffsetAlignment","bb","WebGPUDeviceContribution","globalThis","requestAdapter","optionalFeatures","requiredFeatures","feature","requestDevice","onContextLost_1","lost","context","shaderCompilerPath"],"sources":["../src/src/api/constants.ts","../src/src/api/interfaces.ts","../src/src/api/format.ts","../src/src/api/utils/assert.ts","../src/src/api/utils/color.ts","../src/src/api/utils/depth.ts","../src/src/api/utils/states.ts","../src/src/api/utils/hash.ts","../src/src/api/utils/uniform.ts","../src/src/api/utils/typedarray.ts","../src/src/shader/compiler.ts","../src/src/webgl/ResourceBase.ts","../src/src/webgl/Bindings.ts","../src/src/webgl/utils.ts","../src/src/webgl/Buffer.ts","../src/src/webgl/InputLayout.ts","../src/src/webgl/Texture.ts","../src/src/webgl/RenderTarget.ts","../src/src/webgl/Program.ts","../src/src/webgl/QueryPool.ts","../src/src/webgl/Readback.ts","../src/src/webgl/RenderPipeline.ts","../src/src/webgl/ComputePipeline.ts","../src/src/webgl/ResourceCreationTracker.ts","../src/src/webgl/Sampler.ts","../src/src/webgl/ComputePass.ts","../src/src/webgl/RenderBundle.ts","../src/src/webgl/Device.ts","../src/src/webgl/WebGLDeviceContribution.ts","../rust/pkg/glsl_wgsl_compiler.js","../src/src/webgpu/constants.ts","../src/src/webgpu/utils.ts","../src/src/webgpu/ResourceBase.ts","../src/src/webgpu/Bindings.ts","../src/src/webgpu/Buffer.ts","../src/src/webgpu/ComputePass.ts","../src/src/webgpu/ComputePipeline.ts","../src/src/webgpu/InputLayout.ts","../src/src/webgpu/Program.ts","../src/src/webgpu/QueryPool.ts","../src/src/webgpu/Readback.ts","../src/src/webgpu/RenderPass.ts","../src/src/webgpu/RenderPipeline.ts","../src/src/webgpu/Sampler.ts","../src/src/webgpu/Texture.ts","../src/src/webgpu/RenderBundle.ts","../src/src/webgpu/Device.ts","../src/src/webgpu/WebGPUDeviceContribution.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"let wasm;\n\nconst cachedTextDecoder =\n  typeof TextDecoder !== 'undefined'\n    ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true })\n    : {\n        decode: () => {\n          throw Error('TextDecoder not available');\n        },\n      };\n\nif (typeof TextDecoder !== 'undefined') {\n  cachedTextDecoder.decode();\n}\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 132) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder =\n  typeof TextEncoder !== 'undefined'\n    ? new TextEncoder('utf-8')\n    : {\n        encode: () => {\n          throw Error('TextEncoder not available');\n        },\n      };\n\nconst encodeString =\n  typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n      }\n    : function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n          read: arg.length,\n          written: buf.length,\n        };\n      };\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0()\n      .subarray(ptr, ptr + buf.length)\n      .set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n\n  const mem = getUint8Memory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, (len = offset + arg.length * 3), 1) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n/**\n * @param {string} source\n * @param {string} stage\n * @param {boolean} validation_enabled\n * @returns {string}\n */\nexport function glsl_compile(source, stage, validation_enabled) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(\n      source,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(\n      stage,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len1 = WASM_VECTOR_LEN;\n    wasm.glsl_compile(retptr, ptr0, len0, ptr1, len1, validation_enabled);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred3_0 = r0;\n    deferred3_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n  }\n}\n\n/**\n */\nexport class WGSLComposer {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(WGSLComposer.prototype);\n    obj.__wbg_ptr = ptr;\n\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wgslcomposer_free(ptr);\n  }\n  /**\n   */\n  constructor() {\n    const ret = wasm.wgslcomposer_new();\n    return WGSLComposer.__wrap(ret);\n  }\n  /**\n   * @param {string} source\n   * @returns {string}\n   */\n  wgsl_compile(source) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(\n        source,\n        wasm.__wbindgen_malloc,\n        wasm.__wbindgen_realloc,\n      );\n      const len0 = WASM_VECTOR_LEN;\n      wasm.wgslcomposer_wgsl_compile(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      deferred2_0 = r0;\n      deferred2_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\n\nasync function __wbg_load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn(\n            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n',\n            e,\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_log_1d3ae0273d8f4f8a = function (arg0) {\n    console.log(getObject(arg0));\n  };\n  imports.wbg.__wbg_log_576ca876af0d4a77 = function (arg0, arg1) {\n    console.log(getObject(arg0), getObject(arg1));\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n\n  return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {}\n\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n\n  return wasm;\n}\n\nfunction initSync(module) {\n  if (wasm !== undefined) return wasm;\n\n  const imports = __wbg_get_imports();\n\n  __wbg_init_memory(imports);\n\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n\n  const instance = new WebAssembly.Instance(module, imports);\n\n  return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n  if (wasm !== undefined) return wasm;\n\n  if (typeof input === 'undefined') {\n    // input = new URL('glsl_wgsl_compiler_bg.wasm', import.meta.url);\n  }\n  const imports = __wbg_get_imports();\n\n  if (\n    typeof input === 'string' ||\n    (typeof Request === 'function' && input instanceof Request) ||\n    (typeof URL === 'function' && input instanceof URL)\n  ) {\n    input = fetch(input);\n  }\n\n  __wbg_init_memory(imports);\n\n  const { instance, module } = await __wbg_load(await input, imports);\n\n  return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}