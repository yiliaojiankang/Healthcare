{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { TYPES } from '@antv/l7-core';\nimport { DOM, Satistics, bindAll, boundsContains, lodashUtil, padBounds } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\n// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport Supercluster from 'supercluster/dist/supercluster';\nimport Marker from \"./marker\";\nvar merge = lodashUtil.merge;\nvar MarkerLayer = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(MarkerLayer, _EventEmitter);\n  var _super = _createSuper(MarkerLayer);\n  // 聚合后的marker列表\n\n  function MarkerLayer(option) {\n    var _this$markerLayerOpti;\n    var _this;\n    _classCallCheck(this, MarkerLayer);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"markers\", []);\n    _defineProperty(_assertThisInitialized(_this), \"points\", []);\n    _defineProperty(_assertThisInitialized(_this), \"clusterMarkers\", []);\n    _this.markerLayerOption = merge(_this.getDefault(), option);\n    bindAll(['update'], _assertThisInitialized(_this));\n    _this.zoom = ((_this$markerLayerOpti = _this.markerLayerOption.clusterOption) === null || _this$markerLayerOpti === void 0 ? void 0 : _this$markerLayerOpti.zoom) || -99;\n    return _this;\n  }\n  _createClass(MarkerLayer, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        cluster: false,\n        clusterOption: {\n          radius: 80,\n          maxZoom: 20,\n          minZoom: 0,\n          zoom: -99,\n          style: {},\n          className: ''\n        }\n      };\n    }\n\n    // 执行scene.addMarkerLayer时调用\n  }, {\n    key: \"addTo\",\n    value: function addTo(scene) {\n      // this.remove();\n      this.scene = scene;\n      this.mapsService = scene.get(TYPES.IMapService);\n      if (this.markerLayerOption.cluster) {\n        this.initCluster();\n        this.update();\n        // 地图视野变化时，重新计算视野内的聚合点。\n        this.mapsService.on('camerachange', this.update); // amap1.x 更新事件\n        this.mapsService.on('viewchange', this.update); // amap2.0 更新事件\n      }\n\n      this.mapsService.on('camerachange', this.setContainerSize.bind(this)); // amap1.x 更新事件\n      this.mapsService.on('viewchange', this.setContainerSize.bind(this)); // amap2.0 更新事件\n      this.addMarkers();\n      this.inited = true;\n      return this;\n    }\n\n    // 设置容器大小\n  }, {\n    key: \"setContainerSize\",\n    value: function setContainerSize() {\n      if (!this.mapsService) {\n        return;\n      }\n      var container = this.mapsService.getContainer();\n      this.containerSize = {\n        containerWidth: (container === null || container === void 0 ? void 0 : container.scrollWidth) || 0,\n        containerHeight: (container === null || container === void 0 ? void 0 : container.scrollHeight) || 0,\n        bounds: this.mapsService.getBounds()\n      };\n    }\n\n    // 获取容器尺寸\n  }, {\n    key: \"getContainerSize\",\n    value: function getContainerSize() {\n      return this.containerSize;\n    }\n\n    // 在图层添加单个marker\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(marker) {\n      var cluster = this.markerLayerOption.cluster;\n      marker.getMarkerLayerContainerSize = this.getContainerSize.bind(this);\n      if (cluster) {\n        this.addPoint(marker, this.markers.length);\n        if (this.mapsService) {\n          // 在新增 marker 的时候需要更新聚合信息（哪怕此时的 zoom 没有发生变化）\n          var zoom = this.mapsService.getZoom();\n          var bbox = this.mapsService.getBounds();\n          this.bbox = padBounds(bbox, 0.5);\n          this.zoom = Math.floor(zoom);\n          this.getClusterMarker(this.bbox, this.zoom);\n        }\n      }\n      this.markers.push(marker);\n    }\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(marker) {\n      this.markers.indexOf(marker);\n      var markerIndex = this.markers.indexOf(marker);\n      if (markerIndex > -1) {\n        this.markers.splice(markerIndex, 1);\n        if (this.markerLayerOption.cluster) {\n          this.removePoint(markerIndex);\n          if (this.mapsService) {\n            this.getClusterMarker(this.bbox, this.zoom);\n          }\n        }\n      }\n    }\n\n    /**\n     * 隐藏 marker 在每个 marker 上单独修改属性而不是在 markerContainer 上修改（在 markerContainer 修改会有用户在场景加载完之前调用失败的问题）\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.markers.map(function (m) {\n        m.getElement().style.opacity = '0';\n      });\n      this.clusterMarkers.map(function (m) {\n        m.getElement().style.opacity = '0';\n      });\n    }\n\n    /**\n     * 显示 marker\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.markers.map(function (m) {\n        m.getElement().style.opacity = '1';\n      });\n      this.clusterMarkers.map(function (m) {\n        m.getElement().style.opacity = '1';\n      });\n    }\n\n    // 返回当下的markers数据，有聚合图时返回聚合的marker列表，否则返回原始maerker列表\n  }, {\n    key: \"getMarkers\",\n    value: function getMarkers() {\n      var cluster = this.markerLayerOption.cluster;\n      return cluster ? this.clusterMarkers : this.markers;\n    }\n  }, {\n    key: \"getOriginMarkers\",\n    value: function getOriginMarkers() {\n      return this.markers;\n    }\n\n    // 批量添加marker到scene\n  }, {\n    key: \"addMarkers\",\n    value: function addMarkers() {\n      var _this2 = this;\n      this.getMarkers().forEach(function (marker) {\n        marker.addTo(_this2.scene);\n      });\n    }\n\n    // 清除图层里的marker\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.markers.forEach(function (marker) {\n        marker.remove();\n      });\n      this.clusterMarkers.forEach(function (clusterMarker) {\n        clusterMarker.remove();\n      });\n      this.markers = [];\n      this.points = [];\n      this.clusterMarkers = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.removeAllListeners();\n      this.mapsService.off('camerachange', this.update);\n      this.mapsService.off('viewchange', this.update);\n      this.mapsService.off('camerachange', this.setContainerSize.bind(this));\n      this.mapsService.off('viewchange', this.setContainerSize.bind(this));\n    }\n\n    // 将marker数据保存在point中\n  }, {\n    key: \"addPoint\",\n    value: function addPoint(marker, id) {\n      var _marker$getLnglat = marker.getLnglat(),\n        lng = _marker$getLnglat.lng,\n        lat = _marker$getLnglat.lat;\n      var feature = {\n        geometry: {\n          type: 'Point',\n          coordinates: [lng, lat]\n        },\n        properties: _objectSpread(_objectSpread({}, marker.getExtData()), {}, {\n          marker_id: id\n        })\n      };\n      this.points.push(feature);\n      if (this.clusterIndex) {\n        // 在新增点的时候需要更新 cluster 的数据\n        this.clusterIndex.load(this.points);\n      }\n    }\n  }, {\n    key: \"removePoint\",\n    value: function removePoint(id) {\n      var targetIndex = this.points.findIndex(function (point) {\n        return point.properties.marker_id === id;\n      });\n      if (targetIndex > -1) {\n        this.points.splice(targetIndex, 1);\n      }\n      if (this.clusterIndex) {\n        // 在删除点的时候需要更新 cluster 的数据\n        this.clusterIndex.load(this.points);\n      }\n    }\n  }, {\n    key: \"initCluster\",\n    value: function initCluster() {\n      if (!this.markerLayerOption.cluster) {\n        return;\n      }\n      var _this$markerLayerOpti2 = this.markerLayerOption.clusterOption,\n        radius = _this$markerLayerOpti2.radius,\n        _this$markerLayerOpti3 = _this$markerLayerOpti2.minZoom,\n        minZoom = _this$markerLayerOpti3 === void 0 ? 0 : _this$markerLayerOpti3,\n        maxZoom = _this$markerLayerOpti2.maxZoom;\n      this.clusterIndex = new Supercluster({\n        radius: radius,\n        minZoom: minZoom,\n        maxZoom: maxZoom\n      });\n      // @ts-ignore\n      this.clusterIndex.load(this.points);\n    }\n  }, {\n    key: \"getClusterMarker\",\n    value: function getClusterMarker(viewBounds, zoom) {\n      var _this3 = this;\n      var viewBBox = viewBounds[0].concat(viewBounds[1]);\n      var clusterPoint = this.clusterIndex.getClusters(viewBBox, zoom);\n      this.clusterMarkers.forEach(function (marker) {\n        marker.remove();\n      });\n      this.clusterMarkers = [];\n      clusterPoint.forEach(function (feature) {\n        var _feature$properties;\n        var _this3$markerLayerOpt = _this3.markerLayerOption.clusterOption,\n          field = _this3$markerLayerOpt.field,\n          method = _this3$markerLayerOpt.method;\n        // 处理聚合数据\n        if ((_feature$properties = feature.properties) !== null && _feature$properties !== void 0 && _feature$properties.cluster_id) {\n          var _feature$properties2;\n          var clusterData = _this3.getLeaves((_feature$properties2 = feature.properties) === null || _feature$properties2 === void 0 ? void 0 : _feature$properties2.cluster_id);\n          feature.properties.clusterData = clusterData;\n          if (field && method) {\n            var columnData = clusterData === null || clusterData === void 0 ? void 0 : clusterData.map(function (item) {\n              var data = _defineProperty({}, field, item.properties[field]);\n              return data;\n            });\n            var column = Satistics.getColumn(columnData, field);\n            var stat = Satistics.getSatByColumn(method, column);\n            var fieldName = 'point_' + method;\n            feature.properties[fieldName] = stat.toFixed(2);\n          }\n        }\n        var marker = _this3.clusterMarker(feature);\n        _this3.clusterMarkers.push(marker);\n        marker.addTo(_this3.scene);\n      });\n    }\n  }, {\n    key: \"getLeaves\",\n    value: function getLeaves(clusterId) {\n      var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (!clusterId) {\n        return null;\n      }\n      return this.clusterIndex.getLeaves(clusterId, limit, offset);\n    }\n  }, {\n    key: \"clusterMarker\",\n    value: function clusterMarker(feature) {\n      var clusterOption = this.markerLayerOption.clusterOption;\n      var _ref = clusterOption,\n        _ref$element = _ref.element,\n        element = _ref$element === void 0 ? this.generateElement.bind(this) : _ref$element;\n      var marker = new Marker({\n        element: element(feature)\n      }).setLnglat({\n        lng: feature.geometry.coordinates[0],\n        lat: feature.geometry.coordinates[1]\n      });\n      return marker;\n    }\n  }, {\n    key: \"normalMarker\",\n    value: function normalMarker(feature) {\n      var marker_id = feature.properties.marker_id;\n      return this.markers[marker_id];\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this.mapsService) {\n        return;\n      }\n      // 当图层中无marker时，无需更新\n      if (this.markers.length === 0) {\n        return;\n      }\n      var zoom = this.mapsService.getZoom();\n      var bbox = this.mapsService.getBounds();\n      if (!this.bbox || Math.abs(zoom - this.zoom) >= 1 || !boundsContains(this.bbox, bbox)) {\n        this.bbox = padBounds(bbox, 0.5);\n        this.zoom = Math.floor(zoom);\n        this.getClusterMarker(this.bbox, this.zoom);\n      }\n    }\n  }, {\n    key: \"generateElement\",\n    value: function generateElement(feature) {\n      var el = DOM.create('div', 'l7-marker-cluster');\n      var label = DOM.create('div', '', el);\n      var span = DOM.create('span', '', label);\n      var _this$markerLayerOpti4 = this.markerLayerOption.clusterOption,\n        field = _this$markerLayerOpti4.field,\n        method = _this$markerLayerOpti4.method;\n      feature.properties.point_count = feature.properties.point_count || 1;\n      var text = field && method ? feature.properties['point_' + method] || feature.properties[field] : feature.properties.point_count;\n      span.textContent = text;\n      return el;\n    }\n  }]);\n  return MarkerLayer;\n}(EventEmitter);\nexport { MarkerLayer as default };","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","TYPES","DOM","Satistics","bindAll","boundsContains","lodashUtil","padBounds","EventEmitter","Supercluster","Marker","merge","MarkerLayer","_EventEmitter","_super","option","_this$markerLayerOpti","_this","markerLayerOption","getDefault","zoom","clusterOption","key","value","cluster","radius","maxZoom","minZoom","style","className","addTo","scene","mapsService","get","IMapService","initCluster","update","on","setContainerSize","bind","addMarkers","inited","container","getContainer","containerSize","containerWidth","scrollWidth","containerHeight","scrollHeight","bounds","getBounds","getContainerSize","addMarker","marker","getMarkerLayerContainerSize","addPoint","markers","length","getZoom","bbox","Math","floor","getClusterMarker","push","removeMarker","indexOf","markerIndex","splice","removePoint","hide","map","m","getElement","opacity","clusterMarkers","show","getMarkers","getOriginMarkers","_this2","forEach","clear","remove","clusterMarker","points","destroy","removeAllListeners","off","id","_marker$getLnglat","getLnglat","lng","lat","feature","geometry","type","coordinates","properties","getExtData","marker_id","clusterIndex","load","targetIndex","findIndex","point","_this$markerLayerOpti2","_this$markerLayerOpti3","viewBounds","_this3","viewBBox","concat","clusterPoint","getClusters","_feature$properties","_this3$markerLayerOpt","field","method","cluster_id","_feature$properties2","clusterData","getLeaves","columnData","item","data","column","getColumn","stat","getSatByColumn","fieldName","toFixed","clusterId","limit","undefined","Infinity","offset","_ref","_ref$element","element","generateElement","setLnglat","normalMarker","abs","el","create","label","span","_this$markerLayerOpti4","point_count","text","textContent","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-component/es/marker-layer.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { TYPES } from '@antv/l7-core';\nimport { DOM, Satistics, bindAll, boundsContains, lodashUtil, padBounds } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\n// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport Supercluster from 'supercluster/dist/supercluster';\nimport Marker from \"./marker\";\nvar merge = lodashUtil.merge;\nvar MarkerLayer = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(MarkerLayer, _EventEmitter);\n  var _super = _createSuper(MarkerLayer);\n  // 聚合后的marker列表\n\n  function MarkerLayer(option) {\n    var _this$markerLayerOpti;\n    var _this;\n    _classCallCheck(this, MarkerLayer);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"markers\", []);\n    _defineProperty(_assertThisInitialized(_this), \"points\", []);\n    _defineProperty(_assertThisInitialized(_this), \"clusterMarkers\", []);\n    _this.markerLayerOption = merge(_this.getDefault(), option);\n    bindAll(['update'], _assertThisInitialized(_this));\n    _this.zoom = ((_this$markerLayerOpti = _this.markerLayerOption.clusterOption) === null || _this$markerLayerOpti === void 0 ? void 0 : _this$markerLayerOpti.zoom) || -99;\n    return _this;\n  }\n  _createClass(MarkerLayer, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        cluster: false,\n        clusterOption: {\n          radius: 80,\n          maxZoom: 20,\n          minZoom: 0,\n          zoom: -99,\n          style: {},\n          className: ''\n        }\n      };\n    }\n\n    // 执行scene.addMarkerLayer时调用\n  }, {\n    key: \"addTo\",\n    value: function addTo(scene) {\n      // this.remove();\n      this.scene = scene;\n      this.mapsService = scene.get(TYPES.IMapService);\n      if (this.markerLayerOption.cluster) {\n        this.initCluster();\n        this.update();\n        // 地图视野变化时，重新计算视野内的聚合点。\n        this.mapsService.on('camerachange', this.update); // amap1.x 更新事件\n        this.mapsService.on('viewchange', this.update); // amap2.0 更新事件\n      }\n\n      this.mapsService.on('camerachange', this.setContainerSize.bind(this)); // amap1.x 更新事件\n      this.mapsService.on('viewchange', this.setContainerSize.bind(this)); // amap2.0 更新事件\n      this.addMarkers();\n      this.inited = true;\n      return this;\n    }\n\n    // 设置容器大小\n  }, {\n    key: \"setContainerSize\",\n    value: function setContainerSize() {\n      if (!this.mapsService) {\n        return;\n      }\n      var container = this.mapsService.getContainer();\n      this.containerSize = {\n        containerWidth: (container === null || container === void 0 ? void 0 : container.scrollWidth) || 0,\n        containerHeight: (container === null || container === void 0 ? void 0 : container.scrollHeight) || 0,\n        bounds: this.mapsService.getBounds()\n      };\n    }\n\n    // 获取容器尺寸\n  }, {\n    key: \"getContainerSize\",\n    value: function getContainerSize() {\n      return this.containerSize;\n    }\n\n    // 在图层添加单个marker\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(marker) {\n      var cluster = this.markerLayerOption.cluster;\n      marker.getMarkerLayerContainerSize = this.getContainerSize.bind(this);\n      if (cluster) {\n        this.addPoint(marker, this.markers.length);\n        if (this.mapsService) {\n          // 在新增 marker 的时候需要更新聚合信息（哪怕此时的 zoom 没有发生变化）\n          var zoom = this.mapsService.getZoom();\n          var bbox = this.mapsService.getBounds();\n          this.bbox = padBounds(bbox, 0.5);\n          this.zoom = Math.floor(zoom);\n          this.getClusterMarker(this.bbox, this.zoom);\n        }\n      }\n      this.markers.push(marker);\n    }\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(marker) {\n      this.markers.indexOf(marker);\n      var markerIndex = this.markers.indexOf(marker);\n      if (markerIndex > -1) {\n        this.markers.splice(markerIndex, 1);\n        if (this.markerLayerOption.cluster) {\n          this.removePoint(markerIndex);\n          if (this.mapsService) {\n            this.getClusterMarker(this.bbox, this.zoom);\n          }\n        }\n      }\n    }\n\n    /**\n     * 隐藏 marker 在每个 marker 上单独修改属性而不是在 markerContainer 上修改（在 markerContainer 修改会有用户在场景加载完之前调用失败的问题）\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.markers.map(function (m) {\n        m.getElement().style.opacity = '0';\n      });\n      this.clusterMarkers.map(function (m) {\n        m.getElement().style.opacity = '0';\n      });\n    }\n\n    /**\n     * 显示 marker\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.markers.map(function (m) {\n        m.getElement().style.opacity = '1';\n      });\n      this.clusterMarkers.map(function (m) {\n        m.getElement().style.opacity = '1';\n      });\n    }\n\n    // 返回当下的markers数据，有聚合图时返回聚合的marker列表，否则返回原始maerker列表\n  }, {\n    key: \"getMarkers\",\n    value: function getMarkers() {\n      var cluster = this.markerLayerOption.cluster;\n      return cluster ? this.clusterMarkers : this.markers;\n    }\n  }, {\n    key: \"getOriginMarkers\",\n    value: function getOriginMarkers() {\n      return this.markers;\n    }\n\n    // 批量添加marker到scene\n  }, {\n    key: \"addMarkers\",\n    value: function addMarkers() {\n      var _this2 = this;\n      this.getMarkers().forEach(function (marker) {\n        marker.addTo(_this2.scene);\n      });\n    }\n\n    // 清除图层里的marker\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.markers.forEach(function (marker) {\n        marker.remove();\n      });\n      this.clusterMarkers.forEach(function (clusterMarker) {\n        clusterMarker.remove();\n      });\n      this.markers = [];\n      this.points = [];\n      this.clusterMarkers = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.removeAllListeners();\n      this.mapsService.off('camerachange', this.update);\n      this.mapsService.off('viewchange', this.update);\n      this.mapsService.off('camerachange', this.setContainerSize.bind(this));\n      this.mapsService.off('viewchange', this.setContainerSize.bind(this));\n    }\n\n    // 将marker数据保存在point中\n  }, {\n    key: \"addPoint\",\n    value: function addPoint(marker, id) {\n      var _marker$getLnglat = marker.getLnglat(),\n        lng = _marker$getLnglat.lng,\n        lat = _marker$getLnglat.lat;\n      var feature = {\n        geometry: {\n          type: 'Point',\n          coordinates: [lng, lat]\n        },\n        properties: _objectSpread(_objectSpread({}, marker.getExtData()), {}, {\n          marker_id: id\n        })\n      };\n      this.points.push(feature);\n      if (this.clusterIndex) {\n        // 在新增点的时候需要更新 cluster 的数据\n        this.clusterIndex.load(this.points);\n      }\n    }\n  }, {\n    key: \"removePoint\",\n    value: function removePoint(id) {\n      var targetIndex = this.points.findIndex(function (point) {\n        return point.properties.marker_id === id;\n      });\n      if (targetIndex > -1) {\n        this.points.splice(targetIndex, 1);\n      }\n      if (this.clusterIndex) {\n        // 在删除点的时候需要更新 cluster 的数据\n        this.clusterIndex.load(this.points);\n      }\n    }\n  }, {\n    key: \"initCluster\",\n    value: function initCluster() {\n      if (!this.markerLayerOption.cluster) {\n        return;\n      }\n      var _this$markerLayerOpti2 = this.markerLayerOption.clusterOption,\n        radius = _this$markerLayerOpti2.radius,\n        _this$markerLayerOpti3 = _this$markerLayerOpti2.minZoom,\n        minZoom = _this$markerLayerOpti3 === void 0 ? 0 : _this$markerLayerOpti3,\n        maxZoom = _this$markerLayerOpti2.maxZoom;\n      this.clusterIndex = new Supercluster({\n        radius: radius,\n        minZoom: minZoom,\n        maxZoom: maxZoom\n      });\n      // @ts-ignore\n      this.clusterIndex.load(this.points);\n    }\n  }, {\n    key: \"getClusterMarker\",\n    value: function getClusterMarker(viewBounds, zoom) {\n      var _this3 = this;\n      var viewBBox = viewBounds[0].concat(viewBounds[1]);\n      var clusterPoint = this.clusterIndex.getClusters(viewBBox, zoom);\n      this.clusterMarkers.forEach(function (marker) {\n        marker.remove();\n      });\n      this.clusterMarkers = [];\n      clusterPoint.forEach(function (feature) {\n        var _feature$properties;\n        var _this3$markerLayerOpt = _this3.markerLayerOption.clusterOption,\n          field = _this3$markerLayerOpt.field,\n          method = _this3$markerLayerOpt.method;\n        // 处理聚合数据\n        if ((_feature$properties = feature.properties) !== null && _feature$properties !== void 0 && _feature$properties.cluster_id) {\n          var _feature$properties2;\n          var clusterData = _this3.getLeaves((_feature$properties2 = feature.properties) === null || _feature$properties2 === void 0 ? void 0 : _feature$properties2.cluster_id);\n          feature.properties.clusterData = clusterData;\n          if (field && method) {\n            var columnData = clusterData === null || clusterData === void 0 ? void 0 : clusterData.map(function (item) {\n              var data = _defineProperty({}, field, item.properties[field]);\n              return data;\n            });\n            var column = Satistics.getColumn(columnData, field);\n            var stat = Satistics.getSatByColumn(method, column);\n            var fieldName = 'point_' + method;\n            feature.properties[fieldName] = stat.toFixed(2);\n          }\n        }\n        var marker = _this3.clusterMarker(feature);\n        _this3.clusterMarkers.push(marker);\n        marker.addTo(_this3.scene);\n      });\n    }\n  }, {\n    key: \"getLeaves\",\n    value: function getLeaves(clusterId) {\n      var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (!clusterId) {\n        return null;\n      }\n      return this.clusterIndex.getLeaves(clusterId, limit, offset);\n    }\n  }, {\n    key: \"clusterMarker\",\n    value: function clusterMarker(feature) {\n      var clusterOption = this.markerLayerOption.clusterOption;\n      var _ref = clusterOption,\n        _ref$element = _ref.element,\n        element = _ref$element === void 0 ? this.generateElement.bind(this) : _ref$element;\n      var marker = new Marker({\n        element: element(feature)\n      }).setLnglat({\n        lng: feature.geometry.coordinates[0],\n        lat: feature.geometry.coordinates[1]\n      });\n      return marker;\n    }\n  }, {\n    key: \"normalMarker\",\n    value: function normalMarker(feature) {\n      var marker_id = feature.properties.marker_id;\n      return this.markers[marker_id];\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this.mapsService) {\n        return;\n      }\n      // 当图层中无marker时，无需更新\n      if (this.markers.length === 0) {\n        return;\n      }\n      var zoom = this.mapsService.getZoom();\n      var bbox = this.mapsService.getBounds();\n      if (!this.bbox || Math.abs(zoom - this.zoom) >= 1 || !boundsContains(this.bbox, bbox)) {\n        this.bbox = padBounds(bbox, 0.5);\n        this.zoom = Math.floor(zoom);\n        this.getClusterMarker(this.bbox, this.zoom);\n      }\n    }\n  }, {\n    key: \"generateElement\",\n    value: function generateElement(feature) {\n      var el = DOM.create('div', 'l7-marker-cluster');\n      var label = DOM.create('div', '', el);\n      var span = DOM.create('span', '', label);\n      var _this$markerLayerOpti4 = this.markerLayerOption.clusterOption,\n        field = _this$markerLayerOpti4.field,\n        method = _this$markerLayerOpti4.method;\n      feature.properties.point_count = feature.properties.point_count || 1;\n      var text = field && method ? feature.properties['point_' + method] || feature.properties[field] : feature.properties.point_count;\n      span.textContent = text;\n      return el;\n    }\n  }]);\n  return MarkerLayer;\n}(EventEmitter);\nexport { MarkerLayer as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}