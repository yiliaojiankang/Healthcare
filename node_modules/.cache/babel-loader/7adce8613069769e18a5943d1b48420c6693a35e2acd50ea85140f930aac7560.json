{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _dec, _class;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\n/* babel-plugin-inline-import '../../../../shaders/post-processing/ink.glsl' */\nvar ink = \"varying vec2 v_UV;\\n\\nuniform sampler2D u_Texture;\\nuniform vec2 u_ViewportSize: [1.0, 1.0];\\nuniform float u_Strength : 0.6;\\n\\nvec4 ink_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\\n  vec2 dx = vec2(1.0 / texSize.x, 0.0);\\n  vec2 dy = vec2(0.0, 1.0 / texSize.y);\\n  vec4 color = texture2D(texture, texCoord);\\n  float bigTotal = 0.0;\\n  float smallTotal = 0.0;\\n  vec3 bigAverage = vec3(0.0);\\n  vec3 smallAverage = vec3(0.0);\\n  for (float x = -2.0; x <= 2.0; x += 1.0) {\\n    for (float y = -2.0; y <= 2.0; y += 1.0) {\\n      vec3 sample = texture2D(texture, texCoord + dx * x + dy * y).rgb;\\n      bigAverage += sample;\\n      bigTotal += 1.0;\\n      if (abs(x) + abs(y) < 2.0) {\\n        smallAverage += sample;\\n        smallTotal += 1.0;\\n      }\\n    }\\n  }\\n  vec3 edge = max(vec3(0.0), bigAverage / bigTotal - smallAverage / smallTotal);\\n  float power = u_Strength * u_Strength * u_Strength * u_Strength * u_Strength;\\n  return vec4(color.rgb - dot(edge, edge) * power * 100000.0, color.a);\\n}\\n\\nvoid main() {\\n  gl_FragColor = vec4(texture2D(u_Texture, v_UV));\\n  gl_FragColor = ink_sampleColor(u_Texture, u_ViewportSize, v_UV);\\n}\";\n/* babel-plugin-inline-import '../../../../shaders/post-processing/quad.glsl' */\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport BasePostProcessingPass from \"../BasePostProcessingPass\";\nvar InkPass = (_dec = injectable(), _dec(_class = /*#__PURE__*/function (_BasePostProcessingPa) {\n  _inherits(InkPass, _BasePostProcessingPa);\n  var _super = _createSuper(InkPass);\n  function InkPass() {\n    _classCallCheck(this, InkPass);\n    return _super.apply(this, arguments);\n  }\n  _createClass(InkPass, [{\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      this.shaderModuleService.registerModule('ink-pass', {\n        vs: quad,\n        fs: ink\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule('ink-pass'),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        uniforms = _this$shaderModuleSer.uniforms;\n      var _this$rendererService = this.rendererService.getViewportSize(),\n        width = _this$rendererService.width,\n        height = _this$rendererService.height;\n      return {\n        vs: vs,\n        fs: fs,\n        uniforms: _objectSpread(_objectSpread({}, uniforms), {}, {\n          u_ViewportSize: [width, height]\n        })\n      };\n    }\n  }]);\n  return InkPass;\n}(BasePostProcessingPass)) || _class);\nexport { InkPass as default };","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_dec","_class","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","injectable","ink","quad","BasePostProcessingPass","InkPass","_BasePostProcessingPa","_super","key","value","setupShaders","shaderModuleService","registerModule","vs","fs","_this$shaderModuleSer","getModule","uniforms","_this$rendererService","rendererService","getViewportSize","width","height","u_ViewportSize","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/renderer/passes/post-processing/InkPass.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _dec, _class;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\n/* babel-plugin-inline-import '../../../../shaders/post-processing/ink.glsl' */\nvar ink = \"varying vec2 v_UV;\\n\\nuniform sampler2D u_Texture;\\nuniform vec2 u_ViewportSize: [1.0, 1.0];\\nuniform float u_Strength : 0.6;\\n\\nvec4 ink_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\\n  vec2 dx = vec2(1.0 / texSize.x, 0.0);\\n  vec2 dy = vec2(0.0, 1.0 / texSize.y);\\n  vec4 color = texture2D(texture, texCoord);\\n  float bigTotal = 0.0;\\n  float smallTotal = 0.0;\\n  vec3 bigAverage = vec3(0.0);\\n  vec3 smallAverage = vec3(0.0);\\n  for (float x = -2.0; x <= 2.0; x += 1.0) {\\n    for (float y = -2.0; y <= 2.0; y += 1.0) {\\n      vec3 sample = texture2D(texture, texCoord + dx * x + dy * y).rgb;\\n      bigAverage += sample;\\n      bigTotal += 1.0;\\n      if (abs(x) + abs(y) < 2.0) {\\n        smallAverage += sample;\\n        smallTotal += 1.0;\\n      }\\n    }\\n  }\\n  vec3 edge = max(vec3(0.0), bigAverage / bigTotal - smallAverage / smallTotal);\\n  float power = u_Strength * u_Strength * u_Strength * u_Strength * u_Strength;\\n  return vec4(color.rgb - dot(edge, edge) * power * 100000.0, color.a);\\n}\\n\\nvoid main() {\\n  gl_FragColor = vec4(texture2D(u_Texture, v_UV));\\n  gl_FragColor = ink_sampleColor(u_Texture, u_ViewportSize, v_UV);\\n}\";\n/* babel-plugin-inline-import '../../../../shaders/post-processing/quad.glsl' */\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport BasePostProcessingPass from \"../BasePostProcessingPass\";\nvar InkPass = (_dec = injectable(), _dec(_class = /*#__PURE__*/function (_BasePostProcessingPa) {\n  _inherits(InkPass, _BasePostProcessingPa);\n  var _super = _createSuper(InkPass);\n  function InkPass() {\n    _classCallCheck(this, InkPass);\n    return _super.apply(this, arguments);\n  }\n  _createClass(InkPass, [{\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      this.shaderModuleService.registerModule('ink-pass', {\n        vs: quad,\n        fs: ink\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule('ink-pass'),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        uniforms = _this$shaderModuleSer.uniforms;\n      var _this$rendererService = this.rendererService.getViewportSize(),\n        width = _this$rendererService.width,\n        height = _this$rendererService.height;\n      return {\n        vs: vs,\n        fs: fs,\n        uniforms: _objectSpread(_objectSpread({}, uniforms), {}, {\n          u_ViewportSize: [width, height]\n        })\n      };\n    }\n  }]);\n  return InkPass;\n}(BasePostProcessingPass)) || _class);\nexport { InkPass as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}