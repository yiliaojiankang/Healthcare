{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { gl } from '@antv/g-webgpu-core';\nimport { colorSpaceMap, dataTypeMap, filterMap, formatMap, mipmapMap, wrapModeMap } from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nvar ReglTexture2D = /*#__PURE__*/function () {\n  function ReglTexture2D(reGl, options) {\n    _classCallCheck(this, ReglTexture2D);\n    this.texture = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    var data = options.data,\n      _options$type = options.type,\n      type = _options$type === void 0 ? gl.UNSIGNED_BYTE : _options$type,\n      width = options.width,\n      height = options.height,\n      _options$flipY = options.flipY,\n      flipY = _options$flipY === void 0 ? false : _options$flipY,\n      _options$format = options.format,\n      format = _options$format === void 0 ? gl.RGBA : _options$format,\n      _options$mipmap = options.mipmap,\n      mipmap = _options$mipmap === void 0 ? false : _options$mipmap,\n      _options$wrapS = options.wrapS,\n      wrapS = _options$wrapS === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapS,\n      _options$wrapT = options.wrapT,\n      wrapT = _options$wrapT === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapT,\n      _options$aniso = options.aniso,\n      aniso = _options$aniso === void 0 ? 0 : _options$aniso,\n      _options$alignment = options.alignment,\n      alignment = _options$alignment === void 0 ? 1 : _options$alignment,\n      _options$premultiplyA = options.premultiplyAlpha,\n      premultiplyAlpha = _options$premultiplyA === void 0 ? false : _options$premultiplyA,\n      _options$mag = options.mag,\n      mag = _options$mag === void 0 ? gl.NEAREST : _options$mag,\n      _options$min = options.min,\n      min = _options$min === void 0 ? gl.NEAREST : _options$min,\n      _options$colorSpace = options.colorSpace,\n      colorSpace = _options$colorSpace === void 0 ? gl.BROWSER_DEFAULT_WEBGL : _options$colorSpace;\n    this.width = width;\n    this.height = height;\n    var textureOptions = {\n      width: width,\n      height: height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment: alignment,\n      flipY: flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha: premultiplyAlpha,\n      aniso: aniso\n    };\n    if (data) {\n      textureOptions.data = data;\n    }\n    if (typeof mipmap === 'number') {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === 'boolean') {\n      textureOptions.mipmap = mipmap;\n    }\n    this.texture = reGl.texture(textureOptions);\n  }\n  _createClass(ReglTexture2D, [{\n    key: \"get\",\n    value: function get() {\n      return this.texture;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // @ts-ignore\n      this.texture._texture.bind();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      this.texture.resize(width, height);\n      this.width = width;\n      this.height = height;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.texture.destroy();\n    }\n  }]);\n  return ReglTexture2D;\n}();\nexport { ReglTexture2D as default };","map":{"version":3,"names":["gl","colorSpaceMap","dataTypeMap","filterMap","formatMap","mipmapMap","wrapModeMap","ReglTexture2D","reGl","options","_classCallCheck","texture","width","height","data","_options$type","type","UNSIGNED_BYTE","_options$flipY","flipY","_options$format","format","RGBA","_options$mipmap","mipmap","_options$wrapS","wrapS","CLAMP_TO_EDGE","_options$wrapT","wrapT","_options$aniso","aniso","_options$alignment","alignment","_options$premultiplyA","premultiplyAlpha","_options$mag","mag","NEAREST","_options$min","min","_options$colorSpace","colorSpace","BROWSER_DEFAULT_WEBGL","textureOptions","_createClass","key","value","get","update","_texture","bind","resize","_ref","destroy","default"],"sources":["../../src/webgl/ReglTexture2D.ts"],"sourcesContent":["import {\n  gl,\n  ITexture2D,\n  ITexture2DInitializationOptions,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport {\n  colorSpaceMap,\n  dataTypeMap,\n  filterMap,\n  formatMap,\n  mipmapMap,\n  wrapModeMap,\n} from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglTexture2D implements ITexture2D {\n  private texture: regl.Texture2D;\n  private width: number;\n  private height: number;\n\n  constructor(reGl: regl.Regl, options: ITexture2DInitializationOptions) {\n    const {\n      data,\n      type = gl.UNSIGNED_BYTE,\n      width,\n      height,\n      flipY = false,\n      format = gl.RGBA,\n      mipmap = false,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      aniso = 0,\n      alignment = 1,\n      premultiplyAlpha = false,\n      mag = gl.NEAREST,\n      min = gl.NEAREST,\n      colorSpace = gl.BROWSER_DEFAULT_WEBGL,\n    } = options;\n    this.width = width;\n    this.height = height;\n\n    const textureOptions: regl.Texture2DOptions = {\n      width,\n      height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment,\n      flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha,\n      aniso,\n    };\n\n    if (data) {\n      textureOptions.data = data;\n    }\n\n    if (typeof mipmap === 'number') {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === 'boolean') {\n      textureOptions.mipmap = mipmap;\n    }\n\n    this.texture = reGl.texture(textureOptions);\n  }\n\n  public get() {\n    return this.texture;\n  }\n  public update() {\n    // @ts-ignore\n    this.texture._texture.bind();\n  }\n\n  public resize({ width, height }: { width: number; height: number }): void {\n    this.texture.resize(width, height);\n    this.width = width;\n    this.height = height;\n  }\n\n  public destroy() {\n    this.texture.destroy();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}