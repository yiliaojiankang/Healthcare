{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getLogPositiveMin, log } from '../util/math';\nimport Continuous from './base';\n/**\n * Log 度量，处理非均匀分布\n */\nvar Log = /** @class */function (_super) {\n  __extends(Log, _super);\n  function Log() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'log';\n    return _this;\n  }\n  /**\n   * @override\n   */\n  Log.prototype.invert = function (value) {\n    var base = this.base;\n    var max = log(base, this.max);\n    var rangeMin = this.rangeMin();\n    var range = this.rangeMax() - rangeMin;\n    var min;\n    var positiveMin = this.positiveMin;\n    if (positiveMin) {\n      if (value === 0) {\n        return 0;\n      }\n      min = log(base, positiveMin / base);\n      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比\n      if (value < appendPercent) {\n        // 落到 0 - positiveMin 之间\n        return value / appendPercent * positiveMin;\n      }\n    } else {\n      min = log(base, this.min);\n    }\n    var percent = (value - rangeMin) / range;\n    var tmp = percent * (max - min) + min;\n    return Math.pow(base, tmp);\n  };\n  Log.prototype.initCfg = function () {\n    this.tickMethod = 'log';\n    this.base = 10;\n    this.tickCount = 6;\n    this.nice = true;\n  };\n  // 设置\n  Log.prototype.setDomain = function () {\n    _super.prototype.setDomain.call(this);\n    var min = this.min;\n    if (min < 0) {\n      throw new Error('When you use log scale, the minimum value must be greater than zero!');\n    }\n    if (min === 0) {\n      this.positiveMin = getLogPositiveMin(this.values, this.base, this.max);\n    }\n  };\n  // 根据当前值获取占比\n  Log.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n    if (max === min) {\n      return 0;\n    }\n    // 如果值小于等于0，则按照0处理\n    if (value <= 0) {\n      return 0;\n    }\n    var base = this.base;\n    var positiveMin = this.positiveMin;\n    // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\n    if (positiveMin) {\n      min = positiveMin * 1 / base;\n    }\n    var percent;\n    // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\n    if (value < positiveMin) {\n      percent = value / positiveMin / (log(base, max) - log(base, min));\n    } else {\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n    }\n    return percent;\n  };\n  return Log;\n}(Continuous);\nexport default Log;","map":{"version":3,"names":["getLogPositiveMin","log","Continuous","Log","_super","__extends","_this","apply","arguments","type","prototype","invert","value","base","max","rangeMin","range","rangeMax","min","positiveMin","appendPercent","percent","tmp","Math","pow","initCfg","tickMethod","tickCount","nice","setDomain","call","Error","values","getScalePercent"],"sources":["../../src/continuous/log.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}