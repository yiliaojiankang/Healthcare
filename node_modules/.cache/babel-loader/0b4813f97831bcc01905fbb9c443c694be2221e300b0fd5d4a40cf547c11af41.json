{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { AbstractShape } from '@antv/g-base';\nimport { isNil, intersectRect } from '../util/util';\nimport { applyAttrsToContext, refreshElement } from '../util/draw';\nimport { getBBoxMethod } from '@antv/g-base';\nimport * as Shape from './index';\nimport Group from '../group';\nvar ShapeBase = /** @class */function (_super) {\n  __extends(ShapeBase, _super);\n  function ShapeBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ShapeBase.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    // 设置默认值\n    return __assign(__assign({}, attrs), {\n      lineWidth: 1,\n      lineAppendWidth: 0,\n      strokeOpacity: 1,\n      fillOpacity: 1\n    });\n  };\n  ShapeBase.prototype.getShapeBase = function () {\n    return Shape;\n  };\n  ShapeBase.prototype.getGroupBase = function () {\n    return Group;\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n  ShapeBase.prototype.onCanvasChange = function (changeType) {\n    refreshElement(this, changeType);\n  };\n  ShapeBase.prototype.calculateBBox = function () {\n    var type = this.get('type');\n    var lineWidth = this.getHitLineWidth();\n    // const attrs = this.attr();\n    var bboxMethod = getBBoxMethod(type);\n    var box = bboxMethod(this);\n    var halfLineWidth = lineWidth / 2;\n    var minX = box.x - halfLineWidth;\n    var minY = box.y - halfLineWidth;\n    var maxX = box.x + box.width + halfLineWidth;\n    var maxY = box.y + box.height + halfLineWidth;\n    return {\n      x: minX,\n      minX: minX,\n      y: minY,\n      minY: minY,\n      width: box.width + lineWidth,\n      height: box.height + lineWidth,\n      maxX: maxX,\n      maxY: maxY\n    };\n  };\n  ShapeBase.prototype.isFill = function () {\n    return !!this.attrs['fill'] || this.isClipShape();\n  };\n  ShapeBase.prototype.isStroke = function () {\n    return !!this.attrs['stroke'];\n  };\n  // 同 shape 中的方法重复了\n  ShapeBase.prototype._applyClip = function (context, clip) {\n    if (clip) {\n      context.save();\n      // 将 clip 的属性挂载到 context 上\n      applyAttrsToContext(context, clip);\n      // 绘制 clip 路径\n      clip.createPath(context);\n      context.restore();\n      // 裁剪\n      context.clip();\n      clip._afterDraw();\n    }\n  };\n  // 绘制图形时需要考虑 region 限制\n  ShapeBase.prototype.draw = function (context, region) {\n    var clip = this.cfg.clipShape;\n    // 如果指定了 region，同时不允许刷新时，直接返回\n    if (region) {\n      if (this.cfg.refresh === false) {\n        // this._afterDraw();\n        this.set('hasChanged', false);\n        return;\n      }\n      // 是否相交需要考虑 clip 的包围盒\n      var bbox = this.getCanvasBBox();\n      if (!intersectRect(region, bbox)) {\n        // 图形的包围盒与重绘区域不相交时，也需要清除标记\n        this.set('hasChanged', false);\n        // 存在多种情形需要更新 cacheCanvasBBox 和 isInview 的判定\n        // 1. 之前图形在视窗内，但是现在不再视窗内\n        // 2. 如果当前的图形以及父元素都没有发生过变化，refresh = false 不会走到这里，所以这里的图形都是父元素发生变化，但是没有在视图内的元素\n        if (this.cfg.isInView) {\n          this._afterDraw();\n        }\n        return;\n      }\n    }\n    context.save();\n    // 先将 attrs 应用到上下文中，再设置 clip。因为 clip 应该被当前元素的 matrix 所影响\n    applyAttrsToContext(context, this);\n    this._applyClip(context, clip);\n    this.drawPath(context);\n    context.restore();\n    this._afterDraw();\n  };\n  ShapeBase.prototype.getCanvasViewBox = function () {\n    var canvas = this.cfg.canvas;\n    if (canvas) {\n      // @ts-ignore\n      return canvas.getViewRange();\n    }\n    return null;\n  };\n  ShapeBase.prototype.cacheCanvasBBox = function () {\n    var canvasBBox = this.getCanvasViewBox();\n    // 绘制的时候缓存包围盒\n    if (canvasBBox) {\n      var bbox = this.getCanvasBBox();\n      var isInView = intersectRect(bbox, canvasBBox);\n      this.set('isInView', isInView);\n      // 不再视窗内 cacheCanvasBBox 设置成 null，会提升局部渲染的性能，\n      // 因为在局部渲染影响的包围盒计算时不考虑这个图形的包围盒\n      // 父元素 cacheCanvasBBox 计算的时候也不计算\n      if (isInView) {\n        this.set('cacheCanvasBBox', bbox);\n      } else {\n        this.set('cacheCanvasBBox', null);\n      }\n    }\n  };\n  ShapeBase.prototype._afterDraw = function () {\n    this.cacheCanvasBBox();\n    // 绘制后消除标记\n    this.set('hasChanged', false);\n    this.set('refresh', null);\n  };\n  ShapeBase.prototype.skipDraw = function () {\n    this.set('cacheCanvasBBox', null);\n    this.set('isInView', null);\n    this.set('hasChanged', false);\n  };\n  /**\n   * 绘制图形的路径\n   * @param {CanvasRenderingContext2D} context 上下文\n   */\n  ShapeBase.prototype.drawPath = function (context) {\n    this.createPath(context);\n    this.strokeAndFill(context);\n    this.afterDrawPath(context);\n  };\n  /**\n   * @protected\n   * 填充图形\n   * @param {CanvasRenderingContext2D} context context 上下文\n   */\n  ShapeBase.prototype.fill = function (context) {\n    context.fill();\n  };\n  /**\n   * @protected\n   * 绘制图形边框\n   * @param {CanvasRenderingContext2D} context context 上下文\n   */\n  ShapeBase.prototype.stroke = function (context) {\n    context.stroke();\n  };\n  // 绘制或者填充\n  ShapeBase.prototype.strokeAndFill = function (context) {\n    var _a = this.attrs,\n      lineWidth = _a.lineWidth,\n      opacity = _a.opacity,\n      strokeOpacity = _a.strokeOpacity,\n      fillOpacity = _a.fillOpacity;\n    if (this.isFill()) {\n      if (!isNil(fillOpacity) && fillOpacity !== 1) {\n        context.globalAlpha = fillOpacity;\n        this.fill(context);\n        context.globalAlpha = opacity;\n      } else {\n        this.fill(context);\n      }\n    }\n    if (this.isStroke()) {\n      if (lineWidth > 0) {\n        if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\n          context.globalAlpha = strokeOpacity;\n        }\n        this.stroke(context);\n      }\n    }\n    this.afterDrawPath(context);\n  };\n  /**\n   * @protected\n   * 绘制图形的路径\n   * @param {CanvasRenderingContext2D} context 上下文\n   */\n  ShapeBase.prototype.createPath = function (context) {};\n  /**\n   * 绘制完成 path 后的操作\n   * @param {CanvasRenderingContext2D} context 上下文\n   */\n  ShapeBase.prototype.afterDrawPath = function (context) {};\n  ShapeBase.prototype.isInShape = function (refX, refY) {\n    // return HitUtil.isHitShape(this, refX, refY);\n    var isStroke = this.isStroke();\n    var isFill = this.isFill();\n    var lineWidth = this.getHitLineWidth();\n    return this.isInStrokeOrPath(refX, refY, isStroke, isFill, lineWidth);\n  };\n  // 之所以不拆成 isInStroke 和 isInPath 在于两者存在一些共同的计算\n  ShapeBase.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    return false;\n  };\n  /**\n   * 获取线拾取的宽度\n   * @returns {number} 线的拾取宽度\n   */\n  ShapeBase.prototype.getHitLineWidth = function () {\n    if (!this.isStroke()) {\n      return 0;\n    }\n    var attrs = this.attrs;\n    return attrs['lineWidth'] + attrs['lineAppendWidth'];\n  };\n  return ShapeBase;\n}(AbstractShape);\nexport default ShapeBase;","map":{"version":3,"names":["AbstractShape","isNil","intersectRect","applyAttrsToContext","refreshElement","getBBoxMethod","Shape","Group","ShapeBase","_super","__extends","prototype","getDefaultAttrs","attrs","call","__assign","lineWidth","lineAppendWidth","strokeOpacity","fillOpacity","getShapeBase","getGroupBase","onCanvasChange","changeType","calculateBBox","type","get","getHitLineWidth","bboxMethod","box","halfLineWidth","minX","x","minY","y","maxX","width","maxY","height","isFill","isClipShape","isStroke","_applyClip","context","clip","save","createPath","restore","_afterDraw","draw","region","cfg","clipShape","refresh","set","bbox","getCanvasBBox","isInView","drawPath","getCanvasViewBox","canvas","getViewRange","cacheCanvasBBox","canvasBBox","skipDraw","strokeAndFill","afterDrawPath","fill","stroke","_a","opacity","globalAlpha","isInShape","refX","refY","isInStrokeOrPath"],"sources":["../../src/shape/base.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}