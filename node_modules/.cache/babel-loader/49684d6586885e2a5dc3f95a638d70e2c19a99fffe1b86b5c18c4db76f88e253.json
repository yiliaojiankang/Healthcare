{"ast":null,"code":"import { each, every, isString } from '@antv/util';\nimport { processIllegalData } from '../../utils';\n/**\n * 获取总计值\n * @param data\n * @param field\n */\nexport function getTotalValue(data, field) {\n  var total = null;\n  each(data, function (item) {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n/**\n * pie label offset adaptor\n */\nexport function adaptOffset(type, offset) {\n  var defaultOffset;\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n      return offset < 0 ? offset : defaultOffset;\n    case 'outer':\n      defaultOffset = 12;\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n      return offset > 0 ? offset : defaultOffset;\n    default:\n      return offset;\n  }\n}\n/**\n * 判断数据是否全部为 0\n * @param data\n * @param angleField\n */\nexport function isAllZero(data, angleField) {\n  return every(processIllegalData(data, angleField), function (d) {\n    return d[angleField] === 0;\n  });\n}","map":{"version":3,"names":["each","every","isString","processIllegalData","getTotalValue","data","field","total","item","adaptOffset","type","offset","defaultOffset","endsWith","parseFloat","isAllZero","angleField","d"],"sources":["../../../src/plots/pie/utils.ts"],"sourcesContent":["import { each, every, isString } from '@antv/util';\nimport { Data } from '../../types';\nimport { processIllegalData } from '../../utils';\nimport { PieOptions } from './types';\n\n/**\n * 获取总计值\n * @param data\n * @param field\n */\nexport function getTotalValue(data: Data, field: string) {\n  let total = null;\n  each(data, (item) => {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n\n/**\n * pie label offset adaptor\n */\nexport function adaptOffset(type: string, offset?: string | number): string | number {\n  let defaultOffset;\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n      return offset < 0 ? offset : defaultOffset;\n    case 'outer':\n      defaultOffset = 12;\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n      return offset > 0 ? offset : defaultOffset;\n    default:\n      return offset;\n  }\n}\n\n/**\n * 判断数据是否全部为 0\n * @param data\n * @param angleField\n */\nexport function isAllZero(data: PieOptions['data'], angleField: string): boolean {\n  return every(processIllegalData(data, angleField), (d) => d[angleField] === 0);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,YAAY;AAElD,SAASC,kBAAkB,QAAQ,aAAa;AAGhD;;;;;AAKA,OAAM,SAAUC,aAAaA,CAACC,IAAU,EAAEC,KAAa;EACrD,IAAIC,KAAK,GAAG,IAAI;EAChBP,IAAI,CAACK,IAAI,EAAE,UAACG,IAAI;IACd,IAAI,OAAOA,IAAI,CAACF,KAAK,CAAC,KAAK,QAAQ,EAAE;MACnCC,KAAK,IAAIC,IAAI,CAACF,KAAK,CAAC;;EAExB,CAAC,CAAC;EACF,OAAOC,KAAK;AACd;AAEA;;;AAGA,OAAM,SAAUE,WAAWA,CAACC,IAAY,EAAEC,MAAwB;EAChE,IAAIC,aAAa;EACjB,QAAQF,IAAI;IACV,KAAK,OAAO;MACVE,aAAa,GAAG,MAAM;MACtB,IAAIV,QAAQ,CAACS,MAAM,CAAC,IAAIA,MAAM,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC5C,OAAOC,UAAU,CAACH,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGC,aAAa,GAAGD,MAAM;;MAE/D,OAAOA,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAGC,aAAa;IAC5C,KAAK,OAAO;MACVA,aAAa,GAAG,EAAE;MAClB,IAAIV,QAAQ,CAACS,MAAM,CAAC,IAAIA,MAAM,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC5C,OAAOC,UAAU,CAACH,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGC,aAAa,GAAGD,MAAM;;MAE/D,OAAOA,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAGC,aAAa;IAC5C;MACE,OAAOD,MAAM;;AAEnB;AAEA;;;;;AAKA,OAAM,SAAUI,SAASA,CAACV,IAAwB,EAAEW,UAAkB;EACpE,OAAOf,KAAK,CAACE,kBAAkB,CAACE,IAAI,EAAEW,UAAU,CAAC,EAAE,UAACC,CAAC;IAAK,OAAAA,CAAC,CAACD,UAAU,CAAC,KAAK,CAAC;EAAnB,CAAmB,CAAC;AAChF"},"metadata":{},"sourceType":"module","externalDependencies":[]}