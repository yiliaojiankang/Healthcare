{"ast":null,"code":"function max(x) {\n  if (x.length === 0) {\n    throw new Error('max requires at least one data point');\n  }\n  var value = x[0];\n  for (var i = 1; i < x.length; i++) {\n    // On the first iteration of this loop, max is\n    // undefined and is thus made the maximum element in the array\n    if (x[i] > value) {\n      value = x[i];\n    }\n  }\n  return value;\n}\nfunction min(x) {\n  if (x.length === 0) {\n    throw new Error('min requires at least one data point');\n  }\n  var value = x[0];\n  for (var i = 1; i < x.length; i++) {\n    // On the first iteration of this loop, min is\n    // undefined and is thus made the minimum element in the array\n    if (x[i] < value) {\n      value = x[i];\n    }\n  }\n  return value;\n}\nfunction sum(x) {\n  // If the array is empty, we needn't bother computing its sum\n  if (x.length === 0) {\n    return 0;\n  }\n\n  // Initializing the sum as the first number in the array\n  var sumNum = x[0];\n\n  // Keeping track of the floating-point error correction\n  var correction = 0;\n  var transition;\n  for (var i = 1; i < x.length; i++) {\n    transition = sumNum + x[i] * 1;\n\n    // Here we need to update the correction in a different fashion\n    // if the new absolute value is greater than the absolute sum\n    if (Math.abs(sumNum) >= Math.abs(x[i])) {\n      correction += sumNum - transition + x[i];\n    } else {\n      correction += x[i] - transition + sumNum;\n    }\n    sumNum = transition;\n  }\n\n  // Returning the corrected sum\n  return sumNum + correction * 1;\n}\nfunction mean(x) {\n  if (x.length === 0) {\n    throw new Error('mean requires at least one data point');\n  }\n  return sum(x) / x.length;\n}\nexport { sum, max, min, mean };\nexport var statMap = {\n  min: min,\n  max: max,\n  mean: mean,\n  sum: sum\n};","map":{"version":3,"names":["max","x","length","Error","value","i","min","sum","sumNum","correction","transition","Math","abs","mean","statMap"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/utils/statistics.js"],"sourcesContent":["function max(x) {\n  if (x.length === 0) {\n    throw new Error('max requires at least one data point');\n  }\n  var value = x[0];\n  for (var i = 1; i < x.length; i++) {\n    // On the first iteration of this loop, max is\n    // undefined and is thus made the maximum element in the array\n    if (x[i] > value) {\n      value = x[i];\n    }\n  }\n  return value;\n}\nfunction min(x) {\n  if (x.length === 0) {\n    throw new Error('min requires at least one data point');\n  }\n  var value = x[0];\n  for (var i = 1; i < x.length; i++) {\n    // On the first iteration of this loop, min is\n    // undefined and is thus made the minimum element in the array\n    if (x[i] < value) {\n      value = x[i];\n    }\n  }\n  return value;\n}\nfunction sum(x) {\n  // If the array is empty, we needn't bother computing its sum\n  if (x.length === 0) {\n    return 0;\n  }\n\n  // Initializing the sum as the first number in the array\n  var sumNum = x[0];\n\n  // Keeping track of the floating-point error correction\n  var correction = 0;\n  var transition;\n  for (var i = 1; i < x.length; i++) {\n    transition = sumNum + x[i] * 1;\n\n    // Here we need to update the correction in a different fashion\n    // if the new absolute value is greater than the absolute sum\n    if (Math.abs(sumNum) >= Math.abs(x[i])) {\n      correction += sumNum - transition + x[i];\n    } else {\n      correction += x[i] - transition + sumNum;\n    }\n    sumNum = transition;\n  }\n\n  // Returning the corrected sum\n  return sumNum + correction * 1;\n}\nfunction mean(x) {\n  if (x.length === 0) {\n    throw new Error('mean requires at least one data point');\n  }\n  return sum(x) / x.length;\n}\nexport { sum, max, min, mean };\nexport var statMap = {\n  min: min,\n  max: max,\n  mean: mean,\n  sum: sum\n};"],"mappings":"AAAA,SAASA,GAAGA,CAACC,CAAC,EAAE;EACd,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;EACA,IAAIC,KAAK,GAAGH,CAAC,CAAC,CAAC,CAAC;EAChB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;IACjC;IACA;IACA,IAAIJ,CAAC,CAACI,CAAC,CAAC,GAAGD,KAAK,EAAE;MAChBA,KAAK,GAAGH,CAAC,CAACI,CAAC,CAAC;IACd;EACF;EACA,OAAOD,KAAK;AACd;AACA,SAASE,GAAGA,CAACL,CAAC,EAAE;EACd,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;EACA,IAAIC,KAAK,GAAGH,CAAC,CAAC,CAAC,CAAC;EAChB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;IACjC;IACA;IACA,IAAIJ,CAAC,CAACI,CAAC,CAAC,GAAGD,KAAK,EAAE;MAChBA,KAAK,GAAGH,CAAC,CAACI,CAAC,CAAC;IACd;EACF;EACA,OAAOD,KAAK;AACd;AACA,SAASG,GAAGA,CAACN,CAAC,EAAE;EACd;EACA,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAClB,OAAO,CAAC;EACV;;EAEA;EACA,IAAIM,MAAM,GAAGP,CAAC,CAAC,CAAC,CAAC;;EAEjB;EACA,IAAIQ,UAAU,GAAG,CAAC;EAClB,IAAIC,UAAU;EACd,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;IACjCK,UAAU,GAAGF,MAAM,GAAGP,CAAC,CAACI,CAAC,CAAC,GAAG,CAAC;;IAE9B;IACA;IACA,IAAIM,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAC,IAAIG,IAAI,CAACC,GAAG,CAACX,CAAC,CAACI,CAAC,CAAC,CAAC,EAAE;MACtCI,UAAU,IAAID,MAAM,GAAGE,UAAU,GAAGT,CAAC,CAACI,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLI,UAAU,IAAIR,CAAC,CAACI,CAAC,CAAC,GAAGK,UAAU,GAAGF,MAAM;IAC1C;IACAA,MAAM,GAAGE,UAAU;EACrB;;EAEA;EACA,OAAOF,MAAM,GAAGC,UAAU,GAAG,CAAC;AAChC;AACA,SAASI,IAAIA,CAACZ,CAAC,EAAE;EACf,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EACA,OAAOI,GAAG,CAACN,CAAC,CAAC,GAAGA,CAAC,CAACC,MAAM;AAC1B;AACA,SAASK,GAAG,EAAEP,GAAG,EAAEM,GAAG,EAAEO,IAAI;AAC5B,OAAO,IAAIC,OAAO,GAAG;EACnBR,GAAG,EAAEA,GAAG;EACRN,GAAG,EAAEA,GAAG;EACRa,IAAI,EAAEA,IAAI;EACVN,GAAG,EAAEA;AACP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}