{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { AbstractGroup } from '@antv/g-base';\nimport { each } from '@antv/util';\nimport * as Shape from './shape';\nimport { drawChildren, refreshElement } from './util/draw';\nimport { setClip, setTransform } from './util/svg';\nimport { SVG_ATTR_MAP } from './constant';\nimport { createSVGElement } from './util/dom';\nvar Group = /** @class */function (_super) {\n  __extends(Group, _super);\n  function Group() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  // SVG 中分组对应实体标签 <g>\n  Group.prototype.isEntityGroup = function () {\n    return true;\n  };\n  Group.prototype.createDom = function () {\n    var element = createSVGElement('g');\n    this.set('el', element);\n    var parent = this.getParent();\n    if (parent) {\n      var parentNode = parent.get('el');\n      if (parentNode) {\n        parentNode.appendChild(element);\n      } else {\n        // parentNode maybe null for group\n        parentNode = parent.createDom();\n        parent.set('el', parentNode);\n        parentNode.appendChild(element);\n      }\n    }\n    return element;\n  };\n  // 覆盖基类的 afterAttrsChange 方法\n  Group.prototype.afterAttrsChange = function (targetAttrs) {\n    _super.prototype.afterAttrsChange.call(this, targetAttrs);\n    var canvas = this.get('canvas');\n    // 只有挂载到画布下，才对元素进行实际渲染\n    if (canvas && canvas.get('autoDraw')) {\n      var context = canvas.get('context');\n      this.createPath(context, targetAttrs);\n    }\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n  Group.prototype.onCanvasChange = function (changeType) {\n    refreshElement(this, changeType);\n  };\n  Group.prototype.getShapeBase = function () {\n    return Shape;\n  };\n  Group.prototype.getGroupBase = function () {\n    return Group;\n  };\n  Group.prototype.draw = function (context) {\n    var children = this.getChildren();\n    var el = this.get('el');\n    if (this.get('destroyed')) {\n      if (el) {\n        el.parentNode.removeChild(el);\n      }\n    } else {\n      if (!el) {\n        this.createDom();\n      }\n      setClip(this, context);\n      this.createPath(context);\n      if (children.length) {\n        drawChildren(context, children);\n      }\n    }\n  };\n  /**\n   * 绘制分组的路径\n   * @param {Defs} context 上下文\n   * @param {ShapeAttrs} targetAttrs 渲染的目标属性\n   */\n  Group.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n    setTransform(this);\n  };\n  return Group;\n}(AbstractGroup);\nexport default Group;","map":{"version":3,"names":["AbstractGroup","each","Shape","drawChildren","refreshElement","setClip","setTransform","SVG_ATTR_MAP","createSVGElement","Group","_super","__extends","prototype","isEntityGroup","createDom","element","set","parent","getParent","parentNode","get","appendChild","afterAttrsChange","targetAttrs","call","canvas","context","createPath","onCanvasChange","changeType","getShapeBase","getGroupBase","draw","children","getChildren","el","removeChild","length","attrs","attr","value","setAttribute"],"sources":["../src/group.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}