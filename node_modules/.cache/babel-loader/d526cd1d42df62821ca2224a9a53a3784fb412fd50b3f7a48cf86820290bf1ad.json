{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { groupBy, max, min } from '@antv/util';\nimport pdf from 'pdfast';\nimport { quantile } from '../../utils/transform/quantile';\nexport var toBoxValue = function (values) {\n  return {\n    low: min(values),\n    high: max(values),\n    q1: quantile(values, 0.25),\n    q3: quantile(values, 0.75),\n    median: quantile(values, [0.5]),\n    minMax: [min(values), max(values)],\n    quantile: [quantile(values, 0.25), quantile(values, 0.75)]\n  };\n};\nexport var toViolinValue = function (values, pdfOptions) {\n  var pdfResults = pdf.create(values, pdfOptions);\n  return {\n    violinSize: pdfResults.map(function (result) {\n      return result.y;\n    }),\n    violinY: pdfResults.map(function (result) {\n      return result.x;\n    })\n  };\n};\nexport var transformViolinData = function (options) {\n  var xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField,\n    data = options.data,\n    kde = options.kde;\n  /** 生成概率密度函数的配置 */\n  var pdfOptions = {\n    min: kde.min,\n    max: kde.max,\n    size: kde.sampleSize,\n    width: kde.width\n  };\n  // 无拆分\n  if (!seriesField) {\n    var group_1 = groupBy(data, xField);\n    return Object.keys(group_1).map(function (x) {\n      var records = group_1[x];\n      var values = records.map(function (record) {\n        return record[yField];\n      });\n      return __assign(__assign({\n        x: x\n      }, toViolinValue(values, pdfOptions)), toBoxValue(values));\n    });\n  }\n  // 有拆分\n  var resultList = [];\n  var seriesGroup = groupBy(data, seriesField);\n  Object.keys(seriesGroup).forEach(function (series) {\n    var group = groupBy(seriesGroup[series], xField);\n    return Object.keys(group).forEach(function (key) {\n      var _a;\n      var records = group[key];\n      var values = records.map(function (record) {\n        return record[yField];\n      });\n      resultList.push(__assign(__assign((_a = {\n        x: key\n      }, _a[seriesField] = series, _a), toViolinValue(values, pdfOptions)), toBoxValue(values)));\n    });\n  });\n  return resultList;\n};","map":{"version":3,"names":["groupBy","max","min","pdf","quantile","toBoxValue","values","low","high","q1","q3","median","minMax","toViolinValue","pdfOptions","pdfResults","create","violinSize","map","result","y","violinY","x","transformViolinData","options","xField","yField","seriesField","data","kde","size","sampleSize","width","group_1","Object","keys","records","record","__assign","resultList","seriesGroup","forEach","series","group","key","push","_a"],"sources":["../../../src/plots/violin/utils.ts"],"sourcesContent":["import { groupBy, max, min } from '@antv/util';\nimport pdf from 'pdfast';\nimport { quantile } from '../../utils/transform/quantile';\nimport { ViolinOptions } from './types';\n\nexport type ViolinData = {\n  /** X轴 */\n  x: string;\n\n  /** 小提琴轮廓的 size 通道数据 */\n  violinSize: number[];\n  /** 小提琴轮廓的 y 通道数据 */\n  violinY: number[];\n\n  // 箱线图基础数据\n  /** 最大值 */\n  high: number;\n  /** 最小值 */\n  low: number;\n  /** 上四分位数 */\n  q1: number;\n  /** 下四分位数 */\n  q3: number;\n  /** 箱线图中的中位值 */\n  median: number[];\n\n  /** 箱线图中的上线边缘线 */\n  minMax: number[];\n  /** 箱线图中的上下四分位点 */\n  quantile: number[];\n};\n\nexport type PdfOptions = {\n  min: number;\n  max: number;\n  size: number;\n  width: number;\n};\n\nexport const toBoxValue = (values: number[]) => {\n  return {\n    low: min(values),\n    high: max(values),\n    q1: quantile(values, 0.25),\n    q3: quantile(values, 0.75),\n    median: quantile(values, [0.5]),\n    minMax: [min(values), max(values)],\n    quantile: [quantile(values, 0.25), quantile(values, 0.75)],\n  };\n};\n\nexport const toViolinValue = (values: number[], pdfOptions: PdfOptions) => {\n  const pdfResults: Array<{ x: number; y: number }> = pdf.create(values, pdfOptions);\n  return {\n    violinSize: pdfResults.map((result) => result.y),\n    violinY: pdfResults.map((result) => result.x),\n  };\n};\n\nexport const transformViolinData = (options: ViolinOptions): ViolinData[] => {\n  const { xField, yField, seriesField, data, kde } = options;\n\n  /** 生成概率密度函数的配置 */\n  const pdfOptions: PdfOptions = {\n    min: kde.min,\n    max: kde.max,\n    size: kde.sampleSize,\n    width: kde.width,\n  };\n\n  // 无拆分\n  if (!seriesField) {\n    const group = groupBy(data, xField);\n    return Object.keys(group).map((x) => {\n      const records = group[x];\n      const values = records.map((record) => record[yField]);\n      return {\n        x,\n        ...toViolinValue(values, pdfOptions),\n        ...toBoxValue(values),\n      };\n    });\n  }\n\n  // 有拆分\n  const resultList: ViolinData[] = [];\n  const seriesGroup = groupBy(data, seriesField);\n  Object.keys(seriesGroup).forEach((series) => {\n    const group = groupBy(seriesGroup[series], xField);\n    return Object.keys(group).forEach((key) => {\n      const records = group[key];\n      const values = records.map((record) => record[yField]);\n      resultList.push({\n        x: key,\n        [seriesField]: series,\n        ...toViolinValue(values, pdfOptions),\n        ...toBoxValue(values),\n      });\n    });\n  });\n  return resultList;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}