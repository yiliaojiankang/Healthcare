{"ast":null,"code":"export function getPixelRatio() {\n  return window ? window.devicePixelRatio : 1;\n}\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\nexport function distance(x1, y1, x2, y2) {\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\nexport function inBox(minX, minY, width, height, x, y) {\n  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n// 合并两个区域\nexport function mergeRegion(region1, region2) {\n  if (!region1 || !region2) {\n    return region1 || region2;\n  }\n  return {\n    minX: Math.min(region1.minX, region2.minX),\n    minY: Math.min(region1.minY, region2.minY),\n    maxX: Math.max(region1.maxX, region2.maxX),\n    maxY: Math.max(region1.maxY, region2.maxY)\n  };\n}\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\nexport function isSamePoint(point1, point2) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\nexport { isNil, isString, isFunction, isArray, each, toRadian, mod, isNumberEqual, requestAnimationFrame, clearAnimationFrame } from '@antv/util';","map":{"version":3,"names":["getPixelRatio","window","devicePixelRatio","distance","x1","y1","x2","y2","dx","dy","Math","sqrt","inBox","minX","minY","width","height","x","y","intersectRect","box1","box2","maxX","maxY","mergeRegion","region1","region2","min","max","isSamePoint","point1","point2","isNil","isString","isFunction","isArray","each","toRadian","mod","isNumberEqual","requestAnimationFrame","clearAnimationFrame"],"sources":["../../src/util/util.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAM,SAAUA,aAAaA,CAAA;EAC3B,OAAOC,MAAM,GAAGA,MAAM,CAACC,gBAAgB,GAAG,CAAC;AAC7C;AAEA;;;;;;;AAOA,OAAM,SAAUC,QAAQA,CAACC,EAAU,EAAEC,EAAU,EAAEC,EAAU,EAAEC,EAAU;EACrE,IAAMC,EAAE,GAAGJ,EAAE,GAAGE,EAAE;EAClB,IAAMG,EAAE,GAAGJ,EAAE,GAAGE,EAAE;EAClB,OAAOG,IAAI,CAACC,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;AACrC;AAEA;;;;;;;;;AASA,OAAM,SAAUG,KAAKA,CAACC,IAAY,EAAEC,IAAY,EAAEC,KAAa,EAAEC,MAAc,EAAEC,CAAC,EAAEC,CAAC;EACnF,OAAOD,CAAC,IAAIJ,IAAI,IAAII,CAAC,IAAIJ,IAAI,GAAGE,KAAK,IAAIG,CAAC,IAAIJ,IAAI,IAAII,CAAC,IAAIJ,IAAI,GAAGE,MAAM;AAC1E;AAEA,OAAM,SAAUG,aAAaA,CAACC,IAAI,EAAEC,IAAI;EACtC,OAAO,EAAEA,IAAI,CAACR,IAAI,GAAGO,IAAI,CAACE,IAAI,IAAID,IAAI,CAACC,IAAI,GAAGF,IAAI,CAACP,IAAI,IAAIQ,IAAI,CAACP,IAAI,GAAGM,IAAI,CAACG,IAAI,IAAIF,IAAI,CAACE,IAAI,GAAGH,IAAI,CAACN,IAAI,CAAC;AAC5G;AAEA;AACA,OAAM,SAAUU,WAAWA,CAACC,OAAO,EAAEC,OAAO;EAC1C,IAAI,CAACD,OAAO,IAAI,CAACC,OAAO,EAAE;IACxB,OAAOD,OAAO,IAAIC,OAAO;;EAE3B,OAAO;IACLb,IAAI,EAAEH,IAAI,CAACiB,GAAG,CAACF,OAAO,CAACZ,IAAI,EAAEa,OAAO,CAACb,IAAI,CAAC;IAC1CC,IAAI,EAAEJ,IAAI,CAACiB,GAAG,CAACF,OAAO,CAACX,IAAI,EAAEY,OAAO,CAACZ,IAAI,CAAC;IAC1CQ,IAAI,EAAEZ,IAAI,CAACkB,GAAG,CAACH,OAAO,CAACH,IAAI,EAAEI,OAAO,CAACJ,IAAI,CAAC;IAC1CC,IAAI,EAAEb,IAAI,CAACkB,GAAG,CAACH,OAAO,CAACF,IAAI,EAAEG,OAAO,CAACH,IAAI;GAC1C;AACH;AAEA;;;;;AAKA,OAAM,SAAUM,WAAWA,CAACC,MAAM,EAAEC,MAAM;EACxC,OAAOD,MAAM,CAAC,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,CAAC,IAAID,MAAM,CAAC,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,CAAC;AAC3D;AAEA,SACEC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,IAAI,EACJC,QAAQ,EACRC,GAAG,EACHC,aAAa,EACbC,qBAAqB,EACrBC,mBAAmB,QACd,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}