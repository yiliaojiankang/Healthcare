{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { get, isArray } from '@antv/util';\nimport { HIERARCHY_DATA_TRANSFORM_PARAMS } from '../../interactions/actions/drill-down';\nimport { treemap } from '../../utils/hierarchy/treemap';\nexport function findInteraction(interactions, interactionType) {\n  if (!isArray(interactions)) return undefined;\n  return interactions.find(function (i) {\n    return i.type === interactionType;\n  });\n}\nexport function enableInteraction(interactions, interactionType) {\n  var interaction = findInteraction(interactions, interactionType);\n  return interaction && interaction.enable !== false;\n}\n/**\n * 是否允许下钻交互\n * @param interactions\n * @param interactionType\n * @returns\n */\nexport function enableDrillInteraction(options) {\n  var interactions = options.interactions,\n    drilldown = options.drilldown;\n  // 兼容旧版本, treemap-drill-down\n  return get(drilldown, 'enabled') || enableInteraction(interactions, 'treemap-drill-down');\n}\nexport function resetDrillDown(chart) {\n  var drillDownInteraction = chart.interactions['drill-down'];\n  if (!drillDownInteraction) return;\n  // @ts-ignore\n  var drillDownAction = drillDownInteraction.context.actions.find(function (i) {\n    return i.name === 'drill-down-action';\n  });\n  drillDownAction.reset();\n}\nexport function transformData(options) {\n  var data = options.data,\n    colorField = options.colorField,\n    enableDrillDown = options.enableDrillDown,\n    hierarchyConfig = options.hierarchyConfig;\n  var nodes = treemap(data, __assign(__assign({}, hierarchyConfig), {\n    // @ts-ignore\n    type: 'hierarchy.treemap',\n    field: 'value',\n    as: ['x', 'y']\n  }));\n  var result = [];\n  nodes.forEach(function (node) {\n    if (node.depth === 0) {\n      return null;\n    }\n    // 开启下钻，仅加载 depth === 1 的数据\n    if (enableDrillDown && node.depth !== 1) {\n      return null;\n    }\n    // 不开启下钻，加载所有叶子节点\n    if (!enableDrillDown && node.children) {\n      return null;\n    }\n    // path 信息仅挑选必要祖先元素属性，因为在有些属性是不必要(x, y), 或是不准确的(下钻时的 depth)，不对外透出\n    var curPath = node.ancestors().map(function (n) {\n      return {\n        data: n.data,\n        height: n.height,\n        value: n.value\n      };\n    });\n    // 在下钻树图中，每次绘制的是当前层级信息，将父元素的层级信息（data.path) 做一层拼接。\n    var path = enableDrillDown && isArray(data.path) ? curPath.concat(data.path.slice(1)) : curPath;\n    var nodeInfo = Object.assign({}, node.data, __assign({\n      x: node.x,\n      y: node.y,\n      depth: node.depth,\n      value: node.value,\n      path: path\n    }, node));\n    if (!node.data[colorField] && node.parent) {\n      var ancestorNode = node.ancestors().find(function (n) {\n        return n.data[colorField];\n      });\n      nodeInfo[colorField] = ancestorNode === null || ancestorNode === void 0 ? void 0 : ancestorNode.data[colorField];\n    } else {\n      nodeInfo[colorField] = node.data[colorField];\n    }\n    nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] = {\n      hierarchyConfig: hierarchyConfig,\n      colorField: colorField,\n      enableDrillDown: enableDrillDown\n    };\n    result.push(nodeInfo);\n  });\n  return result;\n}","map":{"version":3,"names":["get","isArray","HIERARCHY_DATA_TRANSFORM_PARAMS","treemap","findInteraction","interactions","interactionType","undefined","find","i","type","enableInteraction","interaction","enable","enableDrillInteraction","options","drilldown","resetDrillDown","chart","drillDownInteraction","drillDownAction","context","actions","name","reset","transformData","data","colorField","enableDrillDown","hierarchyConfig","nodes","__assign","field","as","result","forEach","node","depth","children","curPath","ancestors","map","n","height","value","path","concat","slice","nodeInfo","Object","assign","x","y","parent","ancestorNode","push"],"sources":["../../../src/plots/treemap/utils.ts"],"sourcesContent":["import { View } from '@antv/g2';\nimport { get, isArray } from '@antv/util';\nimport { HIERARCHY_DATA_TRANSFORM_PARAMS } from '../../interactions/actions/drill-down';\nimport { Interaction } from '../../types/interaction';\nimport { treemap } from '../../utils/hierarchy/treemap';\nimport { TreemapOptions } from './types';\n\nexport function findInteraction(\n  interactions: TreemapOptions['interactions'],\n  interactionType: string\n): undefined | Interaction {\n  if (!isArray(interactions)) return undefined;\n  return interactions.find((i) => i.type === interactionType);\n}\n\nexport function enableInteraction(interactions: TreemapOptions['interactions'], interactionType: string): boolean {\n  const interaction = findInteraction(interactions, interactionType);\n  return interaction && interaction.enable !== false;\n}\n\n/**\n * 是否允许下钻交互\n * @param interactions\n * @param interactionType\n * @returns\n */\nexport function enableDrillInteraction(options: TreemapOptions): boolean {\n  const { interactions, drilldown } = options;\n  // 兼容旧版本, treemap-drill-down\n  return get(drilldown, 'enabled') || enableInteraction(interactions, 'treemap-drill-down');\n}\n\nexport function resetDrillDown(chart: View) {\n  const drillDownInteraction = chart.interactions['drill-down'];\n\n  if (!drillDownInteraction) return;\n\n  // @ts-ignore\n  const drillDownAction = drillDownInteraction.context.actions.find((i) => i.name === 'drill-down-action');\n\n  drillDownAction.reset();\n}\n\ninterface TransformDataOptions {\n  data: TreemapOptions['data'];\n  colorField: TreemapOptions['colorField'];\n  enableDrillDown: boolean;\n  hierarchyConfig: TreemapOptions['hierarchyConfig'];\n}\n\nexport function transformData(options: TransformDataOptions) {\n  const { data, colorField, enableDrillDown, hierarchyConfig } = options;\n\n  const nodes = treemap(data, {\n    ...hierarchyConfig,\n    // @ts-ignore\n    type: 'hierarchy.treemap',\n    field: 'value',\n    as: ['x', 'y'],\n  });\n\n  const result = [];\n  nodes.forEach((node) => {\n    if (node.depth === 0) {\n      return null;\n    }\n\n    // 开启下钻，仅加载 depth === 1 的数据\n    if (enableDrillDown && node.depth !== 1) {\n      return null;\n    }\n\n    // 不开启下钻，加载所有叶子节点\n    if (!enableDrillDown && node.children) {\n      return null;\n    }\n\n    // path 信息仅挑选必要祖先元素属性，因为在有些属性是不必要(x, y), 或是不准确的(下钻时的 depth)，不对外透出\n    const curPath = node.ancestors().map((n) => ({\n      data: n.data,\n      height: n.height,\n      value: n.value,\n    }));\n    // 在下钻树图中，每次绘制的是当前层级信息，将父元素的层级信息（data.path) 做一层拼接。\n    const path = enableDrillDown && isArray(data.path) ? curPath.concat(data.path.slice(1)) : curPath;\n\n    const nodeInfo = Object.assign({}, node.data, {\n      x: node.x,\n      y: node.y,\n      depth: node.depth,\n      value: node.value,\n      path,\n      ...node,\n    });\n    if (!node.data[colorField] && node.parent) {\n      const ancestorNode = node.ancestors().find((n) => n.data[colorField]);\n      nodeInfo[colorField] = ancestorNode?.data[colorField];\n    } else {\n      nodeInfo[colorField] = node.data[colorField];\n    }\n\n    nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] = { hierarchyConfig, colorField, enableDrillDown };\n    result.push(nodeInfo);\n  });\n  return result;\n}\n"],"mappings":";;AACA,SAASA,GAAG,EAAEC,OAAO,QAAQ,YAAY;AACzC,SAASC,+BAA+B,QAAQ,uCAAuC;AAEvF,SAASC,OAAO,QAAQ,+BAA+B;AAGvD,OAAM,SAAUC,eAAeA,CAC7BC,YAA4C,EAC5CC,eAAuB;EAEvB,IAAI,CAACL,OAAO,CAACI,YAAY,CAAC,EAAE,OAAOE,SAAS;EAC5C,OAAOF,YAAY,CAACG,IAAI,CAAC,UAACC,CAAC;IAAK,OAAAA,CAAC,CAACC,IAAI,KAAKJ,eAAe;EAA1B,CAA0B,CAAC;AAC7D;AAEA,OAAM,SAAUK,iBAAiBA,CAACN,YAA4C,EAAEC,eAAuB;EACrG,IAAMM,WAAW,GAAGR,eAAe,CAACC,YAAY,EAAEC,eAAe,CAAC;EAClE,OAAOM,WAAW,IAAIA,WAAW,CAACC,MAAM,KAAK,KAAK;AACpD;AAEA;;;;;;AAMA,OAAM,SAAUC,sBAAsBA,CAACC,OAAuB;EACpD,IAAAV,YAAY,GAAgBU,OAAO,CAAAV,YAAvB;IAAEW,SAAS,GAAKD,OAAO,CAAAC,SAAZ;EAC/B;EACA,OAAOhB,GAAG,CAACgB,SAAS,EAAE,SAAS,CAAC,IAAIL,iBAAiB,CAACN,YAAY,EAAE,oBAAoB,CAAC;AAC3F;AAEA,OAAM,SAAUY,cAAcA,CAACC,KAAW;EACxC,IAAMC,oBAAoB,GAAGD,KAAK,CAACb,YAAY,CAAC,YAAY,CAAC;EAE7D,IAAI,CAACc,oBAAoB,EAAE;EAE3B;EACA,IAAMC,eAAe,GAAGD,oBAAoB,CAACE,OAAO,CAACC,OAAO,CAACd,IAAI,CAAC,UAACC,CAAC;IAAK,OAAAA,CAAC,CAACc,IAAI,KAAK,mBAAmB;EAA9B,CAA8B,CAAC;EAExGH,eAAe,CAACI,KAAK,EAAE;AACzB;AASA,OAAM,SAAUC,aAAaA,CAACV,OAA6B;EACjD,IAAAW,IAAI,GAAmDX,OAAO,CAAAW,IAA1D;IAAEC,UAAU,GAAuCZ,OAAO,CAAAY,UAA9C;IAAEC,eAAe,GAAsBb,OAAO,CAAAa,eAA7B;IAAEC,eAAe,GAAKd,OAAO,CAAAc,eAAZ;EAE1D,IAAMC,KAAK,GAAG3B,OAAO,CAACuB,IAAI,EAAAK,QAAA,CAAAA,QAAA,KACrBF,eAAe;IAClB;IACAnB,IAAI,EAAE,mBAAmB;IACzBsB,KAAK,EAAE,OAAO;IACdC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG;EAAC,GACd;EAEF,IAAMC,MAAM,GAAG,EAAE;EACjBJ,KAAK,CAACK,OAAO,CAAC,UAACC,IAAI;IACjB,IAAIA,IAAI,CAACC,KAAK,KAAK,CAAC,EAAE;MACpB,OAAO,IAAI;;IAGb;IACA,IAAIT,eAAe,IAAIQ,IAAI,CAACC,KAAK,KAAK,CAAC,EAAE;MACvC,OAAO,IAAI;;IAGb;IACA,IAAI,CAACT,eAAe,IAAIQ,IAAI,CAACE,QAAQ,EAAE;MACrC,OAAO,IAAI;;IAGb;IACA,IAAMC,OAAO,GAAGH,IAAI,CAACI,SAAS,EAAE,CAACC,GAAG,CAAC,UAACC,CAAC;MAAK,OAAC;QAC3ChB,IAAI,EAAEgB,CAAC,CAAChB,IAAI;QACZiB,MAAM,EAAED,CAAC,CAACC,MAAM;QAChBC,KAAK,EAAEF,CAAC,CAACE;OACV;IAJ2C,CAI1C,CAAC;IACH;IACA,IAAMC,IAAI,GAAGjB,eAAe,IAAI3B,OAAO,CAACyB,IAAI,CAACmB,IAAI,CAAC,GAAGN,OAAO,CAACO,MAAM,CAACpB,IAAI,CAACmB,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGR,OAAO;IAEjG,IAAMS,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEd,IAAI,CAACV,IAAI,EAAAK,QAAA;MAC1CoB,CAAC,EAAEf,IAAI,CAACe,CAAC;MACTC,CAAC,EAAEhB,IAAI,CAACgB,CAAC;MACTf,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBO,KAAK,EAAER,IAAI,CAACQ,KAAK;MACjBC,IAAI,EAAAA;IAAA,GACDT,IAAI,EACP;IACF,IAAI,CAACA,IAAI,CAACV,IAAI,CAACC,UAAU,CAAC,IAAIS,IAAI,CAACiB,MAAM,EAAE;MACzC,IAAMC,YAAY,GAAGlB,IAAI,CAACI,SAAS,EAAE,CAAChC,IAAI,CAAC,UAACkC,CAAC;QAAK,OAAAA,CAAC,CAAChB,IAAI,CAACC,UAAU,CAAC;MAAlB,CAAkB,CAAC;MACrEqB,QAAQ,CAACrB,UAAU,CAAC,GAAG2B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE5B,IAAI,CAACC,UAAU,CAAC;KACtD,MAAM;MACLqB,QAAQ,CAACrB,UAAU,CAAC,GAAGS,IAAI,CAACV,IAAI,CAACC,UAAU,CAAC;;IAG9CqB,QAAQ,CAAC9C,+BAA+B,CAAC,GAAG;MAAE2B,eAAe,EAAAA,eAAA;MAAEF,UAAU,EAAAA,UAAA;MAAEC,eAAe,EAAAA;IAAA,CAAE;IAC5FM,MAAM,CAACqB,IAAI,CAACP,QAAQ,CAAC;EACvB,CAAC,CAAC;EACF,OAAOd,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}