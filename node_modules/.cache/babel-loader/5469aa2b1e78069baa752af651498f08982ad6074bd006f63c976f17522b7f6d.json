{"ast":null,"code":"var DEFAULT_WEIGHT_FUNC = function DEFAULT_WEIGHT_FUNC() {\n  return 1;\n};\nexport function floydWarshall(graph, weightFn, edgeFn) {\n  return runFloydWarshall(graph, weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) {\n    return graph.outEdges(v);\n  });\n}\nfunction runFloydWarshall(graph, weightFn, edgeFn) {\n  var results = {};\n  var nodes = graph.nodes();\n  nodes.forEach(function (node) {\n    var v = String(node);\n    results[v] = {};\n    results[v][v] = {\n      distance: 0\n    };\n    nodes.forEach(function (w) {\n      if (node !== w) {\n        results[v][String(w)] = {\n          distance: Number.POSITIVE_INFINITY\n        };\n      }\n    });\n    edgeFn(node).forEach(function (edge) {\n      var w = edge.v === node ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][String(w)] = {\n        distance: d,\n        predecessor: node\n      };\n    });\n  });\n  nodes.forEach(function (nodek) {\n    var k = String(nodek);\n    var rowK = results[k];\n    nodes.forEach(function (nodei) {\n      var i = String(nodei);\n      var rowI = results[i];\n      nodes.forEach(function (nodej) {\n        var j = String(nodej);\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n  return results;\n}\nexport default floydWarshall;","map":{"version":3,"names":["DEFAULT_WEIGHT_FUNC","floydWarshall","graph","weightFn","edgeFn","runFloydWarshall","v","outEdges","results","nodes","forEach","node","String","distance","w","Number","POSITIVE_INFINITY","edge","d","predecessor","nodek","k","rowK","nodei","i","rowI","nodej","j","ik","kj","ij","altDistance"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/graphlib/es/algorithm/floyd-warshall.js"],"sourcesContent":["var DEFAULT_WEIGHT_FUNC = function DEFAULT_WEIGHT_FUNC() {\n  return 1;\n};\n\nexport function floydWarshall(graph, weightFn, edgeFn) {\n  return runFloydWarshall(graph, weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) {\n    return graph.outEdges(v);\n  });\n}\n\nfunction runFloydWarshall(graph, weightFn, edgeFn) {\n  var results = {};\n  var nodes = graph.nodes();\n  nodes.forEach(function (node) {\n    var v = String(node);\n    results[v] = {};\n    results[v][v] = {\n      distance: 0\n    };\n    nodes.forEach(function (w) {\n      if (node !== w) {\n        results[v][String(w)] = {\n          distance: Number.POSITIVE_INFINITY\n        };\n      }\n    });\n    edgeFn(node).forEach(function (edge) {\n      var w = edge.v === node ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][String(w)] = {\n        distance: d,\n        predecessor: node\n      };\n    });\n  });\n  nodes.forEach(function (nodek) {\n    var k = String(nodek);\n    var rowK = results[k];\n    nodes.forEach(function (nodei) {\n      var i = String(nodei);\n      var rowI = results[i];\n      nodes.forEach(function (nodej) {\n        var j = String(nodej);\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n  return results;\n}\n\nexport default floydWarshall;"],"mappings":"AAAA,IAAIA,mBAAmB,GAAG,SAASA,mBAAmBA,CAAA,EAAG;EACvD,OAAO,CAAC;AACV,CAAC;AAED,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EACrD,OAAOC,gBAAgB,CAACH,KAAK,EAAEC,QAAQ,IAAIH,mBAAmB,EAAEI,MAAM,IAAI,UAAUE,CAAC,EAAE;IACrF,OAAOJ,KAAK,CAACK,QAAQ,CAACD,CAAC,CAAC;EAC1B,CAAC,CAAC;AACJ;AAEA,SAASD,gBAAgBA,CAACH,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EACjD,IAAII,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIC,KAAK,GAAGP,KAAK,CAACO,KAAK,CAAC,CAAC;EACzBA,KAAK,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC5B,IAAIL,CAAC,GAAGM,MAAM,CAACD,IAAI,CAAC;IACpBH,OAAO,CAACF,CAAC,CAAC,GAAG,CAAC,CAAC;IACfE,OAAO,CAACF,CAAC,CAAC,CAACA,CAAC,CAAC,GAAG;MACdO,QAAQ,EAAE;IACZ,CAAC;IACDJ,KAAK,CAACC,OAAO,CAAC,UAAUI,CAAC,EAAE;MACzB,IAAIH,IAAI,KAAKG,CAAC,EAAE;QACdN,OAAO,CAACF,CAAC,CAAC,CAACM,MAAM,CAACE,CAAC,CAAC,CAAC,GAAG;UACtBD,QAAQ,EAAEE,MAAM,CAACC;QACnB,CAAC;MACH;IACF,CAAC,CAAC;IACFZ,MAAM,CAACO,IAAI,CAAC,CAACD,OAAO,CAAC,UAAUO,IAAI,EAAE;MACnC,IAAIH,CAAC,GAAGG,IAAI,CAACX,CAAC,KAAKK,IAAI,GAAGM,IAAI,CAACH,CAAC,GAAGG,IAAI,CAACX,CAAC;MACzC,IAAIY,CAAC,GAAGf,QAAQ,CAACc,IAAI,CAAC;MACtBT,OAAO,CAACF,CAAC,CAAC,CAACM,MAAM,CAACE,CAAC,CAAC,CAAC,GAAG;QACtBD,QAAQ,EAAEK,CAAC;QACXC,WAAW,EAAER;MACf,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;EACFF,KAAK,CAACC,OAAO,CAAC,UAAUU,KAAK,EAAE;IAC7B,IAAIC,CAAC,GAAGT,MAAM,CAACQ,KAAK,CAAC;IACrB,IAAIE,IAAI,GAAGd,OAAO,CAACa,CAAC,CAAC;IACrBZ,KAAK,CAACC,OAAO,CAAC,UAAUa,KAAK,EAAE;MAC7B,IAAIC,CAAC,GAAGZ,MAAM,CAACW,KAAK,CAAC;MACrB,IAAIE,IAAI,GAAGjB,OAAO,CAACgB,CAAC,CAAC;MACrBf,KAAK,CAACC,OAAO,CAAC,UAAUgB,KAAK,EAAE;QAC7B,IAAIC,CAAC,GAAGf,MAAM,CAACc,KAAK,CAAC;QACrB,IAAIE,EAAE,GAAGH,IAAI,CAACJ,CAAC,CAAC;QAChB,IAAIQ,EAAE,GAAGP,IAAI,CAACK,CAAC,CAAC;QAChB,IAAIG,EAAE,GAAGL,IAAI,CAACE,CAAC,CAAC;QAChB,IAAII,WAAW,GAAGH,EAAE,CAACf,QAAQ,GAAGgB,EAAE,CAAChB,QAAQ;QAE3C,IAAIkB,WAAW,GAAGD,EAAE,CAACjB,QAAQ,EAAE;UAC7BiB,EAAE,CAACjB,QAAQ,GAAGkB,WAAW;UACzBD,EAAE,CAACX,WAAW,GAAGU,EAAE,CAACV,WAAW;QACjC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOX,OAAO;AAChB;AAEA,eAAeP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}