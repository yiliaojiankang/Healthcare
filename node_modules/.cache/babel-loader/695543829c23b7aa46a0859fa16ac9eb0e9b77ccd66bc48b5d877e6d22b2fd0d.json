{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { lngLatToMeters } from '@antv/l7-utils';\nimport earcut from 'earcut';\nimport { vec3 } from 'gl-matrix';\n/**\n * 拉伸多边形顶点，返回拉伸后的顶点信息\n * @param paths 路径数据组\n * @param extrude 是否拉伸\n */\nexport default function extrudePolygon(path) {\n  var p1 = path[0][0];\n  var p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  var n = path[0].length;\n  var flattengeo = earcut.flatten(path);\n  var vertices = flattengeo.vertices,\n    dimensions = flattengeo.dimensions;\n  var positions = [];\n  var indexArray = [];\n  // 设置顶部z值\n  for (var j = 0; j < vertices.length / dimensions; j++) {\n    if (dimensions === 2) {\n      positions.push(vertices[j * 2], vertices[j * 2 + 1], 1);\n    } else {\n      positions.push(vertices[j * 3], vertices[j * 3 + 1], 1);\n    }\n  }\n  var triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  indexArray.push.apply(indexArray, _toConsumableArray(triangles));\n  var _loop = function _loop() {\n    var prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    var nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    var indexOffset = positions.length / 3;\n    positions.push(prePoint[0], prePoint[1], 1, nextPoint[0], nextPoint[1], 1, prePoint[0], prePoint[1], 0, nextPoint[0], nextPoint[1], 0);\n    indexArray.push.apply(indexArray, _toConsumableArray([0, 2, 1, 2, 3, 1].map(function (v) {\n      return v + indexOffset;\n    })));\n  };\n  for (var i = 0; i < n; i++) {\n    _loop();\n  }\n  return {\n    positions: positions,\n    index: indexArray\n  };\n}\nexport function fillPolygon(points) {\n  var flattengeo = earcut.flatten(points);\n  var triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  return {\n    positions: flattengeo.vertices,\n    index: triangles\n  };\n}\nexport function extrude_PolygonNormal(path) {\n  var needFlat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var p1 = path[0][0];\n  var p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  var n = path[0].length;\n  var flattengeo = earcut.flatten(path);\n  var vertices = flattengeo.vertices,\n    dimensions = flattengeo.dimensions;\n  var positions = [];\n  var indexArray = [];\n  var normals = [];\n  // 设置顶部z值 position uv\n  for (var j = 0; j < vertices.length / dimensions; j++) {\n    positions.push(vertices[j * dimensions],\n    // x\n    vertices[j * dimensions + 1],\n    // y\n    1,\n    // z\n    -1,\n    // 顶部uv\n    -1 // 顶部uv\n    );\n\n    normals.push(0, 0, 1);\n  }\n  var triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  indexArray.push.apply(indexArray, _toConsumableArray(triangles));\n  // 设置侧面\n  var _loop2 = function _loop2() {\n    var prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    var nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    var indexOffset = positions.length / 5;\n    // 侧面四顶点\n    positions.push(prePoint[0], prePoint[1], 1, 0, 0, nextPoint[0], nextPoint[1], 1, 0.1,\n    // 侧面 低uv\n    0,\n    // 侧面低 uv\n    prePoint[0], prePoint[1], 0, 0, 0.8, nextPoint[0], nextPoint[1], 0, 0.1, 0.8);\n    var normal = computeVertexNormals([nextPoint[0], nextPoint[1], 1], [prePoint[0], prePoint[1], 0], [prePoint[0], prePoint[1], 1], needFlat);\n    normals.push.apply(normals, _toConsumableArray(normal).concat(_toConsumableArray(normal), _toConsumableArray(normal), _toConsumableArray(normal)));\n    indexArray.push.apply(indexArray, _toConsumableArray([1, 2, 0, 3, 2, 1].map(function (v) {\n      return v + indexOffset;\n    })));\n  };\n  for (var i = 0; i < n; i++) {\n    _loop2();\n  }\n  return {\n    positions: positions,\n    index: indexArray,\n    normals: normals\n  };\n}\nfunction computeVertexNormals(p1, p2, p3) {\n  var needFlat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var cb = vec3.create();\n  var ab = vec3.create();\n  var normal = vec3.create();\n  if (needFlat) {\n    p1 = lngLatToMeters(p1);\n    p2 = lngLatToMeters(p2);\n    p3 = lngLatToMeters(p3);\n  }\n  var pA = vec3.fromValues.apply(vec3, _toConsumableArray(p1));\n  var pB = vec3.fromValues.apply(vec3, _toConsumableArray(p2));\n  var pC = vec3.fromValues.apply(vec3, _toConsumableArray(p3));\n  vec3.sub(cb, pC, pB);\n  vec3.sub(ab, pA, pB);\n  vec3.cross(normal, cb, ab);\n  var newNormal = vec3.create();\n  vec3.normalize(newNormal, normal);\n  return newNormal;\n}","map":{"version":3,"names":["_toConsumableArray","lngLatToMeters","earcut","vec3","extrudePolygon","path","p1","p2","length","slice","n","flattengeo","flatten","vertices","dimensions","positions","indexArray","j","push","triangles","holes","apply","_loop","prePoint","i","nextPoint","indexOffset","map","v","index","fillPolygon","points","extrude_PolygonNormal","needFlat","arguments","undefined","normals","_loop2","normal","computeVertexNormals","concat","p3","cb","create","ab","pA","fromValues","pB","pC","sub","cross","newNormal","normalize"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/core/shape/extrude.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { lngLatToMeters } from '@antv/l7-utils';\nimport earcut from 'earcut';\nimport { vec3 } from 'gl-matrix';\n/**\n * 拉伸多边形顶点，返回拉伸后的顶点信息\n * @param paths 路径数据组\n * @param extrude 是否拉伸\n */\nexport default function extrudePolygon(path) {\n  var p1 = path[0][0];\n  var p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  var n = path[0].length;\n  var flattengeo = earcut.flatten(path);\n  var vertices = flattengeo.vertices,\n    dimensions = flattengeo.dimensions;\n  var positions = [];\n  var indexArray = [];\n  // 设置顶部z值\n  for (var j = 0; j < vertices.length / dimensions; j++) {\n    if (dimensions === 2) {\n      positions.push(vertices[j * 2], vertices[j * 2 + 1], 1);\n    } else {\n      positions.push(vertices[j * 3], vertices[j * 3 + 1], 1);\n    }\n  }\n  var triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  indexArray.push.apply(indexArray, _toConsumableArray(triangles));\n  var _loop = function _loop() {\n    var prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    var nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    var indexOffset = positions.length / 3;\n    positions.push(prePoint[0], prePoint[1], 1, nextPoint[0], nextPoint[1], 1, prePoint[0], prePoint[1], 0, nextPoint[0], nextPoint[1], 0);\n    indexArray.push.apply(indexArray, _toConsumableArray([0, 2, 1, 2, 3, 1].map(function (v) {\n      return v + indexOffset;\n    })));\n  };\n  for (var i = 0; i < n; i++) {\n    _loop();\n  }\n  return {\n    positions: positions,\n    index: indexArray\n  };\n}\nexport function fillPolygon(points) {\n  var flattengeo = earcut.flatten(points);\n  var triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  return {\n    positions: flattengeo.vertices,\n    index: triangles\n  };\n}\nexport function extrude_PolygonNormal(path) {\n  var needFlat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var p1 = path[0][0];\n  var p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  var n = path[0].length;\n  var flattengeo = earcut.flatten(path);\n  var vertices = flattengeo.vertices,\n    dimensions = flattengeo.dimensions;\n  var positions = [];\n  var indexArray = [];\n  var normals = [];\n  // 设置顶部z值 position uv\n  for (var j = 0; j < vertices.length / dimensions; j++) {\n    positions.push(vertices[j * dimensions],\n    // x\n    vertices[j * dimensions + 1],\n    // y\n    1,\n    // z\n    -1,\n    // 顶部uv\n    -1 // 顶部uv\n    );\n\n    normals.push(0, 0, 1);\n  }\n  var triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  indexArray.push.apply(indexArray, _toConsumableArray(triangles));\n  // 设置侧面\n  var _loop2 = function _loop2() {\n    var prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    var nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    var indexOffset = positions.length / 5;\n    // 侧面四顶点\n    positions.push(prePoint[0], prePoint[1], 1, 0, 0, nextPoint[0], nextPoint[1], 1, 0.1,\n    // 侧面 低uv\n    0,\n    // 侧面低 uv\n    prePoint[0], prePoint[1], 0, 0, 0.8, nextPoint[0], nextPoint[1], 0, 0.1, 0.8);\n    var normal = computeVertexNormals([nextPoint[0], nextPoint[1], 1], [prePoint[0], prePoint[1], 0], [prePoint[0], prePoint[1], 1], needFlat);\n    normals.push.apply(normals, _toConsumableArray(normal).concat(_toConsumableArray(normal), _toConsumableArray(normal), _toConsumableArray(normal)));\n    indexArray.push.apply(indexArray, _toConsumableArray([1, 2, 0, 3, 2, 1].map(function (v) {\n      return v + indexOffset;\n    })));\n  };\n  for (var i = 0; i < n; i++) {\n    _loop2();\n  }\n  return {\n    positions: positions,\n    index: indexArray,\n    normals: normals\n  };\n}\nfunction computeVertexNormals(p1, p2, p3) {\n  var needFlat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var cb = vec3.create();\n  var ab = vec3.create();\n  var normal = vec3.create();\n  if (needFlat) {\n    p1 = lngLatToMeters(p1);\n    p2 = lngLatToMeters(p2);\n    p3 = lngLatToMeters(p3);\n  }\n  var pA = vec3.fromValues.apply(vec3, _toConsumableArray(p1));\n  var pB = vec3.fromValues.apply(vec3, _toConsumableArray(p2));\n  var pC = vec3.fromValues.apply(vec3, _toConsumableArray(p3));\n  vec3.sub(cb, pC, pB);\n  vec3.sub(ab, pA, pB);\n  vec3.cross(normal, cb, ab);\n  var newNormal = vec3.create();\n  vec3.normalize(newNormal, normal);\n  return newNormal;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}