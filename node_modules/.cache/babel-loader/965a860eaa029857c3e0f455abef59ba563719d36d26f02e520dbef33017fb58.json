{"ast":null,"code":"/**\n * @fileoverview 文本\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { isNil, isString, each } from '../util/util';\nimport { getTextHeight, assembleFont } from '@antv/g-base';\nvar Text = /** @class */function (_super) {\n  __extends(Text, _super);\n  function Text() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  // 默认文本属性\n  Text.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    });\n  };\n  // 仅仅使用包围盒检测来进行拾取\n  Text.prototype.isOnlyHitBox = function () {\n    return true;\n  };\n  // 初始化时组合 font，同时判断 text 是否换行\n  Text.prototype.initAttrs = function (attrs) {\n    this._assembleFont();\n    if (attrs.text) {\n      this._setText(attrs.text);\n    }\n  };\n  // 组装字体\n  Text.prototype._assembleFont = function () {\n    var attrs = this.attrs;\n    attrs.font = assembleFont(attrs);\n  };\n  // 如果文本换行，则缓存数组\n  Text.prototype._setText = function (text) {\n    var textArr = null;\n    if (isString(text) && text.indexOf('\\n') !== -1) {\n      textArr = text.split('\\n');\n    }\n    this.set('textArr', textArr);\n  };\n  // 更新属性时，检测是否更改了 font、text\n  Text.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n    if (name.startsWith('font')) {\n      this._assembleFont();\n    }\n    if (name === 'text') {\n      this._setText(value);\n    }\n  };\n  // 这个方法在 text 时没有可以做的事情，如果要支持文字背景时可以考虑\n  // createPath(context) {\n  // }\n  // 如果文本多行，需要获取文本间距\n  Text.prototype._getSpaceingY = function () {\n    var attrs = this.attrs;\n    var lineHeight = attrs.lineHeight;\n    var fontSize = attrs.fontSize * 1;\n    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n  };\n  // 绘制文本，考虑多行的场景\n  Text.prototype._drawTextArr = function (context, textArr, isFill) {\n    var attrs = this.attrs;\n    var textBaseline = attrs.textBaseline;\n    var x = attrs.x;\n    var y = attrs.y;\n    var fontSize = attrs.fontSize * 1;\n    var spaceingY = this._getSpaceingY();\n    var height = getTextHeight(attrs.text, attrs.fontSize, attrs.lineHeight);\n    var subY;\n    each(textArr, function (subText, index) {\n      subY = y + index * (spaceingY + fontSize) - height + fontSize; // bottom;\n      if (textBaseline === 'middle') subY += height - fontSize - (height - fontSize) / 2;\n      if (textBaseline === 'top') subY += height - fontSize;\n      if (!isNil(subText)) {\n        if (isFill) {\n          context.fillText(subText, x, subY);\n        } else {\n          context.strokeText(subText, x, subY);\n        }\n      }\n    });\n  };\n  // 绘制文本，同时考虑填充和绘制边框\n  Text.prototype._drawText = function (context, isFill) {\n    var attrs = this.attr();\n    var x = attrs.x;\n    var y = attrs.y;\n    var textArr = this.get('textArr');\n    if (textArr) {\n      this._drawTextArr(context, textArr, isFill);\n    } else {\n      var text = attrs.text;\n      if (!isNil(text)) {\n        if (isFill) {\n          context.fillText(text, x, y);\n        } else {\n          context.strokeText(text, x, y);\n        }\n      }\n    }\n  };\n  // 复写绘制和填充的逻辑：对于文本，应该先绘制边框，再进行填充\n  Text.prototype.strokeAndFill = function (context) {\n    var _a = this.attrs,\n      lineWidth = _a.lineWidth,\n      opacity = _a.opacity,\n      strokeOpacity = _a.strokeOpacity,\n      fillOpacity = _a.fillOpacity;\n    if (this.isStroke()) {\n      if (lineWidth > 0) {\n        if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\n          context.globalAlpha = opacity;\n        }\n        this.stroke(context);\n      }\n    }\n    if (this.isFill()) {\n      if (!isNil(fillOpacity) && fillOpacity !== 1) {\n        context.globalAlpha = fillOpacity;\n        this.fill(context);\n        context.globalAlpha = opacity;\n      } else {\n        this.fill(context);\n      }\n    }\n    this.afterDrawPath(context);\n  };\n  // 复写填充逻辑\n  Text.prototype.fill = function (context) {\n    this._drawText(context, true);\n  };\n  // 复写绘制边框的逻辑\n  Text.prototype.stroke = function (context) {\n    this._drawText(context, false);\n  };\n  return Text;\n}(ShapeBase);\nexport default Text;","map":{"version":3,"names":["ShapeBase","isNil","isString","each","getTextHeight","assembleFont","Text","_super","__extends","prototype","getDefaultAttrs","attrs","call","__assign","x","y","text","fontSize","fontFamily","fontStyle","fontWeight","fontVariant","textAlign","textBaseline","isOnlyHitBox","initAttrs","_assembleFont","_setText","font","textArr","indexOf","split","set","onAttrChange","name","value","originValue","startsWith","_getSpaceingY","lineHeight","_drawTextArr","context","isFill","spaceingY","height","subY","subText","index","fillText","strokeText","_drawText","attr","get","strokeAndFill","_a","lineWidth","opacity","strokeOpacity","fillOpacity","isStroke","globalAlpha","stroke","fill","afterDrawPath"],"sources":["../../src/shape/text.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;AAKA,OAAOA,SAAS,MAAM,QAAQ;AAC9B,SAASC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,cAAc;AACpD,SAASC,aAAa,EAAEC,YAAY,QAAQ,cAAc;AAC1D,IAAAC,IAAA,0BAAAC,MAAA;EAAmBC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAAnB,SAAAD,KAAA;;EAqJA;EApJE;EACAA,IAAA,CAAAG,SAAA,CAAAC,eAAe,GAAf;IACE,IAAMC,KAAK,GAAGJ,MAAA,CAAAE,SAAA,CAAMC,eAAe,CAAAE,IAAA,MAAE;IACrC,OAAAC,QAAA,CAAAA,QAAA,KACKF,KAAK;MACRG,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,YAAY;MACxBC,SAAS,EAAE,QAAQ;MACnBC,UAAU,EAAE,QAAQ;MACpBC,WAAW,EAAE,QAAQ;MACrBC,SAAS,EAAE,OAAO;MAClBC,YAAY,EAAE;IAAQ;EAE1B,CAAC;EAED;EACAjB,IAAA,CAAAG,SAAA,CAAAe,YAAY,GAAZ;IACE,OAAO,IAAI;EACb,CAAC;EAED;EACAlB,IAAA,CAAAG,SAAA,CAAAgB,SAAS,GAAT,UAAUd,KAAK;IACb,IAAI,CAACe,aAAa,EAAE;IACpB,IAAIf,KAAK,CAACK,IAAI,EAAE;MACd,IAAI,CAACW,QAAQ,CAAChB,KAAK,CAACK,IAAI,CAAC;;EAE7B,CAAC;EACD;EACAV,IAAA,CAAAG,SAAA,CAAAiB,aAAa,GAAb;IACE,IAAMf,KAAK,GAAG,IAAI,CAACA,KAAK;IACxBA,KAAK,CAACiB,IAAI,GAAGvB,YAAY,CAACM,KAAK,CAAC;EAClC,CAAC;EAED;EACAL,IAAA,CAAAG,SAAA,CAAAkB,QAAQ,GAAR,UAASX,IAAI;IACX,IAAIa,OAAO,GAAG,IAAI;IAClB,IAAI3B,QAAQ,CAACc,IAAI,CAAC,IAAIA,IAAI,CAACc,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC/CD,OAAO,GAAGb,IAAI,CAACe,KAAK,CAAC,IAAI,CAAC;;IAE5B,IAAI,CAACC,GAAG,CAAC,SAAS,EAAEH,OAAO,CAAC;EAC9B,CAAC;EAED;EACAvB,IAAA,CAAAG,SAAA,CAAAwB,YAAY,GAAZ,UAAaC,IAAY,EAAEC,KAAU,EAAEC,WAAgB;IACrD7B,MAAA,CAAAE,SAAA,CAAMwB,YAAY,CAAArB,IAAA,OAACsB,IAAI,EAAEC,KAAK,EAAEC,WAAW,CAAC;IAC5C,IAAIF,IAAI,CAACG,UAAU,CAAC,MAAM,CAAC,EAAE;MAC3B,IAAI,CAACX,aAAa,EAAE;;IAEtB,IAAIQ,IAAI,KAAK,MAAM,EAAE;MACnB,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAAC;;EAExB,CAAC;EAED;EACA;EAEA;EAEA;EACA7B,IAAA,CAAAG,SAAA,CAAA6B,aAAa,GAAb;IACE,IAAM3B,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAM4B,UAAU,GAAG5B,KAAK,CAAC4B,UAAU;IACnC,IAAMtB,QAAQ,GAAGN,KAAK,CAACM,QAAQ,GAAG,CAAC;IACnC,OAAOsB,UAAU,GAAGA,UAAU,GAAGtB,QAAQ,GAAGA,QAAQ,GAAG,IAAI;EAC7D,CAAC;EAED;EACAX,IAAA,CAAAG,SAAA,CAAA+B,YAAY,GAAZ,UAAaC,OAAO,EAAEZ,OAAO,EAAEa,MAAM;IACnC,IAAM/B,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMY,YAAY,GAAGZ,KAAK,CAACY,YAAY;IACvC,IAAMT,CAAC,GAAGH,KAAK,CAACG,CAAC;IACjB,IAAMC,CAAC,GAAGJ,KAAK,CAACI,CAAC;IACjB,IAAME,QAAQ,GAAGN,KAAK,CAACM,QAAQ,GAAG,CAAC;IACnC,IAAM0B,SAAS,GAAG,IAAI,CAACL,aAAa,EAAE;IACtC,IAAMM,MAAM,GAAGxC,aAAa,CAACO,KAAK,CAACK,IAAI,EAAEL,KAAK,CAACM,QAAQ,EAAEN,KAAK,CAAC4B,UAAU,CAAC;IAC1E,IAAIM,IAAI;IACR1C,IAAI,CAAC0B,OAAO,EAAE,UAACiB,OAAO,EAAEC,KAAa;MACnCF,IAAI,GAAG9B,CAAC,GAAGgC,KAAK,IAAIJ,SAAS,GAAG1B,QAAQ,CAAC,GAAG2B,MAAM,GAAG3B,QAAQ,CAAC,CAAC;MAC/D,IAAIM,YAAY,KAAK,QAAQ,EAAEsB,IAAI,IAAID,MAAM,GAAG3B,QAAQ,GAAG,CAAC2B,MAAM,GAAG3B,QAAQ,IAAI,CAAC;MAClF,IAAIM,YAAY,KAAK,KAAK,EAAEsB,IAAI,IAAID,MAAM,GAAG3B,QAAQ;MACrD,IAAI,CAAChB,KAAK,CAAC6C,OAAO,CAAC,EAAE;QACnB,IAAIJ,MAAM,EAAE;UACVD,OAAO,CAACO,QAAQ,CAACF,OAAO,EAAEhC,CAAC,EAAE+B,IAAI,CAAC;SACnC,MAAM;UACLJ,OAAO,CAACQ,UAAU,CAACH,OAAO,EAAEhC,CAAC,EAAE+B,IAAI,CAAC;;;IAG1C,CAAC,CAAC;EACJ,CAAC;EAED;EACAvC,IAAA,CAAAG,SAAA,CAAAyC,SAAS,GAAT,UAAUT,OAAO,EAAEC,MAAM;IACvB,IAAM/B,KAAK,GAAG,IAAI,CAACwC,IAAI,EAAE;IACzB,IAAMrC,CAAC,GAAGH,KAAK,CAACG,CAAC;IACjB,IAAMC,CAAC,GAAGJ,KAAK,CAACI,CAAC;IACjB,IAAMc,OAAO,GAAG,IAAI,CAACuB,GAAG,CAAC,SAAS,CAAC;IACnC,IAAIvB,OAAO,EAAE;MACX,IAAI,CAACW,YAAY,CAACC,OAAO,EAAEZ,OAAO,EAAEa,MAAM,CAAC;KAC5C,MAAM;MACL,IAAM1B,IAAI,GAAGL,KAAK,CAACK,IAAI;MACvB,IAAI,CAACf,KAAK,CAACe,IAAI,CAAC,EAAE;QAChB,IAAI0B,MAAM,EAAE;UACVD,OAAO,CAACO,QAAQ,CAAChC,IAAI,EAAEF,CAAC,EAAEC,CAAC,CAAC;SAC7B,MAAM;UACL0B,OAAO,CAACQ,UAAU,CAACjC,IAAI,EAAEF,CAAC,EAAEC,CAAC,CAAC;;;;EAItC,CAAC;EAED;EACAT,IAAA,CAAAG,SAAA,CAAA4C,aAAa,GAAb,UAAcZ,OAAO;IACb,IAAAa,EAAA,GAAqD,IAAI,CAAC3C,KAAK;MAA7D4C,SAAS,GAAAD,EAAA,CAAAC,SAAA;MAAEC,OAAO,GAAAF,EAAA,CAAAE,OAAA;MAAEC,aAAa,GAAAH,EAAA,CAAAG,aAAA;MAAEC,WAAW,GAAAJ,EAAA,CAAAI,WAAe;IAErE,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAE;MACnB,IAAIJ,SAAS,GAAG,CAAC,EAAE;QACjB,IAAI,CAACtD,KAAK,CAACwD,aAAa,CAAC,IAAIA,aAAa,KAAK,CAAC,EAAE;UAChDhB,OAAO,CAACmB,WAAW,GAAGJ,OAAO;;QAE/B,IAAI,CAACK,MAAM,CAACpB,OAAO,CAAC;;;IAIxB,IAAI,IAAI,CAACC,MAAM,EAAE,EAAE;MACjB,IAAI,CAACzC,KAAK,CAACyD,WAAW,CAAC,IAAIA,WAAW,KAAK,CAAC,EAAE;QAC5CjB,OAAO,CAACmB,WAAW,GAAGF,WAAW;QACjC,IAAI,CAACI,IAAI,CAACrB,OAAO,CAAC;QAClBA,OAAO,CAACmB,WAAW,GAAGJ,OAAO;OAC9B,MAAM;QACL,IAAI,CAACM,IAAI,CAACrB,OAAO,CAAC;;;IAItB,IAAI,CAACsB,aAAa,CAACtB,OAAO,CAAC;EAC7B,CAAC;EAED;EACAnC,IAAA,CAAAG,SAAA,CAAAqD,IAAI,GAAJ,UAAKrB,OAAO;IACV,IAAI,CAACS,SAAS,CAACT,OAAO,EAAE,IAAI,CAAC;EAC/B,CAAC;EAED;EACAnC,IAAA,CAAAG,SAAA,CAAAoD,MAAM,GAAN,UAAOpB,OAAO;IACZ,IAAI,CAACS,SAAS,CAACT,OAAO,EAAE,KAAK,CAAC;EAChC,CAAC;EACH,OAAAnC,IAAC;AAAD,CAAC,CArJkBN,SAAS;AAuJ5B,eAAeM,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}