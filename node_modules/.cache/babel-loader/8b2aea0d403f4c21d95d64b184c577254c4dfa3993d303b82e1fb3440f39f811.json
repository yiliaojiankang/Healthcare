{"ast":null,"code":"import { __assign } from \"tslib\";\nimport Global from '../../global';\nimport Shape from '../shape';\nimport { isNumber, clone, mix, isArray } from '@antv/util';\n// 圆形 Combo\nShape.registerCombo('circle', {\n  // 自定义节点时的配置\n  options: {\n    size: [Global.defaultCombo.size[0], Global.defaultCombo.size[0]],\n    padding: Math.max.apply(Math, Global.defaultCombo.padding),\n    animate: true,\n    style: {\n      stroke: Global.defaultCombo.style.stroke,\n      fill: Global.defaultCombo.style.fill,\n      lineWidth: Global.defaultCombo.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.comboLabel.style.fill,\n        fontSize: Global.comboLabel.style.fontSize\n      },\n      refX: 0,\n      refY: 0\n    },\n    stateStyles: __assign({}, Global.comboStateStyles),\n    collapsedSubstituteIcon: {\n      show: false,\n      img: 'https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*RsnHRqLfJn4AAAAAAAAAAAAAARQnAQ'\n    }\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'top',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    delete style.height;\n    delete style.width;\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: 'circle-combo',\n      name: 'circle-combo',\n      draggable: true\n    });\n    return keyShape;\n  },\n  /**\n   * 获取 Combo 的样式，供基于该 Combo 自定义时使用\n   * @param {Object} cfg Combo 数据模型\n   * @return {Object} Combo 的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.options.style;\n    var padding = cfg.padding || this.options.padding;\n    if (isArray(padding)) padding = Math.max.apply(Math, padding);\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle, cfg.style);\n    var fixSize = cfg.collapsed && cfg.fixCollapseSize ? cfg.fixCollapseSize : cfg.fixSize;\n    var r;\n    if (fixSize) {\n      r = isNumber(fixSize) ? fixSize / 2 : fixSize[0] / 2;\n    } else {\n      var size = this.getSize(cfg);\n      if (!isNumber(style.r) || isNaN(style.r)) r = size[0] / 2 || Global.defaultCombo.style.r;else r = Math.max(style.r, size[0] / 2) || size[0] / 2;\n    }\n    style.r = r + padding;\n    var styles = __assign({\n      x: 0,\n      y: 0\n    }, style);\n    if (cfg.style) cfg.style.r = r;else {\n      cfg.style = {\n        r: r\n      };\n    }\n    return styles;\n  },\n  update: function update(cfg, item) {\n    var size = this.getSize(cfg);\n    var padding = cfg.padding || this.options.padding;\n    if (isArray(padding)) padding = Math.max.apply(Math, padding);\n    var cfgStyle = clone(cfg.style);\n    var fixSize = cfg.collapsed && cfg.fixCollapseSize ? cfg.fixCollapseSize : cfg.fixSize;\n    var r;\n    if (fixSize) {\n      r = isNumber(fixSize) ? fixSize / 2 : fixSize[0] / 2;\n    } else {\n      r = Math.max(cfgStyle.r, size[0] / 2) || size[0] / 2;\n    }\n    cfgStyle.r = r + padding;\n    var itemCacheSize = item.get('sizeCache');\n    if (itemCacheSize) {\n      itemCacheSize.r = cfgStyle.r;\n    }\n    // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var keyShape = item.get('keyShape');\n    var style = mix({}, keyShape.attr(), strokeStyle, cfgStyle);\n    if (cfg.style) cfg.style.r = r;else {\n      cfg.style = {\n        r: r\n      };\n    }\n    this.updateShape(cfg, item, style, true);\n  }\n}, 'single-combo');","map":{"version":3,"names":["__assign","Global","Shape","isNumber","clone","mix","isArray","registerCombo","options","size","defaultCombo","padding","Math","max","apply","animate","style","stroke","fill","lineWidth","labelCfg","comboLabel","fontSize","refX","refY","stateStyles","comboStateStyles","collapsedSubstituteIcon","show","img","shapeType","labelPosition","drawShape","cfg","group","getShapeStyle","height","width","keyShape","addShape","attrs","className","name","draggable","defaultStyle","strokeStyle","color","fixSize","collapsed","fixCollapseSize","r","getSize","isNaN","styles","x","y","update","item","cfgStyle","itemCacheSize","get","attr","updateShape"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-core/es/element/combos/circle.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport Global from '../../global';\nimport Shape from '../shape';\nimport { isNumber, clone, mix, isArray } from '@antv/util';\n// 圆形 Combo\nShape.registerCombo('circle', {\n  // 自定义节点时的配置\n  options: {\n    size: [Global.defaultCombo.size[0], Global.defaultCombo.size[0]],\n    padding: Math.max.apply(Math, Global.defaultCombo.padding),\n    animate: true,\n    style: {\n      stroke: Global.defaultCombo.style.stroke,\n      fill: Global.defaultCombo.style.fill,\n      lineWidth: Global.defaultCombo.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.comboLabel.style.fill,\n        fontSize: Global.comboLabel.style.fontSize\n      },\n      refX: 0,\n      refY: 0\n    },\n    stateStyles: __assign({}, Global.comboStateStyles),\n    collapsedSubstituteIcon: {\n      show: false,\n      img: 'https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*RsnHRqLfJn4AAAAAAAAAAAAAARQnAQ'\n    }\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'top',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    delete style.height;\n    delete style.width;\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: 'circle-combo',\n      name: 'circle-combo',\n      draggable: true\n    });\n    return keyShape;\n  },\n  /**\n   * 获取 Combo 的样式，供基于该 Combo 自定义时使用\n   * @param {Object} cfg Combo 数据模型\n   * @return {Object} Combo 的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.options.style;\n    var padding = cfg.padding || this.options.padding;\n    if (isArray(padding)) padding = Math.max.apply(Math, padding);\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle, cfg.style);\n    var fixSize = cfg.collapsed && cfg.fixCollapseSize ? cfg.fixCollapseSize : cfg.fixSize;\n    var r;\n    if (fixSize) {\n      r = isNumber(fixSize) ? fixSize / 2 : fixSize[0] / 2;\n    } else {\n      var size = this.getSize(cfg);\n      if (!isNumber(style.r) || isNaN(style.r)) r = size[0] / 2 || Global.defaultCombo.style.r;else r = Math.max(style.r, size[0] / 2) || size[0] / 2;\n    }\n    style.r = r + padding;\n    var styles = __assign({\n      x: 0,\n      y: 0\n    }, style);\n    if (cfg.style) cfg.style.r = r;else {\n      cfg.style = {\n        r: r\n      };\n    }\n    return styles;\n  },\n  update: function update(cfg, item) {\n    var size = this.getSize(cfg);\n    var padding = cfg.padding || this.options.padding;\n    if (isArray(padding)) padding = Math.max.apply(Math, padding);\n    var cfgStyle = clone(cfg.style);\n    var fixSize = cfg.collapsed && cfg.fixCollapseSize ? cfg.fixCollapseSize : cfg.fixSize;\n    var r;\n    if (fixSize) {\n      r = isNumber(fixSize) ? fixSize / 2 : fixSize[0] / 2;\n    } else {\n      r = Math.max(cfgStyle.r, size[0] / 2) || size[0] / 2;\n    }\n    cfgStyle.r = r + padding;\n    var itemCacheSize = item.get('sizeCache');\n    if (itemCacheSize) {\n      itemCacheSize.r = cfgStyle.r;\n    }\n    // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var keyShape = item.get('keyShape');\n    var style = mix({}, keyShape.attr(), strokeStyle, cfgStyle);\n    if (cfg.style) cfg.style.r = r;else {\n      cfg.style = {\n        r: r\n      };\n    }\n    this.updateShape(cfg, item, style, true);\n  }\n}, 'single-combo');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}