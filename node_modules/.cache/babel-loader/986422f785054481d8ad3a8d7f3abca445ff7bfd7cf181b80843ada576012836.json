{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { addEventListener } from '@antv/dom-util';\nimport { each, isNil, wrapBehavior } from '@antv/util';\nimport { AbstractEvent, Util } from '@antv/g6-core';\nvar cloneEvent = Util.cloneEvent,\n  isViewportChanged = Util.isViewportChanged;\nvar EventController = /** @class */function (_super) {\n  __extends(EventController, _super);\n  function EventController(graph) {\n    var _this = _super.call(this, graph) || this;\n    _this.extendEvents = [];\n    _this.dragging = false;\n    _this.mousedown = false;\n    _this.preItem = null;\n    _this.destroy();\n    _this.graph = graph;\n    _this.destroyed = false;\n    _this.initEvents();\n    return _this;\n  }\n  // 初始化 G6 中的事件\n  EventController.prototype.initEvents = function () {\n    var _a = this,\n      graph = _a.graph,\n      _b = _a.extendEvents,\n      extendEvents = _b === void 0 ? [] : _b;\n    var canvas = graph.get('canvas');\n    // canvas.set('draggable', true);\n    var el = canvas.get('el');\n    var canvasHandler = wrapBehavior(this, 'onCanvasEvents');\n    var originHandler = wrapBehavior(this, 'onExtendEvents');\n    var wheelHandler = wrapBehavior(this, 'onWheelEvent');\n    // each(EVENTS, event => {\n    //   canvas.off(event).on(event, canvasHandler);\n    // });\n    canvas.off('*').on('*', canvasHandler);\n    this.canvasHandler = canvasHandler;\n    extendEvents.push(addEventListener(el, 'wheel', wheelHandler));\n    if (typeof window !== 'undefined') {\n      extendEvents.push(addEventListener(window, 'keydown', originHandler));\n      extendEvents.push(addEventListener(window, 'keyup', originHandler));\n      extendEvents.push(addEventListener(window, 'focus', originHandler));\n    }\n    // 数据变更，重置一些状态\n    if (this.resetHandler) graph.off('afterchangedata', this.resetHandler);\n    this.resetHandler = wrapBehavior(this, 'resetStatus');\n    graph.on('afterchangedata', this.resetHandler);\n  };\n  // 获取 shape 的 item 对象\n  EventController.getItemRoot = function (shape) {\n    while (shape && !shape.get('item')) {\n      shape = shape.get('parent');\n    }\n    return shape;\n  };\n  /**\n   * 处理 canvas 事件\n   * @param evt 事件句柄\n   */\n  EventController.prototype.onCanvasEvents = function (evt) {\n    var _this = this;\n    var graph = this.graph;\n    var canvas = graph.get('canvas');\n    var target = evt.target;\n    var eventType = evt.type;\n    switch (eventType) {\n      // solve G's problem: mousemove and mouseup are not triggered with drag and dragend\n      case 'drag':\n        this.onCanvasEvents(Object.assign({}, evt, {\n          type: 'mousemove'\n        }));\n        break;\n      case 'dragend':\n        this.onCanvasEvents(Object.assign({}, evt, {\n          type: 'mouseup'\n        }));\n        break;\n      // solve G's problem: mousedown on other DOMs, mouseup on canvas, click event is triggered unexpectedly\n      case 'mousedown':\n        this.mousedown = true;\n        break;\n      case 'mouseup':\n        // mouseup happend before click, so setTimeout to reset the tag for reference in click event\n        setTimeout(function () {\n          return _this.mousedown = false;\n        });\n        break;\n      case 'click':\n        // the mousedown is not happend, the click is invalid\n        if (!this.mousedown) return;\n        break;\n      default:\n        break;\n    }\n    /**\n     * (clientX, clientY): 相对于页面的坐标；\n     * (canvasX, canvasY): 相对于 <canvas> 左上角的坐标；\n     * (x, y): 相对于整个画布的坐标, 与 model 的 x, y 是同一维度的。\n     */\n    evt.canvasX = evt.x;\n    evt.canvasY = evt.y;\n    var point = {\n      x: evt.canvasX,\n      y: evt.canvasY\n    };\n    var group = graph.get('group');\n    var matrix = group.getMatrix();\n    if (!matrix) {\n      matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    if (isViewportChanged(matrix)) {\n      point = graph.getPointByClient(evt.clientX, evt.clientY);\n    }\n    evt.x = point.x;\n    evt.y = point.y;\n    evt.currentTarget = graph;\n    if (target === canvas) {\n      if (eventType === 'mousemove' || eventType === 'mouseleave') {\n        this.handleMouseMove(evt, 'canvas');\n      }\n      evt.target = canvas;\n      evt.item = null;\n      graph.emit(eventType, evt);\n      graph.emit(\"canvas:\".concat(eventType), evt);\n      return;\n    }\n    var itemShape = EventController.getItemRoot(target);\n    if (!itemShape) {\n      graph.emit(eventType, evt);\n      return;\n    }\n    var item = itemShape.get('item');\n    if (item.destroyed) {\n      return;\n    }\n    var type = item.getType();\n    // 事件target是触发事件的Shape实例，item是触发事件的item实例\n    evt.target = target;\n    evt.item = item;\n    if (evt.canvasX === evt.x && evt.canvasY === evt.y) {\n      var canvasPoint = graph.getCanvasByPoint(evt.x, evt.y);\n      evt.canvasX = canvasPoint.x;\n      evt.canvasY = canvasPoint.y;\n    }\n    if (evt.name && !evt.name.includes(':')) {\n      graph.emit(\"\".concat(type, \":\").concat(eventType), evt); // emit('node:click', evt)\n      graph.emit(eventType, evt); // emit('click', evt);\n    } else if (evt.name) {\n      graph.emit(evt.name, evt); // emit('text-shape:click', evt)\n    }\n\n    if (eventType === 'dragstart') {\n      this.dragging = true;\n    }\n    if (eventType === 'dragend') {\n      this.dragging = false;\n    }\n    if (eventType === 'mousemove') {\n      this.handleMouseMove(evt, type);\n    }\n  };\n  /**\n   * 处理扩展事件\n   * @param evt 事件句柄\n   */\n  EventController.prototype.onExtendEvents = function (evt) {\n    this.graph.emit(evt.type, evt);\n  };\n  /**\n   * 处理滚轮事件\n   * @param evt 事件句柄\n   */\n  EventController.prototype.onWheelEvent = function (evt) {\n    if (isNil(evt.wheelDelta)) {\n      evt.wheelDelta = -evt.detail;\n    }\n    this.graph.emit('wheel', evt);\n  };\n  /**\n   * 处理鼠标移动的事件\n   * @param evt 事件句柄\n   * @param type item 类型\n   */\n  EventController.prototype.handleMouseMove = function (evt, type) {\n    var _a = this,\n      graph = _a.graph,\n      preItem = _a.preItem;\n    var canvas = graph.get('canvas');\n    var item = evt.target === canvas ? null : evt.item;\n    evt = cloneEvent(evt);\n    // 从前一个item直接移动到当前item，触发前一个item的leave事件\n    if (preItem && preItem !== item && !preItem.destroyed) {\n      evt.item = preItem;\n      this.emitCustomEvent(preItem.getType(), 'mouseleave', evt);\n      if (this.dragging) {\n        this.emitCustomEvent(preItem.getType(), 'dragleave', evt);\n      }\n    }\n    // 从一个item或canvas移动到当前item，触发当前item的enter事件\n    if (item && preItem !== item) {\n      evt.item = item;\n      this.emitCustomEvent(type, 'mouseenter', evt);\n      if (this.dragging) {\n        this.emitCustomEvent(type, 'dragenter', evt);\n      }\n    }\n    this.preItem = item;\n  };\n  /**\n   * 在 graph 上面 emit 事件\n   * @param itemType item 类型\n   * @param eventType 事件类型\n   * @param evt 事件句柄\n   */\n  EventController.prototype.emitCustomEvent = function (itemType, eventType, evt) {\n    evt.type = eventType;\n    this.graph.emit(\"\".concat(itemType, \":\").concat(eventType), evt);\n  };\n  EventController.prototype.resetStatus = function () {\n    this.mousedown = false;\n    this.dragging = false;\n    this.preItem = null;\n  };\n  EventController.prototype.destroy = function () {\n    var _a = this,\n      graph = _a.graph,\n      canvasHandler = _a.canvasHandler,\n      extendEvents = _a.extendEvents;\n    var canvas = graph.get('canvas');\n    // each(EVENTS, event => {\n    //   canvas.off(event, canvasHandler);\n    // });\n    canvas.off('*', canvasHandler);\n    each(extendEvents, function (event) {\n      event.remove();\n    });\n    this.resetStatus();\n    this.extendEvents.length = 0;\n    this.canvasHandler = null;\n    this.resetHandler = null;\n    this.destroyed = true;\n  };\n  return EventController;\n}(AbstractEvent);\nexport default EventController;","map":{"version":3,"names":["__extends","addEventListener","each","isNil","wrapBehavior","AbstractEvent","Util","cloneEvent","isViewportChanged","EventController","_super","graph","_this","call","extendEvents","dragging","mousedown","preItem","destroy","destroyed","initEvents","prototype","_a","_b","canvas","get","el","canvasHandler","originHandler","wheelHandler","off","on","push","window","resetHandler","getItemRoot","shape","onCanvasEvents","evt","target","eventType","type","Object","assign","setTimeout","canvasX","x","canvasY","y","point","group","matrix","getMatrix","getPointByClient","clientX","clientY","currentTarget","handleMouseMove","item","emit","concat","itemShape","getType","canvasPoint","getCanvasByPoint","name","includes","onExtendEvents","onWheelEvent","wheelDelta","detail","emitCustomEvent","itemType","resetStatus","event","remove","length"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-pc/es/graph/controller/event.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { addEventListener } from '@antv/dom-util';\nimport { each, isNil, wrapBehavior } from '@antv/util';\nimport { AbstractEvent, Util } from '@antv/g6-core';\nvar cloneEvent = Util.cloneEvent,\n  isViewportChanged = Util.isViewportChanged;\nvar EventController = /** @class */function (_super) {\n  __extends(EventController, _super);\n  function EventController(graph) {\n    var _this = _super.call(this, graph) || this;\n    _this.extendEvents = [];\n    _this.dragging = false;\n    _this.mousedown = false;\n    _this.preItem = null;\n    _this.destroy();\n    _this.graph = graph;\n    _this.destroyed = false;\n    _this.initEvents();\n    return _this;\n  }\n  // 初始化 G6 中的事件\n  EventController.prototype.initEvents = function () {\n    var _a = this,\n      graph = _a.graph,\n      _b = _a.extendEvents,\n      extendEvents = _b === void 0 ? [] : _b;\n    var canvas = graph.get('canvas');\n    // canvas.set('draggable', true);\n    var el = canvas.get('el');\n    var canvasHandler = wrapBehavior(this, 'onCanvasEvents');\n    var originHandler = wrapBehavior(this, 'onExtendEvents');\n    var wheelHandler = wrapBehavior(this, 'onWheelEvent');\n    // each(EVENTS, event => {\n    //   canvas.off(event).on(event, canvasHandler);\n    // });\n    canvas.off('*').on('*', canvasHandler);\n    this.canvasHandler = canvasHandler;\n    extendEvents.push(addEventListener(el, 'wheel', wheelHandler));\n    if (typeof window !== 'undefined') {\n      extendEvents.push(addEventListener(window, 'keydown', originHandler));\n      extendEvents.push(addEventListener(window, 'keyup', originHandler));\n      extendEvents.push(addEventListener(window, 'focus', originHandler));\n    }\n    // 数据变更，重置一些状态\n    if (this.resetHandler) graph.off('afterchangedata', this.resetHandler);\n    this.resetHandler = wrapBehavior(this, 'resetStatus');\n    graph.on('afterchangedata', this.resetHandler);\n  };\n  // 获取 shape 的 item 对象\n  EventController.getItemRoot = function (shape) {\n    while (shape && !shape.get('item')) {\n      shape = shape.get('parent');\n    }\n    return shape;\n  };\n  /**\n   * 处理 canvas 事件\n   * @param evt 事件句柄\n   */\n  EventController.prototype.onCanvasEvents = function (evt) {\n    var _this = this;\n    var graph = this.graph;\n    var canvas = graph.get('canvas');\n    var target = evt.target;\n    var eventType = evt.type;\n    switch (eventType) {\n      // solve G's problem: mousemove and mouseup are not triggered with drag and dragend\n      case 'drag':\n        this.onCanvasEvents(Object.assign({}, evt, {\n          type: 'mousemove'\n        }));\n        break;\n      case 'dragend':\n        this.onCanvasEvents(Object.assign({}, evt, {\n          type: 'mouseup'\n        }));\n        break;\n      // solve G's problem: mousedown on other DOMs, mouseup on canvas, click event is triggered unexpectedly\n      case 'mousedown':\n        this.mousedown = true;\n        break;\n      case 'mouseup':\n        // mouseup happend before click, so setTimeout to reset the tag for reference in click event\n        setTimeout(function () {\n          return _this.mousedown = false;\n        });\n        break;\n      case 'click':\n        // the mousedown is not happend, the click is invalid\n        if (!this.mousedown) return;\n        break;\n      default:\n        break;\n    }\n    /**\n     * (clientX, clientY): 相对于页面的坐标；\n     * (canvasX, canvasY): 相对于 <canvas> 左上角的坐标；\n     * (x, y): 相对于整个画布的坐标, 与 model 的 x, y 是同一维度的。\n     */\n    evt.canvasX = evt.x;\n    evt.canvasY = evt.y;\n    var point = {\n      x: evt.canvasX,\n      y: evt.canvasY\n    };\n    var group = graph.get('group');\n    var matrix = group.getMatrix();\n    if (!matrix) {\n      matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    if (isViewportChanged(matrix)) {\n      point = graph.getPointByClient(evt.clientX, evt.clientY);\n    }\n    evt.x = point.x;\n    evt.y = point.y;\n    evt.currentTarget = graph;\n    if (target === canvas) {\n      if (eventType === 'mousemove' || eventType === 'mouseleave') {\n        this.handleMouseMove(evt, 'canvas');\n      }\n      evt.target = canvas;\n      evt.item = null;\n      graph.emit(eventType, evt);\n      graph.emit(\"canvas:\".concat(eventType), evt);\n      return;\n    }\n    var itemShape = EventController.getItemRoot(target);\n    if (!itemShape) {\n      graph.emit(eventType, evt);\n      return;\n    }\n    var item = itemShape.get('item');\n    if (item.destroyed) {\n      return;\n    }\n    var type = item.getType();\n    // 事件target是触发事件的Shape实例，item是触发事件的item实例\n    evt.target = target;\n    evt.item = item;\n    if (evt.canvasX === evt.x && evt.canvasY === evt.y) {\n      var canvasPoint = graph.getCanvasByPoint(evt.x, evt.y);\n      evt.canvasX = canvasPoint.x;\n      evt.canvasY = canvasPoint.y;\n    }\n    if (evt.name && !evt.name.includes(':')) {\n      graph.emit(\"\".concat(type, \":\").concat(eventType), evt); // emit('node:click', evt)\n      graph.emit(eventType, evt); // emit('click', evt);\n    } else if (evt.name) {\n      graph.emit(evt.name, evt); // emit('text-shape:click', evt)\n    }\n\n    if (eventType === 'dragstart') {\n      this.dragging = true;\n    }\n    if (eventType === 'dragend') {\n      this.dragging = false;\n    }\n    if (eventType === 'mousemove') {\n      this.handleMouseMove(evt, type);\n    }\n  };\n  /**\n   * 处理扩展事件\n   * @param evt 事件句柄\n   */\n  EventController.prototype.onExtendEvents = function (evt) {\n    this.graph.emit(evt.type, evt);\n  };\n  /**\n   * 处理滚轮事件\n   * @param evt 事件句柄\n   */\n  EventController.prototype.onWheelEvent = function (evt) {\n    if (isNil(evt.wheelDelta)) {\n      evt.wheelDelta = -evt.detail;\n    }\n    this.graph.emit('wheel', evt);\n  };\n  /**\n   * 处理鼠标移动的事件\n   * @param evt 事件句柄\n   * @param type item 类型\n   */\n  EventController.prototype.handleMouseMove = function (evt, type) {\n    var _a = this,\n      graph = _a.graph,\n      preItem = _a.preItem;\n    var canvas = graph.get('canvas');\n    var item = evt.target === canvas ? null : evt.item;\n    evt = cloneEvent(evt);\n    // 从前一个item直接移动到当前item，触发前一个item的leave事件\n    if (preItem && preItem !== item && !preItem.destroyed) {\n      evt.item = preItem;\n      this.emitCustomEvent(preItem.getType(), 'mouseleave', evt);\n      if (this.dragging) {\n        this.emitCustomEvent(preItem.getType(), 'dragleave', evt);\n      }\n    }\n    // 从一个item或canvas移动到当前item，触发当前item的enter事件\n    if (item && preItem !== item) {\n      evt.item = item;\n      this.emitCustomEvent(type, 'mouseenter', evt);\n      if (this.dragging) {\n        this.emitCustomEvent(type, 'dragenter', evt);\n      }\n    }\n    this.preItem = item;\n  };\n  /**\n   * 在 graph 上面 emit 事件\n   * @param itemType item 类型\n   * @param eventType 事件类型\n   * @param evt 事件句柄\n   */\n  EventController.prototype.emitCustomEvent = function (itemType, eventType, evt) {\n    evt.type = eventType;\n    this.graph.emit(\"\".concat(itemType, \":\").concat(eventType), evt);\n  };\n  EventController.prototype.resetStatus = function () {\n    this.mousedown = false;\n    this.dragging = false;\n    this.preItem = null;\n  };\n  EventController.prototype.destroy = function () {\n    var _a = this,\n      graph = _a.graph,\n      canvasHandler = _a.canvasHandler,\n      extendEvents = _a.extendEvents;\n    var canvas = graph.get('canvas');\n    // each(EVENTS, event => {\n    //   canvas.off(event, canvasHandler);\n    // });\n    canvas.off('*', canvasHandler);\n    each(extendEvents, function (event) {\n      event.remove();\n    });\n    this.resetStatus();\n    this.extendEvents.length = 0;\n    this.canvasHandler = null;\n    this.resetHandler = null;\n    this.destroyed = true;\n  };\n  return EventController;\n}(AbstractEvent);\nexport default EventController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}