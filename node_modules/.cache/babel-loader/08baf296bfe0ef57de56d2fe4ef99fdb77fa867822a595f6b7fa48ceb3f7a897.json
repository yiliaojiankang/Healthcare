{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar Mirror = /** @class */function (_super) {\n  __extends(Mirror, _super);\n  function Mirror() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Mirror.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'mirror',\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this),\n      transpose: false\n    });\n  };\n  Mirror.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  Mirror.prototype.beforeEachView = function (view, facet) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  };\n  Mirror.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Mirror.prototype.generateFacets = function (data) {\n    var _this = this;\n    var _a = __read(this.cfg.fields, 1),\n      f = _a[0];\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    var columnField;\n    var rowField;\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Mirror.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Mirror.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // do nothing\n    return option;\n  };\n  Mirror.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      if (_this.cfg.transpose) {\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n        view.annotation().text(config);\n      } else {\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.title);\n        view.annotation().text(config);\n      }\n    });\n  };\n  return Mirror;\n}(Facet);\nexport default Mirror;","map":{"version":3,"names":["deepMix","each","filter","get","DIRECTION","getFactTitleConfig","Facet","Mirror","_super","__extends","prototype","getDefaultCfg","call","type","showTitle","title","getDefaultTitleCfg","transpose","render","cfg","renderTitle","beforeEachView","view","facet","columnIndex","coordinate","reflect","rowIndex","afterEachView","processAxis","generateFacets","data","_this","_a","__read","fields","f","rst","columnValuesLength","rowValuesLength","columnValues","rowValues","columnField","rowField","getFieldValues","slice","length","forEach","xVal","xIndex","yVal","yIndex","conditions","field","value","values","facetData","getFacetDataFilter","region","getRegion","columnValue","rowValue","push","getXAxisOption","x","axes","option","__assign","label","getYAxisOption","y","facets","facetIndex","formatter","config","position","content","TOP","annotation","text","RIGHT"],"sources":["../../src/facet/mirror.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MirrorCfg, MirrorData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Mirror extends Facet<MirrorCfg, MirrorData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'mirror',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n      transpose: false,\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected beforeEachView(view: View, facet: MirrorData) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  }\n\n  protected afterEachView(view: View, facet: MirrorData) {\n    this.processAxis(view, facet);\n  }\n\n  protected generateFacets(data: Datum[]): MirrorData[] {\n    const [f] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    let columnField;\n    let rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: MirrorData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // do nothing\n    return option;\n  }\n\n  private renderTitle() {\n    each(this.facets, (facet: MirrorData, facetIndex: number) => {\n      const { columnValue, rowValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      if (this.cfg.transpose) {\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      } else {\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}