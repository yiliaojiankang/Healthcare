{"ast":null,"code":"import { deepAssign } from '../../utils';\nimport { drawBackground, getPixelRatio, getSymbolsPosition, getUnitPatternSize, initCanvas, transformMatrix } from './util';\n/**\n * dotPattern的默认配置\n */\nexport var defaultDotPatternCfg = {\n  size: 6,\n  padding: 2,\n  backgroundColor: 'transparent',\n  opacity: 1,\n  rotation: 0,\n  fill: '#fff',\n  fillOpacity: 0.5,\n  stroke: 'transparent',\n  lineWidth: 0,\n  isStagger: true\n};\n/**\n * 绘制圆点\n *\n * @param context\n * @param cfg\n * @param x 圆点中心坐标x\n * @param y 圆点中心坐标y\n */\nexport function drawDot(context, cfg, x, y) {\n  var size = cfg.size,\n    fill = cfg.fill,\n    lineWidth = cfg.lineWidth,\n    stroke = cfg.stroke,\n    fillOpacity = cfg.fillOpacity;\n  context.beginPath();\n  context.globalAlpha = fillOpacity;\n  context.fillStyle = fill;\n  context.strokeStyle = stroke;\n  context.lineWidth = lineWidth;\n  context.arc(x, y, size / 2, 0, 2 * Math.PI, false);\n  context.fill();\n  if (lineWidth) {\n    context.stroke();\n  }\n  context.closePath();\n}\n/**\n * 创建 dot pattern，返回 HTMLCanvasElement\n *\n * @param cfg\n * @returns HTMLCanvasElement\n */\nexport function createDotPattern(cfg) {\n  var dotCfg = deepAssign({}, defaultDotPatternCfg, cfg);\n  var size = dotCfg.size,\n    padding = dotCfg.padding,\n    isStagger = dotCfg.isStagger,\n    rotation = dotCfg.rotation;\n  // 计算 画布大小，dots的位置\n  var unitSize = getUnitPatternSize(size, padding, isStagger);\n  var dots = getSymbolsPosition(unitSize, isStagger);\n  // 初始化 patternCanvas\n  var canvas = initCanvas(unitSize, unitSize);\n  var ctx = canvas.getContext('2d');\n  // 绘制 background，dots\n  drawBackground(ctx, dotCfg, unitSize);\n  for (var _i = 0, dots_1 = dots; _i < dots_1.length; _i++) {\n    var _a = dots_1[_i],\n      x = _a[0],\n      y = _a[1];\n    drawDot(ctx, dotCfg, x, y);\n  }\n  var pattern = ctx.createPattern(canvas, 'repeat');\n  if (pattern) {\n    var dpr = getPixelRatio();\n    var matrix = transformMatrix(dpr, rotation);\n    pattern.setTransform(matrix);\n  }\n  return pattern;\n}","map":{"version":3,"names":["deepAssign","drawBackground","getPixelRatio","getSymbolsPosition","getUnitPatternSize","initCanvas","transformMatrix","defaultDotPatternCfg","size","padding","backgroundColor","opacity","rotation","fill","fillOpacity","stroke","lineWidth","isStagger","drawDot","context","cfg","x","y","beginPath","globalAlpha","fillStyle","strokeStyle","arc","Math","PI","closePath","createDotPattern","dotCfg","unitSize","dots","canvas","ctx","getContext","_i","dots_1","length","_a","pattern","createPattern","dpr","matrix","setTransform"],"sources":["../../../src/utils/pattern/dot.ts"],"sourcesContent":["import { DotPatternCfg } from '../../types/pattern';\nimport { deepAssign } from '../../utils';\nimport {\n  drawBackground,\n  getPixelRatio,\n  getSymbolsPosition,\n  getUnitPatternSize,\n  initCanvas,\n  transformMatrix,\n} from './util';\n\n/**\n * dotPattern的默认配置\n */\nexport const defaultDotPatternCfg = {\n  size: 6,\n  padding: 2,\n  backgroundColor: 'transparent',\n  opacity: 1,\n  rotation: 0,\n  fill: '#fff',\n  fillOpacity: 0.5,\n  stroke: 'transparent',\n  lineWidth: 0,\n  isStagger: true,\n};\n\n/**\n * 绘制圆点\n *\n * @param context\n * @param cfg\n * @param x 圆点中心坐标x\n * @param y 圆点中心坐标y\n */\nexport function drawDot(context: CanvasRenderingContext2D, cfg: DotPatternCfg, x: number, y: number) {\n  const { size, fill, lineWidth, stroke, fillOpacity } = cfg;\n\n  context.beginPath();\n  context.globalAlpha = fillOpacity;\n  context.fillStyle = fill;\n  context.strokeStyle = stroke;\n  context.lineWidth = lineWidth;\n  context.arc(x, y, size / 2, 0, 2 * Math.PI, false);\n  context.fill();\n  if (lineWidth) {\n    context.stroke();\n  }\n  context.closePath();\n}\n\n/**\n * 创建 dot pattern，返回 HTMLCanvasElement\n *\n * @param cfg\n * @returns HTMLCanvasElement\n */\nexport function createDotPattern(cfg?: DotPatternCfg): CanvasPattern {\n  const dotCfg = deepAssign({}, defaultDotPatternCfg, cfg);\n\n  const { size, padding, isStagger, rotation } = dotCfg;\n\n  // 计算 画布大小，dots的位置\n  const unitSize = getUnitPatternSize(size, padding, isStagger);\n  const dots = getSymbolsPosition(unitSize, isStagger);\n\n  // 初始化 patternCanvas\n  const canvas = initCanvas(unitSize, unitSize);\n  const ctx = canvas.getContext('2d');\n\n  // 绘制 background，dots\n  drawBackground(ctx, dotCfg, unitSize);\n  for (const [x, y] of dots) {\n    drawDot(ctx, dotCfg, x, y);\n  }\n\n  const pattern = ctx.createPattern(canvas, 'repeat');\n\n  if (pattern) {\n    const dpr = getPixelRatio();\n    const matrix = transformMatrix(dpr, rotation);\n    pattern.setTransform(matrix);\n  }\n\n  return pattern;\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,aAAa;AACxC,SACEC,cAAc,EACdC,aAAa,EACbC,kBAAkB,EAClBC,kBAAkB,EAClBC,UAAU,EACVC,eAAe,QACV,QAAQ;AAEf;;;AAGA,OAAO,IAAMC,oBAAoB,GAAG;EAClCC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,CAAC;EACVC,eAAe,EAAE,aAAa;EAC9BC,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE,CAAC;EACXC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,GAAG;EAChBC,MAAM,EAAE,aAAa;EACrBC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE;CACZ;AAED;;;;;;;;AAQA,OAAM,SAAUC,OAAOA,CAACC,OAAiC,EAAEC,GAAkB,EAAEC,CAAS,EAAEC,CAAS;EACzF,IAAAd,IAAI,GAA2CY,GAAG,CAAAZ,IAA9C;IAAEK,IAAI,GAAqCO,GAAG,CAAAP,IAAxC;IAAEG,SAAS,GAA0BI,GAAG,CAAAJ,SAA7B;IAAED,MAAM,GAAkBK,GAAG,CAAAL,MAArB;IAAED,WAAW,GAAKM,GAAG,CAAAN,WAAR;EAElDK,OAAO,CAACI,SAAS,EAAE;EACnBJ,OAAO,CAACK,WAAW,GAAGV,WAAW;EACjCK,OAAO,CAACM,SAAS,GAAGZ,IAAI;EACxBM,OAAO,CAACO,WAAW,GAAGX,MAAM;EAC5BI,OAAO,CAACH,SAAS,GAAGA,SAAS;EAC7BG,OAAO,CAACQ,GAAG,CAACN,CAAC,EAAEC,CAAC,EAAEd,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGoB,IAAI,CAACC,EAAE,EAAE,KAAK,CAAC;EAClDV,OAAO,CAACN,IAAI,EAAE;EACd,IAAIG,SAAS,EAAE;IACbG,OAAO,CAACJ,MAAM,EAAE;;EAElBI,OAAO,CAACW,SAAS,EAAE;AACrB;AAEA;;;;;;AAMA,OAAM,SAAUC,gBAAgBA,CAACX,GAAmB;EAClD,IAAMY,MAAM,GAAGhC,UAAU,CAAC,EAAE,EAAEO,oBAAoB,EAAEa,GAAG,CAAC;EAEhD,IAAAZ,IAAI,GAAmCwB,MAAM,CAAAxB,IAAzC;IAAEC,OAAO,GAA0BuB,MAAM,CAAAvB,OAAhC;IAAEQ,SAAS,GAAee,MAAM,CAAAf,SAArB;IAAEL,QAAQ,GAAKoB,MAAM,CAAApB,QAAX;EAE1C;EACA,IAAMqB,QAAQ,GAAG7B,kBAAkB,CAACI,IAAI,EAAEC,OAAO,EAAEQ,SAAS,CAAC;EAC7D,IAAMiB,IAAI,GAAG/B,kBAAkB,CAAC8B,QAAQ,EAAEhB,SAAS,CAAC;EAEpD;EACA,IAAMkB,MAAM,GAAG9B,UAAU,CAAC4B,QAAQ,EAAEA,QAAQ,CAAC;EAC7C,IAAMG,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;EAEnC;EACApC,cAAc,CAACmC,GAAG,EAAEJ,MAAM,EAAEC,QAAQ,CAAC;EACrC,KAAqB,IAAAK,EAAA,IAAI,EAAJC,MAAA,GAAAL,IAAI,EAAJI,EAAA,GAAAC,MAAA,CAAAC,MAAI,EAAJF,EAAA,EAAI,EAAE;IAAhB,IAAAG,EAAA,GAAAF,MAAA,CAAAD,EAAA,CAAM;MAALjB,CAAC,GAAAoB,EAAA;MAAEnB,CAAC,GAAAmB,EAAA;IACdvB,OAAO,CAACkB,GAAG,EAAEJ,MAAM,EAAEX,CAAC,EAAEC,CAAC,CAAC;;EAG5B,IAAMoB,OAAO,GAAGN,GAAG,CAACO,aAAa,CAACR,MAAM,EAAE,QAAQ,CAAC;EAEnD,IAAIO,OAAO,EAAE;IACX,IAAME,GAAG,GAAG1C,aAAa,EAAE;IAC3B,IAAM2C,MAAM,GAAGvC,eAAe,CAACsC,GAAG,EAAEhC,QAAQ,CAAC;IAC7C8B,OAAO,CAACI,YAAY,CAACD,MAAM,CAAC;;EAG9B,OAAOH,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}