{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n  k1 /= scale;\n  k2 /= scale;\n  if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n  else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n  var clipped = [];\n  for (var i = 0; i < features.length; i++) {\n    var feature = features[i];\n    var geometry = feature.geometry;\n    var type = feature.type;\n    var min = axis === 0 ? feature.minX : feature.minY;\n    var max = axis === 0 ? feature.maxX : feature.maxY;\n    if (min >= k1 && max < k2) {\n      // trivial accept\n      clipped.push(feature);\n      continue;\n    } else if (max < k1 || min >= k2) {\n      // trivial reject\n      continue;\n    }\n    var newGeometry = [];\n    if (type === 'Point' || type === 'MultiPoint') {\n      clipPoints(geometry, newGeometry, k1, k2, axis);\n    } else if (type === 'LineString') {\n      clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n    } else if (type === 'MultiLineString') {\n      clipLines(geometry, newGeometry, k1, k2, axis, false);\n    } else if (type === 'Polygon') {\n      clipLines(geometry, newGeometry, k1, k2, axis, true);\n    } else if (type === 'MultiPolygon') {\n      for (var j = 0; j < geometry.length; j++) {\n        var polygon = [];\n        clipLines(geometry[j], polygon, k1, k2, axis, true);\n        if (polygon.length) {\n          newGeometry.push(polygon);\n        }\n      }\n    }\n    if (newGeometry.length) {\n      if (options.lineMetrics && type === 'LineString') {\n        for (j = 0; j < newGeometry.length; j++) {\n          clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n        }\n        continue;\n      }\n      if (type === 'LineString' || type === 'MultiLineString') {\n        if (newGeometry.length === 1) {\n          type = 'LineString';\n          newGeometry = newGeometry[0];\n        } else {\n          type = 'MultiLineString';\n        }\n      }\n      if (type === 'Point' || type === 'MultiPoint') {\n        type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n      }\n      clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n  }\n  return clipped.length ? clipped : null;\n}\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n  for (var i = 0; i < geom.length; i += 3) {\n    var a = geom[i + axis];\n    if (a >= k1 && a <= k2) {\n      newGeom.push(geom[i]);\n      newGeom.push(geom[i + 1]);\n      newGeom.push(geom[i + 2]);\n    }\n  }\n}\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n  var slice = newSlice(geom);\n  var intersect = axis === 0 ? intersectX : intersectY;\n  var len = geom.start;\n  var segLen, t;\n  for (var i = 0; i < geom.length - 3; i += 3) {\n    var ax = geom[i];\n    var ay = geom[i + 1];\n    var az = geom[i + 2];\n    var bx = geom[i + 3];\n    var by = geom[i + 4];\n    var a = axis === 0 ? ax : ay;\n    var b = axis === 0 ? bx : by;\n    var exited = false;\n    if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n    if (a < k1) {\n      // ---|-->  | (line enters the clip region from the left)\n      if (b > k1) {\n        t = intersect(slice, ax, ay, bx, by, k1);\n        if (trackMetrics) slice.start = len + segLen * t;\n      }\n    } else if (a > k2) {\n      // |  <--|--- (line enters the clip region from the right)\n      if (b < k2) {\n        t = intersect(slice, ax, ay, bx, by, k2);\n        if (trackMetrics) slice.start = len + segLen * t;\n      }\n    } else {\n      addPoint(slice, ax, ay, az);\n    }\n    if (b < k1 && a >= k1) {\n      // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n      t = intersect(slice, ax, ay, bx, by, k1);\n      exited = true;\n    }\n    if (b > k2 && a <= k2) {\n      // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n      t = intersect(slice, ax, ay, bx, by, k2);\n      exited = true;\n    }\n    if (!isPolygon && exited) {\n      if (trackMetrics) slice.end = len + segLen * t;\n      newGeom.push(slice);\n      slice = newSlice(geom);\n    }\n    if (trackMetrics) len += segLen;\n  }\n\n  // add the last point\n  var last = geom.length - 3;\n  ax = geom[last];\n  ay = geom[last + 1];\n  az = geom[last + 2];\n  a = axis === 0 ? ax : ay;\n  if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n  // close the polygon if its endpoints are not the same after clipping\n  last = slice.length - 3;\n  if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n    addPoint(slice, slice[0], slice[1], slice[2]);\n  }\n\n  // add the final slice\n  if (slice.length) {\n    newGeom.push(slice);\n  }\n}\nfunction newSlice(line) {\n  var slice = [];\n  slice.size = line.size;\n  slice.start = line.start;\n  slice.end = line.end;\n  return slice;\n}\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n  for (var i = 0; i < geom.length; i++) {\n    clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n  }\n}\nfunction addPoint(out, x, y, z) {\n  out.push(x);\n  out.push(y);\n  out.push(z);\n}\nfunction intersectX(out, ax, ay, bx, by, x) {\n  var t = (x - ax) / (bx - ax);\n  out.push(x);\n  out.push(ay + (by - ay) * t);\n  out.push(1);\n  return t;\n}\nfunction intersectY(out, ax, ay, bx, by, y) {\n  var t = (y - ay) / (by - ay);\n  out.push(ax + (bx - ax) * t);\n  out.push(y);\n  out.push(1);\n  return t;\n}","map":{"version":3,"names":["createFeature","clip","features","scale","k1","k2","axis","minAll","maxAll","options","clipped","i","length","feature","geometry","type","min","minX","minY","max","maxX","maxY","push","newGeometry","clipPoints","clipLine","lineMetrics","clipLines","j","polygon","id","tags","geom","newGeom","a","isPolygon","trackMetrics","slice","newSlice","intersect","intersectX","intersectY","len","start","segLen","t","ax","ay","az","bx","by","b","exited","Math","sqrt","pow","addPoint","end","last","line","size","out","x","y","z"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/geojson-vt/src/clip.js"],"sourcesContent":["\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}