{"ast":null,"code":"/**\n * Rounds the values of a `PathArray` instance to\n * a specified amount of decimals and returns it.\n */\nexport function roundPath(path, round) {\n  if (round === 'off') return [].concat(path);\n  // to round values to the power\n  // the `round` value must be integer\n  var pow = typeof round === 'number' && round >= 1 ? Math.pow(10, round) : 1;\n  return path.map(function (pi) {\n    var values = pi.slice(1).map(Number).map(function (n) {\n      return round ? Math.round(n * pow) / pow : Math.round(n);\n    });\n    // @ts-ignore\n    return [pi[0]].concat(values);\n  });\n}","map":{"version":3,"names":["roundPath","path","round","concat","pow","Math","map","pi","values","slice","Number","n"],"sources":["src/path/process/round-path.ts"],"sourcesContent":[null],"mappings":"AAEA;;;;AAIA,OAAM,SAAUA,SAASA,CAACC,IAAe,EAAEC,KAAqB;EAC9D,IAAIA,KAAK,KAAK,KAAK,EAAE,OAAO,EAAE,CAACC,MAAM,CAACF,IAAI,CAAc;EAExD;EACA;EACA,IAAMG,GAAG,GAAG,OAAOF,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI,CAAC,GAAGG,IAAA,CAAAD,GAAA,GAAE,EAAIF,KAAK,IAAG,CAAC;EAErE,OAAOD,IAAI,CAACK,GAAG,CAAC,UAACC,EAAE;IACjB,IAAMC,MAAM,GAAGD,EAAE,CACdE,KAAK,CAAC,CAAC,CAAC,CACRH,GAAG,CAACI,MAAM,CAAC,CACXJ,GAAG,CAAC,UAACK,CAAC;MAAK,OAACT,KAAK,GAAGG,IAAI,CAACH,KAAK,CAACS,CAAC,GAAGP,GAAG,CAAC,GAAGA,GAAG,GAAGC,IAAI,CAACH,KAAK,CAACS,CAAC,CAAC;IAAlD,CAAmD,CAAC;IAClE;IACA,OAAO,CAACJ,EAAE,CAAC,CAAC,CAAC,CAAC,CAACJ,MAAM,CAACK,MAAM,CAAC;EAC/B,CAAC,CAAc;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}