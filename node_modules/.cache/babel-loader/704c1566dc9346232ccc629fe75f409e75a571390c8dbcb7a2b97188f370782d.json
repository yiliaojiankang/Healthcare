{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { get } from '@antv/util';\nimport { animation, annotation, interaction as baseInteraction, legend, pattern, scale, theme } from '../../adaptor/common';\nimport { point } from '../../adaptor/geometries/point';\nimport { deepAssign, flow } from '../../utils';\nimport { getAdjustAppendPadding, resolveAllPadding } from '../../utils/padding';\nimport { RAW_FIELDS } from './constant';\nimport { resolvePaddingForCircle, transformData } from './utils';\n/**\n * 获取默认 option\n * @param params\n */\nfunction defaultOptions(params) {\n  var chart = params.chart;\n  var diameter = Math.min(chart.viewBBox.width, chart.viewBBox.height);\n  return deepAssign({\n    options: {\n      size: function (_a) {\n        var r = _a.r;\n        return r * diameter;\n      } // 当autofit：false时，默认给固定半径\n    }\n  }, params);\n}\n/**\n * padding 配置\n * @param params\n */\nfunction padding(params) {\n  var options = params.options,\n    chart = params.chart;\n  // 通过改变 padding，修改 coordinate 的绘制区域\n  var containerSize = chart.viewBBox;\n  var padding = options.padding,\n    appendPadding = options.appendPadding,\n    drilldown = options.drilldown;\n  var tempAppendPadding = appendPadding;\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    var appendPaddingByDrilldown = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n    tempAppendPadding = resolveAllPadding([appendPaddingByDrilldown, appendPadding]);\n  }\n  var finalPadding = resolvePaddingForCircle(padding, tempAppendPadding, containerSize).finalPadding;\n  chart.padding = finalPadding;\n  chart.appendPadding = 0;\n  return params;\n}\n/**\n * 字段\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var padding = chart.padding,\n    appendPadding = chart.appendPadding;\n  var color = options.color,\n    colorField = options.colorField,\n    pointStyle = options.pointStyle,\n    hierarchyConfig = options.hierarchyConfig,\n    sizeField = options.sizeField,\n    _a = options.rawFields,\n    rawFields = _a === void 0 ? [] : _a,\n    drilldown = options.drilldown;\n  var data = transformData({\n    data: options.data,\n    hierarchyConfig: hierarchyConfig,\n    enableDrillDown: drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled,\n    rawFields: rawFields\n  });\n  chart.data(data);\n  var containerSize = chart.viewBBox;\n  var finalSize = resolvePaddingForCircle(padding, appendPadding, containerSize).finalSize;\n  // 有sizeField的时候，例如 value ，可以选择映射 size 函数，自己计算出映射的半径\n  var circleSize = function (_a) {\n    var r = _a.r;\n    return r * finalSize;\n  }; // 默认配置\n  if (sizeField) {\n    circleSize = function (d) {\n      return d[sizeField] * finalSize;\n    }; // 目前只有 r 通道映射效果会正常\n  }\n  // geometry\n  point(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      sizeField: sizeField,\n      rawFields: __spreadArray(__spreadArray([], RAW_FIELDS, true), rawFields, true),\n      point: {\n        color: color,\n        style: pointStyle,\n        shape: 'circle',\n        size: circleSize\n      }\n    }\n  }));\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  return flow(scale({}, {\n    // 必须强制为 nice\n    x: {\n      min: 0,\n      max: 1,\n      minLimit: 0,\n      maxLimit: 1,\n      nice: true\n    },\n    y: {\n      min: 0,\n      max: 1,\n      minLimit: 0,\n      maxLimit: 1,\n      nice: true\n    }\n  }))(params);\n}\n/**\n * tooltip 配置\n * @param params\n */\nfunction tooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip;\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign({}, {\n        customItems: function (items) {\n          return items.map(function (item) {\n            var scales = get(chart.getOptions(), 'scales');\n            var nameFormatter = get(scales, ['name', 'formatter'], function (v) {\n              return v;\n            });\n            var valueFormatter = get(scales, ['value', 'formatter'], function (v) {\n              return v;\n            });\n            return __assign(__assign({}, item), {\n              name: nameFormatter(item.data.name),\n              value: valueFormatter(item.data.value)\n            });\n          });\n        }\n      }, tooltipOptions);\n    }\n    chart.tooltip(tooltipOptions);\n  }\n  return params;\n}\n/**\n * 坐标轴, 默认关闭\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n    _a = options.interactions,\n    interactions = _a === void 0 ? [] : _a;\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    return deepAssign({}, options, {\n      interactions: __spreadArray(__spreadArray([], interactions, true), [{\n        type: 'drill-down',\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData,\n          enableDrillDown: true\n        }\n      }], false)\n    });\n  }\n  return options;\n}\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  baseInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  });\n  return params;\n}\n/**\n * 矩形树图\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(pattern('pointStyle'), defaultOptions, padding, theme, meta, geometry, axis, legend, tooltip, interaction, animation, annotation())(params);\n}","map":{"version":3,"names":["get","animation","annotation","interaction","baseInteraction","legend","pattern","scale","theme","point","deepAssign","flow","getAdjustAppendPadding","resolveAllPadding","RAW_FIELDS","resolvePaddingForCircle","transformData","defaultOptions","params","chart","diameter","Math","min","viewBBox","width","height","options","size","_a","r","padding","containerSize","appendPadding","drilldown","tempAppendPadding","enabled","appendPaddingByDrilldown","finalPadding","geometry","color","colorField","pointStyle","hierarchyConfig","sizeField","rawFields","data","enableDrillDown","finalSize","circleSize","d","xField","yField","seriesField","__spreadArray","style","shape","meta","x","max","minLimit","maxLimit","nice","y","tooltip","tooltipOptions","customItems","items","map","item","scales","getOptions","nameFormatter","v","valueFormatter","__assign","name","value","axis","adaptorInteraction","interactions","type","cfg","drillDownConfig","adaptor"],"sources":["../../../src/plots/circle-packing/adaptor.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { get } from '@antv/util';\nimport {\n  animation,\n  annotation,\n  interaction as baseInteraction,\n  legend,\n  pattern,\n  scale,\n  theme,\n} from '../../adaptor/common';\nimport { point } from '../../adaptor/geometries/point';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, flow } from '../../utils';\nimport { getAdjustAppendPadding, resolveAllPadding } from '../../utils/padding';\nimport { RAW_FIELDS } from './constant';\nimport { CirclePackingOptions } from './types';\nimport { resolvePaddingForCircle, transformData } from './utils';\n\n/**\n * 获取默认 option\n * @param params\n */\nfunction defaultOptions(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart } = params;\n  const diameter = Math.min(chart.viewBBox.width, chart.viewBBox.height);\n\n  return deepAssign(\n    {\n      options: {\n        size: ({ r }) => r * diameter, // 当autofit：false时，默认给固定半径\n      },\n    },\n    params\n  );\n}\n\n/**\n * padding 配置\n * @param params\n */\nfunction padding(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { options, chart } = params;\n  // 通过改变 padding，修改 coordinate 的绘制区域\n  const containerSize = chart.viewBBox;\n  const { padding, appendPadding, drilldown } = options;\n\n  let tempAppendPadding = appendPadding;\n  if (drilldown?.enabled) {\n    const appendPaddingByDrilldown = getAdjustAppendPadding(\n      chart.appendPadding,\n      get(drilldown, ['breadCrumb', 'position'])\n    );\n    tempAppendPadding = resolveAllPadding([appendPaddingByDrilldown, appendPadding]);\n  }\n\n  const { finalPadding } = resolvePaddingForCircle(padding, tempAppendPadding, containerSize);\n  chart.padding = finalPadding;\n  chart.appendPadding = 0;\n\n  return params;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart, options } = params;\n  const { padding, appendPadding } = chart;\n  const { color, colorField, pointStyle, hierarchyConfig, sizeField, rawFields = [], drilldown } = options;\n\n  const data = transformData({\n    data: options.data,\n    hierarchyConfig,\n    enableDrillDown: drilldown?.enabled,\n    rawFields,\n  });\n  chart.data(data);\n\n  const containerSize = chart.viewBBox;\n  const { finalSize } = resolvePaddingForCircle(padding, appendPadding, containerSize);\n  // 有sizeField的时候，例如 value ，可以选择映射 size 函数，自己计算出映射的半径\n  let circleSize = ({ r }) => r * finalSize; // 默认配置\n\n  if (sizeField) {\n    circleSize = (d) => d[sizeField] * finalSize; // 目前只有 r 通道映射效果会正常\n  }\n\n  // geometry\n  point(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        sizeField,\n        rawFields: [...RAW_FIELDS, ...rawFields],\n        point: {\n          color,\n          style: pointStyle,\n          shape: 'circle',\n          size: circleSize,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  return flow(\n    scale(\n      {},\n      {\n        // 必须强制为 nice\n        x: { min: 0, max: 1, minLimit: 0, maxLimit: 1, nice: true },\n        y: { min: 0, max: 1, minLimit: 0, maxLimit: 1, nice: true },\n      }\n    )\n  )(params);\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nfunction tooltip(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign(\n        {},\n        {\n          customItems: (items: Types.TooltipItem[]) =>\n            items.map((item) => {\n              const scales = get(chart.getOptions(), 'scales');\n              const nameFormatter = get(scales, ['name', 'formatter'], (v) => v);\n              const valueFormatter = get(scales, ['value', 'formatter'], (v) => v);\n              return {\n                ...item,\n                name: nameFormatter(item.data.name),\n                value: valueFormatter(item.data.value),\n              };\n            }),\n        },\n        tooltipOptions\n      );\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\n/**\n * 坐标轴, 默认关闭\n * @param params\n */\nfunction axis(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options: CirclePackingOptions): CirclePackingOptions {\n  const { drilldown, interactions = [] } = options;\n\n  if (drilldown?.enabled) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          cfg: { drillDownConfig: drilldown, transformData, enableDrillDown: true },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart, options } = params;\n\n  baseInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  return params;\n}\n\n/**\n * 矩形树图\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<CirclePackingOptions>) {\n  return flow(\n    pattern('pointStyle'),\n    defaultOptions,\n    padding,\n    theme,\n    meta,\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}