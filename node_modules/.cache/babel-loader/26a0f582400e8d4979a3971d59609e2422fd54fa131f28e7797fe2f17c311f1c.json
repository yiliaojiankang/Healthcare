{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SizeUnitType } from \"../../core/interface\";\nimport { PointFillTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/radar/radar_frag.glsl' */\nvar pointFillFrag = \"\\nlayout(std140) uniform commonUniorm{\\n  float u_additive;\\n  float u_size_unit;\\n  float u_speed: 1.0;\\n  float u_time;\\n};\\nin vec4 v_data;\\nin vec4 v_color;\\nin float v_radius;\\nin vec2 v_extrude;\\n#pragma include \\\"sdf_2d\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 outputColor;\\n\\nvoid main() {\\n\\n  lowp float antialiasblur = v_data.z;\\n  float r = v_radius / (v_radius);\\n\\n  float outer_df = sdCircle(v_data.xy, 1.0);\\n  float inner_df = sdCircle(v_data.xy, r);\\n\\n  float opacity_t = smoothstep(0.0, antialiasblur, outer_df);\\n\\n  outputColor = vec4(v_color.rgb, v_color.a);\\n\\n  if(u_additive > 0.0) {\\n    outputColor *= opacity_t;\\n  } else {\\n    outputColor.a *= opacity_t;\\n  }\\n\\n  if(outputColor.a > 0.0) {\\n    outputColor = filterColor(outputColor);\\n  }\\n\\n  vec2 extrude =  v_extrude;\\n  vec2 dir = normalize(extrude);\\n  vec2 baseDir = vec2(1.0, 0.0);\\n  float pi = 3.14159265359;\\n  float flag = sign(dir.y);\\n  float rades = dot(dir, baseDir);\\n  float radar_v = (flag - 1.0) * -0.5 * acos(rades)/pi;\\n  // simple AA\\n  if(radar_v > 0.99) {\\n    radar_v = 1.0 - (radar_v - 0.99)/0.01;\\n  }\\n\\n  outputColor.a *= radar_v;\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/radar/radar_vert.glsl' */\nvar pointFillVert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in float a_Size;\\nlayout(location = 11) in vec3 a_Extrude;\\n\\nlayout(std140) uniform commonUniorm {\\n  float u_additive;\\n  float u_size_unit;\\n  float u_speed: 1.0;\\n  float u_time;\\n};\\n\\nout vec4 v_data;\\nout vec4 v_color;\\nout float v_radius;\\nout vec2 v_extrude;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  float newSize = setPickingSize(a_Size);\\n\\n  float time = u_time * u_speed;\\n  mat2 rotateMatrix = mat2( \\n    cos(time), sin(time), \\n    -sin(time), cos(time)\\n  );\\n  v_extrude = rotateMatrix * a_Extrude.xy;\\n\\n  v_color = a_Color;\\n  v_color.a *= opacity;\\n\\n  float blur = 0.0;\\n  float antialiasblur = -max(2.0 / u_DevicePixelRatio / a_Size, blur);\\n\\n  if(u_size_unit == 1.) {\\n    newSize = newSize  * u_PixelsPerMeter.z;\\n  }\\n  v_radius = newSize;\\n\\n  vec2 offset = (a_Extrude.xy * (newSize));\\n  vec3 aPosition = a_Position;\\n  \\n  offset = project_pixel(offset);\\n  \\n  v_data = vec4(a_Extrude.x, a_Extrude.y, antialiasblur, -1.0);\\n\\n  vec4 project_pos = project_position(vec4(aPosition.xy, 0.0, 1.0));\\n  gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xy + offset, project_pixel(setPickingOrder(0.0)), 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar RadarModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(RadarModel, _BaseModel);\n  var _super = _createSuper(RadarModel);\n  function RadarModel() {\n    _classCallCheck(this, RadarModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(RadarModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        blend = _ref.blend,\n        _ref$speed = _ref.speed,\n        speed = _ref$speed === void 0 ? 1 : _ref$speed,\n        _ref$unit = _ref.unit,\n        unit = _ref$unit === void 0 ? 'pixel' : _ref$unit;\n      var commonOptions = {\n        u_additive: blend === 'additive' ? 1.0 : 0.0,\n        u_size_unit: SizeUnitType[unit],\n        u_speed: speed,\n        u_time: this.layer.getLayerAnimateTime()\n      }; //1+1+1+1\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"getAnimateUniforms\",\n    value: function getAnimateUniforms() {\n      return {};\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute() {\n      return this.styleAttributeService.createAttributesAndIndices(this.layer.getEncodedData(), PointFillTriangulation);\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.initUniformsBuffer();\n              _context2.next = 3;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointRadar',\n                vertexShader: pointFillVert,\n                fragmentShader: pointFillFrag,\n                triangulation: PointFillTriangulation,\n                inject: this.getInject(),\n                depth: {\n                  enable: false\n                }\n              });\n            case 3:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }() // overwrite baseModel func\n  }, {\n    key: \"animateOption2Array\",\n    value: function animateOption2Array(option) {\n      return [option.enable ? 0 : 1.0, option.speed || 1, option.rings || 3, 0];\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'extrude',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Extrude',\n          shaderLocation: ShaderLocation.EXTRUDE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx) {\n            var extrude = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0];\n            var extrudeIndex = attributeIdx % 4 * 3;\n            return [extrude[extrudeIndex], extrude[extrudeIndex + 1], extrude[extrudeIndex + 2]];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          shaderLocation: ShaderLocation.SIZE,\n          name: 'a_Size',\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 5 : _feature$size;\n            return Array.isArray(size) ? [size[0]] : [size];\n          }\n        }\n      });\n    }\n  }]);\n  return RadarModel;\n}(BaseModel);\nexport { RadarModel as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","BaseModel","SizeUnitType","PointFillTriangulation","pointFillFrag","pointFillVert","ShaderLocation","RadarModel","_BaseModel","_super","key","value","getCommonUniformsInfo","_ref","layer","getLayerConfig","blend","_ref$speed","speed","_ref$unit","unit","commonOptions","u_additive","u_size_unit","u_speed","u_time","getLayerAnimateTime","commonBufferInfo","getUniformsBufferInfo","getAnimateUniforms","getAttribute","styleAttributeService","createAttributesAndIndices","getEncodedData","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","buildModels","stop","initModels","_buildModels","_callee2","model","_callee2$","_context2","initUniformsBuffer","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","inject","getInject","depth","enable","sent","animateOption2Array","option","rings","registerBuiltinAttributes","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","EXTRUDE","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","featureIdx","vertex","attributeIdx","extrude","extrudeIndex","SIZE","_feature$size","Array","isArray","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/point/models/radar.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SizeUnitType } from \"../../core/interface\";\nimport { PointFillTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/radar/radar_frag.glsl' */\nvar pointFillFrag = \"\\nlayout(std140) uniform commonUniorm{\\n  float u_additive;\\n  float u_size_unit;\\n  float u_speed: 1.0;\\n  float u_time;\\n};\\nin vec4 v_data;\\nin vec4 v_color;\\nin float v_radius;\\nin vec2 v_extrude;\\n#pragma include \\\"sdf_2d\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 outputColor;\\n\\nvoid main() {\\n\\n  lowp float antialiasblur = v_data.z;\\n  float r = v_radius / (v_radius);\\n\\n  float outer_df = sdCircle(v_data.xy, 1.0);\\n  float inner_df = sdCircle(v_data.xy, r);\\n\\n  float opacity_t = smoothstep(0.0, antialiasblur, outer_df);\\n\\n  outputColor = vec4(v_color.rgb, v_color.a);\\n\\n  if(u_additive > 0.0) {\\n    outputColor *= opacity_t;\\n  } else {\\n    outputColor.a *= opacity_t;\\n  }\\n\\n  if(outputColor.a > 0.0) {\\n    outputColor = filterColor(outputColor);\\n  }\\n\\n  vec2 extrude =  v_extrude;\\n  vec2 dir = normalize(extrude);\\n  vec2 baseDir = vec2(1.0, 0.0);\\n  float pi = 3.14159265359;\\n  float flag = sign(dir.y);\\n  float rades = dot(dir, baseDir);\\n  float radar_v = (flag - 1.0) * -0.5 * acos(rades)/pi;\\n  // simple AA\\n  if(radar_v > 0.99) {\\n    radar_v = 1.0 - (radar_v - 0.99)/0.01;\\n  }\\n\\n  outputColor.a *= radar_v;\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/radar/radar_vert.glsl' */\nvar pointFillVert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in float a_Size;\\nlayout(location = 11) in vec3 a_Extrude;\\n\\nlayout(std140) uniform commonUniorm {\\n  float u_additive;\\n  float u_size_unit;\\n  float u_speed: 1.0;\\n  float u_time;\\n};\\n\\nout vec4 v_data;\\nout vec4 v_color;\\nout float v_radius;\\nout vec2 v_extrude;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  float newSize = setPickingSize(a_Size);\\n\\n  float time = u_time * u_speed;\\n  mat2 rotateMatrix = mat2( \\n    cos(time), sin(time), \\n    -sin(time), cos(time)\\n  );\\n  v_extrude = rotateMatrix * a_Extrude.xy;\\n\\n  v_color = a_Color;\\n  v_color.a *= opacity;\\n\\n  float blur = 0.0;\\n  float antialiasblur = -max(2.0 / u_DevicePixelRatio / a_Size, blur);\\n\\n  if(u_size_unit == 1.) {\\n    newSize = newSize  * u_PixelsPerMeter.z;\\n  }\\n  v_radius = newSize;\\n\\n  vec2 offset = (a_Extrude.xy * (newSize));\\n  vec3 aPosition = a_Position;\\n  \\n  offset = project_pixel(offset);\\n  \\n  v_data = vec4(a_Extrude.x, a_Extrude.y, antialiasblur, -1.0);\\n\\n  vec4 project_pos = project_position(vec4(aPosition.xy, 0.0, 1.0));\\n  gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xy + offset, project_pixel(setPickingOrder(0.0)), 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar RadarModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(RadarModel, _BaseModel);\n  var _super = _createSuper(RadarModel);\n  function RadarModel() {\n    _classCallCheck(this, RadarModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(RadarModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        blend = _ref.blend,\n        _ref$speed = _ref.speed,\n        speed = _ref$speed === void 0 ? 1 : _ref$speed,\n        _ref$unit = _ref.unit,\n        unit = _ref$unit === void 0 ? 'pixel' : _ref$unit;\n      var commonOptions = {\n        u_additive: blend === 'additive' ? 1.0 : 0.0,\n        u_size_unit: SizeUnitType[unit],\n        u_speed: speed,\n        u_time: this.layer.getLayerAnimateTime()\n      }; //1+1+1+1\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"getAnimateUniforms\",\n    value: function getAnimateUniforms() {\n      return {};\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute() {\n      return this.styleAttributeService.createAttributesAndIndices(this.layer.getEncodedData(), PointFillTriangulation);\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.initUniformsBuffer();\n              _context2.next = 3;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointRadar',\n                vertexShader: pointFillVert,\n                fragmentShader: pointFillFrag,\n                triangulation: PointFillTriangulation,\n                inject: this.getInject(),\n                depth: {\n                  enable: false\n                }\n              });\n            case 3:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }() // overwrite baseModel func\n  }, {\n    key: \"animateOption2Array\",\n    value: function animateOption2Array(option) {\n      return [option.enable ? 0 : 1.0, option.speed || 1, option.rings || 3, 0];\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'extrude',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Extrude',\n          shaderLocation: ShaderLocation.EXTRUDE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx) {\n            var extrude = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0];\n            var extrudeIndex = attributeIdx % 4 * 3;\n            return [extrude[extrudeIndex], extrude[extrudeIndex + 1], extrude[extrudeIndex + 2]];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          shaderLocation: ShaderLocation.SIZE,\n          name: 'a_Size',\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 5 : _feature$size;\n            return Array.isArray(size) ? [size[0]] : [size];\n          }\n        }\n      });\n    }\n  }]);\n  return RadarModel;\n}(BaseModel);\nexport { RadarModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}