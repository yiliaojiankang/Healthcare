{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n// 菱形shape\nregisterNode('diamond', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 80],\n    style: {\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'diamond',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('path', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var w = icon.width,\n      h = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -w / 2,\n            y: -h / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n      linkPoints = _a === void 0 ? {} : _a;\n    var top = linkPoints.top,\n      left = linkPoints.left,\n      right = linkPoints.right,\n      bottom = linkPoints.bottom,\n      markSize = linkPoints.size,\n      markR = linkPoints.r,\n      markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  getPath: function getPath(cfg) {\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    var path = [['M', 0, -height / 2], ['L', width / 2, 0], ['L', 0, height / 2], ['L', -width / 2, 0], ['Z'] // 封闭\n    ];\n\n    return path;\n  },\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle);\n    var path = this.getPath(cfg);\n    var styles = __assign({\n      path: path\n    }, style);\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer();\n    // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n    var defaultStyle = this.getOptions({}).style;\n    var path = this.getPath(cfg);\n    // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n    var strokeStyle = {\n      stroke: cfg.color,\n      path: path\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","__rest","registerNode","BaseGlobal","Global","mix","options","size","style","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","mergeStyle","getOptions","getShapeStyle","keyShape","addShape","attrs","className","concat","type","name","draggable","w","h","text","x","y","textBaseline","textAlign","drawLinkPoints","markSize","markR","r","markStyle","getSize","isAnchorPoint","getPath","path","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-element/es/nodes/diamond.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n// 菱形shape\nregisterNode('diamond', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 80],\n    style: {\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'diamond',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('path', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var w = icon.width,\n      h = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -w / 2,\n            y: -h / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n      linkPoints = _a === void 0 ? {} : _a;\n    var top = linkPoints.top,\n      left = linkPoints.left,\n      right = linkPoints.right,\n      bottom = linkPoints.bottom,\n      markSize = linkPoints.size,\n      markR = linkPoints.r,\n      markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  getPath: function getPath(cfg) {\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    var path = [['M', 0, -height / 2], ['L', width / 2, 0], ['L', 0, height / 2], ['L', -width / 2, 0], ['Z'] // 封闭\n    ];\n\n    return path;\n  },\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle);\n    var path = this.getPath(cfg);\n    var styles = __assign({\n      path: path\n    }, style);\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer();\n    // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n    var defaultStyle = this.getOptions({}).style;\n    var path = this.getPath(cfg);\n    // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n    var strokeStyle = {\n      stroke: cfg.color,\n      path: path\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}