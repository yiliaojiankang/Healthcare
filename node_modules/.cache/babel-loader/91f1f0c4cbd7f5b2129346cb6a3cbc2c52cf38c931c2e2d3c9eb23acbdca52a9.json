{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { TYPES } from '@antv/l7-core';\nimport { generateCatRamp, generateColorRamp, generateCustomRamp, generateLinearRamp, generateQuantizeRamp } from '@antv/l7-utils';\nvar TextureService = /*#__PURE__*/function () {\n  function TextureService(layer) {\n    _classCallCheck(this, TextureService);\n    this.layer = layer;\n    var container = this.layer.getContainer();\n    this.rendererService = container.get(TYPES.IRendererService);\n  }\n  _createClass(TextureService, [{\n    key: \"getColorTexture\",\n    value: function getColorTexture(colorRamp, domain) {\n      // TODO 支持传入图片\n      var currentkey = this.getTextureKey(colorRamp, domain);\n      if (this.key === currentkey) {\n        return this.colorTexture;\n      } else {\n        this.createColorTexture(colorRamp, domain);\n      }\n      this.key = currentkey;\n      return this.colorTexture;\n    }\n  }, {\n    key: \"createColorTexture\",\n    value: function createColorTexture(colorRamp, domain) {\n      var createTexture2D = this.rendererService.createTexture2D;\n      var imageData = this.getColorRampBar(colorRamp, domain);\n      var texture = createTexture2D({\n        data: new Uint8Array(imageData.data),\n        width: imageData.width,\n        height: imageData.height,\n        flipY: false,\n        unorm: true\n      });\n      this.colorTexture = texture;\n      return texture;\n    }\n  }, {\n    key: \"setColorTexture\",\n    value: function setColorTexture(texture, colorRamp, domain) {\n      this.key = this.getTextureKey(colorRamp, domain);\n      this.colorTexture = texture;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$colorTexture;\n      (_this$colorTexture = this.colorTexture) === null || _this$colorTexture === void 0 || _this$colorTexture.destroy();\n    }\n  }, {\n    key: \"getColorRampBar\",\n    value: function getColorRampBar(colorRamp, domain) {\n      switch (colorRamp.type) {\n        case 'cat':\n          return generateCatRamp(colorRamp);\n        case 'quantize':\n          return generateQuantizeRamp(colorRamp);\n        case 'custom':\n          return generateCustomRamp(colorRamp, domain);\n        case 'linear':\n          return generateLinearRamp(colorRamp, domain);\n        default:\n          return generateColorRamp(colorRamp);\n      }\n    }\n  }, {\n    key: \"getTextureKey\",\n    value: function getTextureKey(colorRamp, domain) {\n      var _colorRamp$positions;\n      return \"\".concat(colorRamp.colors.join('_'), \"_\").concat(colorRamp === null || colorRamp === void 0 || (_colorRamp$positions = colorRamp.positions) === null || _colorRamp$positions === void 0 ? void 0 : _colorRamp$positions.join('_'), \"_\").concat(colorRamp.type, \"_\").concat(domain === null || domain === void 0 ? void 0 : domain.join('_'));\n    }\n  }]);\n  return TextureService;\n}();\nexport { TextureService as default };","map":{"version":3,"names":["_classCallCheck","_createClass","TYPES","generateCatRamp","generateColorRamp","generateCustomRamp","generateLinearRamp","generateQuantizeRamp","TextureService","layer","container","getContainer","rendererService","get","IRendererService","key","value","getColorTexture","colorRamp","domain","currentkey","getTextureKey","colorTexture","createColorTexture","createTexture2D","imageData","getColorRampBar","texture","data","Uint8Array","width","height","flipY","unorm","setColorTexture","destroy","_this$colorTexture","type","_colorRamp$positions","concat","colors","join","positions","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/core/TextureService.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { TYPES } from '@antv/l7-core';\nimport { generateCatRamp, generateColorRamp, generateCustomRamp, generateLinearRamp, generateQuantizeRamp } from '@antv/l7-utils';\nvar TextureService = /*#__PURE__*/function () {\n  function TextureService(layer) {\n    _classCallCheck(this, TextureService);\n    this.layer = layer;\n    var container = this.layer.getContainer();\n    this.rendererService = container.get(TYPES.IRendererService);\n  }\n  _createClass(TextureService, [{\n    key: \"getColorTexture\",\n    value: function getColorTexture(colorRamp, domain) {\n      // TODO 支持传入图片\n      var currentkey = this.getTextureKey(colorRamp, domain);\n      if (this.key === currentkey) {\n        return this.colorTexture;\n      } else {\n        this.createColorTexture(colorRamp, domain);\n      }\n      this.key = currentkey;\n      return this.colorTexture;\n    }\n  }, {\n    key: \"createColorTexture\",\n    value: function createColorTexture(colorRamp, domain) {\n      var createTexture2D = this.rendererService.createTexture2D;\n      var imageData = this.getColorRampBar(colorRamp, domain);\n      var texture = createTexture2D({\n        data: new Uint8Array(imageData.data),\n        width: imageData.width,\n        height: imageData.height,\n        flipY: false,\n        unorm: true\n      });\n      this.colorTexture = texture;\n      return texture;\n    }\n  }, {\n    key: \"setColorTexture\",\n    value: function setColorTexture(texture, colorRamp, domain) {\n      this.key = this.getTextureKey(colorRamp, domain);\n      this.colorTexture = texture;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$colorTexture;\n      (_this$colorTexture = this.colorTexture) === null || _this$colorTexture === void 0 || _this$colorTexture.destroy();\n    }\n  }, {\n    key: \"getColorRampBar\",\n    value: function getColorRampBar(colorRamp, domain) {\n      switch (colorRamp.type) {\n        case 'cat':\n          return generateCatRamp(colorRamp);\n        case 'quantize':\n          return generateQuantizeRamp(colorRamp);\n        case 'custom':\n          return generateCustomRamp(colorRamp, domain);\n        case 'linear':\n          return generateLinearRamp(colorRamp, domain);\n        default:\n          return generateColorRamp(colorRamp);\n      }\n    }\n  }, {\n    key: \"getTextureKey\",\n    value: function getTextureKey(colorRamp, domain) {\n      var _colorRamp$positions;\n      return \"\".concat(colorRamp.colors.join('_'), \"_\").concat(colorRamp === null || colorRamp === void 0 || (_colorRamp$positions = colorRamp.positions) === null || _colorRamp$positions === void 0 ? void 0 : _colorRamp$positions.join('_'), \"_\").concat(colorRamp.type, \"_\").concat(domain === null || domain === void 0 ? void 0 : domain.join('_'));\n    }\n  }]);\n  return TextureService;\n}();\nexport { TextureService as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}