{"ast":null,"code":"import { assert } from '../utils/env-utils/assert';\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker) {\n  return \"\" + worker.name;\n}\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var workerOptions = options[worker.id] || {};\n  var workerFileName = worker.name + \".worker.js\";\n  var url = workerOptions.workerUrl;\n  // If URL is test\n  if (options._workerType === 'test') {\n    url = worker.module + \"/dist/\" + workerFileName;\n  }\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    url = \"https://unpkg.com/\" + worker.module + \"/dist/\" + workerFileName;\n  }\n  assert(url);\n  return url;\n}","map":{"version":3,"names":["assert","getWorkerName","worker","name","getWorkerURL","options","workerOptions","id","workerFileName","url","workerUrl","_workerType","module"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/web-worker-helper/dist/esm/worker-api/get-worker-url.js"],"sourcesContent":["import { assert } from '../utils/env-utils/assert';\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker) {\n    return \"\" + worker.name;\n}\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker, options) {\n    if (options === void 0) { options = {}; }\n    var workerOptions = options[worker.id] || {};\n    var workerFileName = worker.name + \".worker.js\";\n    var url = workerOptions.workerUrl;\n    // If URL is test\n    if (options._workerType === 'test') {\n        url = worker.module + \"/dist/\" + workerFileName;\n    }\n    // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n    if (!url) {\n        url = \"https://unpkg.com/\" + worker.module + \"/dist/\" + workerFileName;\n    }\n    assert(url);\n    return url;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,2BAA2B;AAClD;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAE;EAClC,OAAO,EAAE,GAAGA,MAAM,CAACC,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACF,MAAM,EAAEG,OAAO,EAAE;EAC1C,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC,IAAIC,aAAa,GAAGD,OAAO,CAACH,MAAM,CAACK,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5C,IAAIC,cAAc,GAAGN,MAAM,CAACC,IAAI,GAAG,YAAY;EAC/C,IAAIM,GAAG,GAAGH,aAAa,CAACI,SAAS;EACjC;EACA,IAAIL,OAAO,CAACM,WAAW,KAAK,MAAM,EAAE;IAChCF,GAAG,GAAGP,MAAM,CAACU,MAAM,GAAG,QAAQ,GAAGJ,cAAc;EACnD;EACA;EACA,IAAI,CAACC,GAAG,EAAE;IACNA,GAAG,GAAG,oBAAoB,GAAGP,MAAM,CAACU,MAAM,GAAG,QAAQ,GAAGJ,cAAc;EAC1E;EACAR,MAAM,CAACS,GAAG,CAAC;EACX,OAAOA,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}