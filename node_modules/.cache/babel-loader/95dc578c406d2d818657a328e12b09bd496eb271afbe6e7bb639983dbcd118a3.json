{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLineMarker } from './util';\nvar interpolateCallback = function (point, nextPoint, shapeType) {\n  var x = point.x;\n  var y = point.y;\n  var nextX = nextPoint.x;\n  var nextY = nextPoint.y;\n  var result;\n  switch (shapeType) {\n    case 'hv':\n      result = [{\n        x: nextX,\n        y: y\n      }];\n      break;\n    case 'vh':\n      result = [{\n        x: x,\n        y: nextY\n      }];\n      break;\n    case 'hvh':\n      var middleX = (nextX + x) / 2;\n      result = [{\n        x: middleX,\n        y: y\n      }, {\n        x: middleX,\n        y: nextY\n      }];\n      break;\n    case 'vhv':\n      var middleY = (y + nextY) / 2;\n      result = [{\n        x: x,\n        y: middleY\n      }, {\n        x: nextX,\n        y: middleY\n      }];\n      break;\n    default:\n      break;\n  }\n  return result;\n};\nfunction getInterpolatePoints(points, shapeType) {\n  var result = [];\n  each(points, function (point, index) {\n    var nextPoint = points[index + 1];\n    result.push(point);\n    if (nextPoint) {\n      var interpolatePoint = interpolateCallback(point, nextPoint, shapeType);\n      result = result.concat(interpolatePoint);\n    }\n  });\n  return result;\n}\n// 插值的图形path，不考虑null\nfunction getInterpolatePath(points) {\n  return points.map(function (point, index) {\n    return index === 0 ? ['M', point.x, point.y] : ['L', point.x, point.y];\n  });\n}\n// 插值的图形\nfunction getInterpolateShapeAttrs(cfg, shapeType) {\n  var points = getPathPoints(cfg.points, cfg.connectNulls, cfg.showSinglePoint); // 根据 connectNulls 值处理 points\n  var path = [];\n  each(points, function (eachLinePoints) {\n    var interpolatePoints = getInterpolatePoints(eachLinePoints, shapeType);\n    path = path.concat(getInterpolatePath(interpolatePoints));\n  });\n  return __assign(__assign({}, getStyle(cfg, true, false, 'lineWidth')), {\n    path: path\n  });\n}\n// step line\neach(['hv', 'vh', 'hvh', 'vhv'], function (shapeType) {\n  registerShape('line', shapeType, {\n    draw: function (cfg, container) {\n      var attrs = getInterpolateShapeAttrs(cfg, shapeType);\n      var shape = container.addShape({\n        type: 'path',\n        attrs: attrs,\n        name: 'line'\n      });\n      return shape;\n    },\n    getMarker: function (markerCfg) {\n      return getLineMarker(markerCfg, shapeType);\n    }\n  });\n});","map":{"version":3,"names":["each","registerShape","getPathPoints","getStyle","getLineMarker","interpolateCallback","point","nextPoint","shapeType","x","y","nextX","nextY","result","middleX","middleY","getInterpolatePoints","points","index","push","interpolatePoint","concat","getInterpolatePath","map","getInterpolateShapeAttrs","cfg","connectNulls","showSinglePoint","path","eachLinePoints","interpolatePoints","__assign","draw","container","attrs","shape","addShape","type","name","getMarker","markerCfg"],"sources":["../../../../src/geometry/shape/line/step.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLineMarker } from './util';\n\nconst interpolateCallback = (point: Point, nextPoint: Point, shapeType: string) => {\n  const x = point.x as number;\n  const y = point.y as number;\n  const nextX = nextPoint.x as number;\n  const nextY = nextPoint.y as number;\n  let result;\n\n  switch (shapeType) {\n    case 'hv':\n      result = [{ x: nextX, y }];\n      break;\n    case 'vh':\n      result = [{ x, y: nextY }];\n      break;\n    case 'hvh':\n      const middleX = (nextX + x) / 2;\n      result = [\n        { x: middleX, y },\n        { x: middleX, y: nextY },\n      ];\n      break;\n    case 'vhv':\n      const middleY = (y + nextY) / 2;\n      result = [\n        { x, y: middleY },\n        { x: nextX, y: middleY },\n      ];\n      break;\n    default:\n      break;\n  }\n\n  return result;\n};\n\nfunction getInterpolatePoints(points: Point[], shapeType: string) {\n  let result = [];\n  each(points, (point: Point, index) => {\n    const nextPoint = points[index + 1];\n    result.push(point);\n    if (nextPoint) {\n      const interpolatePoint = interpolateCallback(point, nextPoint, shapeType);\n      result = result.concat(interpolatePoint);\n    }\n  });\n  return result;\n}\n\n// 插值的图形path，不考虑null\nfunction getInterpolatePath(points: Point[]) {\n  return points.map((point, index) => {\n    return index === 0 ? ['M', point.x, point.y] : ['L', point.x, point.y];\n  });\n}\n\n// 插值的图形\nfunction getInterpolateShapeAttrs(cfg: ShapeInfo, shapeType: string) {\n  const points = getPathPoints(cfg.points, cfg.connectNulls, cfg.showSinglePoint); // 根据 connectNulls 值处理 points\n  let path = [];\n  each(points, (eachLinePoints) => {\n    const interpolatePoints = getInterpolatePoints(eachLinePoints, shapeType);\n    path = path.concat(getInterpolatePath(interpolatePoints));\n  });\n\n  return {\n    ...getStyle(cfg, true, false, 'lineWidth'),\n    path,\n  };\n}\n\n// step line\neach(['hv', 'vh', 'hvh', 'vhv'], (shapeType) => {\n  registerShape('line', shapeType, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      const attrs = getInterpolateShapeAttrs(cfg, shapeType);\n      const shape = container.addShape({\n        type: 'path',\n        attrs,\n        name: 'line',\n      });\n\n      return shape;\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      return getLineMarker(markerCfg, shapeType);\n    },\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}