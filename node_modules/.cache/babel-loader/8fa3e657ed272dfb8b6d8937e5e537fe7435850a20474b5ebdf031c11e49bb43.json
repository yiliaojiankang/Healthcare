{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\n/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n  // Metadata Proposal\n  // https://rbuckton.github.io/reflect-metadata/\n  (function (factory) {\n    var root = typeof globalThis === \"object\" ? globalThis : typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : sloppyModeThis();\n    var exporter = makeExporter(Reflect);\n    if (typeof root.Reflect !== \"undefined\") {\n      exporter = makeExporter(root.Reflect, exporter);\n    }\n    factory(exporter, root);\n    if (typeof root.Reflect === \"undefined\") {\n      root.Reflect = Reflect;\n    }\n    function makeExporter(target, previous) {\n      return function (key, value) {\n        Object.defineProperty(target, key, {\n          configurable: true,\n          writable: true,\n          value: value\n        });\n        if (previous) previous(key, value);\n      };\n    }\n    function functionThis() {\n      try {\n        return Function(\"return this;\")();\n      } catch (_) {}\n    }\n    function indirectEvalThis() {\n      try {\n        return (void 0, eval)(\"(function() { return this; })()\");\n      } catch (_) {}\n    }\n    function sloppyModeThis() {\n      return functionThis() || indirectEvalThis();\n    }\n  })(function (exporter, root) {\n    var hasOwn = Object.prototype.hasOwnProperty;\n    // feature test for Symbol support\n    var supportsSymbol = typeof Symbol === \"function\";\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n    var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n    var supportsProto = {\n      __proto__: []\n    } instanceof Array; // feature test for __proto__ support\n    var downLevel = !supportsCreate && !supportsProto;\n    var HashMap = {\n      // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n      create: supportsCreate ? function () {\n        return MakeDictionary(Object.create(null));\n      } : supportsProto ? function () {\n        return MakeDictionary({\n          __proto__: null\n        });\n      } : function () {\n        return MakeDictionary({});\n      },\n      has: downLevel ? function (map, key) {\n        return hasOwn.call(map, key);\n      } : function (map, key) {\n        return key in map;\n      },\n      get: downLevel ? function (map, key) {\n        return hasOwn.call(map, key) ? map[key] : undefined;\n      } : function (map, key) {\n        return map[key];\n      }\n    };\n    // Load global or shim versions of Map, Set, and WeakMap\n    var functionPrototype = Object.getPrototypeOf(Function);\n    var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n    var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n    var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n    var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n    var metadataRegistry = GetOrCreateMetadataRegistry();\n    var metadataProvider = CreateMetadataProvider(metadataRegistry);\n    /**\n     * Applies a set of decorators to a property of a target object.\n     * @param decorators An array of decorators.\n     * @param target The target object.\n     * @param propertyKey (Optional) The property key to decorate.\n     * @param attributes (Optional) The property descriptor for the target key.\n     * @remarks Decorators are applied in reverse order.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Example = Reflect.decorate(decoratorsArray, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Object.defineProperty(Example, \"staticMethod\",\n     *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n     *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n     *\n     *     // method (on prototype)\n     *     Object.defineProperty(Example.prototype, \"method\",\n     *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n     *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n     *\n     */\n    function decorate(decorators, target, propertyKey, attributes) {\n      if (!IsUndefined(propertyKey)) {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\n        if (IsNull(attributes)) attributes = undefined;\n        propertyKey = ToPropertyKey(propertyKey);\n        return DecorateProperty(decorators, target, propertyKey, attributes);\n      } else {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsConstructor(target)) throw new TypeError();\n        return DecorateConstructor(decorators, target);\n      }\n    }\n    exporter(\"decorate\", decorate);\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n    /**\n     * A default metadata decorator factory that can be used on a class, class member, or parameter.\n     * @param metadataKey The key for the metadata entry.\n     * @param metadataValue The value for the metadata entry.\n     * @returns A decorator function.\n     * @remarks\n     * If `metadataKey` is already defined for the target and target key, the\n     * metadataValue for that key will be overwritten.\n     * @example\n     *\n     *     // constructor\n     *     @Reflect.metadata(key, value)\n     *     class Example {\n     *     }\n     *\n     *     // property (on constructor, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticProperty;\n     *     }\n     *\n     *     // property (on prototype, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         property;\n     *     }\n     *\n     *     // method (on constructor)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticMethod() { }\n     *     }\n     *\n     *     // method (on prototype)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         method() { }\n     *     }\n     *\n     */\n    function metadata(metadataKey, metadataValue) {\n      function decorator(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\n        OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n      }\n      return decorator;\n    }\n    exporter(\"metadata\", metadata);\n    /**\n     * Define a unique metadata entry on the target.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param metadataValue A value that contains attached metadata.\n     * @param target The target object on which to define metadata.\n     * @param propertyKey (Optional) The property key for the target.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n     *\n     *     // decorator factory as metadata-producing annotation.\n     *     function MyAnnotation(options): Decorator {\n     *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n     *     }\n     *\n     */\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    }\n    exporter(\"defineMetadata\", defineMetadata);\n    /**\n     * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function hasMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"hasMetadata\", hasMetadata);\n    /**\n     * Gets a value indicating whether the target object has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"hasOwnMetadata\", hasOwnMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function getMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"getMetadata\", getMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function getOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"getOwnMetadata\", getOwnMetadata);\n    /**\n     * Gets the metadata keys defined on the target object or its prototype chain.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n    function getMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryMetadataKeys(target, propertyKey);\n    }\n    exporter(\"getMetadataKeys\", getMetadataKeys);\n    /**\n     * Gets the unique metadata keys defined on the target object.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n    function getOwnMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryOwnMetadataKeys(target, propertyKey);\n    }\n    exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n    /**\n     * Deletes the metadata entry from the target object with the provided key.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function deleteMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      var provider = GetMetadataProvider(target, propertyKey, /*Create*/false);\n      if (IsUndefined(provider)) return false;\n      return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"deleteMetadata\", deleteMetadata);\n    function DecorateConstructor(decorators, target) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target);\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsConstructor(decorated)) throw new TypeError();\n          target = decorated;\n        }\n      }\n      return target;\n    }\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target, propertyKey, descriptor);\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsObject(decorated)) throw new TypeError();\n          descriptor = decorated;\n        }\n      }\n      return descriptor;\n    }\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return true;\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\n      return false;\n    }\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n      var provider = GetMetadataProvider(O, P, /*Create*/false);\n      if (IsUndefined(provider)) return false;\n      return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n    }\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\n      return undefined;\n    }\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n      var provider = GetMetadataProvider(O, P, /*Create*/false);\n      if (IsUndefined(provider)) return;\n      return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n    }\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n      var provider = GetMetadataProvider(O, P, /*Create*/true);\n      provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n    }\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n    function OrdinaryMetadataKeys(O, P) {\n      var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (parent === null) return ownKeys;\n      var parentKeys = OrdinaryMetadataKeys(parent, P);\n      if (parentKeys.length <= 0) return ownKeys;\n      if (ownKeys.length <= 0) return parentKeys;\n      var set = new _Set();\n      var keys = [];\n      for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n        var key = ownKeys_1[_i];\n        var hasKey = set.has(key);\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n      for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n        var key = parentKeys_1[_a];\n        var hasKey = set.has(key);\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n      return keys;\n    }\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n    function OrdinaryOwnMetadataKeys(O, P) {\n      var provider = GetMetadataProvider(O, P, /*create*/false);\n      if (!provider) {\n        return [];\n      }\n      return provider.OrdinaryOwnMetadataKeys(O, P);\n    }\n    // 6 ECMAScript Data Typ0es and Values\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n    function Type(x) {\n      if (x === null) return 1 /* Null */;\n      switch (typeof x) {\n        case \"undefined\":\n          return 0 /* Undefined */;\n        case \"boolean\":\n          return 2 /* Boolean */;\n        case \"string\":\n          return 3 /* String */;\n        case \"symbol\":\n          return 4 /* Symbol */;\n        case \"number\":\n          return 5 /* Number */;\n        case \"object\":\n          return x === null ? 1 /* Null */ : 6 /* Object */;\n        default:\n          return 6 /* Object */;\n      }\n    }\n    // 6.1.1 The Undefined Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n    function IsUndefined(x) {\n      return x === undefined;\n    }\n    // 6.1.2 The Null Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n    function IsNull(x) {\n      return x === null;\n    }\n    // 6.1.5 The Symbol Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n    function IsSymbol(x) {\n      return typeof x === \"symbol\";\n    }\n    // 6.1.7 The Object Type\n    // https://tc39.github.io/ecma262/#sec-object-type\n    function IsObject(x) {\n      return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n    }\n    // 7.1 Type Conversion\n    // https://tc39.github.io/ecma262/#sec-type-conversion\n    // 7.1.1 ToPrimitive(input [, PreferredType])\n    // https://tc39.github.io/ecma262/#sec-toprimitive\n    function ToPrimitive(input, PreferredType) {\n      switch (Type(input)) {\n        case 0 /* Undefined */:\n          return input;\n        case 1 /* Null */:\n          return input;\n        case 2 /* Boolean */:\n          return input;\n        case 3 /* String */:\n          return input;\n        case 4 /* Symbol */:\n          return input;\n        case 5 /* Number */:\n          return input;\n      }\n      var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n      var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n      if (exoticToPrim !== undefined) {\n        var result = exoticToPrim.call(input, hint);\n        if (IsObject(result)) throw new TypeError();\n        return result;\n      }\n      return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n    }\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n    function OrdinaryToPrimitive(O, hint) {\n      if (hint === \"string\") {\n        var toString_1 = O.toString;\n        if (IsCallable(toString_1)) {\n          var result = toString_1.call(O);\n          if (!IsObject(result)) return result;\n        }\n        var valueOf = O.valueOf;\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n      } else {\n        var valueOf = O.valueOf;\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n        var toString_2 = O.toString;\n        if (IsCallable(toString_2)) {\n          var result = toString_2.call(O);\n          if (!IsObject(result)) return result;\n        }\n      }\n      throw new TypeError();\n    }\n    // 7.1.2 ToBoolean(argument)\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\n    function ToBoolean(argument) {\n      return !!argument;\n    }\n    // 7.1.12 ToString(argument)\n    // https://tc39.github.io/ecma262/#sec-tostring\n    function ToString(argument) {\n      return \"\" + argument;\n    }\n    // 7.1.14 ToPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-topropertykey\n    function ToPropertyKey(argument) {\n      var key = ToPrimitive(argument, 3 /* String */);\n      if (IsSymbol(key)) return key;\n      return ToString(key);\n    }\n    // 7.2 Testing and Comparison Operations\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n    // 7.2.2 IsArray(argument)\n    // https://tc39.github.io/ecma262/#sec-isarray\n    function IsArray(argument) {\n      return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === \"[object Array]\";\n    }\n    // 7.2.3 IsCallable(argument)\n    // https://tc39.github.io/ecma262/#sec-iscallable\n    function IsCallable(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n      return typeof argument === \"function\";\n    }\n    // 7.2.4 IsConstructor(argument)\n    // https://tc39.github.io/ecma262/#sec-isconstructor\n    function IsConstructor(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n      return typeof argument === \"function\";\n    }\n    // 7.2.7 IsPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\n    function IsPropertyKey(argument) {\n      switch (Type(argument)) {\n        case 3 /* String */:\n          return true;\n        case 4 /* Symbol */:\n          return true;\n        default:\n          return false;\n      }\n    }\n    function SameValueZero(x, y) {\n      return x === y || x !== x && y !== y;\n    }\n    // 7.3 Operations on Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\n    // 7.3.9 GetMethod(V, P)\n    // https://tc39.github.io/ecma262/#sec-getmethod\n    function GetMethod(V, P) {\n      var func = V[P];\n      if (func === undefined || func === null) return undefined;\n      if (!IsCallable(func)) throw new TypeError();\n      return func;\n    }\n    // 7.4 Operations on Iterator Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n    function GetIterator(obj) {\n      var method = GetMethod(obj, iteratorSymbol);\n      if (!IsCallable(method)) throw new TypeError(); // from Call\n      var iterator = method.call(obj);\n      if (!IsObject(iterator)) throw new TypeError();\n      return iterator;\n    }\n    // 7.4.4 IteratorValue(iterResult)\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n    function IteratorValue(iterResult) {\n      return iterResult.value;\n    }\n    // 7.4.5 IteratorStep(iterator)\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\n    function IteratorStep(iterator) {\n      var result = iterator.next();\n      return result.done ? false : result;\n    }\n    // 7.4.6 IteratorClose(iterator, completion)\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\n    function IteratorClose(iterator) {\n      var f = iterator[\"return\"];\n      if (f) f.call(iterator);\n    }\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n    function OrdinaryGetPrototypeOf(O) {\n      var proto = Object.getPrototypeOf(O);\n      if (typeof O !== \"function\" || O === functionPrototype) return proto;\n      // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n      // Try to determine the superclass constructor. Compatible implementations\n      // must either set __proto__ on a subclass constructor to the superclass constructor,\n      // or ensure each class has a valid `constructor` property on its prototype that\n      // points back to the constructor.\n      // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n      // This is the case when in ES6 or when using __proto__ in a compatible browser.\n      if (proto !== functionPrototype) return proto;\n      // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n      var prototype = O.prototype;\n      var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n      if (prototypeProto == null || prototypeProto === Object.prototype) return proto;\n      // If the constructor was not a function, then we cannot determine the heritage.\n      var constructor = prototypeProto.constructor;\n      if (typeof constructor !== \"function\") return proto;\n      // If we have some kind of self-reference, then we cannot determine the heritage.\n      if (constructor === O) return proto;\n      // we have a pretty good guess at the heritage.\n      return constructor;\n    }\n    // Global metadata registry\n    // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n    // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n    /**\n     * Creates a registry used to allow multiple `reflect-metadata` providers.\n     */\n    function CreateMetadataRegistry() {\n      var fallback;\n      if (!IsUndefined(registrySymbol) && typeof root.Reflect !== \"undefined\" && !(registrySymbol in root.Reflect) && typeof root.Reflect.defineMetadata === \"function\") {\n        // interoperate with older version of `reflect-metadata` that did not support a registry.\n        fallback = CreateFallbackProvider(root.Reflect);\n      }\n      var first;\n      var second;\n      var rest;\n      var targetProviderMap = new _WeakMap();\n      var registry = {\n        registerProvider: registerProvider,\n        getProvider: getProvider,\n        setProvider: setProvider\n      };\n      return registry;\n      function registerProvider(provider) {\n        if (!Object.isExtensible(registry)) {\n          throw new Error(\"Cannot add provider to a frozen registry.\");\n        }\n        switch (true) {\n          case fallback === provider:\n            break;\n          case IsUndefined(first):\n            first = provider;\n            break;\n          case first === provider:\n            break;\n          case IsUndefined(second):\n            second = provider;\n            break;\n          case second === provider:\n            break;\n          default:\n            if (rest === undefined) rest = new _Set();\n            rest.add(provider);\n            break;\n        }\n      }\n      function getProviderNoCache(O, P) {\n        if (!IsUndefined(first)) {\n          if (first.isProviderFor(O, P)) return first;\n          if (!IsUndefined(second)) {\n            if (second.isProviderFor(O, P)) return first;\n            if (!IsUndefined(rest)) {\n              var iterator = GetIterator(rest);\n              while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                  return undefined;\n                }\n                var provider = IteratorValue(next);\n                if (provider.isProviderFor(O, P)) {\n                  IteratorClose(iterator);\n                  return provider;\n                }\n              }\n            }\n          }\n        }\n        if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n          return fallback;\n        }\n        return undefined;\n      }\n      function getProvider(O, P) {\n        var providerMap = targetProviderMap.get(O);\n        var provider;\n        if (!IsUndefined(providerMap)) {\n          provider = providerMap.get(P);\n        }\n        if (!IsUndefined(provider)) {\n          return provider;\n        }\n        provider = getProviderNoCache(O, P);\n        if (!IsUndefined(provider)) {\n          if (IsUndefined(providerMap)) {\n            providerMap = new _Map();\n            targetProviderMap.set(O, providerMap);\n          }\n          providerMap.set(P, provider);\n        }\n        return provider;\n      }\n      function hasProvider(provider) {\n        if (IsUndefined(provider)) throw new TypeError();\n        return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n      }\n      function setProvider(O, P, provider) {\n        if (!hasProvider(provider)) {\n          throw new Error(\"Metadata provider not registered.\");\n        }\n        var existingProvider = getProvider(O, P);\n        if (existingProvider !== provider) {\n          if (!IsUndefined(existingProvider)) {\n            return false;\n          }\n          var providerMap = targetProviderMap.get(O);\n          if (IsUndefined(providerMap)) {\n            providerMap = new _Map();\n            targetProviderMap.set(O, providerMap);\n          }\n          providerMap.set(P, provider);\n        }\n        return true;\n      }\n    }\n    /**\n     * Gets or creates the shared registry of metadata providers.\n     */\n    function GetOrCreateMetadataRegistry() {\n      var metadataRegistry;\n      if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n        metadataRegistry = root.Reflect[registrySymbol];\n      }\n      if (IsUndefined(metadataRegistry)) {\n        metadataRegistry = CreateMetadataRegistry();\n      }\n      if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n        Object.defineProperty(root.Reflect, registrySymbol, {\n          enumerable: false,\n          configurable: false,\n          writable: false,\n          value: metadataRegistry\n        });\n      }\n      return metadataRegistry;\n    }\n    function CreateMetadataProvider(registry) {\n      // [[Metadata]] internal slot\n      // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n      var metadata = new _WeakMap();\n      var provider = {\n        isProviderFor: function (O, P) {\n          var targetMetadata = metadata.get(O);\n          if (IsUndefined(targetMetadata)) return false;\n          return targetMetadata.has(P);\n        },\n        OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n        OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n        OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n        OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n        OrdinaryDeleteMetadata: OrdinaryDeleteMetadata\n      };\n      metadataRegistry.registerProvider(provider);\n      return provider;\n      function GetOrCreateMetadataMap(O, P, Create) {\n        var targetMetadata = metadata.get(O);\n        var createdTargetMetadata = false;\n        if (IsUndefined(targetMetadata)) {\n          if (!Create) return undefined;\n          targetMetadata = new _Map();\n          metadata.set(O, targetMetadata);\n          createdTargetMetadata = true;\n        }\n        var metadataMap = targetMetadata.get(P);\n        if (IsUndefined(metadataMap)) {\n          if (!Create) return undefined;\n          metadataMap = new _Map();\n          targetMetadata.set(P, metadataMap);\n          if (!registry.setProvider(O, P, provider)) {\n            targetMetadata.delete(P);\n            if (createdTargetMetadata) {\n              metadata.delete(O);\n            }\n            throw new Error(\"Wrong provider for target.\");\n          }\n        }\n        return metadataMap;\n      }\n      // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n      function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        return ToBoolean(metadataMap.has(MetadataKey));\n      }\n      // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n      function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return undefined;\n        return metadataMap.get(MetadataKey);\n      }\n      // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n      function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/true);\n        metadataMap.set(MetadataKey, MetadataValue);\n      }\n      // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n      function OrdinaryOwnMetadataKeys(O, P) {\n        var keys = [];\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return keys;\n        var keysObj = metadataMap.keys();\n        var iterator = GetIterator(keysObj);\n        var k = 0;\n        while (true) {\n          var next = IteratorStep(iterator);\n          if (!next) {\n            keys.length = k;\n            return keys;\n          }\n          var nextValue = IteratorValue(next);\n          try {\n            keys[k] = nextValue;\n          } catch (e) {\n            try {\n              IteratorClose(iterator);\n            } finally {\n              throw e;\n            }\n          }\n          k++;\n        }\n      }\n      function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        if (!metadataMap.delete(MetadataKey)) return false;\n        if (metadataMap.size === 0) {\n          var targetMetadata = metadata.get(O);\n          if (!IsUndefined(targetMetadata)) {\n            targetMetadata.delete(P);\n            if (targetMetadata.size === 0) {\n              metadata.delete(targetMetadata);\n            }\n          }\n        }\n        return true;\n      }\n    }\n    function CreateFallbackProvider(reflect) {\n      var defineMetadata = reflect.defineMetadata,\n        hasOwnMetadata = reflect.hasOwnMetadata,\n        getOwnMetadata = reflect.getOwnMetadata,\n        getOwnMetadataKeys = reflect.getOwnMetadataKeys,\n        deleteMetadata = reflect.deleteMetadata;\n      var metadataOwner = new _WeakMap();\n      var provider = {\n        isProviderFor: function (O, P) {\n          var metadataPropertySet = metadataOwner.get(O);\n          if (!IsUndefined(metadataPropertySet)) {\n            return metadataPropertySet.has(P);\n          }\n          if (getOwnMetadataKeys(O, P).length) {\n            if (IsUndefined(metadataPropertySet)) {\n              metadataPropertySet = new _Set();\n              metadataOwner.set(O, metadataPropertySet);\n            }\n            metadataPropertySet.add(P);\n            return true;\n          }\n          return false;\n        },\n        OrdinaryDefineOwnMetadata: defineMetadata,\n        OrdinaryHasOwnMetadata: hasOwnMetadata,\n        OrdinaryGetOwnMetadata: getOwnMetadata,\n        OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n        OrdinaryDeleteMetadata: deleteMetadata\n      };\n      return provider;\n    }\n    /**\n     * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n     * then this module's metadata provider is assigned to the object.\n     */\n    function GetMetadataProvider(O, P, Create) {\n      var registeredProvider = metadataRegistry.getProvider(O, P);\n      if (!IsUndefined(registeredProvider)) {\n        return registeredProvider;\n      }\n      if (Create) {\n        if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n          return metadataProvider;\n        }\n        throw new Error(\"Illegal state.\");\n      }\n      return undefined;\n    }\n    // naive Map shim\n    function CreateMapPolyfill() {\n      var cacheSentinel = {};\n      var arraySentinel = [];\n      var MapIterator = /** @class */function () {\n        function MapIterator(keys, values, selector) {\n          this._index = 0;\n          this._keys = keys;\n          this._values = values;\n          this._selector = selector;\n        }\n        MapIterator.prototype[\"@@iterator\"] = function () {\n          return this;\n        };\n        MapIterator.prototype[iteratorSymbol] = function () {\n          return this;\n        };\n        MapIterator.prototype.next = function () {\n          var index = this._index;\n          if (index >= 0 && index < this._keys.length) {\n            var result = this._selector(this._keys[index], this._values[index]);\n            if (index + 1 >= this._keys.length) {\n              this._index = -1;\n              this._keys = arraySentinel;\n              this._values = arraySentinel;\n            } else {\n              this._index++;\n            }\n            return {\n              value: result,\n              done: false\n            };\n          }\n          return {\n            value: undefined,\n            done: true\n          };\n        };\n        MapIterator.prototype.throw = function (error) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n          throw error;\n        };\n        MapIterator.prototype.return = function (value) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n          return {\n            value: value,\n            done: true\n          };\n        };\n        return MapIterator;\n      }();\n      var Map = /** @class */function () {\n        function Map() {\n          this._keys = [];\n          this._values = [];\n          this._cacheKey = cacheSentinel;\n          this._cacheIndex = -2;\n        }\n        Object.defineProperty(Map.prototype, \"size\", {\n          get: function () {\n            return this._keys.length;\n          },\n          enumerable: true,\n          configurable: true\n        });\n        Map.prototype.has = function (key) {\n          return this._find(key, /*insert*/false) >= 0;\n        };\n        Map.prototype.get = function (key) {\n          var index = this._find(key, /*insert*/false);\n          return index >= 0 ? this._values[index] : undefined;\n        };\n        Map.prototype.set = function (key, value) {\n          var index = this._find(key, /*insert*/true);\n          this._values[index] = value;\n          return this;\n        };\n        Map.prototype.delete = function (key) {\n          var index = this._find(key, /*insert*/false);\n          if (index >= 0) {\n            var size = this._keys.length;\n            for (var i = index + 1; i < size; i++) {\n              this._keys[i - 1] = this._keys[i];\n              this._values[i - 1] = this._values[i];\n            }\n            this._keys.length--;\n            this._values.length--;\n            if (SameValueZero(key, this._cacheKey)) {\n              this._cacheKey = cacheSentinel;\n              this._cacheIndex = -2;\n            }\n            return true;\n          }\n          return false;\n        };\n        Map.prototype.clear = function () {\n          this._keys.length = 0;\n          this._values.length = 0;\n          this._cacheKey = cacheSentinel;\n          this._cacheIndex = -2;\n        };\n        Map.prototype.keys = function () {\n          return new MapIterator(this._keys, this._values, getKey);\n        };\n        Map.prototype.values = function () {\n          return new MapIterator(this._keys, this._values, getValue);\n        };\n        Map.prototype.entries = function () {\n          return new MapIterator(this._keys, this._values, getEntry);\n        };\n        Map.prototype[\"@@iterator\"] = function () {\n          return this.entries();\n        };\n        Map.prototype[iteratorSymbol] = function () {\n          return this.entries();\n        };\n        Map.prototype._find = function (key, insert) {\n          if (!SameValueZero(this._cacheKey, key)) {\n            this._cacheIndex = -1;\n            for (var i = 0; i < this._keys.length; i++) {\n              if (SameValueZero(this._keys[i], key)) {\n                this._cacheIndex = i;\n                break;\n              }\n            }\n          }\n          if (this._cacheIndex < 0 && insert) {\n            this._cacheIndex = this._keys.length;\n            this._keys.push(key);\n            this._values.push(undefined);\n          }\n          return this._cacheIndex;\n        };\n        return Map;\n      }();\n      return Map;\n      function getKey(key, _) {\n        return key;\n      }\n      function getValue(_, value) {\n        return value;\n      }\n      function getEntry(key, value) {\n        return [key, value];\n      }\n    }\n    // naive Set shim\n    function CreateSetPolyfill() {\n      var Set = /** @class */function () {\n        function Set() {\n          this._map = new _Map();\n        }\n        Object.defineProperty(Set.prototype, \"size\", {\n          get: function () {\n            return this._map.size;\n          },\n          enumerable: true,\n          configurable: true\n        });\n        Set.prototype.has = function (value) {\n          return this._map.has(value);\n        };\n        Set.prototype.add = function (value) {\n          return this._map.set(value, value), this;\n        };\n        Set.prototype.delete = function (value) {\n          return this._map.delete(value);\n        };\n        Set.prototype.clear = function () {\n          this._map.clear();\n        };\n        Set.prototype.keys = function () {\n          return this._map.keys();\n        };\n        Set.prototype.values = function () {\n          return this._map.keys();\n        };\n        Set.prototype.entries = function () {\n          return this._map.entries();\n        };\n        Set.prototype[\"@@iterator\"] = function () {\n          return this.keys();\n        };\n        Set.prototype[iteratorSymbol] = function () {\n          return this.keys();\n        };\n        return Set;\n      }();\n      return Set;\n    }\n    // naive WeakMap shim\n    function CreateWeakMapPolyfill() {\n      var UUID_SIZE = 16;\n      var keys = HashMap.create();\n      var rootKey = CreateUniqueKey();\n      return /** @class */function () {\n        function WeakMap() {\n          this._key = CreateUniqueKey();\n        }\n        WeakMap.prototype.has = function (target) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/false);\n          return table !== undefined ? HashMap.has(table, this._key) : false;\n        };\n        WeakMap.prototype.get = function (target) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/false);\n          return table !== undefined ? HashMap.get(table, this._key) : undefined;\n        };\n        WeakMap.prototype.set = function (target, value) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/true);\n          table[this._key] = value;\n          return this;\n        };\n        WeakMap.prototype.delete = function (target) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/false);\n          return table !== undefined ? delete table[this._key] : false;\n        };\n        WeakMap.prototype.clear = function () {\n          // NOTE: not a real clear, just makes the previous data unreachable\n          this._key = CreateUniqueKey();\n        };\n        return WeakMap;\n      }();\n      function CreateUniqueKey() {\n        var key;\n        do key = \"@@WeakMap@@\" + CreateUUID(); while (HashMap.has(keys, key));\n        keys[key] = true;\n        return key;\n      }\n      function GetOrCreateWeakMapTable(target, create) {\n        if (!hasOwn.call(target, rootKey)) {\n          if (!create) return undefined;\n          Object.defineProperty(target, rootKey, {\n            value: HashMap.create()\n          });\n        }\n        return target[rootKey];\n      }\n      function FillRandomBytes(buffer, size) {\n        for (var i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\n        return buffer;\n      }\n      function GenRandomBytes(size) {\n        if (typeof Uint8Array === \"function\") {\n          if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size));\n          if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size));\n          return FillRandomBytes(new Uint8Array(size), size);\n        }\n        return FillRandomBytes(new Array(size), size);\n      }\n      function CreateUUID() {\n        var data = GenRandomBytes(UUID_SIZE);\n        // mark as random - RFC 4122 § 4.4\n        data[6] = data[6] & 0x4f | 0x40;\n        data[8] = data[8] & 0xbf | 0x80;\n        var result = \"\";\n        for (var offset = 0; offset < UUID_SIZE; ++offset) {\n          var byte = data[offset];\n          if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\n          if (byte < 16) result += \"0\";\n          result += byte.toString(16).toLowerCase();\n        }\n        return result;\n      }\n    }\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n    function MakeDictionary(obj) {\n      obj.__ = undefined;\n      delete obj.__;\n      return obj;\n    }\n  });\n})(Reflect || (Reflect = {}));","map":{"version":3,"names":["Reflect","factory","root","globalThis","global","self","sloppyModeThis","exporter","makeExporter","target","previous","key","value","Object","defineProperty","configurable","writable","functionThis","Function","_","indirectEvalThis","eval","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","_Map","Map","entries","CreateMapPolyfill","_Set","Set","CreateSetPolyfill","_WeakMap","WeakMap","CreateWeakMapPolyfill","registrySymbol","for","metadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","CreateMetadataProvider","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsObject","IsNull","ToPropertyKey","DecorateProperty","IsConstructor","DecorateConstructor","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","provider","GetMetadataProvider","OrdinaryDeleteMetadata","i","length","decorated","descriptor","MetadataKey","O","P","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","set","keys","_i","ownKeys_1","hasKey","add","push","_a","parentKeys_1","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","result","OrdinaryToPrimitive","toString_1","toString","IsCallable","valueOf","toString_2","argument","ToString","isArray","SameValueZero","y","V","func","GetIterator","obj","method","IteratorValue","iterResult","IteratorStep","next","done","IteratorClose","f","proto","prototypeProto","constructor","CreateMetadataRegistry","fallback","CreateFallbackProvider","first","second","rest","targetProviderMap","registry","registerProvider","getProvider","setProvider","isExtensible","Error","getProviderNoCache","isProviderFor","providerMap","hasProvider","existingProvider","enumerable","targetMetadata","GetOrCreateMetadataMap","Create","createdTargetMetadata","metadataMap","delete","keysObj","k","nextValue","e","size","reflect","metadataOwner","metadataPropertySet","registeredProvider","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","index","throw","error","return","_cacheKey","_cacheIndex","_find","clear","getKey","getValue","getEntry","insert","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","data","offset","byte","toLowerCase","__"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/node_modules/reflect-metadata/Reflect.js"],"sourcesContent":["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet)) {\n                        return metadataPropertySet.has(P);\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,SAASE,eAAeA,CAACjF,MAAM,EAAEuD,WAAW,EAAE;MAC1C,IAAI,CAACK,QAAQ,CAAC5D,MAAM,CAAC,EACjB,MAAM,IAAI2D,SAAS,CAAC,CAAC;MACzB,IAAI,CAACF,WAAW,CAACF,WAAW,CAAC,EACzBA,WAAW,GAAGO,aAAa,CAACP,WAAW,CAAC;MAC5C,OAAO2B,oBAAoB,CAAClF,MAAM,EAAEuD,WAAW,CAAC;IACpD;IACAzD,QAAQ,CAAC,iBAAiB,EAAEmF,eAAe,CAAC;IAC5C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,SAASE,kBAAkBA,CAACnF,MAAM,EAAEuD,WAAW,EAAE;MAC7C,IAAI,CAACK,QAAQ,CAAC5D,MAAM,CAAC,EACjB,MAAM,IAAI2D,SAAS,CAAC,CAAC;MACzB,IAAI,CAACF,WAAW,CAACF,WAAW,CAAC,EACzBA,WAAW,GAAGO,aAAa,CAACP,WAAW,CAAC;MAC5C,OAAO6B,uBAAuB,CAACpF,MAAM,EAAEuD,WAAW,CAAC;IACvD;IACAzD,QAAQ,CAAC,oBAAoB,EAAEqF,kBAAkB,CAAC;IAClD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,SAASE,cAAcA,CAAClB,WAAW,EAAEnE,MAAM,EAAEuD,WAAW,EAAE;MACtD,IAAI,CAACK,QAAQ,CAAC5D,MAAM,CAAC,EACjB,MAAM,IAAI2D,SAAS,CAAC,CAAC;MACzB,IAAI,CAACF,WAAW,CAACF,WAAW,CAAC,EACzBA,WAAW,GAAGO,aAAa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"},"metadata":{},"sourceType":"script","externalDependencies":[]}