{"ast":null,"code":"import { __assign, __values } from \"tslib\";\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\nexport var SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport var HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\nexport function drawPoints(shape, cfg, container, shapeName, isStroke) {\n  var e_1, _a;\n  var style = getStyle(cfg, isStroke, !isStroke, 'r');\n  var points = shape.parsePoints(cfg.points);\n  var pointPosition = points[0];\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    var group = container.addGroup();\n    try {\n      for (var points_1 = __values(points), points_1_1 = points_1.next(); !points_1_1.done; points_1_1 = points_1.next()) {\n        var point = points_1_1.value;\n        group.addShape({\n          type: 'marker',\n          attrs: __assign(__assign(__assign({}, style), {\n            symbol: MarkerSymbols[shapeName] || shapeName\n          }), point)\n        });\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (points_1_1 && !points_1_1.done && (_a = points_1.return)) _a.call(points_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return group;\n  }\n  return container.addShape({\n    type: 'marker',\n    attrs: __assign(__assign(__assign({}, style), {\n      symbol: MarkerSymbols[shapeName] || shapeName\n    }), pointPosition)\n  });\n}","map":{"version":3,"names":["MarkerSymbols","getStyle","SHAPES","HOLLOW_SHAPES","drawPoints","shape","cfg","container","shapeName","isStroke","style","points","parsePoints","pointPosition","isStack","length","group","addGroup","points_1","__values","points_1_1","next","done","point","value","addShape","type","attrs","__assign","symbol"],"sources":["../../../../src/geometry/shape/point/util.ts"],"sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { ShapeInfo } from '../../../interface';\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\n\nexport const SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport const HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\nexport function drawPoints(\n  shape,\n  cfg: ShapeInfo,\n  container: IGroup,\n  shapeName: string,\n  isStroke: boolean\n): IShape | IGroup {\n  const style = getStyle(cfg, isStroke, !isStroke, 'r');\n  const points = shape.parsePoints(cfg.points);\n  let pointPosition = points[0];\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    const group = container.addGroup();\n    for (const point of points) {\n      group.addShape({\n        type: 'marker',\n        attrs: {\n          ...style,\n          symbol: MarkerSymbols[shapeName] || shapeName,\n          ...point,\n        },\n      });\n    }\n    return group;\n  }\n\n  return container.addShape({\n    type: 'marker',\n    attrs: {\n      ...style,\n      symbol: MarkerSymbols[shapeName] || shapeName,\n      ...pointPosition,\n    },\n  });\n}\n"],"mappings":";AAEA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,OAAO,IAAMC,MAAM,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,eAAe,CAAC;AACvG,OAAO,IAAMC,aAAa,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;AAExE;;;;;;;;;;AAUA,OAAM,SAAUC,UAAUA,CACxBC,KAAK,EACLC,GAAc,EACdC,SAAiB,EACjBC,SAAiB,EACjBC,QAAiB;;EAEjB,IAAMC,KAAK,GAAGT,QAAQ,CAACK,GAAG,EAAEG,QAAQ,EAAE,CAACA,QAAQ,EAAE,GAAG,CAAC;EACrD,IAAME,MAAM,GAAGN,KAAK,CAACO,WAAW,CAACN,GAAG,CAACK,MAAM,CAAC;EAC5C,IAAIE,aAAa,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC7B,IAAIL,GAAG,CAACQ,OAAO,EAAE;IACfD,aAAa,GAAGF,MAAM,CAAC,CAAC,CAAC;GAC1B,MAAM,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;IAC5B,IAAMC,KAAK,GAAGT,SAAS,CAACU,QAAQ,EAAE;;MAClC,KAAoB,IAAAC,QAAA,GAAAC,QAAA,CAAAR,MAAM,GAAAS,UAAA,GAAAF,QAAA,CAAAG,IAAA,KAAAD,UAAA,CAAAE,IAAA,EAAAF,UAAA,GAAAF,QAAA,CAAAG,IAAA,IAAE;QAAvB,IAAME,KAAK,GAAAH,UAAA,CAAAI,KAAA;QACdR,KAAK,CAACS,QAAQ,CAAC;UACbC,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAAC,QAAA,CAAAA,QAAA,CAAAA,QAAA,KACAlB,KAAK;YACRmB,MAAM,EAAE7B,aAAa,CAACQ,SAAS,CAAC,IAAIA;UAAS,IAC1Ce,KAAK;SAEX,CAAC;;;;;;;;;;;;;IAEJ,OAAOP,KAAK;;EAGd,OAAOT,SAAS,CAACkB,QAAQ,CAAC;IACxBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAAC,QAAA,CAAAA,QAAA,CAAAA,QAAA,KACAlB,KAAK;MACRmB,MAAM,EAAE7B,aAAa,CAACQ,SAAS,CAAC,IAAIA;IAAS,IAC1CK,aAAa;GAEnB,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}