{"ast":null,"code":"import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let {\n      Y\n    } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10\n    } = options;\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (!Y.isColumnVector() || Y.rows !== X.rows) {\n        throw new Error('Y must be a column vector of length X.rows');\n      }\n      u = Y;\n    } else {\n      u = X.getColumnVector(0);\n    }\n    let diff = 1;\n    let t, q, w, tOld;\n    for (let counter = 0; counter < maxIterations && diff > terminationCriteria; counter++) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()));\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}","map":{"version":3,"names":["Matrix","WrapperMatrix2D","nipals","constructor","X","options","checkMatrix","Y","scaleScores","maxIterations","terminationCriteria","u","Array","isArray","columnVector","isColumnVector","rows","Error","getColumnVector","diff","t","q","w","tOld","counter","transpose","mmul","div","get","norm","clone","sub","pow","sum","p","xResidual","residual","yResidual","mulS","s","betas","sqrt"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/layout/node_modules/ml-matrix/src/dc/nipals.js"],"sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (!Y.isColumnVector() || Y.rows !== X.rows) {\n        throw new Error('Y must be a column vector of length X.rows');\n      }\n      u = Y;\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}