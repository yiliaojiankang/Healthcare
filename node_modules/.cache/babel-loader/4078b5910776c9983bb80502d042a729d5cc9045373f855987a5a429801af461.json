{"ast":null,"code":"import { each, isNumber } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme';\n// 统一设置文本的角度\nfunction setLabelsAngle(labels, angle) {\n  each(labels, function (label) {\n    var x = label.attr('x');\n    var y = label.attr('y');\n    var matrix = getMatrixByAngle({\n      x: x,\n      y: y\n    }, angle);\n    label.attr('matrix', matrix);\n  });\n}\n// 旋转文本\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n  var labels = labelsGroup.getChildren();\n  if (!labels.length) {\n    return false;\n  }\n  if (!isVertical && labels.length < 2) {\n    // 水平时至少有两个时才旋转\n    return false;\n  }\n  var maxWidth = getMaxLabelWidth(labels);\n  var isOverlap = false;\n  if (isVertical) {\n    // limitLength 为 0 或者 null 时不生效\n    isOverlap = !!limitLength && maxWidth > limitLength;\n  } else {\n    // 同 limitLength 无关\n    var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n    isOverlap = maxWidth > tickWidth;\n  }\n  if (isOverlap) {\n    var angle = getAngle(limitLength, maxWidth);\n    setLabelsAngle(labels, angle);\n  }\n  return isOverlap;\n}\nexport function getDefault() {\n  return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @param  {number}  customRotate 自定义旋转角度\n * @return {boolean}             是否发生了旋转\n */\nexport function fixedAngle(isVertical, labelsGroup, limitLength, customRotate) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function () {\n    if (isNumber(customRotate)) {\n      return customRotate;\n    }\n    return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n  });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n    if (!length) {\n      // 如果没有设置 limitLength，则使用固定的角度旋转\n      return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    }\n    if (isVertical) {\n      // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n      return -Math.acos(length / maxWidth);\n    } else {\n      var angle = 0;\n      if (length > maxWidth) {\n        // 需要判定，asin 的参数 -1， 1\n        angle = Math.PI / 4;\n      } else {\n        angle = Math.asin(length / maxWidth);\n        if (angle > Math.PI / 4) {\n          // 大于 Math.PI / 4 时没意义\n          angle = Math.PI / 4;\n        }\n      }\n      return angle;\n    }\n  });\n}","map":{"version":3,"names":["each","isNumber","getMaxLabelWidth","getMatrixByAngle","Theme","setLabelsAngle","labels","angle","label","x","attr","y","matrix","labelRotate","isVertical","labelsGroup","limitLength","getAngle","getChildren","length","maxWidth","isOverlap","tickWidth","Math","abs","getDefault","fixedAngle","customRotate","verticalAxisRotate","horizontalAxisRotate","unfixedAngle","acos","PI","asin"],"sources":["../../../src/axis/overlap/auto-rotate.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}