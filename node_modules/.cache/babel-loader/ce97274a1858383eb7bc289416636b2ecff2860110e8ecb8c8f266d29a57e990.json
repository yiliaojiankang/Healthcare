{"ast":null,"code":"import { deepMix, get, isBoolean } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getName } from './scale';\nimport { vec2 } from '@antv/matrix-util';\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is rect\n * @param direction\n * @returns axis coordinate region\n */\nexport function getLineAxisRelativeRegion(direction) {\n  var start;\n  var end;\n  switch (direction) {\n    case DIRECTION.TOP:\n      start = {\n        x: 0,\n        y: 1\n      };\n      end = {\n        x: 1,\n        y: 1\n      };\n      break;\n    case DIRECTION.RIGHT:\n      start = {\n        x: 1,\n        y: 0\n      };\n      end = {\n        x: 1,\n        y: 1\n      };\n      break;\n    case DIRECTION.BOTTOM:\n      start = {\n        x: 0,\n        y: 0\n      };\n      end = {\n        x: 1,\n        y: 0\n      };\n      break;\n    case DIRECTION.LEFT:\n      start = {\n        x: 0,\n        y: 0\n      };\n      end = {\n        x: 0,\n        y: 1\n      };\n      break;\n    default:\n      start = end = {\n        x: 0,\n        y: 0\n      };\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is polar\n * @param coordinate\n * @returns axis coordinate region\n */\nexport function getCircleAxisRelativeRegion(coordinate) {\n  var start;\n  var end;\n  if (coordinate.isTransposed) {\n    start = {\n      x: 0,\n      y: 0\n    };\n    end = {\n      x: 1,\n      y: 0\n    };\n  } else {\n    start = {\n      x: 0,\n      y: 0\n    };\n    end = {\n      x: 0,\n      y: 1\n    };\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * @ignore\n * get the axis region from coordinate\n * @param coordinate\n * @param direction\n * @returns the axis region (start point, end point)\n */\nexport function getAxisRegion(coordinate, direction) {\n  var region = {\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 0\n    }\n  };\n  if (coordinate.isRect) {\n    region = getLineAxisRelativeRegion(direction);\n  } else if (coordinate.isPolar) {\n    region = getCircleAxisRelativeRegion(coordinate);\n  }\n  var start = region.start,\n    end = region.end;\n  return {\n    start: coordinate.convert(start),\n    end: coordinate.convert(end)\n  };\n}\n/**\n * @ignore\n * get axis factor\n * @param coordinate\n * @param direction\n * @returns factor\n */\nexport function getAxisFactor(coordinate, direction) {\n  // rect coordinate, by direction\n  if (coordinate.isRect) {\n    return coordinate.isTransposed ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction) ? 1 : -1 : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction) ? -1 : 1;\n  }\n  // polar y axis, by angle\n  if (coordinate.isPolar) {\n    var startAngle = coordinate.x.start;\n    return startAngle < 0 ? -1 : 1;\n  }\n  return 1;\n}\n/**\n * @ignore\n * whether the axis isVertical\n * @param region\n * @returns isVertical\n */\nexport function isVertical(region) {\n  var start = region.start,\n    end = region.end;\n  return start.x === end.x;\n}\n/**\n * @ignore\n * get factor by region (real position)\n * @param region\n * @param center\n * @returns factor\n */\nexport function getAxisFactorByRegion(region, center) {\n  var start = region.start,\n    end = region.end;\n  var isAxisVertical = isVertical(region);\n  // 垂直\n  if (isAxisVertical) {\n    // 左方,从下到上、右方,从上到下\n    if ((start.y - end.y) * (center.x - start.x) > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  } else {\n    // 下方,从左到右、上方,从右到做\n    if ((end.x - start.x) * (start.y - center.y) > 0) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n/**\n * @ignore\n * get the axis cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction axis direction\n * @returns axis theme cfg\n */\nexport function getAxisThemeCfg(theme, direction) {\n  var axisTheme = get(theme, ['components', 'axis'], {});\n  return deepMix({}, get(axisTheme, ['common'], {}), deepMix({}, get(axisTheme, [direction], {})));\n}\n/**\n * get the options of axis title，mix the cfg from theme, avoid common themeCfg not work\n * @param theme\n * @param direction\n * @param axisOptions\n * @returns axis title options\n */\nexport function getAxisTitleOptions(theme, direction, axisOptions) {\n  var axisTheme = get(theme, ['components', 'axis'], {});\n  return deepMix({}, get(axisTheme, ['common', 'title'], {}), deepMix({}, get(axisTheme, [direction, 'title'], {})), axisOptions);\n}\n/**\n * @ignore\n * get circle axis center and radius\n * @param coordinate\n */\nexport function getCircleAxisCenterRadius(coordinate) {\n  // @ts-ignore\n  var x = coordinate.x,\n    y = coordinate.y,\n    center = coordinate.circleCenter;\n  var isReflectY = y.start > y.end;\n  var start = coordinate.isTransposed ? coordinate.convert({\n    x: isReflectY ? 0 : 1,\n    y: 0\n  }) : coordinate.convert({\n    x: 0,\n    y: isReflectY ? 0 : 1\n  });\n  var startVector = [start.x - center.x, start.y - center.y];\n  var normalVector = [1, 0];\n  var startAngle = start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\n  var endAngle = startAngle + (x.end - x.start);\n  var radius = Math.sqrt(Math.pow(start.x - center.x, 2) + Math.pow(start.y - center.y, 2));\n  return {\n    center: center,\n    radius: radius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n}\n/**\n * @ignore\n * 从配置中获取单个字段的 axis 配置\n * @param axes\n * @param field\n * @returns the axis option of field\n */\nexport function getAxisOption(axes, field) {\n  if (isBoolean(axes)) {\n    return axes === false ? false : {};\n  }\n  return get(axes, [field]);\n}\n/**\n * @ignore\n * 如果配置了 position，则使用配置\n * @param axisOption\n * @param def\n */\nexport function getAxisDirection(axisOption, def) {\n  return get(axisOption, 'position', def);\n}\n/**\n * 获取 axis 的 title 文本\n * @param scale\n * @param axisOption\n */\nexport function getAxisTitleText(scale, axisOption) {\n  return get(axisOption, ['title', 'text'], getName(scale));\n}","map":{"version":3,"names":["deepMix","get","isBoolean","DIRECTION","getName","vec2","getLineAxisRelativeRegion","direction","start","end","TOP","x","y","RIGHT","BOTTOM","LEFT","getCircleAxisRelativeRegion","coordinate","isTransposed","getAxisRegion","region","isRect","isPolar","convert","getAxisFactor","includes","startAngle","isVertical","getAxisFactorByRegion","center","isAxisVertical","getAxisThemeCfg","theme","axisTheme","getAxisTitleOptions","axisOptions","getCircleAxisCenterRadius","circleCenter","isReflectY","startVector","normalVector","angle","endAngle","radius","Math","sqrt","pow","getAxisOption","axes","field","getAxisDirection","axisOption","def","getAxisTitleText","scale"],"sources":["../../src/util/axis.ts"],"sourcesContent":["import { deepMix, get, isBoolean } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Coordinate, Scale } from '../dependents';\nimport { AxisCfg, AxisOption, Point, Region } from '../interface';\nimport { getName } from './scale';\nimport { vec2 } from '@antv/matrix-util';\n\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is rect\n * @param direction\n * @returns axis coordinate region\n */\nexport function getLineAxisRelativeRegion(direction: DIRECTION): Region {\n  let start;\n  let end;\n\n  switch (direction) {\n    case DIRECTION.TOP:\n      start = { x: 0, y: 1 };\n      end = { x: 1, y: 1 };\n      break;\n    case DIRECTION.RIGHT:\n      start = { x: 1, y: 0 };\n      end = { x: 1, y: 1 };\n      break;\n    case DIRECTION.BOTTOM:\n      start = { x: 0, y: 0 };\n      end = { x: 1, y: 0 };\n      break;\n    case DIRECTION.LEFT:\n      start = { x: 0, y: 0 };\n      end = { x: 0, y: 1 };\n      break;\n    default:\n      start = end = { x: 0, y: 0 };\n  }\n\n  return { start, end };\n}\n\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is polar\n * @param coordinate\n * @returns axis coordinate region\n */\nexport function getCircleAxisRelativeRegion(coordinate: Coordinate) {\n  let start;\n  let end;\n  if (coordinate.isTransposed) {\n    start = {\n      x: 0,\n      y: 0,\n    };\n    end = {\n      x: 1,\n      y: 0,\n    };\n  } else {\n    start = {\n      x: 0,\n      y: 0,\n    };\n    end = {\n      x: 0,\n      y: 1,\n    };\n  }\n\n  return { start, end };\n}\n\n/**\n * @ignore\n * get the axis region from coordinate\n * @param coordinate\n * @param direction\n * @returns the axis region (start point, end point)\n */\nexport function getAxisRegion(coordinate: Coordinate, direction: DIRECTION): Region {\n  let region = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n  if (coordinate.isRect) {\n    region = getLineAxisRelativeRegion(direction);\n  } else if (coordinate.isPolar) {\n    region = getCircleAxisRelativeRegion(coordinate);\n  }\n\n  const { start, end } = region;\n  return {\n    start: coordinate.convert(start),\n    end: coordinate.convert(end),\n  };\n}\n\n/**\n * @ignore\n * get axis factor\n * @param coordinate\n * @param direction\n * @returns factor\n */\nexport function getAxisFactor(coordinate: Coordinate, direction: DIRECTION): number {\n  // rect coordinate, by direction\n  if (coordinate.isRect) {\n    return coordinate.isTransposed\n      ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction)\n        ? 1\n        : -1\n      : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction)\n      ? -1\n      : 1;\n  }\n\n  // polar y axis, by angle\n  if (coordinate.isPolar) {\n    const startAngle = coordinate.x.start;\n    return startAngle < 0 ? -1 : 1;\n  }\n\n  return 1;\n}\n\n/**\n * @ignore\n * whether the axis isVertical\n * @param region\n * @returns isVertical\n */\nexport function isVertical(region: Region): boolean {\n  const { start, end } = region;\n\n  return start.x === end.x;\n}\n\n/**\n * @ignore\n * get factor by region (real position)\n * @param region\n * @param center\n * @returns factor\n */\nexport function getAxisFactorByRegion(region: Region, center: Point): number {\n  const { start, end } = region;\n\n  const isAxisVertical = isVertical(region);\n\n  // 垂直\n  if (isAxisVertical) {\n    // 左方,从下到上、右方,从上到下\n    if ((start.y - end.y) * (center.x - start.x) > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  } else {\n    // 下方,从左到右、上方,从右到做\n    if ((end.x - start.x) * (start.y - center.y) > 0) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\n/**\n * @ignore\n * get the axis cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction axis direction\n * @returns axis theme cfg\n */\nexport function getAxisThemeCfg(theme: object, direction: string): object {\n  const axisTheme = get(theme, ['components', 'axis'], {});\n  return deepMix({}, get(axisTheme, ['common'], {}), deepMix({}, get(axisTheme, [direction], {})));\n}\n\n/**\n * get the options of axis title，mix the cfg from theme, avoid common themeCfg not work\n * @param theme\n * @param direction\n * @param axisOptions\n * @returns axis title options\n */\nexport function getAxisTitleOptions(theme: object, direction: string, axisOptions?: object): object {\n  const axisTheme = get(theme, ['components', 'axis'], {});\n  return deepMix(\n    {},\n    get(axisTheme, ['common', 'title'], {}),\n    deepMix({}, get(axisTheme, [direction, 'title'], {})),\n    axisOptions\n  );\n}\n\n/**\n * @ignore\n * get circle axis center and radius\n * @param coordinate\n */\nexport function getCircleAxisCenterRadius(coordinate: Coordinate) {\n  // @ts-ignore\n  const { x, y, circleCenter: center } = coordinate;\n  const isReflectY = y.start > y.end;\n  const start = coordinate.isTransposed\n    ? coordinate.convert({\n        x: isReflectY ? 0 : 1,\n        y: 0,\n      })\n    : coordinate.convert({\n        x: 0,\n        y: isReflectY ? 0 : 1,\n      });\n\n  const startVector: [number, number] = [start.x - center.x, start.y - center.y];\n  const normalVector: [number, number] = [1, 0];\n  const startAngle =\n    start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\n  const endAngle = startAngle + (x.end - x.start);\n  const radius = Math.sqrt((start.x - center.x) ** 2 + (start.y - center.y) ** 2);\n\n  return {\n    center,\n    radius,\n    startAngle,\n    endAngle,\n  };\n}\n\n/**\n * @ignore\n * 从配置中获取单个字段的 axis 配置\n * @param axes\n * @param field\n * @returns the axis option of field\n */\nexport function getAxisOption(axes: Record<string, AxisOption> | boolean, field: string) {\n  if (isBoolean(axes)) {\n    return axes === false ? false : {};\n  }\n  return get(axes, [field]);\n}\n\n/**\n * @ignore\n * 如果配置了 position，则使用配置\n * @param axisOption\n * @param def\n */\nexport function getAxisDirection(axisOption: AxisOption, def: DIRECTION): DIRECTION {\n  return get(axisOption, 'position', def);\n}\n\n/**\n * 获取 axis 的 title 文本\n * @param scale\n * @param axisOption\n */\nexport function getAxisTitleText(scale: Scale, axisOption: AxisCfg): string {\n  return get(axisOption, ['title', 'text'], getName(scale));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}