{"ast":null,"code":"import { each } from '@antv/util';\n// 自定义 Behavior 时候共有的方法\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {};\n  },\n  /**\n   * register event handler, behavior will auto bind events\n   * for example:\n   * return {\n   *  click: 'onClick'\n   * }\n   */\n  getEvents: function getEvents() {\n    return {};\n  },\n  updateCfg: function updateCfg(cfg) {\n    Object.assign(this, cfg);\n    return true;\n  },\n  shouldBegin: function shouldBegin() {\n    return true;\n  },\n  shouldUpdate: function shouldUpdate() {\n    return true;\n  },\n  shouldEnd: function shouldEnd() {\n    return true;\n  },\n  /**\n   * auto bind events when register behavior\n   * @param graph Graph instance\n   */\n  bind: function bind(graph) {\n    var _this = this;\n    var events = this.events;\n    this.graph = graph;\n    if (this.type === 'drag-canvas' || this.type === 'brush-select' || this.type === 'lasso-select') {\n      graph.get('canvas').set('draggable', true);\n    }\n    each(events, function (handler, event) {\n      graph.on(event, handler);\n    });\n    // To avoid the tabs switching makes the keydown related behaviors disable\n    document.addEventListener('visibilitychange', function () {\n      _this.keydown = false;\n    });\n  },\n  unbind: function unbind(graph) {\n    var events = this.events;\n    var draggable = graph.get('canvas').get('draggable');\n    if (this.type === 'drag-canvas' || this.type === 'brush-select' || this.type === 'lasso-select') {\n      graph.get('canvas').set('draggable', false);\n    }\n    each(events, function (handler, event) {\n      graph.off(event, handler);\n    });\n    graph.get('canvas').set('draggable', draggable);\n  },\n  get: function get(val) {\n    return this[val];\n  },\n  set: function set(key, val) {\n    this[key] = val;\n    return this;\n  }\n};","map":{"version":3,"names":["each","getDefaultCfg","getEvents","updateCfg","cfg","Object","assign","shouldBegin","shouldUpdate","shouldEnd","bind","graph","_this","events","type","get","set","handler","event","on","document","addEventListener","keydown","unbind","draggable","off","val","key"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-core/es/behavior/behaviorOption.js"],"sourcesContent":["import { each } from '@antv/util';\n// 自定义 Behavior 时候共有的方法\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {};\n  },\n  /**\n   * register event handler, behavior will auto bind events\n   * for example:\n   * return {\n   *  click: 'onClick'\n   * }\n   */\n  getEvents: function getEvents() {\n    return {};\n  },\n  updateCfg: function updateCfg(cfg) {\n    Object.assign(this, cfg);\n    return true;\n  },\n  shouldBegin: function shouldBegin() {\n    return true;\n  },\n  shouldUpdate: function shouldUpdate() {\n    return true;\n  },\n  shouldEnd: function shouldEnd() {\n    return true;\n  },\n  /**\n   * auto bind events when register behavior\n   * @param graph Graph instance\n   */\n  bind: function bind(graph) {\n    var _this = this;\n    var events = this.events;\n    this.graph = graph;\n    if (this.type === 'drag-canvas' || this.type === 'brush-select' || this.type === 'lasso-select') {\n      graph.get('canvas').set('draggable', true);\n    }\n    each(events, function (handler, event) {\n      graph.on(event, handler);\n    });\n    // To avoid the tabs switching makes the keydown related behaviors disable\n    document.addEventListener('visibilitychange', function () {\n      _this.keydown = false;\n    });\n  },\n  unbind: function unbind(graph) {\n    var events = this.events;\n    var draggable = graph.get('canvas').get('draggable');\n    if (this.type === 'drag-canvas' || this.type === 'brush-select' || this.type === 'lasso-select') {\n      graph.get('canvas').set('draggable', false);\n    }\n    each(events, function (handler, event) {\n      graph.off(event, handler);\n    });\n    graph.get('canvas').set('draggable', draggable);\n  },\n  get: function get(val) {\n    return this[val];\n  },\n  set: function set(key, val) {\n    this[key] = val;\n    return this;\n  }\n};"],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC;AACA,eAAe;EACbC,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;IACtC,OAAO,CAAC,CAAC;EACX,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE,SAASA,SAASA,CAAA,EAAG;IAC9B,OAAO,CAAC,CAAC;EACX,CAAC;EACDC,SAAS,EAAE,SAASA,SAASA,CAACC,GAAG,EAAE;IACjCC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEF,GAAG,CAAC;IACxB,OAAO,IAAI;EACb,CAAC;EACDG,WAAW,EAAE,SAASA,WAAWA,CAAA,EAAG;IAClC,OAAO,IAAI;EACb,CAAC;EACDC,YAAY,EAAE,SAASA,YAAYA,CAAA,EAAG;IACpC,OAAO,IAAI;EACb,CAAC;EACDC,SAAS,EAAE,SAASA,SAASA,CAAA,EAAG;IAC9B,OAAO,IAAI;EACb,CAAC;EACD;AACF;AACA;AACA;EACEC,IAAI,EAAE,SAASA,IAAIA,CAACC,KAAK,EAAE;IACzB,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,IAAI,CAACG,IAAI,KAAK,aAAa,IAAI,IAAI,CAACA,IAAI,KAAK,cAAc,IAAI,IAAI,CAACA,IAAI,KAAK,cAAc,EAAE;MAC/FH,KAAK,CAACI,GAAG,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;IAC5C;IACAhB,IAAI,CAACa,MAAM,EAAE,UAAUI,OAAO,EAAEC,KAAK,EAAE;MACrCP,KAAK,CAACQ,EAAE,CAACD,KAAK,EAAED,OAAO,CAAC;IAC1B,CAAC,CAAC;IACF;IACAG,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;MACxDT,KAAK,CAACU,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACJ,CAAC;EACDC,MAAM,EAAE,SAASA,MAAMA,CAACZ,KAAK,EAAE;IAC7B,IAAIE,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIW,SAAS,GAAGb,KAAK,CAACI,GAAG,CAAC,QAAQ,CAAC,CAACA,GAAG,CAAC,WAAW,CAAC;IACpD,IAAI,IAAI,CAACD,IAAI,KAAK,aAAa,IAAI,IAAI,CAACA,IAAI,KAAK,cAAc,IAAI,IAAI,CAACA,IAAI,KAAK,cAAc,EAAE;MAC/FH,KAAK,CAACI,GAAG,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC;IAC7C;IACAhB,IAAI,CAACa,MAAM,EAAE,UAAUI,OAAO,EAAEC,KAAK,EAAE;MACrCP,KAAK,CAACc,GAAG,CAACP,KAAK,EAAED,OAAO,CAAC;IAC3B,CAAC,CAAC;IACFN,KAAK,CAACI,GAAG,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,WAAW,EAAEQ,SAAS,CAAC;EACjD,CAAC;EACDT,GAAG,EAAE,SAASA,GAAGA,CAACW,GAAG,EAAE;IACrB,OAAO,IAAI,CAACA,GAAG,CAAC;EAClB,CAAC;EACDV,GAAG,EAAE,SAASA,GAAGA,CAACW,GAAG,EAAED,GAAG,EAAE;IAC1B,IAAI,CAACC,GAAG,CAAC,GAAGD,GAAG;IACf,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}