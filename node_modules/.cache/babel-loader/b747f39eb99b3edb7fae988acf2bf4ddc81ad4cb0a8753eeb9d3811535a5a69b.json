{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event, VIEW_LIFE_CIRCLE } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n// register liquid shape\nimport './shapes/liquid';\nimport { getLiquidData } from './utils';\nexport { addWaterWave } from './shapes/liquid';\n/**\n * 传说中的水波图\n */\nvar Liquid = /** @class */function (_super) {\n  __extends(Liquid, _super);\n  function Liquid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'liquid';\n    return _this;\n  }\n  /**\n   * 获取 饼图 默认配置项\n   * 供外部使用\n   */\n  Liquid.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 获取 水波图 默认配置项, 供 base 获取\n   */\n  Liquid.prototype.getDefaultOptions = function () {\n    return Liquid.getDefaultOptions();\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n  Liquid.prototype.changeData = function (percent) {\n    this.chart.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));\n    this.updateOption({\n      percent: percent\n    });\n    this.chart.data(getLiquidData(percent));\n    statistic({\n      chart: this.chart,\n      options: this.options\n    }, true);\n    this.chart.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));\n  };\n  /**\n   * 获取适配器\n   */\n  Liquid.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Liquid;\n}(Plot);\nexport { Liquid };","map":{"version":3,"names":["Event","VIEW_LIFE_CIRCLE","Plot","adaptor","statistic","DEFAULT_OPTIONS","getLiquidData","addWaterWave","Liquid","_super","__extends","_this","apply","arguments","type","getDefaultOptions","prototype","changeData","percent","chart","emit","BEFORE_CHANGE_DATA","fromData","updateOption","data","options","AFTER_CHANGE_DATA","getSchemaAdaptor"],"sources":["../../../src/plots/liquid/index.ts"],"sourcesContent":["import { Event, VIEW_LIFE_CIRCLE } from '@antv/g2';\nimport { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n// register liquid shape\nimport './shapes/liquid';\nimport { LiquidOptions } from './types';\nimport { getLiquidData } from './utils';\n\nexport { addWaterWave } from './shapes/liquid';\nexport type { LiquidOptions };\n\n/**\n * 传说中的水波图\n */\nexport class Liquid extends Plot<LiquidOptions> {\n  /**\n   * 获取 饼图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<LiquidOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'liquid';\n\n  /**\n   * 获取 水波图 默认配置项, 供 base 获取\n   */\n  protected getDefaultOptions(): Partial<LiquidOptions> {\n    return Liquid.getDefaultOptions();\n  }\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null)\n    );\n    this.updateOption({ percent });\n\n    this.chart.data(getLiquidData(percent));\n    statistic({ chart: this.chart, options: this.options }, true);\n\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null)\n    );\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<LiquidOptions> {\n    return adaptor;\n  }\n}\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,gBAAgB,QAAQ,UAAU;AAElD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,OAAO,EAAEC,SAAS,QAAQ,WAAW;AAC9C,SAASC,eAAe,QAAQ,aAAa;AAC7C;AACA,OAAO,iBAAiB;AAExB,SAASC,aAAa,QAAQ,SAAS;AAEvC,SAASC,YAAY,QAAQ,iBAAiB;AAG9C;;;AAGA,IAAAC,MAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAA5B,SAAAD,OAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IASE;IACOF,KAAA,CAAAG,IAAI,GAAW,QAAQ;;EAmChC;EA5CE;;;;EAION,MAAA,CAAAO,iBAAiB,GAAxB;IACE,OAAOV,eAAe;EACxB,CAAC;EAKD;;;EAGUG,MAAA,CAAAQ,SAAA,CAAAD,iBAAiB,GAA3B;IACE,OAAOP,MAAM,CAACO,iBAAiB,EAAE;EACnC,CAAC;EAED;;;;EAIOP,MAAA,CAAAQ,SAAA,CAAAC,UAAU,GAAjB,UAAkBC,OAAe;IAC/B,IAAI,CAACC,KAAK,CAACC,IAAI,CACbnB,gBAAgB,CAACoB,kBAAkB,EACnCrB,KAAK,CAACsB,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAElB,gBAAgB,CAACoB,kBAAkB,EAAE,IAAI,CAAC,CACtE;IACD,IAAI,CAACE,YAAY,CAAC;MAAEL,OAAO,EAAAA;IAAA,CAAE,CAAC;IAE9B,IAAI,CAACC,KAAK,CAACK,IAAI,CAAClB,aAAa,CAACY,OAAO,CAAC,CAAC;IACvCd,SAAS,CAAC;MAAEe,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEM,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,EAAE,IAAI,CAAC;IAE7D,IAAI,CAACN,KAAK,CAACC,IAAI,CACbnB,gBAAgB,CAACyB,iBAAiB,EAClC1B,KAAK,CAACsB,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAElB,gBAAgB,CAACyB,iBAAiB,EAAE,IAAI,CAAC,CACrE;EACH,CAAC;EAED;;;EAGUlB,MAAA,CAAAQ,SAAA,CAAAW,gBAAgB,GAA1B;IACE,OAAOxB,OAAO;EAChB,CAAC;EACH,OAAAK,MAAC;AAAD,CAAC,CA7C2BN,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}