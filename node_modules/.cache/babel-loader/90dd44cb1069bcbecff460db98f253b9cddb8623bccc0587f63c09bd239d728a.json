{"ast":null,"code":"import Matrix from './matrix';\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (typeof yMatrix === 'object' && !Matrix.isMatrix(yMatrix) && !Array.isArray(yMatrix)) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const {\n    center = true\n  } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}","map":{"version":3,"names":["Matrix","covariance","xMatrix","yMatrix","options","yIsSame","isMatrix","Array","isArray","rows","TypeError","center","cov","transpose","mmul","i","j","columns","set","get"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/layout/node_modules/ml-matrix/src/covariance.js"],"sourcesContent":["import Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,OAAO,SAASC,UAAUA,CAACC,OAAO,EAAEC,OAAO,GAAGD,OAAO,EAAEE,OAAO,GAAG,CAAC,CAAC,EAAE;EACnEF,OAAO,GAAG,IAAIF,MAAM,CAACE,OAAO,CAAC;EAC7B,IAAIG,OAAO,GAAG,KAAK;EACnB,IACE,OAAOF,OAAO,KAAK,QAAQ,IAC3B,CAACH,MAAM,CAACM,QAAQ,CAACH,OAAO,CAAC,IACzB,CAACI,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,EACvB;IACAC,OAAO,GAAGD,OAAO;IACjBA,OAAO,GAAGD,OAAO;IACjBG,OAAO,GAAG,IAAI;EAChB,CAAC,MAAM;IACLF,OAAO,GAAG,IAAIH,MAAM,CAACG,OAAO,CAAC;EAC/B;EACA,IAAID,OAAO,CAACO,IAAI,KAAKN,OAAO,CAACM,IAAI,EAAE;IACjC,MAAM,IAAIC,SAAS,CAAC,iDAAiD,CAAC;EACxE;EACA,MAAM;IAAEC,MAAM,GAAG;EAAK,CAAC,GAAGP,OAAO;EACjC,IAAIO,MAAM,EAAE;IACVT,OAAO,GAAGA,OAAO,CAACS,MAAM,CAAC,QAAQ,CAAC;IAClC,IAAI,CAACN,OAAO,EAAE;MACZF,OAAO,GAAGA,OAAO,CAACQ,MAAM,CAAC,QAAQ,CAAC;IACpC;EACF;EACA,MAAMC,GAAG,GAAGV,OAAO,CAACW,SAAS,CAAC,CAAC,CAACC,IAAI,CAACX,OAAO,CAAC;EAC7C,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACH,IAAI,EAAEM,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACK,OAAO,EAAED,CAAC,EAAE,EAAE;MACpCJ,GAAG,CAACM,GAAG,CAACH,CAAC,EAAEC,CAAC,EAAEJ,GAAG,CAACO,GAAG,CAACJ,CAAC,EAAEC,CAAC,CAAC,IAAI,CAAC,IAAId,OAAO,CAACO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD;EACF;EACA,OAAOG,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}