{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceNBody = void 0;\nvar d3_quadtree_1 = require(\"d3-quadtree\");\nvar theta2 = 0.81; // Barnes-Hut approximation threshold\nvar epsilon = 0.1; // 为了防止出现除0的情况，加一个epsilon\nfunction forceNBody(nodes, nodeMap, factor, coulombDisScale2, accArray) {\n  var weightParam = factor / coulombDisScale2;\n  var data = nodes.map(function (n, i) {\n    // @ts-ignore\n    var mappedNode = nodeMap[n.id];\n    // @ts-ignore\n    var nodeData = mappedNode.data,\n      x = mappedNode.x,\n      y = mappedNode.y,\n      size = mappedNode.size;\n    var nodeStrength = nodeData.layout.force.nodeStrength;\n    return {\n      x: x,\n      y: y,\n      size: size,\n      index: i,\n      vx: 0,\n      vy: 0,\n      weight: weightParam * nodeStrength\n    };\n  });\n  var tree = (0, d3_quadtree_1.quadtree)(data, function (d) {\n    return d.x;\n  }, function (d) {\n    return d.y;\n  }).visitAfter(accumulate); // init internal node\n  data.forEach(function (n) {\n    // @ts-ignore\n    computeForce(n, tree);\n  });\n  data.map(function (n, i) {\n    // @ts-ignore\n    var mappedNode = nodeMap[nodes[i].id];\n    // @ts-ignore\n    var _a = mappedNode.data.layout.force.mass,\n      mass = _a === void 0 ? 1 : _a;\n    // 从 0 开始，= 初始化 + 加斥力\n    accArray[2 * i] = n.vx / mass;\n    accArray[2 * i + 1] = n.vy / mass;\n  });\n  return accArray;\n}\nexports.forceNBody = forceNBody;\n// @ts-ignore\nfunction accumulate(quad) {\n  var accWeight = 0;\n  var accX = 0;\n  var accY = 0;\n  if (quad.length) {\n    // internal node, accumulate 4 child quads\n    for (var i = 0; i < 4; i++) {\n      var q = quad[i];\n      if (q && q.weight) {\n        accWeight += q.weight;\n        accX += q.x * q.weight;\n        accY += q.y * q.weight;\n      }\n    }\n    quad.x = accX / accWeight;\n    quad.y = accY / accWeight;\n    quad.weight = accWeight;\n  } else {\n    // leaf node\n    var q = quad;\n    quad.x = q.data.x;\n    quad.y = q.data.y;\n    quad.weight = q.data.weight;\n  }\n}\n// @ts-ignore\nvar apply = function (quad, x1, y1, x2, y2, node) {\n  var dx = node.x - quad.x || epsilon;\n  var dy = node.y - quad.y || epsilon;\n  var width = x2 - x1;\n  var len2 = dx * dx + dy * dy;\n  var len3 = Math.sqrt(len2) * len2;\n  // far node, apply Barnes-Hut approximation\n  if (width * width * theta2 < len2) {\n    var param = quad.weight / len3;\n    node.vx += dx * param;\n    node.vy += dy * param;\n    return true;\n  }\n  // near quad, compute force directly\n  if (quad.length) return false; // internal node, visit children\n  // leaf node\n  if (quad.data !== node) {\n    var param = quad.data.weight / len3;\n    node.vx += dx * param;\n    node.vy += dy * param;\n  }\n};\n// @ts-ignore\nfunction computeForce(node, tree) {\n  // @ts-ignore\n  tree.visit(function (quad, x1, y1, x2, y2) {\n    return apply(quad, x1, y1, x2, y2, node);\n  });\n}","map":{"version":3,"names":["d3_quadtree_1","require","theta2","epsilon","forceNBody","nodes","nodeMap","factor","coulombDisScale2","accArray","weightParam","data","map","n","i","mappedNode","id","nodeData","x","y","size","nodeStrength","layout","force","index","vx","vy","weight","tree","quadtree","d","visitAfter","accumulate","forEach","computeForce","_a","mass","exports","quad","accWeight","accX","accY","length","q","apply","x1","y1","x2","y2","node","dx","dy","width","len2","len3","Math","sqrt","param","visit"],"sources":["../../../src/layout/force2/ForceNBody.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}