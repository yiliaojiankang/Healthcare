{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { rgb2arr } from '@antv/l7-utils';\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_frag.glsl' */\nvar simplePointFrag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nin vec4 v_color;\\nin float v_blur;\\nin float v_innerRadius;\\n\\nout vec4 outputColor;\\n\\n#pragma include \\\"picking\\\"\\nvoid main() {\\n  vec2 center = vec2(0.5);\\n\\n  // Tip: \\u7247\\u5143\\u5230\\u4E2D\\u5FC3\\u70B9\\u7684\\u8DDD\\u79BB 0 - 1\\n  float fragmengTocenter = distance(center, gl_PointCoord) * 2.0;\\n  // Tip: \\u7247\\u5143\\u7684\\u526A\\u5207\\u6210\\u5706\\u5F62\\n  float circleClipOpacity = 1.0 - smoothstep(v_blur, 1.0, fragmengTocenter);\\n\\n\\n  if(v_innerRadius < 0.99) {\\n    // \\u5F53\\u5B58\\u5728 stroke \\u4E14 stroke > 0.01\\n    float blurWidth = (1.0 - v_blur)/2.0;\\n    vec4 stroke = vec4(u_stroke_color.rgb, u_stroke_opacity);\\n    if(fragmengTocenter > v_innerRadius + blurWidth) {\\n      outputColor = stroke;\\n    } else if(fragmengTocenter > v_innerRadius - blurWidth){\\n      float mixR = (fragmengTocenter - (v_innerRadius - blurWidth)) / (blurWidth * 2.0);\\n      outputColor = mix(v_color, stroke, mixR);\\n    } else {\\n      outputColor = v_color;\\n    }\\n  } else {\\n    // \\u5F53\\u4E0D\\u5B58\\u5728 stroke \\u6216 stroke <= 0.01\\n    outputColor = v_color;\\n  }\\n\\n  outputColor = filterColor(outputColor);\\n  \\n  if(u_additive > 0.0) {\\n    outputColor *= circleClipOpacity;\\n  } else {\\n    outputColor.a *= circleClipOpacity;\\n  }\\n\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_vert.glsl' */\nvar simplePointVert = \"\\nlayout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in float a_Size;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nout vec4 v_color;\\nout float v_blur;\\nout float v_innerRadius;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"project\\\"\\nvoid main() {\\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\\n  v_blur = 1.0 - max(2.0/a_Size, 0.05);\\n  v_innerRadius = max((a_Size - u_stroke_width) / a_Size, 0.0);\\n  \\n  vec2 offset = project_pixel(u_offsets);\\n  \\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) { // gaode2.x\\n    gl_Position = u_Mvp * vec4(a_Position.xy + offset, a_Position.z, 1.0);\\n  } else { // else\\n    vec4 project_pos = project_position(vec4(a_Position, 1.0)) + vec4(a_Size / 2.,-a_Size /2.,0.,0.);\\n    gl_Position = project_common_position_to_clipspace(vec4(vec2(project_pos.xy+offset),project_pos.z,project_pos.w));\\n  }\\n  \\n  gl_PointSize = a_Size * 2.0 * u_DevicePixelRatio;\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport function PointTriangulation(feature) {\n  var coordinates = feature.coordinates;\n  return {\n    vertices: _toConsumableArray(coordinates),\n    indices: [0],\n    size: coordinates.length\n  };\n}\nvar SimplePointModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(SimplePointModel, _BaseModel);\n  var _super = _createSuper(SimplePointModel);\n  function SimplePointModel() {\n    _classCallCheck(this, SimplePointModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SimplePointModel, [{\n    key: \"getDefaultStyle\",\n    value: function getDefaultStyle() {\n      return {\n        blend: 'additive'\n      };\n    }\n  }, {\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        blend = _ref.blend,\n        _ref$strokeOpacity = _ref.strokeOpacity,\n        strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 0 : _ref$strokeWidth,\n        _ref$stroke = _ref.stroke,\n        stroke = _ref$stroke === void 0 ? '#fff' : _ref$stroke;\n      var commonOptions = {\n        u_stroke_color: rgb2arr(stroke),\n        u_additive: blend === 'additive' ? 1.0 : 0.0,\n        u_stroke_opacity: strokeOpacity,\n        u_stroke_width: strokeWidth\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.layer.triangulation = PointTriangulation;\n              this.initUniformsBuffer();\n              _context2.next = 4;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointSimple',\n                vertexShader: simplePointVert,\n                fragmentShader: simplePointFrag,\n                inject: this.getInject(),\n                triangulation: PointTriangulation,\n                depth: {\n                  enable: false\n                },\n                primitive: gl.POINTS\n              });\n            case 4:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            return Array.isArray(size) ? [size[0]] : [size];\n          }\n        }\n      });\n    }\n  }]);\n  return SimplePointModel;\n}(BaseModel);\nexport { SimplePointModel as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_toConsumableArray","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","BaseModel","rgb2arr","ShaderLocation","simplePointFrag","simplePointVert","PointTriangulation","feature","coordinates","vertices","indices","size","length","SimplePointModel","_BaseModel","_super","key","value","getDefaultStyle","blend","getCommonUniformsInfo","_ref","layer","getLayerConfig","_ref$strokeOpacity","strokeOpacity","_ref$strokeWidth","strokeWidth","_ref$stroke","stroke","commonOptions","u_stroke_color","u_additive","u_stroke_opacity","u_stroke_width","commonBufferInfo","getUniformsBufferInfo","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","buildModels","stop","initModels","_buildModels","_callee2","model","_callee2$","_context2","triangulation","initUniformsBuffer","buildLayerModel","moduleName","vertexShader","fragmentShader","inject","getInject","depth","enable","primitive","POINTS","sent","registerBuiltinAttributes","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","SIZE","buffer","usage","DYNAMIC_DRAW","data","FLOAT","update","_feature$size","Array","isArray","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/point/models/billboard_point.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { rgb2arr } from '@antv/l7-utils';\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_frag.glsl' */\nvar simplePointFrag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nin vec4 v_color;\\nin float v_blur;\\nin float v_innerRadius;\\n\\nout vec4 outputColor;\\n\\n#pragma include \\\"picking\\\"\\nvoid main() {\\n  vec2 center = vec2(0.5);\\n\\n  // Tip: \\u7247\\u5143\\u5230\\u4E2D\\u5FC3\\u70B9\\u7684\\u8DDD\\u79BB 0 - 1\\n  float fragmengTocenter = distance(center, gl_PointCoord) * 2.0;\\n  // Tip: \\u7247\\u5143\\u7684\\u526A\\u5207\\u6210\\u5706\\u5F62\\n  float circleClipOpacity = 1.0 - smoothstep(v_blur, 1.0, fragmengTocenter);\\n\\n\\n  if(v_innerRadius < 0.99) {\\n    // \\u5F53\\u5B58\\u5728 stroke \\u4E14 stroke > 0.01\\n    float blurWidth = (1.0 - v_blur)/2.0;\\n    vec4 stroke = vec4(u_stroke_color.rgb, u_stroke_opacity);\\n    if(fragmengTocenter > v_innerRadius + blurWidth) {\\n      outputColor = stroke;\\n    } else if(fragmengTocenter > v_innerRadius - blurWidth){\\n      float mixR = (fragmengTocenter - (v_innerRadius - blurWidth)) / (blurWidth * 2.0);\\n      outputColor = mix(v_color, stroke, mixR);\\n    } else {\\n      outputColor = v_color;\\n    }\\n  } else {\\n    // \\u5F53\\u4E0D\\u5B58\\u5728 stroke \\u6216 stroke <= 0.01\\n    outputColor = v_color;\\n  }\\n\\n  outputColor = filterColor(outputColor);\\n  \\n  if(u_additive > 0.0) {\\n    outputColor *= circleClipOpacity;\\n  } else {\\n    outputColor.a *= circleClipOpacity;\\n  }\\n\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_vert.glsl' */\nvar simplePointVert = \"\\nlayout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in float a_Size;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nout vec4 v_color;\\nout float v_blur;\\nout float v_innerRadius;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"project\\\"\\nvoid main() {\\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\\n  v_blur = 1.0 - max(2.0/a_Size, 0.05);\\n  v_innerRadius = max((a_Size - u_stroke_width) / a_Size, 0.0);\\n  \\n  vec2 offset = project_pixel(u_offsets);\\n  \\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) { // gaode2.x\\n    gl_Position = u_Mvp * vec4(a_Position.xy + offset, a_Position.z, 1.0);\\n  } else { // else\\n    vec4 project_pos = project_position(vec4(a_Position, 1.0)) + vec4(a_Size / 2.,-a_Size /2.,0.,0.);\\n    gl_Position = project_common_position_to_clipspace(vec4(vec2(project_pos.xy+offset),project_pos.z,project_pos.w));\\n  }\\n  \\n  gl_PointSize = a_Size * 2.0 * u_DevicePixelRatio;\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport function PointTriangulation(feature) {\n  var coordinates = feature.coordinates;\n  return {\n    vertices: _toConsumableArray(coordinates),\n    indices: [0],\n    size: coordinates.length\n  };\n}\nvar SimplePointModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(SimplePointModel, _BaseModel);\n  var _super = _createSuper(SimplePointModel);\n  function SimplePointModel() {\n    _classCallCheck(this, SimplePointModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SimplePointModel, [{\n    key: \"getDefaultStyle\",\n    value: function getDefaultStyle() {\n      return {\n        blend: 'additive'\n      };\n    }\n  }, {\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        blend = _ref.blend,\n        _ref$strokeOpacity = _ref.strokeOpacity,\n        strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 0 : _ref$strokeWidth,\n        _ref$stroke = _ref.stroke,\n        stroke = _ref$stroke === void 0 ? '#fff' : _ref$stroke;\n      var commonOptions = {\n        u_stroke_color: rgb2arr(stroke),\n        u_additive: blend === 'additive' ? 1.0 : 0.0,\n        u_stroke_opacity: strokeOpacity,\n        u_stroke_width: strokeWidth\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.layer.triangulation = PointTriangulation;\n              this.initUniformsBuffer();\n              _context2.next = 4;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointSimple',\n                vertexShader: simplePointVert,\n                fragmentShader: simplePointFrag,\n                inject: this.getInject(),\n                triangulation: PointTriangulation,\n                depth: {\n                  enable: false\n                },\n                primitive: gl.POINTS\n              });\n            case 4:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            return Array.isArray(size) ? [size[0]] : [size];\n          }\n        }\n      });\n    }\n  }]);\n  return SimplePointModel;\n}(BaseModel);\nexport { SimplePointModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}