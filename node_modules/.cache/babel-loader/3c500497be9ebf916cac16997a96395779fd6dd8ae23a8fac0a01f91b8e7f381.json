{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { calBase } from '../util/math';\nimport Continuous from './base';\n/**\n * Pow 度量，处理非均匀分布\n */\nvar Pow = /** @class */function (_super) {\n  __extends(Pow, _super);\n  function Pow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'pow';\n    return _this;\n  }\n  /**\n   * @override\n   */\n  Pow.prototype.invert = function (value) {\n    var percent = this.getInvertPercent(value);\n    var exponent = this.exponent;\n    var max = calBase(exponent, this.max);\n    var min = calBase(exponent, this.min);\n    var tmp = percent * (max - min) + min;\n    var factor = tmp >= 0 ? 1 : -1;\n    return Math.pow(tmp, exponent) * factor;\n  };\n  Pow.prototype.initCfg = function () {\n    this.tickMethod = 'pow';\n    this.exponent = 2;\n    this.tickCount = 5;\n    this.nice = true;\n  };\n  // 获取度量计算时，value占的定义域百分比\n  Pow.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n    if (max === min) {\n      return 0;\n    }\n    var exponent = this.exponent;\n    var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\n    return percent;\n  };\n  return Pow;\n}(Continuous);\nexport default Pow;","map":{"version":3,"names":["calBase","Continuous","Pow","_super","__extends","_this","apply","arguments","type","prototype","invert","value","percent","getInvertPercent","exponent","max","min","tmp","factor","Math","pow","initCfg","tickMethod","tickCount","nice","getScalePercent"],"sources":["../../src/continuous/pow.ts"],"sourcesContent":[null],"mappings":";AAAA,SAASA,OAAO,QAAQ,cAAc;AACtC,OAAOC,UAAU,MAAM,QAAQ;AAE/B;;;AAGA,IAAAC,GAAA,0BAAAC,MAAA;EAAkBC,SAAA,CAAAF,GAAA,EAAAC,MAAA;EAAlB,SAAAD,IAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACkBF,KAAA,CAAAG,IAAI,GAAW,KAAK;;EAsCtC;EAhCE;;;EAGON,GAAA,CAAAO,SAAA,CAAAC,MAAM,GAAb,UAAcC,KAAa;IACzB,IAAMC,OAAO,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;IAC5C,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAMC,GAAG,GAAGf,OAAO,CAACc,QAAQ,EAAE,IAAI,CAACC,GAAG,CAAC;IACvC,IAAMC,GAAG,GAAGhB,OAAO,CAACc,QAAQ,EAAE,IAAI,CAACE,GAAG,CAAC;IACvC,IAAMC,GAAG,GAAGL,OAAO,IAAIG,GAAG,GAAGC,GAAG,CAAC,GAAGA,GAAG;IACvC,IAAME,MAAM,GAAGD,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,OAAOE,IAAI,CAACC,GAAG,CAACH,GAAG,EAAEH,QAAQ,CAAC,GAAGI,MAAM;EACzC,CAAC;EAEShB,GAAA,CAAAO,SAAA,CAAAY,OAAO,GAAjB;IACE,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACR,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACS,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,IAAI,GAAG,IAAI;EAClB,CAAC;EAED;EACUtB,GAAA,CAAAO,SAAA,CAAAgB,eAAe,GAAzB,UAA0Bd,KAAa;IACrC,IAAMI,GAAG,GAAG,IAAI,CAACA,GAAG;IACpB,IAAMC,GAAG,GAAG,IAAI,CAACA,GAAG;IACpB,IAAID,GAAG,KAAKC,GAAG,EAAE;MACf,OAAO,CAAC;;IAEV,IAAMF,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAMF,OAAO,GACX,CAACZ,OAAO,CAACc,QAAQ,EAAEH,KAAK,CAAC,GAAGX,OAAO,CAACc,QAAQ,EAAEE,GAAG,CAAC,KAAKhB,OAAO,CAACc,QAAQ,EAAEC,GAAG,CAAC,GAAGf,OAAO,CAACc,QAAQ,EAAEE,GAAG,CAAC,CAAC;IACzG,OAAOJ,OAAO;EAChB,CAAC;EACH,OAAAV,GAAC;AAAD,CAAC,CAvCiBD,UAAU;AAyC5B,eAAeC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}