{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { DEFAULT_EXTENT } from \"../const\";\n// // https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport function osmLonLat2TileXY(lon, lat, zoom) {\n  var x = Math.floor((lon + 180) / 360 * Math.pow(2, zoom));\n  var y = Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom));\n  return [x, y];\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport function osmTileXY2LonLat(x, y, zoom) {\n  var lon = x / Math.pow(2, zoom) * 360 - 180;\n  var n = Math.PI - 2 * Math.PI * y / Math.pow(2, zoom);\n  var lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lon, lat];\n}\n\n/**\n * 获取当前瓦片的经纬度边界\n */\nexport var tileToBounds = function tileToBounds(x, y, z) {\n  var _osmTileXY2LonLat = osmTileXY2LonLat(x, y, z),\n    _osmTileXY2LonLat2 = _slicedToArray(_osmTileXY2LonLat, 2),\n    minLng = _osmTileXY2LonLat2[0],\n    maxLat = _osmTileXY2LonLat2[1];\n  var _osmTileXY2LonLat3 = osmTileXY2LonLat(x + 1, y + 1, z),\n    _osmTileXY2LonLat4 = _slicedToArray(_osmTileXY2LonLat3, 2),\n    maxLng = _osmTileXY2LonLat4[0],\n    minLat = _osmTileXY2LonLat4[1];\n  return [minLng, minLat, maxLng, maxLat];\n};\n\n/**\n * 获取当前视野层级瓦片的所有索引\n * latLonBounds          => pixelBounds           => tileRange             => tileIndices\n * {topLeft,bottomRight} => {topLeft,bottomRight} => {topLeft,bottomRight} => {x, y, z}[]\n * 如果当前 zoom 层级小于 minZoom 则返回空数组\n * 如果当前 zoom 层级大于 maxZoom 则返回最大的瓦片索引\n */\nexport function getTileIndices(_ref) {\n  var zoom = _ref.zoom,\n    latLonBounds = _ref.latLonBounds,\n    _ref$maxZoom = _ref.maxZoom,\n    maxZoom = _ref$maxZoom === void 0 ? Infinity : _ref$maxZoom,\n    _ref$minZoom = _ref.minZoom,\n    minZoom = _ref$minZoom === void 0 ? 0 : _ref$minZoom,\n    _ref$zoomOffset = _ref.zoomOffset,\n    zoomOffset = _ref$zoomOffset === void 0 ? 0 : _ref$zoomOffset,\n    _ref$extent = _ref.extent,\n    extent = _ref$extent === void 0 ? DEFAULT_EXTENT : _ref$extent;\n  var z = Math.ceil(zoom) + zoomOffset;\n  // 如果当前 zoom 层级小于 minZoom\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    return [];\n  }\n\n  // 如果当前 zoom 层级大于 maxZoom\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  var _latLonBounds = _slicedToArray(latLonBounds, 4),\n    minLng = _latLonBounds[0],\n    minLat = _latLonBounds[1],\n    maxLng = _latLonBounds[2],\n    maxLat = _latLonBounds[3];\n  var bounds = [Math.max(minLng, extent[0]), Math.max(minLat, extent[1]), Math.min(maxLng, extent[2]), Math.min(maxLat, extent[3])];\n  var indices = [];\n  var _osmLonLat2TileXY = osmLonLat2TileXY(bounds[0], bounds[1], z),\n    _osmLonLat2TileXY2 = _slicedToArray(_osmLonLat2TileXY, 2),\n    minX = _osmLonLat2TileXY2[0],\n    maxY = _osmLonLat2TileXY2[1];\n  var _osmLonLat2TileXY3 = osmLonLat2TileXY(bounds[2], bounds[3], z),\n    _osmLonLat2TileXY4 = _slicedToArray(_osmLonLat2TileXY3, 2),\n    maxX = _osmLonLat2TileXY4[0],\n    minY = _osmLonLat2TileXY4[1];\n  for (var x = minX; x <= maxX; x++) {\n    for (var y = minY; y <= maxY; y++) {\n      indices.push({\n        x: x,\n        y: y,\n        z: z\n      });\n    }\n  }\n\n  // 计算中心瓦片索引\n  var centerX = (maxX + minX) / 2;\n  var centerY = (maxY + minY) / 2;\n  var distance = function distance(x, y) {\n    return Math.abs(x - centerX) + Math.abs(y - centerY);\n  };\n  // 通过离中心瓦片距离排序，越近的排在前面\n  indices.sort(function (a, b) {\n    return distance(a.x, a.y) - distance(b.x, b.y);\n  });\n  return indices;\n}\n\n/**\n * Warp 瓦片索引，支持对称子午线瓦片连续\n */\nexport var getTileWarpXY = function getTileWarpXY(x, y, z) {\n  var wrap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var scale = Math.pow(2, z);\n  var maxIndex = scale - 1;\n  var distance = scale;\n  var warpX = x;\n  var warpY = y;\n  if (wrap) {\n    if (warpX < 0) {\n      warpX = warpX + distance;\n    } else if (warpX > maxIndex) {\n      warpX = warpX % distance;\n    }\n  }\n  return {\n    warpX: warpX,\n    warpY: warpY\n  };\n};","map":{"version":3,"names":["_slicedToArray","DEFAULT_EXTENT","osmLonLat2TileXY","lon","lat","zoom","x","Math","floor","pow","y","log","tan","PI","cos","osmTileXY2LonLat","n","atan","exp","tileToBounds","z","_osmTileXY2LonLat","_osmTileXY2LonLat2","minLng","maxLat","_osmTileXY2LonLat3","_osmTileXY2LonLat4","maxLng","minLat","getTileIndices","_ref","latLonBounds","_ref$maxZoom","maxZoom","Infinity","_ref$minZoom","minZoom","_ref$zoomOffset","zoomOffset","_ref$extent","extent","ceil","Number","isFinite","_latLonBounds","bounds","max","min","indices","_osmLonLat2TileXY","_osmLonLat2TileXY2","minX","maxY","_osmLonLat2TileXY3","_osmLonLat2TileXY4","maxX","minY","push","centerX","centerY","distance","abs","sort","a","b","getTileWarpXY","wrap","arguments","length","undefined","scale","maxIndex","warpX","warpY"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-utils/es/tileset-manager/utils/lonlat-tile.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { DEFAULT_EXTENT } from \"../const\";\n// // https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport function osmLonLat2TileXY(lon, lat, zoom) {\n  var x = Math.floor((lon + 180) / 360 * Math.pow(2, zoom));\n  var y = Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom));\n  return [x, y];\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport function osmTileXY2LonLat(x, y, zoom) {\n  var lon = x / Math.pow(2, zoom) * 360 - 180;\n  var n = Math.PI - 2 * Math.PI * y / Math.pow(2, zoom);\n  var lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lon, lat];\n}\n\n/**\n * 获取当前瓦片的经纬度边界\n */\nexport var tileToBounds = function tileToBounds(x, y, z) {\n  var _osmTileXY2LonLat = osmTileXY2LonLat(x, y, z),\n    _osmTileXY2LonLat2 = _slicedToArray(_osmTileXY2LonLat, 2),\n    minLng = _osmTileXY2LonLat2[0],\n    maxLat = _osmTileXY2LonLat2[1];\n  var _osmTileXY2LonLat3 = osmTileXY2LonLat(x + 1, y + 1, z),\n    _osmTileXY2LonLat4 = _slicedToArray(_osmTileXY2LonLat3, 2),\n    maxLng = _osmTileXY2LonLat4[0],\n    minLat = _osmTileXY2LonLat4[1];\n  return [minLng, minLat, maxLng, maxLat];\n};\n\n/**\n * 获取当前视野层级瓦片的所有索引\n * latLonBounds          => pixelBounds           => tileRange             => tileIndices\n * {topLeft,bottomRight} => {topLeft,bottomRight} => {topLeft,bottomRight} => {x, y, z}[]\n * 如果当前 zoom 层级小于 minZoom 则返回空数组\n * 如果当前 zoom 层级大于 maxZoom 则返回最大的瓦片索引\n */\nexport function getTileIndices(_ref) {\n  var zoom = _ref.zoom,\n    latLonBounds = _ref.latLonBounds,\n    _ref$maxZoom = _ref.maxZoom,\n    maxZoom = _ref$maxZoom === void 0 ? Infinity : _ref$maxZoom,\n    _ref$minZoom = _ref.minZoom,\n    minZoom = _ref$minZoom === void 0 ? 0 : _ref$minZoom,\n    _ref$zoomOffset = _ref.zoomOffset,\n    zoomOffset = _ref$zoomOffset === void 0 ? 0 : _ref$zoomOffset,\n    _ref$extent = _ref.extent,\n    extent = _ref$extent === void 0 ? DEFAULT_EXTENT : _ref$extent;\n  var z = Math.ceil(zoom) + zoomOffset;\n  // 如果当前 zoom 层级小于 minZoom\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    return [];\n  }\n\n  // 如果当前 zoom 层级大于 maxZoom\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  var _latLonBounds = _slicedToArray(latLonBounds, 4),\n    minLng = _latLonBounds[0],\n    minLat = _latLonBounds[1],\n    maxLng = _latLonBounds[2],\n    maxLat = _latLonBounds[3];\n  var bounds = [Math.max(minLng, extent[0]), Math.max(minLat, extent[1]), Math.min(maxLng, extent[2]), Math.min(maxLat, extent[3])];\n  var indices = [];\n  var _osmLonLat2TileXY = osmLonLat2TileXY(bounds[0], bounds[1], z),\n    _osmLonLat2TileXY2 = _slicedToArray(_osmLonLat2TileXY, 2),\n    minX = _osmLonLat2TileXY2[0],\n    maxY = _osmLonLat2TileXY2[1];\n  var _osmLonLat2TileXY3 = osmLonLat2TileXY(bounds[2], bounds[3], z),\n    _osmLonLat2TileXY4 = _slicedToArray(_osmLonLat2TileXY3, 2),\n    maxX = _osmLonLat2TileXY4[0],\n    minY = _osmLonLat2TileXY4[1];\n  for (var x = minX; x <= maxX; x++) {\n    for (var y = minY; y <= maxY; y++) {\n      indices.push({\n        x: x,\n        y: y,\n        z: z\n      });\n    }\n  }\n\n  // 计算中心瓦片索引\n  var centerX = (maxX + minX) / 2;\n  var centerY = (maxY + minY) / 2;\n  var distance = function distance(x, y) {\n    return Math.abs(x - centerX) + Math.abs(y - centerY);\n  };\n  // 通过离中心瓦片距离排序，越近的排在前面\n  indices.sort(function (a, b) {\n    return distance(a.x, a.y) - distance(b.x, b.y);\n  });\n  return indices;\n}\n\n/**\n * Warp 瓦片索引，支持对称子午线瓦片连续\n */\nexport var getTileWarpXY = function getTileWarpXY(x, y, z) {\n  var wrap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var scale = Math.pow(2, z);\n  var maxIndex = scale - 1;\n  var distance = scale;\n  var warpX = x;\n  var warpY = y;\n  if (wrap) {\n    if (warpX < 0) {\n      warpX = warpX + distance;\n    } else if (warpX > maxIndex) {\n      warpX = warpX % distance;\n    }\n  }\n  return {\n    warpX: warpX,\n    warpY: warpY\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}