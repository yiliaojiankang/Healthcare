{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport line from './line';\nimport { snapLength, nearestPoint } from './bezier';\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍\n  return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;\n}\nfunction derivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));\n}\nfunction extrema(p0, p1, p2, p3) {\n  var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n  var b = 6 * p0 - 12 * p1 + 6 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var extremas = [];\n  var t1;\n  var t2;\n  var discSqrt;\n  if (isNumberEqual(a, 0)) {\n    if (!isNumberEqual(b, 0)) {\n      t1 = -c / b;\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n    if (isNumberEqual(disc, 0)) {\n      extremas.push(-b / (2 * a));\n    } else if (disc > 0) {\n      discSqrt = Math.sqrt(disc);\n      t1 = (-b + discSqrt) / (2 * a);\n      t2 = (-b - discSqrt) / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        extremas.push(t2);\n      }\n    }\n  }\n  return extremas;\n}\n// 分割贝塞尔曲线\nfunction divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n  // 划分点\n  var xt = cubicAt(x1, x2, x3, x4, t);\n  var yt = cubicAt(y1, y2, y3, y4, t);\n  // 计算两点之间的差值点\n  var c1 = line.pointAt(x1, y1, x2, y2, t);\n  var c2 = line.pointAt(x2, y2, x3, y3, t);\n  var c3 = line.pointAt(x3, y3, x4, y4, t);\n  var c12 = line.pointAt(c1.x, c1.y, c2.x, c2.y, t);\n  var c23 = line.pointAt(c2.x, c2.y, c3.x, c3.y, t);\n  return [[x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt], [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4]];\n}\n// 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试\nfunction cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, iterationCount) {\n  if (iterationCount === 0) {\n    return snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);\n  }\n  var cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);\n  var left = cubics[0];\n  var right = cubics[1];\n  left.push(iterationCount - 1);\n  right.push(iterationCount - 1);\n  return cubicLength.apply(null, left) + cubicLength.apply(null, right);\n}\nexport default {\n  extrema: extrema,\n  box: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    var xArr = [x1, x4];\n    var yArr = [y1, y4];\n    var xExtrema = extrema(x1, x2, x3, x4);\n    var yExtrema = extrema(y1, y2, y3, y4);\n    for (var i = 0; i < xExtrema.length; i++) {\n      xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));\n    }\n    for (var i = 0; i < yExtrema.length; i++) {\n      yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));\n    }\n    return getBBoxByArray(xArr, yArr);\n  },\n  length: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    // 迭代三次，划分成 8 段求长度\n    return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);\n  },\n  nearestPoint: function (x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    return nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt, length);\n  },\n  pointDistance: function (x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length);\n    return distance(point.x, point.y, x0, y0);\n  },\n  interpolationAt: cubicAt,\n  pointAt: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return {\n      x: cubicAt(x1, x2, x3, x4, t),\n      y: cubicAt(y1, y2, y3, y4, t)\n    };\n  },\n  divide: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);\n  },\n  tangentAngle: function (x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    var dx = derivativeAt(x1, x2, x3, x4, t);\n    var dy = derivativeAt(y1, y2, y3, y4, t);\n    return piMod(Math.atan2(dy, dx));\n  }\n};","map":{"version":3,"names":["distance","isNumberEqual","getBBoxByArray","piMod","line","snapLength","nearestPoint","cubicAt","p0","p1","p2","p3","t","onet","derivativeAt","extrema","a","b","c","extremas","t1","t2","discSqrt","push","disc","Math","sqrt","divideCubic","x1","y1","x2","y2","x3","y3","x4","y4","xt","yt","c1","pointAt","c2","c3","c12","x","y","c23","cubicLength","iterationCount","cubics","left","right","apply","box","xArr","yArr","xExtrema","yExtrema","i","length","x0","y0","pointDistance","point","interpolationAt","divide","tangentAngle","dx","dy","atan2"],"sources":["../src/cubic.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}