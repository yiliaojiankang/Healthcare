{"ast":null,"code":"import { assert } from '../utils/env-utils/assert';\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nvar WorkerJob = /** @class */function () {\n  function WorkerJob(jobName, workerThread) {\n    var _this = this;\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this.resolve = function () {};\n    this.reject = function () {};\n    this.result = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n  }\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  WorkerJob.prototype.postMessage = function (type, payload) {\n    this.workerThread.postMessage({\n      source: 'Main thread',\n      type: type,\n      payload: payload\n    });\n  };\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  WorkerJob.prototype.done = function (value) {\n    assert(this.isRunning, 'WorkerJob isRunning false.');\n    this.isRunning = false;\n    this.resolve(value);\n  };\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  WorkerJob.prototype.error = function (error) {\n    assert(this.isRunning, 'WorkerJob isRunning false.');\n    this.isRunning = false;\n    this.reject(error);\n  };\n  return WorkerJob;\n}();\nexport default WorkerJob;","map":{"version":3,"names":["assert","WorkerJob","jobName","workerThread","_this","name","isRunning","resolve","reject","result","Promise","prototype","postMessage","type","payload","source","done","value","error"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/web-worker-helper/dist/esm/worker-farm/worker-job.js"],"sourcesContent":["import { assert } from '../utils/env-utils/assert';\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nvar WorkerJob = /** @class */ (function () {\n    function WorkerJob(jobName, workerThread) {\n        var _this = this;\n        this.name = jobName;\n        this.workerThread = workerThread;\n        this.isRunning = true;\n        this.resolve = function () { };\n        this.reject = function () { };\n        this.result = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\n     * Send a message to the job's worker thread\n     * @param data any data structure, ideally consisting mostly of transferrable objects\n     */\n    WorkerJob.prototype.postMessage = function (type, payload) {\n        this.workerThread.postMessage({\n            source: 'Main thread',\n            type: type,\n            payload: payload,\n        });\n    };\n    /**\n     * Call to resolve the `result` Promise with the supplied value\n     */\n    WorkerJob.prototype.done = function (value) {\n        assert(this.isRunning, 'WorkerJob isRunning false.');\n        this.isRunning = false;\n        this.resolve(value);\n    };\n    /**\n     * Call to reject the `result` Promise with the supplied error\n     */\n    WorkerJob.prototype.error = function (error) {\n        assert(this.isRunning, 'WorkerJob isRunning false.');\n        this.isRunning = false;\n        this.reject(error);\n    };\n    return WorkerJob;\n}());\nexport default WorkerJob;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,2BAA2B;AAClD;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAe,YAAY;EACvC,SAASA,SAASA,CAACC,OAAO,EAAEC,YAAY,EAAE;IACtC,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGH,OAAO;IACnB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACG,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,OAAO,GAAG,YAAY,CAAE,CAAC;IAC9B,IAAI,CAACC,MAAM,GAAG,YAAY,CAAE,CAAC;IAC7B,IAAI,CAACC,MAAM,GAAG,IAAIC,OAAO,CAAC,UAAUH,OAAO,EAAEC,MAAM,EAAE;MACjDJ,KAAK,CAACG,OAAO,GAAGA,OAAO;MACvBH,KAAK,CAACI,MAAM,GAAGA,MAAM;IACzB,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIP,SAAS,CAACU,SAAS,CAACC,WAAW,GAAG,UAAUC,IAAI,EAAEC,OAAO,EAAE;IACvD,IAAI,CAACX,YAAY,CAACS,WAAW,CAAC;MAC1BG,MAAM,EAAE,aAAa;MACrBF,IAAI,EAAEA,IAAI;MACVC,OAAO,EAAEA;IACb,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;EACIb,SAAS,CAACU,SAAS,CAACK,IAAI,GAAG,UAAUC,KAAK,EAAE;IACxCjB,MAAM,CAAC,IAAI,CAACM,SAAS,EAAE,4BAA4B,CAAC;IACpD,IAAI,CAACA,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,OAAO,CAACU,KAAK,CAAC;EACvB,CAAC;EACD;AACJ;AACA;EACIhB,SAAS,CAACU,SAAS,CAACO,KAAK,GAAG,UAAUA,KAAK,EAAE;IACzClB,MAAM,CAAC,IAAI,CAACM,SAAS,EAAE,4BAA4B,CAAC;IACpD,IAAI,CAACA,SAAS,GAAG,KAAK;IACtB,IAAI,CAACE,MAAM,CAACU,KAAK,CAAC;EACtB,CAAC;EACD,OAAOjB,SAAS;AACpB,CAAC,CAAC,CAAE;AACJ,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}