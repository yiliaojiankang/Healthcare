{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DagreCompoundLayout = void 0;\nvar base_1 = require(\"./base\");\nvar dagre_compound_1 = require(\"dagre-compound\");\nvar util_1 = require(\"../util\");\nvar DagreCompoundLayout = /** @class */function (_super) {\n  __extends(DagreCompoundLayout, _super);\n  function DagreCompoundLayout(options) {\n    var _this = _super.call(this) || this;\n    /** layout 方向, 可选 TB, BT, LR, RL */\n    _this.rankdir = 'TB';\n    /** 节点水平间距(px) */\n    _this.nodesep = 50;\n    /** 边水平间距(px) */\n    _this.edgesep = 5;\n    /** 每一层节点之间间距 */\n    _this.ranksep = 50;\n    /** 是否保留布局连线的控制点 */\n    _this.controlPoints = true;\n    /** 是否保留使用布局计算的锚点 */\n    _this.anchorPoint = true;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.combos = [];\n    /** 迭代结束的回调函数 */\n    _this.onLayoutEnd = function () {};\n    _this.updateCfg(options);\n    return _this;\n  }\n  DagreCompoundLayout.prototype.getDefaultCfg = function () {\n    return {\n      rankdir: 'TB',\n      align: undefined,\n      begin: undefined,\n      nodeSize: undefined,\n      nodesep: 50,\n      ranksep: 50,\n      controlPoints: true,\n      anchorPoint: true // 是否使用布局计算的锚点\n    };\n  };\n\n  DagreCompoundLayout.prototype.init = function (data) {\n    var hiddenNodes = data.hiddenNodes || []; // 被隐藏的节点\n    var hiddenEdges = data.hiddenEdges || []; // 被隐藏的边\n    var hiddenCombos = data.hiddenCombos || []; // 赋值 hiddenCombos\n    // 确保此次排序按照用户输入顺序\n    this.nodes = this.getDataByOrder((data.nodes || []).concat(hiddenNodes));\n    this.edges = this.getDataByOrder((data.edges || []).concat(hiddenEdges));\n    this.combos = (data.combos || []).concat(hiddenCombos.map(function (hc) {\n      return __assign(__assign({}, hc), {\n        collapsed: true\n      });\n    }));\n  };\n  DagreCompoundLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n      edges = self.edges;\n    if (!nodes) return;\n    var _a = self.getLayoutConfig(),\n      graphDef = _a.graphDef,\n      graphOption = _a.graphOption,\n      graphSettings = _a.graphSettings;\n    var renderInfo = (0, dagre_compound_1.buildGraph)(graphDef, graphOption, graphSettings);\n    var flattenedRenderInfo = (0, dagre_compound_1.flatGraph)(renderInfo, true); // 打平数据进行遍历\n    this.updatePosition(flattenedRenderInfo);\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  };\n  /**\n   * combo 模式下查找节点完整路径\n   * @param nodeId\n   * @private\n   */\n  DagreCompoundLayout.prototype.getNodePath = function (nodeId) {\n    var self = this;\n    var nodes = self.nodes,\n      combos = self.combos;\n    var targetNode = nodes.find(function (n) {\n      return n.id === nodeId;\n    });\n    var findPath = function (comboId, fullPath) {\n      if (fullPath === void 0) {\n        fullPath = [];\n      }\n      var combo = combos.find(function (c) {\n        return c.id === comboId;\n      });\n      if (combo) {\n        fullPath.unshift(comboId);\n        if (combo.parentId) {\n          return findPath(combo.parentId, fullPath);\n        }\n        return fullPath;\n      }\n      return fullPath;\n    };\n    if (targetNode && targetNode.comboId) {\n      return findPath(targetNode.comboId, [nodeId]);\n    }\n    return [nodeId];\n  };\n  /** 准备 dagre-compound 布局参数 */\n  DagreCompoundLayout.prototype.getLayoutConfig = function () {\n    var _a, _b, _c;\n    var self = this;\n    var nodes = self.nodes,\n      edges = self.edges,\n      combos = self.combos,\n      nodeSize = self.nodeSize,\n      rankdir = self.rankdir,\n      align = self.align,\n      edgesep = self.edgesep,\n      nodesep = self.nodesep,\n      ranksep = self.ranksep,\n      settings = self.settings;\n    var compound = (combos || []).reduce(function (pre, cur) {\n      var matchedNodes = nodes.filter(function (n) {\n        return n.comboId === cur.id;\n      }).map(function (n) {\n        return n.id;\n      });\n      var matchedCombos = (combos || []).filter(function (n) {\n        return n.parentId === cur.id;\n      }).map(function (n) {\n        return n.id;\n      });\n      if (matchedNodes.length || matchedCombos.length) {\n        pre[cur.id] = __spreadArray(__spreadArray([], matchedNodes, true), matchedCombos, true);\n      }\n      return pre;\n    }, {});\n    /** 计算 nodeSize */\n    var nodeSizeFunc;\n    if (!nodeSize) {\n      nodeSizeFunc = function (d) {\n        if (d && d.size) {\n          if ((0, util_1.isArray)(d.size)) {\n            return d.size;\n          }\n          if ((0, util_1.isObject)(d.size)) {\n            return [d.size.width || 40, d.size.height || 40];\n          }\n          return [d.size, d.size];\n        }\n        return [40, 40];\n      };\n    } else if ((0, util_1.isArray)(nodeSize)) {\n      nodeSizeFunc = function () {\n        return nodeSize;\n      };\n    } else {\n      nodeSizeFunc = function () {\n        return [nodeSize, nodeSize];\n      };\n    }\n    /** 计算 comboSize */\n    var comboSizeFunc = function (d) {\n      if (d && d.size) {\n        if ((0, util_1.isArray)(d.size)) {\n          return d.size;\n        }\n        return [d.size, d.size];\n      }\n      return [80, 40];\n    };\n    // 接受 defaultCombo 设置的 size\n    var _d = comboSizeFunc(combos === null || combos === void 0 ? void 0 : combos[0]),\n      metaWidth = _d[0],\n      metaHeight = _d[1];\n    // 初始化 padding\n    var subSceneMeta = (_b = (_a = self.graphSettings) === null || _a === void 0 ? void 0 : _a.subScene) === null || _b === void 0 ? void 0 : _b.meta;\n    var _e = ((_c = combos.find(function (c) {\n        return !c.collapsed;\n      })) === null || _c === void 0 ? void 0 : _c.padding) || [20, 20, 20, 20],\n      paddingTop = _e[0],\n      paddingRight = _e[1],\n      paddingBottom = _e[2],\n      paddingLeft = _e[3];\n    var graphDef = {\n      compound: compound,\n      nodes: __spreadArray([], (nodes || []).map(function (n) {\n        var size = nodeSizeFunc(n);\n        var width = size[0];\n        var height = size[1];\n        return __assign(__assign({}, n), {\n          width: width,\n          height: height\n        });\n      }), true),\n      edges: __spreadArray([], (edges || []).map(function (e) {\n        return __assign(__assign({}, e), {\n          v: e.source,\n          w: e.target\n        });\n      }), true)\n    };\n    // 需要展开的节点\n    var graphOption = {\n      expanded: (combos || []).filter(function (c) {\n        return !c.collapsed;\n      }).map(function (c) {\n        return c.id;\n      })\n    };\n    // dagre-compound 布局参数\n    var graphMetaConfig = {\n      graph: {\n        meta: {\n          align: align,\n          rankDir: rankdir,\n          nodeSep: nodesep,\n          edgeSep: edgesep,\n          rankSep: ranksep\n        }\n      },\n      subScene: {\n        meta: {\n          paddingTop: paddingTop || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingTop) || 20,\n          paddingRight: paddingRight || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingRight) || 20,\n          paddingBottom: paddingBottom || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingBottom) || 20,\n          paddingLeft: paddingLeft || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingLeft) || 20,\n          labelHeight: 0\n        }\n      },\n      nodeSize: {\n        meta: {\n          width: metaWidth,\n          height: metaHeight\n        }\n      }\n    };\n    // 合并用户输入的内容\n    var graphSettings = (0, dagre_compound_1.mergeConfig)(settings, __assign({}, (0, dagre_compound_1.mergeConfig)(graphMetaConfig, dagre_compound_1.LAYOUT_CONFIG)));\n    self.graphSettings = graphSettings;\n    return {\n      graphDef: graphDef,\n      graphOption: graphOption,\n      graphSettings: graphSettings\n    };\n  };\n  /** 更新节点与边位置 */\n  DagreCompoundLayout.prototype.updatePosition = function (flattenedGraph) {\n    var nodes = flattenedGraph.nodes,\n      edges = flattenedGraph.edges;\n    this.updateNodePosition(nodes, edges);\n    this.updateEdgePosition(nodes, edges);\n  };\n  DagreCompoundLayout.prototype.getBegin = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var begin = self.begin;\n    var dBegin = [0, 0];\n    if (begin) {\n      var minX_1 = Infinity;\n      var minY_1 = Infinity;\n      flattenedNodes.forEach(function (node) {\n        if (minX_1 > node.x) minX_1 = node.x;\n        if (minY_1 > node.y) minY_1 = node.y;\n      });\n      flattenedEdges.forEach(function (edge) {\n        edge.points.forEach(function (point) {\n          if (minX_1 > point.x) minX_1 = point.x;\n          if (minY_1 > point.y) minY_1 = point.y;\n        });\n      });\n      dBegin[0] = begin[0] - minX_1;\n      dBegin[1] = begin[1] - minY_1;\n    }\n    return dBegin;\n  };\n  DagreCompoundLayout.prototype.updateNodePosition = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var combos = self.combos,\n      nodes = self.nodes,\n      edges = self.edges,\n      anchorPoint = self.anchorPoint,\n      graphSettings = self.graphSettings;\n    var dBegin = this.getBegin(flattenedNodes, flattenedEdges);\n    flattenedNodes.forEach(function (node) {\n      var _a;\n      var x = node.x,\n        y = node.y,\n        id = node.id,\n        type = node.type,\n        coreBox = node.coreBox;\n      if (type === dagre_compound_1.HierarchyNodeType.META && id !== dagre_compound_1.ROOT_NAME) {\n        var i = combos.findIndex(function (item) {\n          return item.id === id;\n        });\n        var subSceneMeta = (_a = graphSettings === null || graphSettings === void 0 ? void 0 : graphSettings.subScene) === null || _a === void 0 ? void 0 : _a.meta;\n        // 将布局生成的 combo 位置暂存至 offsetX offsetY\n        combos[i].offsetX = x + dBegin[0];\n        combos[i].offsetY = y + dBegin[1];\n        combos[i].fixSize = [coreBox.width, coreBox.height];\n        combos[i].fixCollapseSize = [coreBox.width, coreBox.height];\n        // 如果设置了收起时隐藏 padding，则手动优化 combo padding 信息，展开的话则恢复\n        if (!node.expanded) {\n          combos[i].padding = [0, 0, 0, 0];\n        } else {\n          combos[i].padding = [subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingTop, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingRight, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingBottom, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingLeft];\n        }\n      } else if (type === dagre_compound_1.HierarchyNodeType.OP) {\n        var i = nodes.findIndex(function (item) {\n          return item.id === id;\n        });\n        nodes[i].x = x + dBegin[0];\n        nodes[i].y = y + dBegin[1];\n        if (anchorPoint) {\n          var anchorPoints_1 = [];\n          var outEdges = flattenedEdges.filter(function (e) {\n            return e.v === id;\n          });\n          var inEdges = flattenedEdges.filter(function (e) {\n            return e.w === id;\n          });\n          // 指定出边锚点，锚点中心点为 [0.5, 0.5]\n          if (outEdges.length > 0) {\n            outEdges.forEach(function (outEdge) {\n              var firstPoint = outEdge.points[0];\n              var anchorPointX = (firstPoint.x - x) / node.width + 0.5;\n              var anchorPointY = (firstPoint.y - y) / node.height + 0.5;\n              anchorPoints_1.push([anchorPointX, anchorPointY]);\n              // 出边对应 source 边锚点\n              outEdge.baseEdgeList.forEach(function (baseEdge) {\n                var edge = edges.find(function (e) {\n                  return e.source === baseEdge.v && e.target === baseEdge.w;\n                });\n                if (edge) {\n                  edge.sourceAnchor = anchorPoints_1.length - 1;\n                }\n              });\n            });\n          }\n          // 指定入边锚点\n          if (inEdges.length > 0) {\n            inEdges.forEach(function (inEdge) {\n              var lastPoint = inEdge.points[inEdge.points.length - 1];\n              var anchorPointX = (lastPoint.x - x) / node.width + 0.5;\n              var anchorPointY = (lastPoint.y - y) / node.height + 0.5;\n              anchorPoints_1.push([anchorPointX, anchorPointY]);\n              // 出边对应 source 锚点\n              inEdge.baseEdgeList.forEach(function (baseEdge) {\n                var edge = edges.find(function (e) {\n                  return e.source === baseEdge.v && e.target === baseEdge.w;\n                });\n                if (edge) {\n                  edge.targetAnchor = anchorPoints_1.length - 1;\n                }\n              });\n            });\n          }\n          nodes[i].anchorPoints = anchorPoints_1.length > 0 ? anchorPoints_1 : nodes[i].anchorPoints || [];\n        }\n      }\n    });\n  };\n  DagreCompoundLayout.prototype.updateEdgePosition = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var combos = self.combos,\n      edges = self.edges,\n      controlPoints = self.controlPoints;\n    var dBegin = this.getBegin(flattenedNodes, flattenedEdges);\n    if (controlPoints) {\n      combos.forEach(function (combo) {\n        combo.inEdges = [];\n        combo.outEdges = [];\n      });\n      edges.forEach(function (sourceEdge) {\n        var _a, _b, _c, _d;\n        var sourceNode = flattenedNodes.find(function (v) {\n          return v.id === sourceEdge.source;\n        });\n        var targetNode = flattenedNodes.find(function (v) {\n          return v.id === sourceEdge.target;\n        });\n        // Combo 收起状态，dagre-compound 不会渲染该节点，边需要使用到 group 的边作为补充\n        var points = [];\n        var sortedEdges = [];\n        if (sourceNode && targetNode) {\n          sortedEdges = (0, dagre_compound_1.getEdges)(sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id, targetNode === null || targetNode === void 0 ? void 0 : targetNode.id, flattenedNodes);\n        } else if (!sourceNode || !targetNode) {\n          /** 存在收起节点时，需要重新计算边的 controlPoints，确保线正常 */\n          // 情况1：目标节点被收起了，向上寻找该节点最近一个存在的父节点\n          var sourceNodePath = self.getNodePath(sourceEdge.source);\n          var targetNodePath = self.getNodePath(sourceEdge.target);\n          var lastExistingSource_1 = sourceNodePath.reverse().slice(!sourceNode ? 1 : 0).find(function (parentId) {\n            return flattenedNodes.find(function (fNode) {\n              return fNode.id === parentId;\n            });\n          });\n          var lastExistingTarget_1 = targetNodePath.reverse().slice(!targetNode ? 1 : 0).find(function (parentId) {\n            return flattenedNodes.find(function (fNode) {\n              return fNode.id === parentId;\n            });\n          });\n          sourceNode = flattenedNodes.find(function (v) {\n            return v.id === lastExistingSource_1;\n          });\n          targetNode = flattenedNodes.find(function (v) {\n            return v.id === lastExistingTarget_1;\n          });\n          sortedEdges = (0, dagre_compound_1.getEdges)(sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id, targetNode === null || targetNode === void 0 ? void 0 : targetNode.id, flattenedNodes, {\n            v: sourceEdge.source,\n            w: sourceEdge.target\n          });\n        }\n        points = sortedEdges.reduce(function (pre, cur) {\n          return __spreadArray(__spreadArray([], pre, true), cur.points.map(function (p) {\n            return __assign(__assign({}, p), {\n              x: p.x + dBegin[0],\n              y: p.y + dBegin[1]\n            });\n          }), true);\n        }, []);\n        // 取消首尾节点\n        points = points.slice(1, -1);\n        sourceEdge.controlPoints = points;\n        if ((targetNode === null || targetNode === void 0 ? void 0 : targetNode.type) === dagre_compound_1.NodeType.META) {\n          // combo 节点控制点\n          var i = combos.findIndex(function (item) {\n            return item.id === (targetNode === null || targetNode === void 0 ? void 0 : targetNode.id);\n          });\n          if (!combos[i] || ((_a = combos[i].inEdges) === null || _a === void 0 ? void 0 : _a.some(function (inEdge) {\n            return inEdge.source === sourceNode.id && inEdge.target === targetNode.id;\n          }))) {\n            return;\n          }\n          (_b = combos[i].inEdges) === null || _b === void 0 ? void 0 : _b.push({\n            source: sourceNode.id,\n            target: targetNode.id,\n            controlPoints: points\n          });\n        }\n        if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === dagre_compound_1.NodeType.META) {\n          var i = combos.findIndex(function (item) {\n            return item.id === (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id);\n          });\n          if (!combos[i] || ((_c = combos[i].outEdges) === null || _c === void 0 ? void 0 : _c.some(function (oedge) {\n            return oedge.source === sourceNode.id && oedge.target === targetNode.id;\n          }))) {\n            return;\n          }\n          (_d = combos[i].outEdges) === null || _d === void 0 ? void 0 : _d.push({\n            source: sourceNode.id,\n            target: targetNode.id,\n            controlPoints: points\n          });\n        }\n      });\n    }\n  };\n  DagreCompoundLayout.prototype.getType = function () {\n    return 'dagreCompound';\n  };\n  /**\n   * 确保布局使用的数据与用户输入数据顺序一致\n   * 通过 layoutOrder 排序 节点 与 边\n   * @param list\n   * @private\n   */\n  DagreCompoundLayout.prototype.getDataByOrder = function (list) {\n    if (list.every(function (n) {\n      return n.layoutOrder !== undefined;\n    })) {\n      // 所有数据均设置过索引，表示仅布局，数据未变化，无需处理\n    } else {\n      // 首次布局或动态添加删减节点时重新赋值\n      list.forEach(function (n, i) {\n        n.layoutOrder = i;\n      });\n    }\n    // 按照 layoutOrder 排序\n    return list.sort(function (pre, cur) {\n      return pre.layoutOrder - cur.layoutOrder;\n    });\n  };\n  return DagreCompoundLayout;\n}(base_1.Base);\nexports.DagreCompoundLayout = DagreCompoundLayout;","map":{"version":3,"names":["base_1","require","dagre_compound_1","util_1","DagreCompoundLayout","_super","__extends","options","_this","call","rankdir","nodesep","edgesep","ranksep","controlPoints","anchorPoint","nodes","edges","combos","onLayoutEnd","updateCfg","prototype","getDefaultCfg","align","undefined","begin","nodeSize","init","data","hiddenNodes","hiddenEdges","hiddenCombos","getDataByOrder","concat","map","hc","__assign","collapsed","execute","self","_a","getLayoutConfig","graphDef","graphOption","graphSettings","renderInfo","buildGraph","flattenedRenderInfo","flatGraph","updatePosition","getNodePath","nodeId","targetNode","find","n","id","findPath","comboId","fullPath","combo","c","unshift","parentId","settings","compound","reduce","pre","cur","matchedNodes","filter","matchedCombos","length","__spreadArray","nodeSizeFunc","d","size","isArray","isObject","width","height","comboSizeFunc","_d","metaWidth","metaHeight","subSceneMeta","_b","subScene","meta","_e","_c","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","e","v","source","w","target","expanded","graphMetaConfig","graph","rankDir","nodeSep","edgeSep","rankSep","labelHeight","mergeConfig","LAYOUT_CONFIG","flattenedGraph","updateNodePosition","updateEdgePosition","getBegin","flattenedNodes","flattenedEdges","dBegin","minX_1","Infinity","minY_1","forEach","node","x","y","edge","points","point","type","coreBox","HierarchyNodeType","META","ROOT_NAME","i","findIndex","item","offsetX","offsetY","fixSize","fixCollapseSize","OP","anchorPoints_1","outEdges","inEdges","outEdge","firstPoint","anchorPointX","anchorPointY","push","baseEdgeList","baseEdge","sourceAnchor","inEdge","lastPoint","targetAnchor","anchorPoints","sourceEdge","sourceNode","sortedEdges","getEdges","sourceNodePath","targetNodePath","lastExistingSource_1","reverse","slice","fNode","lastExistingTarget_1","p","NodeType","some","oedge","getType","list","every","layoutOrder","sort","Base","exports"],"sources":["../../src/layout/dagreCompound.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}