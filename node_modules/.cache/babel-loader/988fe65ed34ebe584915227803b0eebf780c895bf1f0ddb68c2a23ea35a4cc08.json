{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _dec, _dec2, _class, _class2, _descriptor;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\n/* babel-plugin-inline-import '../../../shaders/post-processing/blend.glsl' */\nvar blendFS = \"uniform float u_opacity : 1.0;\\nuniform float u_MixRatio : 0.5;\\n\\nuniform sampler2D u_Diffuse1;\\nuniform sampler2D u_Diffuse2;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  vec4 texel1 = texture2D(u_Diffuse1, v_UV);\\n  vec4 texel2 = texture2D(u_Diffuse2, v_UV);\\n  gl_FragColor = u_opacity * mix(texel1, texel2, u_MixRatio);\\n}\\n\";\n/* babel-plugin-inline-import '../../../shaders/post-processing/copy.glsl' */\nvar copyFS = \"varying vec2 v_UV;\\n\\nuniform sampler2D u_Texture;\\n\\nvoid main() {\\n  gl_FragColor = vec4(texture2D(u_Texture, v_UV));\\n}\";\n/* babel-plugin-inline-import '../../../shaders/post-processing/quad.glsl' */\nvar quadVS = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport { TYPES } from \"../../../types\";\nimport { PassType } from \"../IMultiPassRenderer\";\nimport { gl } from \"../gl\";\nimport BaseNormalPass from \"./BaseNormalPass\";\n\n// Generate halton sequence\n// https://en.wikipedia.org/wiki/Halton_sequence\nfunction halton(index, base) {\n  var result = 0;\n  var f = 1 / base;\n  var i = index;\n  while (i > 0) {\n    result = result + f * (i % base);\n    i = Math.floor(i / base);\n    f = f / base;\n  }\n  return result;\n}\n\n// 累加计数器\nvar accumulatingId = 1;\n\n/**\n * TAA（Temporal Anti-Aliasing）\n * 在需要后处理的场景中（例如 L7 的热力图需要 blur pass、PBR 中的 SSAO 环境光遮蔽），无法使用浏览器内置的 MSAA，\n * 只能使用 TAA\n * @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/ri52hv\n */\nvar TAAPass = (_dec = injectable(), _dec2 = inject(TYPES.IShaderModuleService), _dec(_class = (_class2 = /*#__PURE__*/function (_BaseNormalPass) {\n  _inherits(TAAPass, _BaseNormalPass);\n  var _super = _createSuper(TAAPass);\n  function TAAPass() {\n    var _this;\n    _classCallCheck(this, TAAPass);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _initializerDefineProperty(_assertThisInitialized(_this), \"shaderModuleService\", _descriptor, _assertThisInitialized(_this));\n    /**\n     * 低差异序列\n     */\n    _defineProperty(_assertThisInitialized(_this), \"haltonSequence\", []);\n    /**\n     * 当前累加任务 ID，例如用户连续拖拽时上一次累加很有可能没有结束，此时在开启新一轮累加之前需要结束掉之前未完成的\n     */\n    _defineProperty(_assertThisInitialized(_this), \"accumulatingId\", 0);\n    /**\n     * 每一轮累加中的 frameID\n     */\n    _defineProperty(_assertThisInitialized(_this), \"frame\", 0);\n    /**\n     * 每一轮累加中的 frame 定时器\n     */\n    _defineProperty(_assertThisInitialized(_this), \"timer\", undefined);\n    _defineProperty(_assertThisInitialized(_this), \"sampleRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"prevRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"outputRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"copyRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"blendModel\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"outputModel\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"copyModel\", void 0);\n    return _this;\n  }\n  _createClass(TAAPass, [{\n    key: \"getType\",\n    value: function getType() {\n      return PassType.Normal;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'taa';\n    }\n  }, {\n    key: \"init\",\n    value: function init(layer, config) {\n      _get(_getPrototypeOf(TAAPass.prototype), \"init\", this).call(this, layer, config);\n      var _this$rendererService = this.rendererService,\n        createFramebuffer = _this$rendererService.createFramebuffer,\n        createTexture2D = _this$rendererService.createTexture2D;\n      this.sampleRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.prevRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.outputRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.copyRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      for (var i = 0; i < 30; i++) {\n        this.haltonSequence.push([halton(i, 2), halton(i, 3)]);\n      }\n      this.blendModel = this.createTriangleModel('blend-pass', blendFS);\n      this.outputModel = this.createTriangleModel('copy-pass', copyFS, {\n        blend: {\n          enable: true,\n          func: {\n            srcRGB: gl.ONE,\n            dstRGB: gl.ONE_MINUS_SRC_ALPHA,\n            srcAlpha: gl.ONE,\n            dstAlpha: gl.ONE_MINUS_SRC_ALPHA\n          },\n          equation: {\n            rgb: gl.FUNC_ADD,\n            alpha: gl.FUNC_ADD\n          }\n        }\n      });\n      this.copyModel = this.createTriangleModel('copy-pass', copyFS);\n    }\n  }, {\n    key: \"render\",\n    value: function render(layer) {\n      var _this2 = this;\n      var _this$rendererService2 = this.rendererService,\n        clear = _this$rendererService2.clear,\n        getViewportSize = _this$rendererService2.getViewportSize,\n        useFramebuffer = _this$rendererService2.useFramebuffer;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      this.sampleRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.prevRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.outputRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.copyRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.resetFrame();\n      // 首先停止上一次的累加\n      this.stopAccumulating();\n\n      // 先输出到 PostProcessor\n      var readFBO = layer.multiPassRenderer.getPostProcessor().getReadFBO();\n      useFramebuffer(readFBO, function () {\n        clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0,\n          framebuffer: readFBO\n        });\n\n        // render to post processor\n        layer.multiPassRenderer.setRenderFlag(false);\n        layer.render();\n        layer.multiPassRenderer.setRenderFlag(true);\n      });\n      var accumulate = function accumulate(id) {\n        // 在开启新一轮累加之前，需要先结束掉之前的累加\n        if (!_this2.accumulatingId || id !== _this2.accumulatingId) {\n          return;\n        }\n        if (!_this2.isFinished()) {\n          _this2.doRender(layer);\n          window.requestAnimationFrame(function () {\n            accumulate(id);\n          });\n        }\n      };\n      this.accumulatingId = accumulatingId++;\n      // @ts-ignore\n      this.timer = window.setTimeout(function () {\n        accumulate(_this2.accumulatingId);\n      }, 50);\n    }\n  }, {\n    key: \"doRender\",\n    value: function doRender(layer) {\n      var _this3 = this;\n      var _this$rendererService3 = this.rendererService,\n        clear = _this$rendererService3.clear,\n        getViewportSize = _this$rendererService3.getViewportSize,\n        useFramebuffer = _this$rendererService3.useFramebuffer;\n      var _getViewportSize2 = getViewportSize(),\n        width = _getViewportSize2.width,\n        height = _getViewportSize2.height;\n      var _layer$getLayerConfig = layer.getLayerConfig(),\n        _layer$getLayerConfig2 = _layer$getLayerConfig.jitterScale,\n        jitterScale = _layer$getLayerConfig2 === void 0 ? 1 : _layer$getLayerConfig2;\n\n      // 使用 Halton 序列抖动投影矩阵\n      var offset = this.haltonSequence[this.frame % this.haltonSequence.length];\n      this.cameraService.jitterProjectionMatrix((offset[0] * 2.0 - 1.0) / width * jitterScale, (offset[1] * 2.0 - 1.0) / height * jitterScale);\n\n      // 按抖动后的投影矩阵渲染\n      layer.multiPassRenderer.setRenderFlag(false);\n      layer.hooks.beforeRender.call();\n      useFramebuffer(this.sampleRenderTarget, function () {\n        clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0,\n          framebuffer: _this3.sampleRenderTarget\n        });\n        layer.render();\n      });\n      layer.hooks.afterRender.call();\n      layer.multiPassRenderer.setRenderFlag(true);\n\n      // 混合\n      var layerStyleOptions = layer.getLayerConfig();\n      useFramebuffer(this.outputRenderTarget, function () {\n        _this3.blendModel.draw({\n          uniforms: {\n            // @ts-ignore\n            u_opacity: layerStyleOptions.opacity || 1,\n            u_MixRatio: _this3.frame === 0 ? 1 : 0.9,\n            u_Diffuse1: _this3.sampleRenderTarget,\n            u_Diffuse2: _this3.frame === 0 ? layer.multiPassRenderer.getPostProcessor().getReadFBO() : _this3.prevRenderTarget\n          }\n        });\n      });\n\n      // 输出累加结果\n      if (this.frame === 0) {\n        clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0,\n          framebuffer: this.copyRenderTarget\n        });\n      }\n      if (this.frame >= 1) {\n        useFramebuffer(this.copyRenderTarget, function () {\n          _this3.outputModel.draw({\n            uniforms: {\n              u_Texture: _this3.outputRenderTarget\n            }\n          });\n        });\n        useFramebuffer(layer.multiPassRenderer.getPostProcessor().getReadFBO(), function () {\n          _this3.copyModel.draw({\n            uniforms: {\n              u_Texture: _this3.copyRenderTarget\n            }\n          });\n        });\n        layer.multiPassRenderer.getPostProcessor().render(layer);\n      }\n\n      // 保存前序帧结果\n      var tmp = this.prevRenderTarget;\n      this.prevRenderTarget = this.outputRenderTarget;\n      this.outputRenderTarget = tmp;\n      this.frame++;\n\n      // 恢复 jitter 后的相机\n      this.cameraService.clearJitterProjectionMatrix();\n    }\n\n    /**\n     * 是否已经完成累加\n     * @return {boolean} isFinished\n     */\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.frame >= this.haltonSequence.length;\n    }\n  }, {\n    key: \"resetFrame\",\n    value: function resetFrame() {\n      this.frame = 0;\n    }\n  }, {\n    key: \"stopAccumulating\",\n    value: function stopAccumulating() {\n      this.accumulatingId = 0;\n      window.clearTimeout(this.timer);\n    }\n  }, {\n    key: \"createTriangleModel\",\n    value: function createTriangleModel(shaderModuleName, fragmentShader, options) {\n      this.shaderModuleService.registerModule(shaderModuleName, {\n        vs: quadVS,\n        fs: fragmentShader\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule(shaderModuleName),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        uniforms = _this$shaderModuleSer.uniforms;\n      var _this$rendererService4 = this.rendererService,\n        createAttribute = _this$rendererService4.createAttribute,\n        createBuffer = _this$rendererService4.createBuffer,\n        createModel = _this$rendererService4.createModel;\n      return createModel(_objectSpread({\n        vs: vs,\n        fs: fs,\n        attributes: {\n          // 使用一个全屏三角形，相比 Quad 顶点数目更少\n          a_Position: createAttribute({\n            buffer: createBuffer({\n              data: [-4, -4, 4, -4, 0, 4],\n              type: gl.FLOAT\n            }),\n            size: 2\n          })\n        },\n        uniforms: _objectSpread({}, uniforms),\n        depth: {\n          enable: false\n        },\n        count: 3\n      }, options));\n    }\n  }]);\n  return TAAPass;\n}(BaseNormalPass), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"shaderModuleService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);\nexport { TAAPass as default };","map":{"version":3,"names":["_objectSpread","_initializerDefineProperty","_classCallCheck","_createClass","_assertThisInitialized","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_applyDecoratedDescriptor","_initializerWarningHelper","_dec","_dec2","_class","_class2","_descriptor","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","inject","injectable","blendFS","copyFS","quadVS","TYPES","PassType","gl","BaseNormalPass","halton","index","base","f","i","Math","floor","accumulatingId","TAAPass","IShaderModuleService","_BaseNormalPass","_super","_this","_len","length","args","Array","_key","concat","undefined","key","value","getType","Normal","getName","init","layer","config","_this$rendererService","rendererService","createFramebuffer","createTexture2D","sampleRenderTarget","color","width","height","wrapS","CLAMP_TO_EDGE","wrapT","prevRenderTarget","outputRenderTarget","copyRenderTarget","haltonSequence","push","blendModel","createTriangleModel","outputModel","blend","enable","func","srcRGB","ONE","dstRGB","ONE_MINUS_SRC_ALPHA","srcAlpha","dstAlpha","equation","rgb","FUNC_ADD","alpha","copyModel","render","_this2","_this$rendererService2","clear","getViewportSize","useFramebuffer","_getViewportSize","resize","resetFrame","stopAccumulating","readFBO","multiPassRenderer","getPostProcessor","getReadFBO","depth","stencil","framebuffer","setRenderFlag","accumulate","id","isFinished","doRender","window","requestAnimationFrame","timer","setTimeout","_this3","_this$rendererService3","_getViewportSize2","_layer$getLayerConfig","getLayerConfig","_layer$getLayerConfig2","jitterScale","offset","frame","cameraService","jitterProjectionMatrix","hooks","beforeRender","afterRender","layerStyleOptions","draw","uniforms","u_opacity","opacity","u_MixRatio","u_Diffuse1","u_Diffuse2","u_Texture","tmp","clearJitterProjectionMatrix","clearTimeout","shaderModuleName","fragmentShader","options","shaderModuleService","registerModule","vs","fs","_this$shaderModuleSer","getModule","_this$rendererService4","createAttribute","createBuffer","createModel","attributes","a_Position","buffer","data","type","FLOAT","size","count","configurable","enumerable","writable","initializer","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/renderer/passes/TAAPass.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _dec, _dec2, _class, _class2, _descriptor;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\n/* babel-plugin-inline-import '../../../shaders/post-processing/blend.glsl' */\nvar blendFS = \"uniform float u_opacity : 1.0;\\nuniform float u_MixRatio : 0.5;\\n\\nuniform sampler2D u_Diffuse1;\\nuniform sampler2D u_Diffuse2;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  vec4 texel1 = texture2D(u_Diffuse1, v_UV);\\n  vec4 texel2 = texture2D(u_Diffuse2, v_UV);\\n  gl_FragColor = u_opacity * mix(texel1, texel2, u_MixRatio);\\n}\\n\";\n/* babel-plugin-inline-import '../../../shaders/post-processing/copy.glsl' */\nvar copyFS = \"varying vec2 v_UV;\\n\\nuniform sampler2D u_Texture;\\n\\nvoid main() {\\n  gl_FragColor = vec4(texture2D(u_Texture, v_UV));\\n}\";\n/* babel-plugin-inline-import '../../../shaders/post-processing/quad.glsl' */\nvar quadVS = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport { TYPES } from \"../../../types\";\nimport { PassType } from \"../IMultiPassRenderer\";\nimport { gl } from \"../gl\";\nimport BaseNormalPass from \"./BaseNormalPass\";\n\n// Generate halton sequence\n// https://en.wikipedia.org/wiki/Halton_sequence\nfunction halton(index, base) {\n  var result = 0;\n  var f = 1 / base;\n  var i = index;\n  while (i > 0) {\n    result = result + f * (i % base);\n    i = Math.floor(i / base);\n    f = f / base;\n  }\n  return result;\n}\n\n// 累加计数器\nvar accumulatingId = 1;\n\n/**\n * TAA（Temporal Anti-Aliasing）\n * 在需要后处理的场景中（例如 L7 的热力图需要 blur pass、PBR 中的 SSAO 环境光遮蔽），无法使用浏览器内置的 MSAA，\n * 只能使用 TAA\n * @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/ri52hv\n */\nvar TAAPass = (_dec = injectable(), _dec2 = inject(TYPES.IShaderModuleService), _dec(_class = (_class2 = /*#__PURE__*/function (_BaseNormalPass) {\n  _inherits(TAAPass, _BaseNormalPass);\n  var _super = _createSuper(TAAPass);\n  function TAAPass() {\n    var _this;\n    _classCallCheck(this, TAAPass);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _initializerDefineProperty(_assertThisInitialized(_this), \"shaderModuleService\", _descriptor, _assertThisInitialized(_this));\n    /**\n     * 低差异序列\n     */\n    _defineProperty(_assertThisInitialized(_this), \"haltonSequence\", []);\n    /**\n     * 当前累加任务 ID，例如用户连续拖拽时上一次累加很有可能没有结束，此时在开启新一轮累加之前需要结束掉之前未完成的\n     */\n    _defineProperty(_assertThisInitialized(_this), \"accumulatingId\", 0);\n    /**\n     * 每一轮累加中的 frameID\n     */\n    _defineProperty(_assertThisInitialized(_this), \"frame\", 0);\n    /**\n     * 每一轮累加中的 frame 定时器\n     */\n    _defineProperty(_assertThisInitialized(_this), \"timer\", undefined);\n    _defineProperty(_assertThisInitialized(_this), \"sampleRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"prevRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"outputRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"copyRenderTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"blendModel\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"outputModel\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"copyModel\", void 0);\n    return _this;\n  }\n  _createClass(TAAPass, [{\n    key: \"getType\",\n    value: function getType() {\n      return PassType.Normal;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'taa';\n    }\n  }, {\n    key: \"init\",\n    value: function init(layer, config) {\n      _get(_getPrototypeOf(TAAPass.prototype), \"init\", this).call(this, layer, config);\n      var _this$rendererService = this.rendererService,\n        createFramebuffer = _this$rendererService.createFramebuffer,\n        createTexture2D = _this$rendererService.createTexture2D;\n      this.sampleRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.prevRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.outputRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      this.copyRenderTarget = createFramebuffer({\n        color: createTexture2D({\n          width: 1,\n          height: 1,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE\n        })\n      });\n      for (var i = 0; i < 30; i++) {\n        this.haltonSequence.push([halton(i, 2), halton(i, 3)]);\n      }\n      this.blendModel = this.createTriangleModel('blend-pass', blendFS);\n      this.outputModel = this.createTriangleModel('copy-pass', copyFS, {\n        blend: {\n          enable: true,\n          func: {\n            srcRGB: gl.ONE,\n            dstRGB: gl.ONE_MINUS_SRC_ALPHA,\n            srcAlpha: gl.ONE,\n            dstAlpha: gl.ONE_MINUS_SRC_ALPHA\n          },\n          equation: {\n            rgb: gl.FUNC_ADD,\n            alpha: gl.FUNC_ADD\n          }\n        }\n      });\n      this.copyModel = this.createTriangleModel('copy-pass', copyFS);\n    }\n  }, {\n    key: \"render\",\n    value: function render(layer) {\n      var _this2 = this;\n      var _this$rendererService2 = this.rendererService,\n        clear = _this$rendererService2.clear,\n        getViewportSize = _this$rendererService2.getViewportSize,\n        useFramebuffer = _this$rendererService2.useFramebuffer;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      this.sampleRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.prevRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.outputRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.copyRenderTarget.resize({\n        width: width,\n        height: height\n      });\n      this.resetFrame();\n      // 首先停止上一次的累加\n      this.stopAccumulating();\n\n      // 先输出到 PostProcessor\n      var readFBO = layer.multiPassRenderer.getPostProcessor().getReadFBO();\n      useFramebuffer(readFBO, function () {\n        clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0,\n          framebuffer: readFBO\n        });\n\n        // render to post processor\n        layer.multiPassRenderer.setRenderFlag(false);\n        layer.render();\n        layer.multiPassRenderer.setRenderFlag(true);\n      });\n      var accumulate = function accumulate(id) {\n        // 在开启新一轮累加之前，需要先结束掉之前的累加\n        if (!_this2.accumulatingId || id !== _this2.accumulatingId) {\n          return;\n        }\n        if (!_this2.isFinished()) {\n          _this2.doRender(layer);\n          window.requestAnimationFrame(function () {\n            accumulate(id);\n          });\n        }\n      };\n      this.accumulatingId = accumulatingId++;\n      // @ts-ignore\n      this.timer = window.setTimeout(function () {\n        accumulate(_this2.accumulatingId);\n      }, 50);\n    }\n  }, {\n    key: \"doRender\",\n    value: function doRender(layer) {\n      var _this3 = this;\n      var _this$rendererService3 = this.rendererService,\n        clear = _this$rendererService3.clear,\n        getViewportSize = _this$rendererService3.getViewportSize,\n        useFramebuffer = _this$rendererService3.useFramebuffer;\n      var _getViewportSize2 = getViewportSize(),\n        width = _getViewportSize2.width,\n        height = _getViewportSize2.height;\n      var _layer$getLayerConfig = layer.getLayerConfig(),\n        _layer$getLayerConfig2 = _layer$getLayerConfig.jitterScale,\n        jitterScale = _layer$getLayerConfig2 === void 0 ? 1 : _layer$getLayerConfig2;\n\n      // 使用 Halton 序列抖动投影矩阵\n      var offset = this.haltonSequence[this.frame % this.haltonSequence.length];\n      this.cameraService.jitterProjectionMatrix((offset[0] * 2.0 - 1.0) / width * jitterScale, (offset[1] * 2.0 - 1.0) / height * jitterScale);\n\n      // 按抖动后的投影矩阵渲染\n      layer.multiPassRenderer.setRenderFlag(false);\n      layer.hooks.beforeRender.call();\n      useFramebuffer(this.sampleRenderTarget, function () {\n        clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0,\n          framebuffer: _this3.sampleRenderTarget\n        });\n        layer.render();\n      });\n      layer.hooks.afterRender.call();\n      layer.multiPassRenderer.setRenderFlag(true);\n\n      // 混合\n      var layerStyleOptions = layer.getLayerConfig();\n      useFramebuffer(this.outputRenderTarget, function () {\n        _this3.blendModel.draw({\n          uniforms: {\n            // @ts-ignore\n            u_opacity: layerStyleOptions.opacity || 1,\n            u_MixRatio: _this3.frame === 0 ? 1 : 0.9,\n            u_Diffuse1: _this3.sampleRenderTarget,\n            u_Diffuse2: _this3.frame === 0 ? layer.multiPassRenderer.getPostProcessor().getReadFBO() : _this3.prevRenderTarget\n          }\n        });\n      });\n\n      // 输出累加结果\n      if (this.frame === 0) {\n        clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0,\n          framebuffer: this.copyRenderTarget\n        });\n      }\n      if (this.frame >= 1) {\n        useFramebuffer(this.copyRenderTarget, function () {\n          _this3.outputModel.draw({\n            uniforms: {\n              u_Texture: _this3.outputRenderTarget\n            }\n          });\n        });\n        useFramebuffer(layer.multiPassRenderer.getPostProcessor().getReadFBO(), function () {\n          _this3.copyModel.draw({\n            uniforms: {\n              u_Texture: _this3.copyRenderTarget\n            }\n          });\n        });\n        layer.multiPassRenderer.getPostProcessor().render(layer);\n      }\n\n      // 保存前序帧结果\n      var tmp = this.prevRenderTarget;\n      this.prevRenderTarget = this.outputRenderTarget;\n      this.outputRenderTarget = tmp;\n      this.frame++;\n\n      // 恢复 jitter 后的相机\n      this.cameraService.clearJitterProjectionMatrix();\n    }\n\n    /**\n     * 是否已经完成累加\n     * @return {boolean} isFinished\n     */\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.frame >= this.haltonSequence.length;\n    }\n  }, {\n    key: \"resetFrame\",\n    value: function resetFrame() {\n      this.frame = 0;\n    }\n  }, {\n    key: \"stopAccumulating\",\n    value: function stopAccumulating() {\n      this.accumulatingId = 0;\n      window.clearTimeout(this.timer);\n    }\n  }, {\n    key: \"createTriangleModel\",\n    value: function createTriangleModel(shaderModuleName, fragmentShader, options) {\n      this.shaderModuleService.registerModule(shaderModuleName, {\n        vs: quadVS,\n        fs: fragmentShader\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule(shaderModuleName),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        uniforms = _this$shaderModuleSer.uniforms;\n      var _this$rendererService4 = this.rendererService,\n        createAttribute = _this$rendererService4.createAttribute,\n        createBuffer = _this$rendererService4.createBuffer,\n        createModel = _this$rendererService4.createModel;\n      return createModel(_objectSpread({\n        vs: vs,\n        fs: fs,\n        attributes: {\n          // 使用一个全屏三角形，相比 Quad 顶点数目更少\n          a_Position: createAttribute({\n            buffer: createBuffer({\n              data: [-4, -4, 4, -4, 0, 4],\n              type: gl.FLOAT\n            }),\n            size: 2\n          })\n        },\n        uniforms: _objectSpread({}, uniforms),\n        depth: {\n          enable: false\n        },\n        count: 3\n      }, options));\n    }\n  }]);\n  return TAAPass;\n}(BaseNormalPass), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"shaderModuleService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { TAAPass as default };"],"mappings":";AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,0BAA0B,MAAM,sDAAsD;AAC7F,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,sBAAsB,MAAM,kDAAkD;AACrF,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,0BAA0B,MAAM,sDAAsD;AAC7F,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,yBAAyB,MAAM,qDAAqD;AAC3F,OAAOC,yBAAyB,MAAM,qDAAqD;AAC3F,IAAIC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,WAAW;AAC7C,SAASC,YAAYA,CAACC,OAAO,EAAE;EAAE,IAAIC,yBAAyB,GAAGC,yBAAyB,CAAC,CAAC;EAAE,OAAO,SAASC,oBAAoBA,CAAA,EAAG;IAAE,IAAIC,KAAK,GAAGd,eAAe,CAACU,OAAO,CAAC;MAAEK,MAAM;IAAE,IAAIJ,yBAAyB,EAAE;MAAE,IAAIK,SAAS,GAAGhB,eAAe,CAAC,IAAI,CAAC,CAACiB,WAAW;MAAEF,MAAM,GAAGG,OAAO,CAACC,SAAS,CAACL,KAAK,EAAEM,SAAS,EAAEJ,SAAS,CAAC;IAAE,CAAC,MAAM;MAAED,MAAM,GAAGD,KAAK,CAACO,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;IAAE;IAAE,OAAOrB,0BAA0B,CAAC,IAAI,EAAEgB,MAAM,CAAC;EAAE,CAAC;AAAE;AACxa,SAASH,yBAAyBA,CAAA,EAAG;EAAE,IAAI,OAAOM,OAAO,KAAK,WAAW,IAAI,CAACA,OAAO,CAACC,SAAS,EAAE,OAAO,KAAK;EAAE,IAAID,OAAO,CAACC,SAAS,CAACG,IAAI,EAAE,OAAO,KAAK;EAAE,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAI;IAAEC,OAAO,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAACT,OAAO,CAACC,SAAS,CAACK,OAAO,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,OAAOI,CAAC,EAAE;IAAE,OAAO,KAAK;EAAE;AAAE;AACxU,SAASC,MAAM,EAAEC,UAAU,QAAQ,WAAW;AAC9C,OAAO,kBAAkB;AACzB;AACA,IAAIC,OAAO,GAAG,wUAAwU;AACtV;AACA,IAAIC,MAAM,GAAG,4HAA4H;AACzI;AACA,IAAIC,MAAM,GAAG,qJAAqJ;AAClK,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,EAAE,QAAQ,OAAO;AAC1B,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AACA;AACA,SAASC,MAAMA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC3B,IAAIzB,MAAM,GAAG,CAAC;EACd,IAAI0B,CAAC,GAAG,CAAC,GAAGD,IAAI;EAChB,IAAIE,CAAC,GAAGH,KAAK;EACb,OAAOG,CAAC,GAAG,CAAC,EAAE;IACZ3B,MAAM,GAAGA,MAAM,GAAG0B,CAAC,IAAIC,CAAC,GAAGF,IAAI,CAAC;IAChCE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAGF,IAAI,CAAC;IACxBC,CAAC,GAAGA,CAAC,GAAGD,IAAI;EACd;EACA,OAAOzB,MAAM;AACf;;AAEA;AACA,IAAI8B,cAAc,GAAG,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,IAAI1C,IAAI,GAAG0B,UAAU,CAAC,CAAC,EAAEzB,KAAK,GAAGwB,MAAM,CAACK,KAAK,CAACa,oBAAoB,CAAC,EAAE3C,IAAI,CAACE,MAAM,IAAIC,OAAO,GAAG,aAAa,UAAUyC,eAAe,EAAE;EAC/IlD,SAAS,CAACgD,OAAO,EAAEE,eAAe,CAAC;EACnC,IAAIC,MAAM,GAAGxC,YAAY,CAACqC,OAAO,CAAC;EAClC,SAASA,OAAOA,CAAA,EAAG;IACjB,IAAII,KAAK;IACTxD,eAAe,CAAC,IAAI,EAAEoD,OAAO,CAAC;IAC9B,KAAK,IAAIK,IAAI,GAAG/B,SAAS,CAACgC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC,EAAEI,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,IAAI,EAAEI,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGnC,SAAS,CAACmC,IAAI,CAAC;IAC9B;IACAL,KAAK,GAAGD,MAAM,CAACtB,IAAI,CAACN,KAAK,CAAC4B,MAAM,EAAE,CAAC,IAAI,CAAC,CAACO,MAAM,CAACH,IAAI,CAAC,CAAC;IACtD5D,0BAA0B,CAACG,sBAAsB,CAACsD,KAAK,CAAC,EAAE,qBAAqB,EAAE1C,WAAW,EAAEZ,sBAAsB,CAACsD,KAAK,CAAC,CAAC;IAC5H;AACJ;AACA;IACIjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,gBAAgB,EAAE,EAAE,CAAC;IACpE;AACJ;AACA;IACIjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC;IACnE;AACJ;AACA;IACIjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D;AACJ;AACA;IACIjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,OAAO,EAAEO,SAAS,CAAC;IAClExD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;IAC5EjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;IAC1EjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;IAC5EjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;IAC1EjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;IACpEjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;IACrEjD,eAAe,CAACL,sBAAsB,CAACsD,KAAK,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IACnE,OAAOA,KAAK;EACd;EACAvD,YAAY,CAACmD,OAAO,EAAE,CAAC;IACrBY,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAASC,OAAOA,CAAA,EAAG;MACxB,OAAOzB,QAAQ,CAAC0B,MAAM;IACxB;EACF,CAAC,EAAE;IACDH,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAASG,OAAOA,CAAA,EAAG;MACxB,OAAO,KAAK;IACd;EACF,CAAC,EAAE;IACDJ,GAAG,EAAE,MAAM;IACXC,KAAK,EAAE,SAASI,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAClCpE,IAAI,CAACG,eAAe,CAAC8C,OAAO,CAACrB,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAACE,IAAI,CAAC,IAAI,EAAEqC,KAAK,EAAEC,MAAM,CAAC;MAChF,IAAIC,qBAAqB,GAAG,IAAI,CAACC,eAAe;QAC9CC,iBAAiB,GAAGF,qBAAqB,CAACE,iBAAiB;QAC3DC,eAAe,GAAGH,qBAAqB,CAACG,eAAe;MACzD,IAAI,CAACC,kBAAkB,GAAGF,iBAAiB,CAAC;QAC1CG,KAAK,EAAEF,eAAe,CAAC;UACrBG,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAEtC,EAAE,CAACuC,aAAa;UACvBC,KAAK,EAAExC,EAAE,CAACuC;QACZ,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACE,gBAAgB,GAAGT,iBAAiB,CAAC;QACxCG,KAAK,EAAEF,eAAe,CAAC;UACrBG,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAEtC,EAAE,CAACuC,aAAa;UACvBC,KAAK,EAAExC,EAAE,CAACuC;QACZ,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACG,kBAAkB,GAAGV,iBAAiB,CAAC;QAC1CG,KAAK,EAAEF,eAAe,CAAC;UACrBG,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAEtC,EAAE,CAACuC,aAAa;UACvBC,KAAK,EAAExC,EAAE,CAACuC;QACZ,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACI,gBAAgB,GAAGX,iBAAiB,CAAC;QACxCG,KAAK,EAAEF,eAAe,CAAC;UACrBG,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAEtC,EAAE,CAACuC,aAAa;UACvBC,KAAK,EAAExC,EAAE,CAACuC;QACZ,CAAC;MACH,CAAC,CAAC;MACF,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAI,CAACsC,cAAc,CAACC,IAAI,CAAC,CAAC3C,MAAM,CAACI,CAAC,EAAE,CAAC,CAAC,EAAEJ,MAAM,CAACI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACxD;MACA,IAAI,CAACwC,UAAU,GAAG,IAAI,CAACC,mBAAmB,CAAC,YAAY,EAAEpD,OAAO,CAAC;MACjE,IAAI,CAACqD,WAAW,GAAG,IAAI,CAACD,mBAAmB,CAAC,WAAW,EAAEnD,MAAM,EAAE;QAC/DqD,KAAK,EAAE;UACLC,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE;YACJC,MAAM,EAAEpD,EAAE,CAACqD,GAAG;YACdC,MAAM,EAAEtD,EAAE,CAACuD,mBAAmB;YAC9BC,QAAQ,EAAExD,EAAE,CAACqD,GAAG;YAChBI,QAAQ,EAAEzD,EAAE,CAACuD;UACf,CAAC;UACDG,QAAQ,EAAE;YACRC,GAAG,EAAE3D,EAAE,CAAC4D,QAAQ;YAChBC,KAAK,EAAE7D,EAAE,CAAC4D;UACZ;QACF;MACF,CAAC,CAAC;MACF,IAAI,CAACE,SAAS,GAAG,IAAI,CAACf,mBAAmB,CAAC,WAAW,EAAEnD,MAAM,CAAC;IAChE;EACF,CAAC,EAAE;IACD0B,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE,SAASwC,MAAMA,CAACnC,KAAK,EAAE;MAC5B,IAAIoC,MAAM,GAAG,IAAI;MACjB,IAAIC,sBAAsB,GAAG,IAAI,CAAClC,eAAe;QAC/CmC,KAAK,GAAGD,sBAAsB,CAACC,KAAK;QACpCC,eAAe,GAAGF,sBAAsB,CAACE,eAAe;QACxDC,cAAc,GAAGH,sBAAsB,CAACG,cAAc;MACxD,IAAIC,gBAAgB,GAAGF,eAAe,CAAC,CAAC;QACtC/B,KAAK,GAAGiC,gBAAgB,CAACjC,KAAK;QAC9BC,MAAM,GAAGgC,gBAAgB,CAAChC,MAAM;MAClC,IAAI,CAACH,kBAAkB,CAACoC,MAAM,CAAC;QAC7BlC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,IAAI,CAACI,gBAAgB,CAAC6B,MAAM,CAAC;QAC3BlC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,IAAI,CAACK,kBAAkB,CAAC4B,MAAM,CAAC;QAC7BlC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,IAAI,CAACM,gBAAgB,CAAC2B,MAAM,CAAC;QAC3BlC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,IAAI,CAACkC,UAAU,CAAC,CAAC;MACjB;MACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;;MAEvB;MACA,IAAIC,OAAO,GAAG7C,KAAK,CAAC8C,iBAAiB,CAACC,gBAAgB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MACrER,cAAc,CAACK,OAAO,EAAE,YAAY;QAClCP,KAAK,CAAC;UACJ/B,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACnB0C,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE,CAAC;UACVC,WAAW,EAAEN;QACf,CAAC,CAAC;;QAEF;QACA7C,KAAK,CAAC8C,iBAAiB,CAACM,aAAa,CAAC,KAAK,CAAC;QAC5CpD,KAAK,CAACmC,MAAM,CAAC,CAAC;QACdnC,KAAK,CAAC8C,iBAAiB,CAACM,aAAa,CAAC,IAAI,CAAC;MAC7C,CAAC,CAAC;MACF,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAACC,EAAE,EAAE;QACvC;QACA,IAAI,CAAClB,MAAM,CAACvD,cAAc,IAAIyE,EAAE,KAAKlB,MAAM,CAACvD,cAAc,EAAE;UAC1D;QACF;QACA,IAAI,CAACuD,MAAM,CAACmB,UAAU,CAAC,CAAC,EAAE;UACxBnB,MAAM,CAACoB,QAAQ,CAACxD,KAAK,CAAC;UACtByD,MAAM,CAACC,qBAAqB,CAAC,YAAY;YACvCL,UAAU,CAACC,EAAE,CAAC;UAChB,CAAC,CAAC;QACJ;MACF,CAAC;MACD,IAAI,CAACzE,cAAc,GAAGA,cAAc,EAAE;MACtC;MACA,IAAI,CAAC8E,KAAK,GAAGF,MAAM,CAACG,UAAU,CAAC,YAAY;QACzCP,UAAU,CAACjB,MAAM,CAACvD,cAAc,CAAC;MACnC,CAAC,EAAE,EAAE,CAAC;IACR;EACF,CAAC,EAAE;IACDa,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE,SAAS6D,QAAQA,CAACxD,KAAK,EAAE;MAC9B,IAAI6D,MAAM,GAAG,IAAI;MACjB,IAAIC,sBAAsB,GAAG,IAAI,CAAC3D,eAAe;QAC/CmC,KAAK,GAAGwB,sBAAsB,CAACxB,KAAK;QACpCC,eAAe,GAAGuB,sBAAsB,CAACvB,eAAe;QACxDC,cAAc,GAAGsB,sBAAsB,CAACtB,cAAc;MACxD,IAAIuB,iBAAiB,GAAGxB,eAAe,CAAC,CAAC;QACvC/B,KAAK,GAAGuD,iBAAiB,CAACvD,KAAK;QAC/BC,MAAM,GAAGsD,iBAAiB,CAACtD,MAAM;MACnC,IAAIuD,qBAAqB,GAAGhE,KAAK,CAACiE,cAAc,CAAC,CAAC;QAChDC,sBAAsB,GAAGF,qBAAqB,CAACG,WAAW;QAC1DA,WAAW,GAAGD,sBAAsB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,sBAAsB;;MAE9E;MACA,IAAIE,MAAM,GAAG,IAAI,CAACpD,cAAc,CAAC,IAAI,CAACqD,KAAK,GAAG,IAAI,CAACrD,cAAc,CAAC5B,MAAM,CAAC;MACzE,IAAI,CAACkF,aAAa,CAACC,sBAAsB,CAAC,CAACH,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI5D,KAAK,GAAG2D,WAAW,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI3D,MAAM,GAAG0D,WAAW,CAAC;;MAExI;MACAnE,KAAK,CAAC8C,iBAAiB,CAACM,aAAa,CAAC,KAAK,CAAC;MAC5CpD,KAAK,CAACwE,KAAK,CAACC,YAAY,CAAC9G,IAAI,CAAC,CAAC;MAC/B6E,cAAc,CAAC,IAAI,CAAClC,kBAAkB,EAAE,YAAY;QAClDgC,KAAK,CAAC;UACJ/B,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACnB0C,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE,CAAC;UACVC,WAAW,EAAEU,MAAM,CAACvD;QACtB,CAAC,CAAC;QACFN,KAAK,CAACmC,MAAM,CAAC,CAAC;MAChB,CAAC,CAAC;MACFnC,KAAK,CAACwE,KAAK,CAACE,WAAW,CAAC/G,IAAI,CAAC,CAAC;MAC9BqC,KAAK,CAAC8C,iBAAiB,CAACM,aAAa,CAAC,IAAI,CAAC;;MAE3C;MACA,IAAIuB,iBAAiB,GAAG3E,KAAK,CAACiE,cAAc,CAAC,CAAC;MAC9CzB,cAAc,CAAC,IAAI,CAAC1B,kBAAkB,EAAE,YAAY;QAClD+C,MAAM,CAAC3C,UAAU,CAAC0D,IAAI,CAAC;UACrBC,QAAQ,EAAE;YACR;YACAC,SAAS,EAAEH,iBAAiB,CAACI,OAAO,IAAI,CAAC;YACzCC,UAAU,EAAEnB,MAAM,CAACQ,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;YACxCY,UAAU,EAAEpB,MAAM,CAACvD,kBAAkB;YACrC4E,UAAU,EAAErB,MAAM,CAACQ,KAAK,KAAK,CAAC,GAAGrE,KAAK,CAAC8C,iBAAiB,CAACC,gBAAgB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,GAAGa,MAAM,CAAChD;UACpG;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,IAAI,IAAI,CAACwD,KAAK,KAAK,CAAC,EAAE;QACpB/B,KAAK,CAAC;UACJ/B,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACnB0C,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE,CAAC;UACVC,WAAW,EAAE,IAAI,CAACpC;QACpB,CAAC,CAAC;MACJ;MACA,IAAI,IAAI,CAACsD,KAAK,IAAI,CAAC,EAAE;QACnB7B,cAAc,CAAC,IAAI,CAACzB,gBAAgB,EAAE,YAAY;UAChD8C,MAAM,CAACzC,WAAW,CAACwD,IAAI,CAAC;YACtBC,QAAQ,EAAE;cACRM,SAAS,EAAEtB,MAAM,CAAC/C;YACpB;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;QACF0B,cAAc,CAACxC,KAAK,CAAC8C,iBAAiB,CAACC,gBAAgB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,EAAE,YAAY;UAClFa,MAAM,CAAC3B,SAAS,CAAC0C,IAAI,CAAC;YACpBC,QAAQ,EAAE;cACRM,SAAS,EAAEtB,MAAM,CAAC9C;YACpB;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;QACFf,KAAK,CAAC8C,iBAAiB,CAACC,gBAAgB,CAAC,CAAC,CAACZ,MAAM,CAACnC,KAAK,CAAC;MAC1D;;MAEA;MACA,IAAIoF,GAAG,GAAG,IAAI,CAACvE,gBAAgB;MAC/B,IAAI,CAACA,gBAAgB,GAAG,IAAI,CAACC,kBAAkB;MAC/C,IAAI,CAACA,kBAAkB,GAAGsE,GAAG;MAC7B,IAAI,CAACf,KAAK,EAAE;;MAEZ;MACA,IAAI,CAACC,aAAa,CAACe,2BAA2B,CAAC,CAAC;IAClD;;IAEA;AACJ;AACA;AACA;EACE,CAAC,EAAE;IACD3F,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,SAAS4D,UAAUA,CAAA,EAAG;MAC3B,OAAO,IAAI,CAACc,KAAK,IAAI,IAAI,CAACrD,cAAc,CAAC5B,MAAM;IACjD;EACF,CAAC,EAAE;IACDM,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,SAASgD,UAAUA,CAAA,EAAG;MAC3B,IAAI,CAAC0B,KAAK,GAAG,CAAC;IAChB;EACF,CAAC,EAAE;IACD3E,GAAG,EAAE,kBAAkB;IACvBC,KAAK,EAAE,SAASiD,gBAAgBA,CAAA,EAAG;MACjC,IAAI,CAAC/D,cAAc,GAAG,CAAC;MACvB4E,MAAM,CAAC6B,YAAY,CAAC,IAAI,CAAC3B,KAAK,CAAC;IACjC;EACF,CAAC,EAAE;IACDjE,GAAG,EAAE,qBAAqB;IAC1BC,KAAK,EAAE,SAASwB,mBAAmBA,CAACoE,gBAAgB,EAAEC,cAAc,EAAEC,OAAO,EAAE;MAC7E,IAAI,CAACC,mBAAmB,CAACC,cAAc,CAACJ,gBAAgB,EAAE;QACxDK,EAAE,EAAE3H,MAAM;QACV4H,EAAE,EAAEL;MACN,CAAC,CAAC;MACF,IAAIM,qBAAqB,GAAG,IAAI,CAACJ,mBAAmB,CAACK,SAAS,CAACR,gBAAgB,CAAC;QAC9EK,EAAE,GAAGE,qBAAqB,CAACF,EAAE;QAC7BC,EAAE,GAAGC,qBAAqB,CAACD,EAAE;QAC7BhB,QAAQ,GAAGiB,qBAAqB,CAACjB,QAAQ;MAC3C,IAAImB,sBAAsB,GAAG,IAAI,CAAC7F,eAAe;QAC/C8F,eAAe,GAAGD,sBAAsB,CAACC,eAAe;QACxDC,YAAY,GAAGF,sBAAsB,CAACE,YAAY;QAClDC,WAAW,GAAGH,sBAAsB,CAACG,WAAW;MAClD,OAAOA,WAAW,CAAC3K,aAAa,CAAC;QAC/BoK,EAAE,EAAEA,EAAE;QACNC,EAAE,EAAEA,EAAE;QACNO,UAAU,EAAE;UACV;UACAC,UAAU,EAAEJ,eAAe,CAAC;YAC1BK,MAAM,EAAEJ,YAAY,CAAC;cACnBK,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;cAC3BC,IAAI,EAAEpI,EAAE,CAACqI;YACX,CAAC,CAAC;YACFC,IAAI,EAAE;UACR,CAAC;QACH,CAAC;QACD7B,QAAQ,EAAErJ,aAAa,CAAC,CAAC,CAAC,EAAEqJ,QAAQ,CAAC;QACrC5B,KAAK,EAAE;UACL3B,MAAM,EAAE;QACV,CAAC;QACDqF,KAAK,EAAE;MACT,CAAC,EAAElB,OAAO,CAAC,CAAC;IACd;EACF,CAAC,CAAC,CAAC;EACH,OAAO3G,OAAO;AAChB,CAAC,CAACT,cAAc,CAAC,EAAG7B,WAAW,GAAGN,yBAAyB,CAACK,OAAO,CAACkB,SAAS,EAAE,qBAAqB,EAAE,CAACpB,KAAK,CAAC,EAAE;EAC7GuK,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;AACf,CAAC,CAAC,EAAGxK,OAAO,CAAC,CAAC,IAAID,MAAM,CAAC;AACzB,SAASwC,OAAO,IAAIkI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}