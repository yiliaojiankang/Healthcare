{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { isArray, isNumber } from '@antv/util';\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\nexport function isAutoPadding(padding) {\n  return !isNumber(padding) && !isArray(padding);\n}\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function parsePadding(padding) {\n  if (padding === void 0) {\n    padding = 0;\n  }\n  var paddingArray = isArray(padding) ? padding : [padding];\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n    case 2:\n      paddingArray = __spreadArray(__spreadArray([], __read(paddingArray), false), __read(paddingArray), false);\n      break;\n    case 3:\n      paddingArray = __spreadArray(__spreadArray([], __read(paddingArray), false), [paddingArray[1]], false);\n      break;\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n  return paddingArray;\n}","map":{"version":3,"names":["isArray","isNumber","isAutoPadding","padding","parsePadding","paddingArray","length","Array","fill","__spreadArray","__read","slice"],"sources":["../../src/util/padding.ts"],"sourcesContent":["import { isArray, isNumber } from '@antv/util';\nimport { Padding, ViewPadding } from '../interface';\n\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\nexport function isAutoPadding(padding: ViewPadding): padding is 'auto' {\n  return !isNumber(padding) && !isArray(padding);\n}\n\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function parsePadding(padding: number[] | number = 0): Padding {\n  let paddingArray = isArray(padding) ? padding : [padding];\n\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n    case 2:\n      paddingArray = [...paddingArray, ...paddingArray];\n      break;\n    case 3:\n      paddingArray = [...paddingArray, paddingArray[1]];\n      break;\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n\n  return paddingArray as [number, number, number, number];\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAG9C;;;;;AAKA,OAAM,SAAUC,aAAaA,CAACC,OAAoB;EAChD,OAAO,CAACF,QAAQ,CAACE,OAAO,CAAC,IAAI,CAACH,OAAO,CAACG,OAAO,CAAC;AAChD;AAEA;;;;;;AAMA,OAAM,SAAUC,YAAYA,CAACD,OAA8B;EAA9B,IAAAA,OAAA;IAAAA,OAAA,IAA8B;EAAA;EACzD,IAAIE,YAAY,GAAGL,OAAO,CAACG,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;EAEzD,QAAQE,YAAY,CAACC,MAAM;IACzB,KAAK,CAAC;MACJD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC3B;IACF,KAAK,CAAC;MACJA,YAAY,GAAG,IAAIE,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC;MACjD;IACF,KAAK,CAAC;MACJA,YAAY,GAAAI,aAAA,CAAAA,aAAA,KAAAC,MAAA,CAAOL,YAAY,WAAAK,MAAA,CAAKL,YAAY,SAAC;MACjD;IACF,KAAK,CAAC;MACJA,YAAY,GAAAI,aAAA,CAAAA,aAAA,KAAAC,MAAA,CAAOL,YAAY,YAAEA,YAAY,CAAC,CAAC,CAAC,SAAC;MACjD;IACF;MACE;MACAA,YAAY,GAAGA,YAAY,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACvC;;EAGJ,OAAON,YAAgD;AACzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}