{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { calculateCentroid, getCullFace, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nimport { PointExtrudeTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/extrude/extrude_frag.glsl' */\nvar pointExtrudeFrag = \"\\nin vec4 v_color;\\nin float v_lightWeight;\\nout vec4 outputColor;\\n\\nlayout(std140) uniform commonUniforms {\\n  float u_pickLight;\\n  float u_heightfixed;\\n  float u_r;\\n  float u_linearColor;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  float u_opacitylinear;\\n  float u_opacitylinear_dir;\\n  float u_lightEnable;\\n};\\n\\n#pragma include \\\"scene_uniforms\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n\\n  outputColor = v_color;\\n  // \\u5F00\\u542F\\u900F\\u660E\\u5EA6\\u6E10\\u53D8\\n  // picking\\n  if(u_pickLight > 0.0) {\\n    outputColor = filterColorAlpha(outputColor, v_lightWeight);\\n  } else {\\n    outputColor = filterColor(outputColor);\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/extrude/extrude_vert.glsl' */\nvar pointExtrudeVert = \"#define pi 3.1415926535\\n\\nlayout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec3 a_Size;\\nlayout(location = 11) in vec3 a_Extrude;\\nlayout(location = 13) in vec3 a_Normal;\\n\\nlayout(std140) uniform commonUniforms {\\n  float u_pickLight;\\n  float u_heightfixed;\\n  float u_r;\\n  float u_linearColor;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  float u_opacitylinear;\\n  float u_opacitylinear_dir;\\n  float u_lightEnable;\\n};\\nout vec4 v_color;\\nout float v_lightWeight;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"light\\\"\\n#pragma include \\\"picking\\\"\\n\\nfloat getYRadian(float x, float z) {\\n  if(x > 0.0 && z > 0.0) {\\n    return atan(x/z);\\n  } else if(x > 0.0 && z <= 0.0){\\n    return atan(-z/x) + pi/2.0;\\n  } else if(x <= 0.0 && z <= 0.0) {\\n    return  pi + atan(x/z); //atan(x/z) + \\n  } else {\\n    return atan(z/-x) + pi*3.0/2.0;\\n  }\\n}\\n\\nfloat getXRadian(float y, float r) {\\n  return atan(y/r);\\n}\\n\\nvoid main() {\\n\\n\\n  vec3 size = a_Size * a_Position;\\n\\n  vec3 offset = size; // \\u63A7\\u5236\\u5706\\u67F1\\u4F53\\u7684\\u5927\\u5C0F - \\u4ECE\\u6807\\u51C6\\u5355\\u4F4D\\u5706\\u67F1\\u4F53\\u8FDB\\u884C\\u504F\\u79FB\\n\\n  if(u_heightfixed < 1.0) { // \\u5706\\u67F1\\u4F53\\u4E0D\\u56FA\\u5B9A\\u9AD8\\u5EA6\\n    \\n    if (u_CoordinateSystem == COORDINATE_SYSTEM_P20 || u_CoordinateSystem == COORDINATE_SYSTEM_P20_OFFSET) {\\n      // P20 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF1\\n      offset = offset * pow(2.0, (19.0 - u_Zoom));\\n    }\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n      // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n      offset = offset * pow(2.0, (19.0 - 3.0 - u_Zoom));\\n    }\\n  } else {// \\u5706\\u67F1\\u4F53\\u56FA\\u5B9A\\u9AD8\\u5EA6 \\uFF08 \\u5904\\u7406 mapbox \\uFF09\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n      offset *= 4.0/pow(2.0, 21.0 - u_Zoom);\\n    }\\n  }\\n\\n\\n  vec4 project_pos = project_position(vec4(a_Extrude.xy, 0., 1.0));\\n\\n  // u_r \\u63A7\\u5236\\u5706\\u67F1\\u7684\\u751F\\u957F\\n  vec4 pos = vec4(project_pos.xy + offset.xy, offset.z * u_r, 1.0);\\n\\n  // // \\u5706\\u67F1\\u5149\\u7167\\u6548\\u679C\\n  float lightWeight = 1.0;\\n\\n  if(u_lightEnable > 0.0) { // \\u53D6\\u6D88\\u4E09\\u5143\\u8868\\u8FBE\\u5F0F\\uFF0C\\u589E\\u5F3A\\u5065\\u58EE\\u6027\\n    lightWeight = calc_lighting(pos);\\n  }\\n\\n  v_lightWeight = lightWeight;\\n\\n  v_color = a_Color;\\n\\n    // \\u8BBE\\u7F6E\\u5706\\u67F1\\u7684\\u5E95\\u8272\\n  if(u_linearColor == 1.0) { // \\u4F7F\\u7528\\u6E10\\u53D8\\u989C\\u8272\\n    v_color = mix(u_sourceColor, u_targetColor, a_Position.z);\\n    v_color.a =  v_color.a * opacity;\\n  } else {\\n    v_color = vec4(a_Color.rgb * lightWeight, a_Color.w * opacity);\\n  }\\n\\n    if(u_opacitylinear > 0.0) {\\n    v_color.a *= u_opacitylinear_dir > 0.0 ? (1.0 - a_Position.z): a_Position.z;\\n  }\\n\\n\\n  gl_Position = project_common_position_to_clipspace_v2(pos);\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nvar ExtrudeModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(ExtrudeModel, _BaseModel);\n  var _super = _createSuper(ExtrudeModel);\n  function ExtrudeModel() {\n    var _this;\n    _classCallCheck(this, ExtrudeModel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"raiseCount\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"raiseRepeat\", 0);\n    return _this;\n  }\n  _createClass(ExtrudeModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        _ref$animateOption = _ref.animateOption,\n        animateOption = _ref$animateOption === void 0 ? {\n          enable: false,\n          speed: 0.01,\n          repeat: false\n        } : _ref$animateOption,\n        sourceColor = _ref.sourceColor,\n        targetColor = _ref.targetColor,\n        _ref$pickLight = _ref.pickLight,\n        pickLight = _ref$pickLight === void 0 ? false : _ref$pickLight,\n        _ref$heightfixed = _ref.heightfixed,\n        heightfixed = _ref$heightfixed === void 0 ? false : _ref$heightfixed,\n        _ref$opacityLinear = _ref.opacityLinear,\n        opacityLinear = _ref$opacityLinear === void 0 ? {\n          enable: false,\n          dir: 'up'\n        } : _ref$opacityLinear,\n        _ref$lightEnable = _ref.lightEnable,\n        lightEnable = _ref$lightEnable === void 0 ? true : _ref$lightEnable;\n\n      // 转化渐变色\n      var useLinearColor = 0; // 默认不生效\n      var sourceColorArr = [0, 0, 0, 0];\n      var targetColorArr = [0, 0, 0, 0];\n      if (sourceColor && targetColor) {\n        sourceColorArr = rgb2arr(sourceColor);\n        targetColorArr = rgb2arr(targetColor);\n        useLinearColor = 1;\n      }\n      if (this.raiseCount < 1 && this.raiseRepeat > 0) {\n        if (animateOption.enable) {\n          var _animateOption$speed = animateOption.speed,\n            speed = _animateOption$speed === void 0 ? 0.01 : _animateOption$speed;\n          this.raiseCount += speed;\n          if (this.raiseCount >= 1) {\n            if (this.raiseRepeat > 1) {\n              this.raiseCount = 0;\n              this.raiseRepeat--;\n            } else {\n              this.raiseCount = 1;\n            }\n          }\n        }\n      }\n      var commonOptions = {\n        // 圆柱体的拾取高亮是否要计算光照\n        u_pickLight: Number(pickLight),\n        // 圆柱体是否固定高度\n        u_heightfixed: Number(heightfixed),\n        u_r: animateOption.enable && this.raiseRepeat > 0 ? this.raiseCount : 1.0,\n        // 渐变色支持参数\n        u_linearColor: useLinearColor,\n        u_sourceColor: sourceColorArr,\n        u_targetColor: targetColorArr,\n        // 透明度渐变\n        u_opacitylinear: Number(opacityLinear.enable),\n        u_opacitylinear_dir: opacityLinear.dir === 'up' ? 1.0 : 0.0,\n        // 光照计算开关\n        u_lightEnable: Number(lightEnable)\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _ref2, _ref2$depth, depth, _ref2$animateOption$r, repeat, model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // GAODE1.x GAODE2.x MAPBOX\n              _ref2 = this.layer.getLayerConfig(), _ref2$depth = _ref2.depth, depth = _ref2$depth === void 0 ? true : _ref2$depth, _ref2$animateOption$r = _ref2.animateOption.repeat, repeat = _ref2$animateOption$r === void 0 ? 1 : _ref2$animateOption$r;\n              this.raiseRepeat = repeat;\n              this.initUniformsBuffer();\n              _context2.next = 5;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointExtrude',\n                vertexShader: pointExtrudeVert,\n                fragmentShader: pointExtrudeFrag,\n                triangulation: PointExtrudeTriangulation,\n                inject: this.getInject(),\n                cull: {\n                  enable: true,\n                  face: getCullFace(this.mapService.version)\n                },\n                depth: {\n                  enable: depth\n                }\n              });\n            case 5:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature) {\n            var size = feature.size;\n            if (size) {\n              var buffersize = [];\n              if (Array.isArray(size)) {\n                buffersize = size.length === 2 ? [size[0], size[0], size[1]] : size;\n              }\n              if (!Array.isArray(size)) {\n                buffersize = [size, size, size];\n              }\n              return buffersize;\n            } else {\n              return [2, 2, 2];\n            }\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'normal',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Normal',\n          shaderLocation: ShaderLocation.NORMAL,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal) {\n            return normal;\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'extrude',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Extrude',\n          shaderLocation: ShaderLocation.EXTRUDE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature) {\n            var coordinates = calculateCentroid(feature.coordinates);\n            return [coordinates[0], coordinates[1], 0];\n          }\n        }\n      });\n    }\n  }]);\n  return ExtrudeModel;\n}(BaseModel);\nexport { ExtrudeModel as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","calculateCentroid","getCullFace","rgb2arr","BaseModel","ShaderLocation","PointExtrudeTriangulation","pointExtrudeFrag","pointExtrudeVert","ExtrudeModel","_BaseModel","_super","_this","_len","length","args","Array","_key","concat","key","value","getCommonUniformsInfo","_ref","layer","getLayerConfig","_ref$animateOption","animateOption","enable","speed","repeat","sourceColor","targetColor","_ref$pickLight","pickLight","_ref$heightfixed","heightfixed","_ref$opacityLinear","opacityLinear","dir","_ref$lightEnable","lightEnable","useLinearColor","sourceColorArr","targetColorArr","raiseCount","raiseRepeat","_animateOption$speed","commonOptions","u_pickLight","Number","u_heightfixed","u_r","u_linearColor","u_sourceColor","u_targetColor","u_opacitylinear","u_opacitylinear_dir","u_lightEnable","commonBufferInfo","getUniformsBufferInfo","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","buildModels","stop","initModels","_buildModels","_callee2","_ref2","_ref2$depth","depth","_ref2$animateOption$r","model","_callee2$","_context2","initUniformsBuffer","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","inject","getInject","cull","face","mapService","version","sent","registerBuiltinAttributes","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","SIZE","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","buffersize","isArray","NORMAL","STATIC_DRAW","featureIdx","vertex","attributeIdx","normal","EXTRUDE","coordinates","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/point/models/extrude.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { calculateCentroid, getCullFace, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nimport { PointExtrudeTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/extrude/extrude_frag.glsl' */\nvar pointExtrudeFrag = \"\\nin vec4 v_color;\\nin float v_lightWeight;\\nout vec4 outputColor;\\n\\nlayout(std140) uniform commonUniforms {\\n  float u_pickLight;\\n  float u_heightfixed;\\n  float u_r;\\n  float u_linearColor;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  float u_opacitylinear;\\n  float u_opacitylinear_dir;\\n  float u_lightEnable;\\n};\\n\\n#pragma include \\\"scene_uniforms\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n\\n  outputColor = v_color;\\n  // \\u5F00\\u542F\\u900F\\u660E\\u5EA6\\u6E10\\u53D8\\n  // picking\\n  if(u_pickLight > 0.0) {\\n    outputColor = filterColorAlpha(outputColor, v_lightWeight);\\n  } else {\\n    outputColor = filterColor(outputColor);\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/extrude/extrude_vert.glsl' */\nvar pointExtrudeVert = \"#define pi 3.1415926535\\n\\nlayout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec3 a_Size;\\nlayout(location = 11) in vec3 a_Extrude;\\nlayout(location = 13) in vec3 a_Normal;\\n\\nlayout(std140) uniform commonUniforms {\\n  float u_pickLight;\\n  float u_heightfixed;\\n  float u_r;\\n  float u_linearColor;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  float u_opacitylinear;\\n  float u_opacitylinear_dir;\\n  float u_lightEnable;\\n};\\nout vec4 v_color;\\nout float v_lightWeight;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"light\\\"\\n#pragma include \\\"picking\\\"\\n\\nfloat getYRadian(float x, float z) {\\n  if(x > 0.0 && z > 0.0) {\\n    return atan(x/z);\\n  } else if(x > 0.0 && z <= 0.0){\\n    return atan(-z/x) + pi/2.0;\\n  } else if(x <= 0.0 && z <= 0.0) {\\n    return  pi + atan(x/z); //atan(x/z) + \\n  } else {\\n    return atan(z/-x) + pi*3.0/2.0;\\n  }\\n}\\n\\nfloat getXRadian(float y, float r) {\\n  return atan(y/r);\\n}\\n\\nvoid main() {\\n\\n\\n  vec3 size = a_Size * a_Position;\\n\\n  vec3 offset = size; // \\u63A7\\u5236\\u5706\\u67F1\\u4F53\\u7684\\u5927\\u5C0F - \\u4ECE\\u6807\\u51C6\\u5355\\u4F4D\\u5706\\u67F1\\u4F53\\u8FDB\\u884C\\u504F\\u79FB\\n\\n  if(u_heightfixed < 1.0) { // \\u5706\\u67F1\\u4F53\\u4E0D\\u56FA\\u5B9A\\u9AD8\\u5EA6\\n    \\n    if (u_CoordinateSystem == COORDINATE_SYSTEM_P20 || u_CoordinateSystem == COORDINATE_SYSTEM_P20_OFFSET) {\\n      // P20 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF1\\n      offset = offset * pow(2.0, (19.0 - u_Zoom));\\n    }\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n      // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n      offset = offset * pow(2.0, (19.0 - 3.0 - u_Zoom));\\n    }\\n  } else {// \\u5706\\u67F1\\u4F53\\u56FA\\u5B9A\\u9AD8\\u5EA6 \\uFF08 \\u5904\\u7406 mapbox \\uFF09\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n      offset *= 4.0/pow(2.0, 21.0 - u_Zoom);\\n    }\\n  }\\n\\n\\n  vec4 project_pos = project_position(vec4(a_Extrude.xy, 0., 1.0));\\n\\n  // u_r \\u63A7\\u5236\\u5706\\u67F1\\u7684\\u751F\\u957F\\n  vec4 pos = vec4(project_pos.xy + offset.xy, offset.z * u_r, 1.0);\\n\\n  // // \\u5706\\u67F1\\u5149\\u7167\\u6548\\u679C\\n  float lightWeight = 1.0;\\n\\n  if(u_lightEnable > 0.0) { // \\u53D6\\u6D88\\u4E09\\u5143\\u8868\\u8FBE\\u5F0F\\uFF0C\\u589E\\u5F3A\\u5065\\u58EE\\u6027\\n    lightWeight = calc_lighting(pos);\\n  }\\n\\n  v_lightWeight = lightWeight;\\n\\n  v_color = a_Color;\\n\\n    // \\u8BBE\\u7F6E\\u5706\\u67F1\\u7684\\u5E95\\u8272\\n  if(u_linearColor == 1.0) { // \\u4F7F\\u7528\\u6E10\\u53D8\\u989C\\u8272\\n    v_color = mix(u_sourceColor, u_targetColor, a_Position.z);\\n    v_color.a =  v_color.a * opacity;\\n  } else {\\n    v_color = vec4(a_Color.rgb * lightWeight, a_Color.w * opacity);\\n  }\\n\\n    if(u_opacitylinear > 0.0) {\\n    v_color.a *= u_opacitylinear_dir > 0.0 ? (1.0 - a_Position.z): a_Position.z;\\n  }\\n\\n\\n  gl_Position = project_common_position_to_clipspace_v2(pos);\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nvar ExtrudeModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(ExtrudeModel, _BaseModel);\n  var _super = _createSuper(ExtrudeModel);\n  function ExtrudeModel() {\n    var _this;\n    _classCallCheck(this, ExtrudeModel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"raiseCount\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"raiseRepeat\", 0);\n    return _this;\n  }\n  _createClass(ExtrudeModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        _ref$animateOption = _ref.animateOption,\n        animateOption = _ref$animateOption === void 0 ? {\n          enable: false,\n          speed: 0.01,\n          repeat: false\n        } : _ref$animateOption,\n        sourceColor = _ref.sourceColor,\n        targetColor = _ref.targetColor,\n        _ref$pickLight = _ref.pickLight,\n        pickLight = _ref$pickLight === void 0 ? false : _ref$pickLight,\n        _ref$heightfixed = _ref.heightfixed,\n        heightfixed = _ref$heightfixed === void 0 ? false : _ref$heightfixed,\n        _ref$opacityLinear = _ref.opacityLinear,\n        opacityLinear = _ref$opacityLinear === void 0 ? {\n          enable: false,\n          dir: 'up'\n        } : _ref$opacityLinear,\n        _ref$lightEnable = _ref.lightEnable,\n        lightEnable = _ref$lightEnable === void 0 ? true : _ref$lightEnable;\n\n      // 转化渐变色\n      var useLinearColor = 0; // 默认不生效\n      var sourceColorArr = [0, 0, 0, 0];\n      var targetColorArr = [0, 0, 0, 0];\n      if (sourceColor && targetColor) {\n        sourceColorArr = rgb2arr(sourceColor);\n        targetColorArr = rgb2arr(targetColor);\n        useLinearColor = 1;\n      }\n      if (this.raiseCount < 1 && this.raiseRepeat > 0) {\n        if (animateOption.enable) {\n          var _animateOption$speed = animateOption.speed,\n            speed = _animateOption$speed === void 0 ? 0.01 : _animateOption$speed;\n          this.raiseCount += speed;\n          if (this.raiseCount >= 1) {\n            if (this.raiseRepeat > 1) {\n              this.raiseCount = 0;\n              this.raiseRepeat--;\n            } else {\n              this.raiseCount = 1;\n            }\n          }\n        }\n      }\n      var commonOptions = {\n        // 圆柱体的拾取高亮是否要计算光照\n        u_pickLight: Number(pickLight),\n        // 圆柱体是否固定高度\n        u_heightfixed: Number(heightfixed),\n        u_r: animateOption.enable && this.raiseRepeat > 0 ? this.raiseCount : 1.0,\n        // 渐变色支持参数\n        u_linearColor: useLinearColor,\n        u_sourceColor: sourceColorArr,\n        u_targetColor: targetColorArr,\n        // 透明度渐变\n        u_opacitylinear: Number(opacityLinear.enable),\n        u_opacitylinear_dir: opacityLinear.dir === 'up' ? 1.0 : 0.0,\n        // 光照计算开关\n        u_lightEnable: Number(lightEnable)\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _ref2, _ref2$depth, depth, _ref2$animateOption$r, repeat, model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // GAODE1.x GAODE2.x MAPBOX\n              _ref2 = this.layer.getLayerConfig(), _ref2$depth = _ref2.depth, depth = _ref2$depth === void 0 ? true : _ref2$depth, _ref2$animateOption$r = _ref2.animateOption.repeat, repeat = _ref2$animateOption$r === void 0 ? 1 : _ref2$animateOption$r;\n              this.raiseRepeat = repeat;\n              this.initUniformsBuffer();\n              _context2.next = 5;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointExtrude',\n                vertexShader: pointExtrudeVert,\n                fragmentShader: pointExtrudeFrag,\n                triangulation: PointExtrudeTriangulation,\n                inject: this.getInject(),\n                cull: {\n                  enable: true,\n                  face: getCullFace(this.mapService.version)\n                },\n                depth: {\n                  enable: depth\n                }\n              });\n            case 5:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature) {\n            var size = feature.size;\n            if (size) {\n              var buffersize = [];\n              if (Array.isArray(size)) {\n                buffersize = size.length === 2 ? [size[0], size[0], size[1]] : size;\n              }\n              if (!Array.isArray(size)) {\n                buffersize = [size, size, size];\n              }\n              return buffersize;\n            } else {\n              return [2, 2, 2];\n            }\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'normal',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Normal',\n          shaderLocation: ShaderLocation.NORMAL,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal) {\n            return normal;\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'extrude',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Extrude',\n          shaderLocation: ShaderLocation.EXTRUDE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature) {\n            var coordinates = calculateCentroid(feature.coordinates);\n            return [coordinates[0], coordinates[1], 0];\n          }\n        }\n      });\n    }\n  }]);\n  return ExtrudeModel;\n}(BaseModel);\nexport { ExtrudeModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}