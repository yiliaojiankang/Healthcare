{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, isNil, get } from '@antv/util';\nimport { getCurrentElement, getDelegationObject, getElements, getElementValue, getScaleByField, isElementChange, isList } from '../util';\nimport StateBase from './state-base';\nfunction getItem(shape) {\n  return get(shape.get('delegateObject'), 'item');\n}\n/**\n * 状态量 Action 的基类，允许多个 Element 同时拥有某个状态\n * @class\n * @ignore\n */\nvar ElementState = /** @class */function (_super) {\n  __extends(ElementState, _super);\n  function ElementState() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.ignoreListItemStates = ['unchecked'];\n    return _this;\n  }\n  // 是否忽略触发的列表项\n  ElementState.prototype.isItemIgnore = function (item, list) {\n    var states = this.ignoreListItemStates;\n    var filtered = states.filter(function (state) {\n      return list.hasState(item, state);\n    });\n    return !!filtered.length;\n  };\n  // 设置由组件选项导致的状态变化\n  ElementState.prototype.setStateByComponent = function (component, item, enable) {\n    var view = this.context.view;\n    var field = component.get('field');\n    var elements = getElements(view);\n    this.setElementsStateByItem(elements, field, item, enable);\n  };\n  // 处理触发源由 element 导致的状态变化\n  ElementState.prototype.setStateByElement = function (element, enable) {\n    this.setElementState(element, enable);\n  };\n  /** 组件的选项是否同 element 匹配 */\n  ElementState.prototype.isMathItem = function (element, field, item) {\n    var view = this.context.view;\n    var scale = getScaleByField(view, field);\n    var value = getElementValue(element, field);\n    return !isNil(value) && item.name === scale.getText(value);\n  };\n  ElementState.prototype.setElementsStateByItem = function (elements, field, item, enable) {\n    var _this = this;\n    each(elements, function (el) {\n      if (_this.isMathItem(el, field, item)) {\n        el.setState(_this.stateName, enable);\n      }\n    });\n  };\n  /** 设置状态是否激活 */\n  ElementState.prototype.setStateEnable = function (enable) {\n    var element = getCurrentElement(this.context);\n    if (element) {\n      // 触发源由于 element 导致\n      if (isElementChange(this.context)) {\n        this.setStateByElement(element, enable);\n      }\n    } else {\n      // 触发源由组件导致\n      var delegateObject = getDelegationObject(this.context);\n      // 如果触发源时列表，图例、坐标轴\n      if (isList(delegateObject)) {\n        var item = delegateObject.item,\n          component = delegateObject.component;\n        if (item && component && !this.isItemIgnore(item, component)) {\n          var event_1 = this.context.event.gEvent;\n          // 防止闪烁\n          if (event_1 && event_1.fromShape && event_1.toShape && getItem(event_1.fromShape) === getItem(event_1.toShape)) {\n            return;\n          }\n          this.setStateByComponent(component, item, enable);\n        }\n      }\n    }\n  };\n  /**\n   * 切换状态\n   */\n  ElementState.prototype.toggle = function () {\n    var element = getCurrentElement(this.context);\n    if (element) {\n      var hasState = element.hasState(this.stateName);\n      this.setElementState(element, !hasState);\n    }\n  };\n  /**\n   * 取消当前时间影响的状态\n   */\n  ElementState.prototype.reset = function () {\n    this.setStateEnable(false);\n  };\n  return ElementState;\n}(StateBase);\nexport default ElementState;","map":{"version":3,"names":["each","isNil","get","getCurrentElement","getDelegationObject","getElements","getElementValue","getScaleByField","isElementChange","isList","StateBase","getItem","shape","ElementState","_super","__extends","_this","apply","arguments","ignoreListItemStates","prototype","isItemIgnore","item","list","states","filtered","filter","state","hasState","length","setStateByComponent","component","enable","view","context","field","elements","setElementsStateByItem","setStateByElement","element","setElementState","isMathItem","scale","value","name","getText","el","setState","stateName","setStateEnable","delegateObject","event_1","event","gEvent","fromShape","toShape","toggle","reset"],"sources":["../../../../src/interaction/action/element/state.ts"],"sourcesContent":["import { each, isNil, get } from '@antv/util';\nimport { ListItem } from '../../../dependents';\nimport Element from '../../../geometry/element/';\nimport {\n  getCurrentElement,\n  getDelegationObject,\n  getElements,\n  getElementValue,\n  getScaleByField,\n  isElementChange,\n  isList,\n} from '../util';\nimport StateBase from './state-base';\n\nfunction getItem(shape) {\n  return get(shape.get('delegateObject'), 'item');\n}\n\n/**\n * 状态量 Action 的基类，允许多个 Element 同时拥有某个状态\n * @class\n * @ignore\n */\nclass ElementState extends StateBase {\n  protected ignoreListItemStates = ['unchecked'];\n\n  // 是否忽略触发的列表项\n  private isItemIgnore(item: ListItem, list) {\n    const states = this.ignoreListItemStates;\n    const filtered = states.filter((state) => {\n      return list.hasState(item, state);\n    });\n    return !!filtered.length;\n  }\n\n  // 设置由组件选项导致的状态变化\n  private setStateByComponent(component, item: ListItem, enable: boolean) {\n    const view = this.context.view;\n    const field = component.get('field');\n    const elements = getElements(view);\n    this.setElementsStateByItem(elements, field, item, enable);\n  }\n\n  // 处理触发源由 element 导致的状态变化\n  protected setStateByElement(element: Element, enable: boolean) {\n    this.setElementState(element, enable);\n  }\n\n  /** 组件的选项是否同 element 匹配 */\n  protected isMathItem(element: Element, field: string, item: ListItem) {\n    const view = this.context.view;\n    const scale = getScaleByField(view, field);\n    const value = getElementValue(element, field);\n    return !isNil(value) && item.name === scale.getText(value);\n  }\n\n  protected setElementsStateByItem(elements: Element[], field: string, item: ListItem, enable: boolean) {\n    each(elements, (el) => {\n      if (this.isMathItem(el, field, item)) {\n        el.setState(this.stateName, enable);\n      }\n    });\n  }\n\n  /** 设置状态是否激活 */\n  protected setStateEnable(enable: boolean) {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      // 触发源由于 element 导致\n      if (isElementChange(this.context)) {\n        this.setStateByElement(element, enable);\n      }\n    } else {\n      // 触发源由组件导致\n      const delegateObject = getDelegationObject(this.context);\n      // 如果触发源时列表，图例、坐标轴\n      if (isList(delegateObject)) {\n        const { item, component } = delegateObject;\n        if (item && component && !this.isItemIgnore(item, component)) {\n          const event = this.context.event.gEvent;\n          // 防止闪烁\n          if (event && event.fromShape && event.toShape && getItem(event.fromShape) === getItem(event.toShape)) {\n            return;\n          }\n          this.setStateByComponent(component, item, enable);\n        }\n      }\n    }\n  }\n\n  /**\n   * 切换状态\n   */\n  public toggle() {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      const hasState = element.hasState(this.stateName);\n      this.setElementState(element, !hasState);\n    }\n  }\n\n  /**\n   * 取消当前时间影响的状态\n   */\n  public reset() {\n    this.setStateEnable(false);\n  }\n}\n\nexport default ElementState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}