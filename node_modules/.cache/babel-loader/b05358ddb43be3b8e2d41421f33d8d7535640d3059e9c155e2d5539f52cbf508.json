{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, get, isFunction, isNumber, isString } from '@antv/util';\nimport { kebabCase } from './kebab-case';\nimport { pick } from './pick';\n/**\n * @desc 生成 html-statistic 的 style 字符串 (兼容 canvas 的 shapeStyle 到 css样式上)\n *\n * @param width\n * @param style\n */\nexport function adapteStyle(style) {\n  var styleObject = {\n    overflow: 'hidden',\n    'white-space': 'nowrap',\n    'text-overflow': 'ellipsis',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  var shapeStyleKeys = ['stroke', 'lineWidth', 'shadowColor', 'strokeOpacity', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'fill'];\n  // 兼容 shapeStyle 设置 · start\n  if (get(style, 'fill')) {\n    styleObject['color'] = style['fill'];\n  }\n  var _a = pick(style, shapeStyleKeys),\n    shadowColor = _a.shadowColor,\n    _b = _a.shadowBlur,\n    shadowBlur = _b === void 0 ? 0 : _b,\n    _c = _a.shadowOffsetX,\n    shadowOffsetX = _c === void 0 ? 0 : _c,\n    _d = _a.shadowOffsetY,\n    shadowOffsetY = _d === void 0 ? 0 : _d;\n  styleObject['text-shadow'] = \"\".concat([shadowColor, \"\".concat(shadowOffsetX, \"px\"), \"\".concat(shadowOffsetY, \"px\"), \"\".concat(shadowBlur, \"px\")].join(' '));\n  var _e = pick(style, shapeStyleKeys),\n    stroke = _e.stroke,\n    _f = _e.lineWidth,\n    lineWidth = _f === void 0 ? 0 : _f;\n  styleObject['-webkit-text-stroke'] = \"\".concat([\"\".concat(lineWidth, \"px\"), stroke].join(' '));\n  // 兼容 shapeStyle 设置 · end\n  each(style, function (v, k) {\n    //  兼容 shapeStyle 的 fontSize 没有单位\n    if (['fontSize'].includes(k) && isNumber(v)) {\n      styleObject[kebabCase(k)] = \"\".concat(v, \"px\");\n    } else if (k && !shapeStyleKeys.includes(k)) {\n      styleObject[kebabCase(k)] = \"\".concat(v);\n    }\n  });\n  return styleObject;\n}\n/**\n * @desc 设置 html-statistic 容器的默认样式\n *\n * - 默认事件穿透\n */\nexport function setStatisticContainerStyle(container, style) {\n  container.style['pointer-events'] = 'none';\n  each(style, function (v, k) {\n    if (k && v) {\n      container.style[k] = v;\n    }\n  });\n}\n/**\n * 渲染环图 html-annotation（默认 position 居中 [50%, 50%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport var renderStatistic = function (chart, options, datum) {\n  var statistic = options.statistic,\n    plotType = options.plotType;\n  var titleOpt = statistic.title,\n    contentOpt = statistic.content;\n  [titleOpt, contentOpt].forEach(function (option, idx) {\n    if (!option) {\n      return;\n    }\n    var transform = '';\n    if (idx === 0) {\n      transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n    } else {\n      transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%, -50%)';\n    }\n    var style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html(__assign({\n      position: ['50%', '50%'],\n      html: function (container, view) {\n        var coordinate = view.getCoordinate();\n        var containerW = 0;\n        if (plotType === 'pie' || plotType === 'ring-progress') {\n          containerW = coordinate.getRadius() * coordinate.innerRadius * 2;\n        } else if (plotType === 'liquid') {\n          var liquidShape = get(view.geometries, [0, 'elements', 0, 'shape']);\n          if (liquidShape) {\n            // 获取到水波图边框大小\n            var path = liquidShape.find(function (t) {\n              return t.get('name') === 'wrap';\n            });\n            var width = path.getCanvasBBox().width;\n            containerW = width;\n          }\n        } else if (!containerW) {\n          // 保底方案\n          containerW = coordinate.getWidth();\n        }\n        setStatisticContainerStyle(container, __assign({\n          width: \"\".concat(containerW, \"px\"),\n          transform: transform\n        }, adapteStyle(style)));\n        var filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n        var text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? isString(text) ? text : \"\".concat(text) : '<div></div>';\n      },\n      // @ts-ignore\n      key: \"\".concat(idx === 0 ? 'top' : 'bottom', \"-statistic\")\n    }, pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */));\n  });\n};\n/**\n * 渲染 html-annotation for gauge (等不规则 plot), 默认 position 居中居底 [50%, 100%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport var renderGaugeStatistic = function (chart, options, datum) {\n  var statistic = options.statistic;\n  var titleOpt = statistic.title,\n    contentOpt = statistic.content;\n  [titleOpt, contentOpt].forEach(function (option) {\n    if (!option) {\n      return;\n    }\n    var style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html(__assign({\n      position: ['50%', '100%'],\n      html: function (container, view) {\n        var coordinate = view.getCoordinate();\n        // 弧形的坐标\n        var polarCoord = view.views[0].getCoordinate();\n        var polarCenter = polarCoord.getCenter();\n        var polarRadius = polarCoord.getRadius();\n        var polarMaxY = Math.max(Math.sin(polarCoord.startAngle), Math.sin(polarCoord.endAngle)) * polarRadius;\n        var offsetY = polarCenter.y + polarMaxY - coordinate.y.start - parseFloat(get(style, 'fontSize', 0));\n        var containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n        setStatisticContainerStyle(container, __assign({\n          width: \"\".concat(containerWidth, \"px\"),\n          transform: \"translate(-50%, \".concat(offsetY, \"px)\")\n        }, adapteStyle(style)));\n        var filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n        var text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? isString(text) ? text : \"\".concat(text) : '<div></div>';\n      }\n    }, pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */));\n  });\n};","map":{"version":3,"names":["each","get","isFunction","isNumber","isString","kebabCase","pick","adapteStyle","style","styleObject","overflow","display","justifyContent","alignItems","shapeStyleKeys","_a","shadowColor","_b","shadowBlur","_c","shadowOffsetX","_d","shadowOffsetY","concat","join","_e","stroke","_f","lineWidth","v","k","includes","setStatisticContainerStyle","container","renderStatistic","chart","options","datum","statistic","plotType","titleOpt","title","contentOpt","content","forEach","option","idx","transform","annotation","html","__assign","position","view","coordinate","getCoordinate","containerW","getRadius","innerRadius","liquidShape","geometries","path","find","t","width","getCanvasBBox","getWidth","filteredData","getData","customHtml","text","formatter","key","renderGaugeStatistic","polarCoord","views","polarCenter","getCenter","polarRadius","polarMaxY","Math","max","sin","startAngle","endAngle","offsetY","y","start","parseFloat","containerWidth"],"sources":["../../src/utils/statistic.ts"],"sourcesContent":["import { IGroup, View } from '@antv/g2';\nimport { each, get, isFunction, isNumber, isString } from '@antv/util';\nimport { Datum, ShapeStyle, Statistic, StatisticText } from '../types';\nimport { kebabCase } from './kebab-case';\nimport { pick } from './pick';\n\n/**\n * @desc 生成 html-statistic 的 style 字符串 (兼容 canvas 的 shapeStyle 到 css样式上)\n *\n * @param width\n * @param style\n */\nexport function adapteStyle(style?: StatisticText['style']): object {\n  const styleObject = {\n    overflow: 'hidden',\n    'white-space': 'nowrap',\n    'text-overflow': 'ellipsis',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n\n  const shapeStyleKeys = [\n    'stroke',\n    'lineWidth',\n    'shadowColor',\n    'strokeOpacity',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'fill',\n  ];\n\n  // 兼容 shapeStyle 设置 · start\n  if (get(style, 'fill')) {\n    styleObject['color'] = style['fill'];\n  }\n  const {\n    shadowColor,\n    shadowBlur = 0,\n    shadowOffsetX = 0,\n    shadowOffsetY = 0,\n  } = pick(style, shapeStyleKeys) as ShapeStyle;\n  styleObject['text-shadow'] = `${[shadowColor, `${shadowOffsetX}px`, `${shadowOffsetY}px`, `${shadowBlur}px`].join(\n    ' '\n  )}`;\n\n  const { stroke, lineWidth = 0 } = pick(style, shapeStyleKeys) as ShapeStyle;\n  styleObject['-webkit-text-stroke'] = `${[`${lineWidth}px`, stroke].join(' ')}`;\n  // 兼容 shapeStyle 设置 · end\n\n  each(style, (v, k) => {\n    //  兼容 shapeStyle 的 fontSize 没有单位\n    if (['fontSize'].includes(k) && isNumber(v)) {\n      styleObject[kebabCase(k)] = `${v}px`;\n    } else if (k && !shapeStyleKeys.includes(k)) {\n      styleObject[kebabCase(k)] = `${v}`;\n    }\n  });\n\n  return styleObject;\n}\n\n/**\n * @desc 设置 html-statistic 容器的默认样式\n *\n * - 默认事件穿透\n */\nexport function setStatisticContainerStyle(container: HTMLElement, style: Partial<CSSStyleDeclaration>) {\n  container.style['pointer-events'] = 'none';\n  each(style, (v, k) => {\n    if (k && v) {\n      container.style[k] = v;\n    }\n  });\n}\n\n/**\n * 渲染环图 html-annotation（默认 position 居中 [50%, 50%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport const renderStatistic = (chart: View, options: { statistic: Statistic; plotType: string }, datum?: Datum) => {\n  const { statistic, plotType } = options;\n  const { title: titleOpt, content: contentOpt } = statistic;\n\n  [titleOpt, contentOpt].forEach((option, idx) => {\n    if (!option) {\n      return;\n    }\n    let transform = '';\n    if (idx === 0) {\n      transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n    } else {\n      transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%, -50%)';\n    }\n    const style = isFunction(option.style) ? option.style(datum) : option.style;\n\n    chart.annotation().html({\n      position: ['50%', '50%'],\n      html: (container, view) => {\n        const coordinate = view.getCoordinate();\n        let containerW = 0;\n        if (plotType === 'pie' || plotType === 'ring-progress') {\n          containerW = coordinate.getRadius() * coordinate.innerRadius * 2;\n        } else if (plotType === 'liquid') {\n          const liquidShape = get(view.geometries, [0, 'elements', 0, 'shape']);\n          if (liquidShape) {\n            // 获取到水波图边框大小\n            const path = (liquidShape as IGroup).find((t) => t.get('name') === 'wrap');\n            const { width } = path.getCanvasBBox();\n            containerW = width;\n          }\n        } else if (!containerW) {\n          // 保底方案\n          containerW = coordinate.getWidth();\n        }\n        setStatisticContainerStyle(container, {\n          width: `${containerW}px`,\n          transform,\n          // user's style setting has high priority\n          ...adapteStyle(style),\n        });\n\n        const filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        let text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n      },\n      // @ts-ignore\n      key: `${idx === 0 ? 'top' : 'bottom'}-statistic`,\n      ...pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */,\n    });\n  });\n};\n\n/**\n * 渲染 html-annotation for gauge (等不规则 plot), 默认 position 居中居底 [50%, 100%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport const renderGaugeStatistic = (chart: View, options: { statistic: Statistic }, datum?: Datum) => {\n  const { statistic } = options;\n  const { title: titleOpt, content: contentOpt } = statistic;\n\n  [titleOpt, contentOpt].forEach((option) => {\n    if (!option) {\n      return;\n    }\n    const style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html({\n      position: ['50%', '100%'],\n      html: (container, view) => {\n        const coordinate = view.getCoordinate();\n        // 弧形的坐标\n        const polarCoord = view.views[0].getCoordinate();\n        const polarCenter = polarCoord.getCenter();\n        const polarRadius = polarCoord.getRadius();\n        const polarMaxY = Math.max(Math.sin(polarCoord.startAngle), Math.sin(polarCoord.endAngle)) * polarRadius;\n        const offsetY = polarCenter.y + polarMaxY - coordinate.y.start - parseFloat(get(style, 'fontSize', 0));\n\n        const containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n        setStatisticContainerStyle(container, {\n          width: `${containerWidth}px`,\n          transform: `translate(-50%, ${offsetY}px)`,\n          // user's style setting has high priority\n          ...adapteStyle(style),\n        });\n\n        const filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        let text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n      },\n      ...pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */,\n    });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}