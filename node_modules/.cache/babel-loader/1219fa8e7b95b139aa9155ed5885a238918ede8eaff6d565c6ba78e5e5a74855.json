{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { FlowLineTriangulation } from \"../../core/line_trangluation\";\n/* babel-plugin-inline-import '../shaders/flow/flow_line_frag.glsl' */\nvar flow_line_frag = \"// #extension GL_OES_standard_derivatives : enable\\n\\nin vec4 v_color;\\nout vec4 outputColor;\\n\\n\\n// line texture\\n\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  outputColor = v_color;\\n  outputColor = filterColor(outputColor);\\n}\\n\"; // linear simple line shader\n/* babel-plugin-inline-import '../shaders/flow/flow_line_vert.glsl' */\nvar flow_line_vert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec2 a_Size;\\nlayout(location = 12) in vec4 a_Instance;\\nlayout(location = 13) in vec3 a_Normal;\\n\\nlayout(std140) uniform commonUniorm {\\n  float u_gap_width: 1.0;\\n  float u_stroke_width: 1.0;\\n  float u_stroke_opacity: 1.0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"project\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\n\\nvec2 project_pixel_offset(vec2 offsets) {\\n\\n   vec2 data = project_pixel(offsets);\\n   if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n    return data;\\n  }\\n\\n  return vec2(data.x, -data.y);;\\n}\\n\\nvec2 line_dir(vec2 target, vec2 source) {\\n\\n   if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n     return normalize(target - source);\\n  }\\n  return normalize(ProjectFlat(target) - ProjectFlat(source));\\n}\\n\\nfloat flag_gap() {\\n   if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n     return 1.;\\n  }\\n  return -1.;\\n\\n}\\n\\n\\nvoid main() {\\n\\n// \\u900F\\u660E\\u5EA6\\u8BA1\\u7B97\\n  vec2 source = a_Instance.rg;  // \\u8D77\\u59CB\\u70B9\\n  vec2 target =  a_Instance.ba; // \\u7EC8\\u70B9\\n  vec2 flowlineDir = line_dir(target,source);\\n  vec2 perpendicularDir = vec2(-flowlineDir.y, flowlineDir.x); // mapbox || \\u9AD8\\u5FB7\\n   \\n  vec2 position = mix(source, target, a_Position.x);\\n  \\n  float lengthCommon = length(project_position(vec4(target,0,1)) - project_position(vec4(source,0,1)));  //    \\n  vec2 offsetDistances = a_Size.x * project_pixel_offset(vec2(a_Position.y, a_Position.z)); // Mapbox || \\u9AD8\\u5FB7\\n  vec2 limitedOffsetDistances = clamp(   \\n   offsetDistances,\\n   project_pixel(-lengthCommon*.2), project_pixel(lengthCommon*.2)\\n  );\\n\\n\\n  float startOffsetCommon = project_pixel(offsets[0]);\\n  float endOffsetCommon = project_pixel(offsets[1]);\\n  float endpointOffset = mix(\\n    clamp(startOffsetCommon, 0.0, lengthCommon*.2),\\n    -clamp(endOffsetCommon, 0.0, lengthCommon*.2),\\n    a_Position.x\\n  );\\n\\n  vec2 normalsCommon =  u_stroke_width * project_pixel_offset(vec2(a_Normal.x, a_Normal.y)); // mapbox || \\u9AD8\\u5FB7\\n\\n  float gapCommon = flag_gap() * project_pixel(u_gap_width);\\n  vec3 offsetCommon = vec3(\\n    flowlineDir * (limitedOffsetDistances[1] + normalsCommon.y + endpointOffset * 1.05) -\\n    perpendicularDir *  (limitedOffsetDistances[0] + gapCommon + normalsCommon.x),\\n    0.0\\n  );\\n\\n  vec4 project_pos = project_position(vec4(position.xy, 0, 1.0));\\n\\n  vec4 fillColor = vec4(a_Color.rgb, a_Color.a * opacity);\\n  v_color = mix(fillColor, vec4(u_stroke.xyz, u_stroke.w * fillColor.w * u_stroke_opacity), a_Normal.z);\\n\\n  gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xy +  offsetCommon.xy, 0., 1.0));\\n\\n\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar FlowLineModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(FlowLineModel, _BaseModel);\n  var _super = _createSuper(FlowLineModel);\n  function FlowLineModel() {\n    _classCallCheck(this, FlowLineModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FlowLineModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        _ref$gapWidth = _ref.gapWidth,\n        gapWidth = _ref$gapWidth === void 0 ? 2 : _ref$gapWidth,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n        _ref$strokeOpacity = _ref.strokeOpacity,\n        strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity;\n      var commonOptions = {\n        u_gap_width: gapWidth,\n        u_stroke_width: strokeWidth,\n        u_stroke_opacity: strokeOpacity\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.initUniformsBuffer();\n              return _context.abrupt(\"return\", this.buildModels());\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var modelFill;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.layer.buildLayerModel({\n                moduleName: 'flow_line',\n                vertexShader: flow_line_vert,\n                fragmentShader: flow_line_frag,\n                inject: this.getInject(),\n                triangulation: FlowLineTriangulation,\n                styleOption: this.layer.getLayerConfig().symbol,\n                primitive: gl.TRIANGLES,\n                depth: {\n                  enable: false\n                },\n                pick: false\n              });\n            case 2:\n              modelFill = _context2.sent;\n              return _context2.abrupt(\"return\", [modelFill]);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      // 注册 Style 参与数据映射的内置属性\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          // 宽度\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            return Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'instance',\n        // 弧线起始点信息\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Instance',\n          shaderLocation: 12,\n          buffer: {\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature, featureIdx, vertex) {\n            return [vertex[3], vertex[4], vertex[5], vertex[6]];\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'normal',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Normal',\n          shaderLocation: ShaderLocation.NORMAL,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal) {\n            return normal;\n          }\n        }\n      });\n    }\n  }]);\n  return FlowLineModel;\n}(BaseModel);\nexport { FlowLineModel as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","BaseModel","FlowLineTriangulation","flow_line_frag","flow_line_vert","ShaderLocation","FlowLineModel","_BaseModel","_super","key","value","getCommonUniformsInfo","_ref","layer","getLayerConfig","_ref$gapWidth","gapWidth","_ref$strokeWidth","strokeWidth","_ref$strokeOpacity","strokeOpacity","commonOptions","u_gap_width","u_stroke_width","u_stroke_opacity","commonBufferInfo","getUniformsBufferInfo","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","initUniformsBuffer","abrupt","buildModels","stop","initModels","_buildModels","_callee2","modelFill","_callee2$","_context2","buildLayerModel","moduleName","vertexShader","fragmentShader","inject","getInject","triangulation","styleOption","symbol","primitive","TRIANGLES","depth","enable","pick","sent","registerBuiltinAttributes","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","SIZE","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","_feature$size","Array","isArray","STATIC_DRAW","featureIdx","vertex","NORMAL","attributeIdx","normal","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/line/models/flow.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { FlowLineTriangulation } from \"../../core/line_trangluation\";\n/* babel-plugin-inline-import '../shaders/flow/flow_line_frag.glsl' */\nvar flow_line_frag = \"// #extension GL_OES_standard_derivatives : enable\\n\\nin vec4 v_color;\\nout vec4 outputColor;\\n\\n\\n// line texture\\n\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  outputColor = v_color;\\n  outputColor = filterColor(outputColor);\\n}\\n\"; // linear simple line shader\n/* babel-plugin-inline-import '../shaders/flow/flow_line_vert.glsl' */\nvar flow_line_vert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec2 a_Size;\\nlayout(location = 12) in vec4 a_Instance;\\nlayout(location = 13) in vec3 a_Normal;\\n\\nlayout(std140) uniform commonUniorm {\\n  float u_gap_width: 1.0;\\n  float u_stroke_width: 1.0;\\n  float u_stroke_opacity: 1.0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"project\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\n\\nvec2 project_pixel_offset(vec2 offsets) {\\n\\n   vec2 data = project_pixel(offsets);\\n   if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n    return data;\\n  }\\n\\n  return vec2(data.x, -data.y);;\\n}\\n\\nvec2 line_dir(vec2 target, vec2 source) {\\n\\n   if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n     return normalize(target - source);\\n  }\\n  return normalize(ProjectFlat(target) - ProjectFlat(source));\\n}\\n\\nfloat flag_gap() {\\n   if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    // P20_2 \\u5750\\u6807\\u7CFB\\u4E0B\\uFF0C\\u4E3A\\u4E86\\u548C Web \\u58A8\\u5361\\u6258\\u5750\\u6807\\u7CFB\\u7EDF\\u4E00\\uFF0Czoom \\u9ED8\\u8BA4\\u51CF3\\n     return 1.;\\n  }\\n  return -1.;\\n\\n}\\n\\n\\nvoid main() {\\n\\n// \\u900F\\u660E\\u5EA6\\u8BA1\\u7B97\\n  vec2 source = a_Instance.rg;  // \\u8D77\\u59CB\\u70B9\\n  vec2 target =  a_Instance.ba; // \\u7EC8\\u70B9\\n  vec2 flowlineDir = line_dir(target,source);\\n  vec2 perpendicularDir = vec2(-flowlineDir.y, flowlineDir.x); // mapbox || \\u9AD8\\u5FB7\\n   \\n  vec2 position = mix(source, target, a_Position.x);\\n  \\n  float lengthCommon = length(project_position(vec4(target,0,1)) - project_position(vec4(source,0,1)));  //    \\n  vec2 offsetDistances = a_Size.x * project_pixel_offset(vec2(a_Position.y, a_Position.z)); // Mapbox || \\u9AD8\\u5FB7\\n  vec2 limitedOffsetDistances = clamp(   \\n   offsetDistances,\\n   project_pixel(-lengthCommon*.2), project_pixel(lengthCommon*.2)\\n  );\\n\\n\\n  float startOffsetCommon = project_pixel(offsets[0]);\\n  float endOffsetCommon = project_pixel(offsets[1]);\\n  float endpointOffset = mix(\\n    clamp(startOffsetCommon, 0.0, lengthCommon*.2),\\n    -clamp(endOffsetCommon, 0.0, lengthCommon*.2),\\n    a_Position.x\\n  );\\n\\n  vec2 normalsCommon =  u_stroke_width * project_pixel_offset(vec2(a_Normal.x, a_Normal.y)); // mapbox || \\u9AD8\\u5FB7\\n\\n  float gapCommon = flag_gap() * project_pixel(u_gap_width);\\n  vec3 offsetCommon = vec3(\\n    flowlineDir * (limitedOffsetDistances[1] + normalsCommon.y + endpointOffset * 1.05) -\\n    perpendicularDir *  (limitedOffsetDistances[0] + gapCommon + normalsCommon.x),\\n    0.0\\n  );\\n\\n  vec4 project_pos = project_position(vec4(position.xy, 0, 1.0));\\n\\n  vec4 fillColor = vec4(a_Color.rgb, a_Color.a * opacity);\\n  v_color = mix(fillColor, vec4(u_stroke.xyz, u_stroke.w * fillColor.w * u_stroke_opacity), a_Normal.z);\\n\\n  gl_Position = project_common_position_to_clipspace_v2(vec4(project_pos.xy +  offsetCommon.xy, 0., 1.0));\\n\\n\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar FlowLineModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(FlowLineModel, _BaseModel);\n  var _super = _createSuper(FlowLineModel);\n  function FlowLineModel() {\n    _classCallCheck(this, FlowLineModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FlowLineModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        _ref$gapWidth = _ref.gapWidth,\n        gapWidth = _ref$gapWidth === void 0 ? 2 : _ref$gapWidth,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n        _ref$strokeOpacity = _ref.strokeOpacity,\n        strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity;\n      var commonOptions = {\n        u_gap_width: gapWidth,\n        u_stroke_width: strokeWidth,\n        u_stroke_opacity: strokeOpacity\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.initUniformsBuffer();\n              return _context.abrupt(\"return\", this.buildModels());\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var modelFill;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.layer.buildLayerModel({\n                moduleName: 'flow_line',\n                vertexShader: flow_line_vert,\n                fragmentShader: flow_line_frag,\n                inject: this.getInject(),\n                triangulation: FlowLineTriangulation,\n                styleOption: this.layer.getLayerConfig().symbol,\n                primitive: gl.TRIANGLES,\n                depth: {\n                  enable: false\n                },\n                pick: false\n              });\n            case 2:\n              modelFill = _context2.sent;\n              return _context2.abrupt(\"return\", [modelFill]);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      // 注册 Style 参与数据映射的内置属性\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          // 宽度\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            return Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'instance',\n        // 弧线起始点信息\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Instance',\n          shaderLocation: 12,\n          buffer: {\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature, featureIdx, vertex) {\n            return [vertex[3], vertex[4], vertex[5], vertex[6]];\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'normal',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Normal',\n          shaderLocation: ShaderLocation.NORMAL,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal) {\n            return normal;\n          }\n        }\n      });\n    }\n  }]);\n  return FlowLineModel;\n}(BaseModel);\nexport { FlowLineModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}