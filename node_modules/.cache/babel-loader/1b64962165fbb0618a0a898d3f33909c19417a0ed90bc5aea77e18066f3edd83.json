{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { HIERARCHY_DATA_TRANSFORM_PARAMS } from '../../interactions/actions/drill-down';\nimport { deepAssign, pick } from '../../utils';\nimport { pack } from '../../utils/hierarchy/pack';\nimport { resolveAllPadding } from '../../utils/padding';\n/**\n * circle-packing 数据转换\n * @param options\n */\nexport function transformData(options) {\n  var data = options.data,\n    hierarchyConfig = options.hierarchyConfig,\n    _a = options.rawFields,\n    rawFields = _a === void 0 ? [] : _a,\n    enableDrillDown = options.enableDrillDown;\n  var nodes = pack(data, __assign(__assign({}, hierarchyConfig), {\n    field: 'value',\n    as: ['x', 'y', 'r']\n  }));\n  var result = [];\n  nodes.forEach(function (node) {\n    var _a;\n    var path = node.data.name;\n    var ancestorNode = __assign({}, node);\n    while (ancestorNode.depth > 1) {\n      path = \"\".concat((_a = ancestorNode.parent.data) === null || _a === void 0 ? void 0 : _a.name, \" / \").concat(path);\n      ancestorNode = ancestorNode.parent;\n    }\n    // 开启下钻，仅加载 depth <= 2 的数据 (加载两层)\n    if (enableDrillDown && node.depth > 2) {\n      return null;\n    }\n    var nodeInfo = deepAssign({}, node.data, __assign(__assign(__assign({}, pick(node.data, rawFields)), {\n      path: path\n    }), node));\n    nodeInfo.ext = hierarchyConfig;\n    nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] = {\n      hierarchyConfig: hierarchyConfig,\n      rawFields: rawFields,\n      enableDrillDown: enableDrillDown\n    };\n    result.push(nodeInfo);\n  });\n  return result;\n}\n/**\n * 根据传入的 padding 和 现有的 画布大小， 输出针对圆形视图布局需要的 finalPadding 以及 finalSize\n * @param params\n */\nexport function resolvePaddingForCircle(padding, appendPadding, containerSize) {\n  var tempPadding = resolveAllPadding([padding, appendPadding]);\n  var top = tempPadding[0],\n    right = tempPadding[1],\n    bottom = tempPadding[2],\n    left = tempPadding[3]; // 没设定，默认是 [0, 0, 0, 0]\n  var width = containerSize.width,\n    height = containerSize.height;\n  // 有了 tempPadding 介入以后，计算出coordinate范围宽高的最小值 minSize = circle-packing的直径\n  var wSize = width - (left + right);\n  var hSize = height - (top + bottom);\n  var minSize = Math.min(wSize, hSize); // circle-packing的直径\n  // 得到居中后各方向剩余的 padding\n  var restWidthPadding = (wSize - minSize) / 2;\n  var restHeightPadding = (hSize - minSize) / 2;\n  var finalTop = top + restHeightPadding;\n  var finalRight = right + restWidthPadding;\n  var finalBottom = bottom + restHeightPadding;\n  var finalLeft = left + restWidthPadding;\n  var finalPadding = [finalTop, finalRight, finalBottom, finalLeft];\n  var finalSize = minSize < 0 ? 0 : minSize; // 防止为负数\n  return {\n    finalPadding: finalPadding,\n    finalSize: finalSize\n  };\n}","map":{"version":3,"names":["HIERARCHY_DATA_TRANSFORM_PARAMS","deepAssign","pick","pack","resolveAllPadding","transformData","options","data","hierarchyConfig","_a","rawFields","enableDrillDown","nodes","__assign","field","as","result","forEach","node","path","name","ancestorNode","depth","concat","parent","nodeInfo","ext","push","resolvePaddingForCircle","padding","appendPadding","containerSize","tempPadding","top","right","bottom","left","width","height","wSize","hSize","minSize","Math","min","restWidthPadding","restHeightPadding","finalTop","finalRight","finalBottom","finalLeft","finalPadding","finalSize"],"sources":["../../../src/plots/circle-packing/utils.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { HIERARCHY_DATA_TRANSFORM_PARAMS } from '../../interactions/actions/drill-down';\nimport { deepAssign, pick } from '../../utils';\nimport { pack } from '../../utils/hierarchy/pack';\nimport { resolveAllPadding } from '../../utils/padding';\nimport { CirclePackingOptions } from './types';\n\ninterface TransformDataOptions {\n  data: CirclePackingOptions['data'];\n  rawFields: CirclePackingOptions['rawFields'];\n  enableDrillDown: boolean;\n  hierarchyConfig: CirclePackingOptions['hierarchyConfig'];\n}\n\n/**\n * circle-packing 数据转换\n * @param options\n */\nexport function transformData(options: TransformDataOptions) {\n  const { data, hierarchyConfig, rawFields = [], enableDrillDown } = options;\n\n  const nodes = pack(data, {\n    ...hierarchyConfig,\n    field: 'value',\n    as: ['x', 'y', 'r'],\n  });\n\n  const result = [];\n  nodes.forEach((node) => {\n    let path = node.data.name;\n    let ancestorNode = { ...node };\n    while (ancestorNode.depth > 1) {\n      path = `${ancestorNode.parent.data?.name} / ${path}`;\n      ancestorNode = ancestorNode.parent;\n    }\n\n    // 开启下钻，仅加载 depth <= 2 的数据 (加载两层)\n    if (enableDrillDown && node.depth > 2) {\n      return null;\n    }\n\n    const nodeInfo = deepAssign({}, node.data, {\n      ...pick(node.data, rawFields),\n      path,\n      // 以下字段，必备: x, y, r, name, depth, height\n      ...node,\n    });\n\n    nodeInfo.ext = hierarchyConfig;\n    nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] = { hierarchyConfig, rawFields, enableDrillDown };\n\n    result.push(nodeInfo);\n  });\n\n  return result;\n}\n\n/**\n * 根据传入的 padding 和 现有的 画布大小， 输出针对圆形视图布局需要的 finalPadding 以及 finalSize\n * @param params\n */\nexport function resolvePaddingForCircle(\n  padding: Types.ViewPadding,\n  appendPadding: Types.ViewAppendPadding,\n  containerSize: { width: number; height: number }\n) {\n  const tempPadding = resolveAllPadding([padding, appendPadding]);\n  const [top, right, bottom, left] = tempPadding; // 没设定，默认是 [0, 0, 0, 0]\n  const { width, height } = containerSize;\n\n  // 有了 tempPadding 介入以后，计算出coordinate范围宽高的最小值 minSize = circle-packing的直径\n  const wSize = width - (left + right);\n  const hSize = height - (top + bottom);\n  const minSize = Math.min(wSize, hSize); // circle-packing的直径\n\n  // 得到居中后各方向剩余的 padding\n  const restWidthPadding = (wSize - minSize) / 2;\n  const restHeightPadding = (hSize - minSize) / 2;\n\n  const finalTop = top + restHeightPadding;\n  const finalRight = right + restWidthPadding;\n  const finalBottom = bottom + restHeightPadding;\n  const finalLeft = left + restWidthPadding;\n\n  const finalPadding = [finalTop, finalRight, finalBottom, finalLeft];\n  const finalSize = minSize < 0 ? 0 : minSize; // 防止为负数\n\n  return { finalPadding, finalSize };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}