{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { get, deepMix, isArray } from '@antv/util';\nimport GeometryLabel from './base';\n/**\n * 柱状图 label\n */\nvar IntervalLabel = /** @class */function (_super) {\n  __extends(IntervalLabel, _super);\n  function IntervalLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取 interval label 的方向，取决于 value 的值是正还是负\n   * @param labelCfg\n   */\n  IntervalLabel.prototype.getLabelValueDir = function (mappingData) {\n    // points 中的 x/y 和 transpose 无关\n    var dim = 'y';\n    var points = mappingData.points;\n    return points[0][dim] <= points[2][dim] ? 1 : -1;\n  };\n  /**\n   * 重载：根据 interval 值的正负来调整 label 偏移量\n   * @param labelCfg\n   * @param index\n   * @param total\n   */\n  IntervalLabel.prototype.getLabelOffsetPoint = function (labelCfg, index, total, position) {\n    var _a;\n    var point = _super.prototype.getLabelOffsetPoint.call(this, labelCfg, index, total);\n    var coordinate = this.getCoordinate();\n    var transposed = coordinate.isTransposed;\n    var dim = transposed ? 'x' : 'y';\n    var dir = this.getLabelValueDir(labelCfg.mappingData);\n    point = __assign(__assign({}, point), (_a = {}, _a[dim] = point[dim] * dir, _a));\n    if (coordinate.isReflect('x')) {\n      point = __assign(__assign({}, point), {\n        x: point.x * -1\n      });\n    }\n    if (coordinate.isReflect('y')) {\n      point = __assign(__assign({}, point), {\n        y: point.y * -1\n      });\n    }\n    return point;\n  };\n  /**\n   * 重载：定制 interval label 的默认主题配置\n   * @param labelCfg\n   */\n  IntervalLabel.prototype.getThemedLabelCfg = function (labelCfg) {\n    var geometry = this.geometry;\n    var defaultLabelCfg = this.getDefaultLabelCfg();\n    var theme = geometry.theme;\n    // 如果 interval label position 设置为 middle，则将主题中的 offset 覆盖为 0\n    return deepMix({}, defaultLabelCfg, theme.labels, labelCfg.position === 'middle' ? {\n      offset: 0\n    } : {}, labelCfg);\n  };\n  IntervalLabel.prototype.setLabelPosition = function (labelPointCfg, mappingData, index, position) {\n    var coordinate = this.getCoordinate();\n    var transposed = coordinate.isTransposed;\n    var shapePoints = mappingData.points;\n    var point0 = coordinate.convert(shapePoints[0]);\n    var point2 = coordinate.convert(shapePoints[2]);\n    var dir = this.getLabelValueDir(mappingData);\n    var top;\n    var right;\n    var bottom;\n    var left;\n    var shape = isArray(mappingData.shape) ? mappingData.shape[0] : mappingData.shape;\n    if (shape === 'funnel' || shape === 'pyramid') {\n      // 处理漏斗图\n      var nextPoints = get(mappingData, 'nextPoints');\n      var points = get(mappingData, 'points');\n      if (nextPoints) {\n        // 非漏斗图底部\n        var p0 = coordinate.convert(points[0]);\n        var p1 = coordinate.convert(points[1]);\n        var nextP0 = coordinate.convert(nextPoints[0]);\n        var nextP1 = coordinate.convert(nextPoints[1]);\n        // TODO: 使用包围盒的计算方法\n        if (transposed) {\n          top = Math.min(nextP0.y, p0.y);\n          bottom = Math.max(nextP0.y, p0.y);\n          right = (p1.x + nextP1.x) / 2;\n          left = (p0.x + nextP0.x) / 2;\n        } else {\n          top = Math.min((p1.y + nextP1.y) / 2, (p0.y + nextP0.y) / 2);\n          bottom = Math.max((p1.y + nextP1.y) / 2, (p0.y + nextP0.y) / 2);\n          right = nextP1.x;\n          left = p0.x;\n        }\n      } else {\n        top = Math.min(point2.y, point0.y);\n        bottom = Math.max(point2.y, point0.y);\n        right = point2.x;\n        left = point0.x;\n      }\n    } else {\n      top = Math.min(point2.y, point0.y);\n      bottom = Math.max(point2.y, point0.y);\n      right = point2.x;\n      left = point0.x;\n    }\n    switch (position) {\n      case 'right':\n        labelPointCfg.x = right;\n        labelPointCfg.y = (top + bottom) / 2;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', dir > 0 ? 'left' : 'right');\n        break;\n      case 'left':\n        labelPointCfg.x = left;\n        labelPointCfg.y = (top + bottom) / 2;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', dir > 0 ? 'left' : 'right');\n        break;\n      case 'bottom':\n        if (transposed) {\n          labelPointCfg.x = (right + left) / 2;\n        }\n        labelPointCfg.y = bottom;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', dir > 0 ? 'bottom' : 'top');\n        break;\n      case 'middle':\n        if (transposed) {\n          labelPointCfg.x = (right + left) / 2;\n        }\n        labelPointCfg.y = (top + bottom) / 2;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'middle');\n        break;\n      case 'top':\n        if (transposed) {\n          labelPointCfg.x = (right + left) / 2;\n        }\n        labelPointCfg.y = top;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', dir > 0 ? 'bottom' : 'top');\n        break;\n      default:\n        break;\n    }\n  };\n  return IntervalLabel;\n}(GeometryLabel);\nexport default IntervalLabel;","map":{"version":3,"names":["get","deepMix","isArray","GeometryLabel","IntervalLabel","_super","__extends","prototype","getLabelValueDir","mappingData","dim","points","getLabelOffsetPoint","labelCfg","index","total","position","point","call","coordinate","getCoordinate","transposed","isTransposed","dir","__assign","_a","isReflect","x","y","getThemedLabelCfg","geometry","defaultLabelCfg","getDefaultLabelCfg","theme","labels","offset","setLabelPosition","labelPointCfg","shapePoints","point0","convert","point2","top","right","bottom","left","shape","nextPoints","p0","p1","nextP0","nextP1","Math","min","max","textAlign","textBaseline"],"sources":["../../../src/geometry/label/interval.ts"],"sourcesContent":["import { get, deepMix, isArray } from '@antv/util';\nimport { Writeable } from '../../util/types';\nimport { MappingDatum, Point } from '../../interface';\nimport GeometryLabel from './base';\nimport { LabelCfg, LabelItem, LabelPointCfg, TextAlign } from './interface';\n\n/**\n * 柱状图 label\n */\nexport default class IntervalLabel extends GeometryLabel {\n  /**\n   * 获取 interval label 的方向，取决于 value 的值是正还是负\n   * @param labelCfg\n   */\n  private getLabelValueDir(mappingData: MappingDatum) {\n    // points 中的 x/y 和 transpose 无关\n    const dim = 'y';\n    const { points } = mappingData;\n\n    return points[0][dim] <= points[2][dim] ? 1 : -1;\n  }\n\n  /**\n   * 重载：根据 interval 值的正负来调整 label 偏移量\n   * @param labelCfg\n   * @param index\n   * @param total\n   */\n  protected getLabelOffsetPoint(labelCfg: LabelCfg, index: number, total: number, position?: string) {\n    let point = super.getLabelOffsetPoint(labelCfg, index, total);\n    const coordinate = this.getCoordinate();\n    const transposed = coordinate.isTransposed;\n    const dim = transposed ? 'x' : 'y';\n    const dir = this.getLabelValueDir(labelCfg.mappingData);\n    point = { ...point, [dim]: point[dim] * dir };\n\n    if (coordinate.isReflect('x')) {\n      point = {\n        ...point,\n        x: point.x * -1,\n      };\n    }\n    if (coordinate.isReflect('y')) {\n      point = {\n        ...point,\n        y: point.y * -1,\n      };\n    }\n\n    return point;\n  }\n\n  /**\n   * 重载：定制 interval label 的默认主题配置\n   * @param labelCfg\n   */\n  protected getThemedLabelCfg(labelCfg: LabelCfg) {\n    const geometry = this.geometry;\n    const defaultLabelCfg = this.getDefaultLabelCfg();\n    const { theme } = geometry;\n\n    // 如果 interval label position 设置为 middle，则将主题中的 offset 覆盖为 0\n    return deepMix({}, defaultLabelCfg, theme.labels, labelCfg.position === 'middle' ? { offset: 0 } : {}, labelCfg);\n  }\n\n  protected setLabelPosition(\n    labelPointCfg: Writeable<LabelPointCfg>,\n    mappingData: MappingDatum,\n    index: number,\n    position: string\n  ) {\n    const coordinate = this.getCoordinate();\n    const transposed = coordinate.isTransposed;\n    const shapePoints = mappingData.points as Point[];\n    const point0 = coordinate.convert(shapePoints[0]);\n    const point2 = coordinate.convert(shapePoints[2]);\n    const dir = this.getLabelValueDir(mappingData);\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const shape = isArray(mappingData.shape) ? mappingData.shape[0] : mappingData.shape;\n    if (shape === 'funnel' || shape === 'pyramid') {\n      // 处理漏斗图\n      const nextPoints = get(mappingData, 'nextPoints');\n      const points = get(mappingData, 'points');\n      if (nextPoints) {\n        // 非漏斗图底部\n        const p0 = coordinate.convert(points[0] as Point);\n        const p1 = coordinate.convert(points[1] as Point);\n        const nextP0 = coordinate.convert(nextPoints[0] as Point);\n        const nextP1 = coordinate.convert(nextPoints[1] as Point);\n\n        // TODO: 使用包围盒的计算方法\n        if (transposed) {\n          top = Math.min(nextP0.y, p0.y);\n          bottom = Math.max(nextP0.y, p0.y);\n          right = (p1.x + nextP1.x) / 2;\n          left = (p0.x + nextP0.x) / 2;\n        } else {\n          top = Math.min((p1.y + nextP1.y) / 2, (p0.y + nextP0.y) / 2);\n          bottom = Math.max((p1.y + nextP1.y) / 2, (p0.y + nextP0.y) / 2);\n          right = nextP1.x;\n          left = p0.x;\n        }\n      } else {\n        top = Math.min(point2.y, point0.y);\n        bottom = Math.max(point2.y, point0.y);\n        right = point2.x;\n        left = point0.x;\n      }\n    } else {\n      top = Math.min(point2.y, point0.y);\n      bottom = Math.max(point2.y, point0.y);\n      right = point2.x;\n      left = point0.x;\n    }\n\n    switch (position) {\n      case 'right':\n        labelPointCfg.x = right;\n        labelPointCfg.y = (top + bottom) / 2;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', dir > 0 ? 'left' : 'right');\n        break;\n      case 'left':\n        labelPointCfg.x = left;\n        labelPointCfg.y = (top + bottom) / 2;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', dir > 0 ? 'left' : 'right');\n        break;\n      case 'bottom':\n        if (transposed) {\n          labelPointCfg.x = (right + left) / 2;\n        }\n        labelPointCfg.y = bottom;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', dir > 0 ? 'bottom' : 'top');\n        break;\n      case 'middle':\n        if (transposed) {\n          labelPointCfg.x = (right + left) / 2;\n        }\n        labelPointCfg.y = (top + bottom) / 2;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'middle');\n        break;\n      case 'top':\n        if (transposed) {\n          labelPointCfg.x = (right + left) / 2;\n        }\n        labelPointCfg.y = top;\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', dir > 0 ? 'bottom' : 'top');\n        break;\n      default:\n        break;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}