{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nvar EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints: function (pointInfo) {\n    return splitPoints(pointInfo);\n  }\n});\nregisterShape('edge', 'line', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});\nexport default EdgeShapeFactory;","map":{"version":3,"names":["registerShape","registerShapeFactory","getStyle","getLinePath","splitPoints","EdgeShapeFactory","defaultShapeType","getDefaultPoints","pointInfo","draw","cfg","container","style","path","parsePoints","points","coordinate","isPolar","addShape","attrs","__assign","getMarker","markerCfg","symbol","r","fill","color"],"sources":["../../../../src/geometry/shape/edge/index.ts"],"sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\n\nconst EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\nregisterShape('edge', 'line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n\nexport default EdgeShapeFactory;\n"],"mappings":";AAGA,SAASA,aAAa,EAAEC,oBAAoB,QAAQ,SAAS;AAC7D,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,QAAQ,sBAAsB;AAElD,IAAMC,gBAAgB,GAAGJ,oBAAoB,CAAC,MAAM,EAAE;EACpDK,gBAAgB,EAAE,MAAM;EACxBC,gBAAgB,EAAhB,SAAAA,CAAiBC,SAAqB;IACpC,OAAOJ,WAAW,CAACI,SAAS,CAAC;EAC/B;CACD,CAAC;AAEFR,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE;EAC5BS,IAAI,EAAJ,SAAAA,CAAKC,GAAc,EAAEC,SAAiB;IACpC,IAAMC,KAAK,GAAGV,QAAQ,CAACQ,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC;IACrD,IAAMG,IAAI,GAAGV,WAAW,CAAC,IAAI,CAACW,WAAW,CAACJ,GAAG,CAACK,MAAM,CAAC,EAAE,IAAI,CAACC,UAAU,CAACC,OAAO,CAAC;IAC/E,OAAON,SAAS,CAACO,QAAQ,CAAC,MAAM,EAAE;MAChCC,KAAK,EAAAC,QAAA,CAAAA,QAAA,KACAR,KAAK;QACRC,IAAI,EAAAA;MAAA;KAEP,CAAC;EACJ,CAAC;EACDQ,SAAS,EAAT,SAAAA,CAAUC,SAAyB;IACjC,OAAO;MACLC,MAAM,EAAE,QAAQ;MAChBX,KAAK,EAAE;QACLY,CAAC,EAAE,GAAG;QACNC,IAAI,EAAEH,SAAS,CAACI;;KAEnB;EACH;CACD,CAAC;AAEF,eAAerB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}