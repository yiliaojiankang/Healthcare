{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport clip from './clip';\nimport createFeature from './feature';\nexport default function wrap(features, options) {\n  var buffer = options.buffer / options.extent;\n  var merged = features;\n  var left = clip(features, 1, -1 - buffer, buffer, 0, -1, 2, options); // left world copy\n  var right = clip(features, 1, 1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n  if (left || right) {\n    merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n    if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n    if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n  }\n\n  return merged;\n}\nfunction shiftFeatureCoords(features, offset) {\n  var newFeatures = [];\n  for (var i = 0; i < features.length; i++) {\n    var feature = features[i],\n      type = feature.type;\n    var newGeometry;\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n      newGeometry = shiftCoords(feature.geometry, offset);\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n      newGeometry = [];\n      for (var j = 0; j < feature.geometry.length; j++) {\n        newGeometry.push(shiftCoords(feature.geometry[j], offset));\n      }\n    } else if (type === 'MultiPolygon') {\n      newGeometry = [];\n      for (j = 0; j < feature.geometry.length; j++) {\n        var newPolygon = [];\n        for (var k = 0; k < feature.geometry[j].length; k++) {\n          newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n        }\n        newGeometry.push(newPolygon);\n      }\n    }\n    newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n  }\n  return newFeatures;\n}\nfunction shiftCoords(points, offset) {\n  var newPoints = [];\n  newPoints.size = points.size;\n  if (points.start !== undefined) {\n    newPoints.start = points.start;\n    newPoints.end = points.end;\n  }\n  for (var i = 0; i < points.length; i += 3) {\n    newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n  }\n  return newPoints;\n}","map":{"version":3,"names":["clip","createFeature","wrap","features","options","buffer","extent","merged","left","right","shiftFeatureCoords","concat","offset","newFeatures","i","length","feature","type","newGeometry","shiftCoords","geometry","j","push","newPolygon","k","id","tags","points","newPoints","size","start","undefined","end"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/geojson-vt/src/wrap.js"],"sourcesContent":["\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}