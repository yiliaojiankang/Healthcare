{"ast":null,"code":"import { getMaxLabelWidth } from '../../util/label';\nimport { getAngleByMatrix } from '../../util/matrix';\nimport { near } from '../../util/util';\n// 文本是否旋转\nfunction isRotate(label) {\n  var matrix = label.attr('matrix');\n  return matrix && matrix[0] !== 1; // 仅在这个场景下判定\n}\n\nfunction getRotateAngle(label) {\n  var angle = isRotate(label) ? getAngleByMatrix(label.attr('matrix')) : 0;\n  return angle % 360;\n}\n// autohide 不再考虑超出限制\n// function isOutLimit(isVertical: boolean, label: IElement, limitLength: number) {\n//   if (!limitLength) {\n//     // 如果没限制 limitLength 则直接返回 false\n//     return false;\n//   }\n//   const canvasBBox = label.getCanvasBBox();\n//   let isOut = false;\n//   if (isVertical) {\n//     isOut = canvasBBox.width > limitLength;\n//   } else {\n//     isOut = canvasBBox.height > limitLength;\n//   }\n//   return isOut;\n// }\n// 是否重叠\nfunction isOverlap(isVertical, first, second, minGap) {\n  var overlap = false;\n  var angle = getRotateAngle(first);\n  var distance = isVertical ? Math.abs(second.attr('y') - first.attr('y')) : Math.abs(second.attr('x') - first.attr('x'));\n  var prevBBox = (isVertical ? second.attr('y') > first.attr('y') : second.attr('x') > first.attr('x')) ? first.getBBox() : second.getBBox();\n  if (isVertical) {\n    var ratio = Math.abs(Math.cos(angle));\n    if (near(ratio, 0, Math.PI / 180)) {\n      overlap = prevBBox.width + minGap > distance;\n    } else {\n      overlap = prevBBox.height / ratio + minGap > distance;\n    }\n  } else {\n    var ratio = Math.abs(Math.sin(angle));\n    if (near(ratio, 0, Math.PI / 180)) {\n      overlap = prevBBox.width + minGap > distance;\n    } else {\n      overlap = prevBBox.height / ratio + minGap > distance;\n    }\n  }\n  return overlap;\n}\n// 保留第一个或者最后一个\nfunction reserveOne(isVertical, labelsGroup, reversed, autoHideCfg) {\n  var minGap = (autoHideCfg === null || autoHideCfg === void 0 ? void 0 : autoHideCfg.minGap) || 0;\n  var labels = labelsGroup.getChildren().slice() // 复制数组\n  .filter(function (item) {\n    return item.get('visible');\n  });\n  if (!labels.length) {\n    return false;\n  }\n  var hasHide = false;\n  if (reversed) {\n    // 翻转\n    labels.reverse();\n  }\n  var count = labels.length;\n  var first = labels[0];\n  var prev = first;\n  for (var i = 1; i < count; i++) {\n    var label = labels[i];\n    var curBBox = label.getBBox();\n    // 不再考虑超出限制，而仅仅根据是否重叠进行隐藏 isOutLimit(isVertical, label, limitLength) ||\n    var isHide = isOverlap(isVertical, prev, label, minGap);\n    if (isHide) {\n      label.hide();\n      hasHide = true;\n    } else {\n      prev = label;\n    }\n  }\n  return hasHide;\n}\n// 均匀抽样隐藏标签，注意这里假设 label/tick 是均匀的\nfunction parityHide(isVertical, labelsGroup, autoHideCfg) {\n  var minGap = (autoHideCfg === null || autoHideCfg === void 0 ? void 0 : autoHideCfg.minGap) || 0;\n  var labels = labelsGroup.getChildren().slice(); // 复制数组\n  if (labels.length < 2) {\n    // 如果数量小于 2 则直接返回，等于 2 时可能也会重合\n    return false;\n  }\n  var hasHide = false;\n  var first = labels[0];\n  var firstBBox = first.getBBox();\n  var second = labels[1];\n  var count = labels.length;\n  var angle = getRotateAngle(first);\n  var distance = isVertical ? Math.abs(second.attr('y') - first.attr('y')) : Math.abs(second.attr('x') - first.attr('x'));\n  var interval = 0; // 不重叠的坐标文本间距个数\n  if (isVertical) {\n    // 垂直的坐标轴计算垂直方向的间距\n    var ratio = Math.abs(Math.cos(angle));\n    if (near(ratio, 0, Math.PI / 180)) {\n      var maxWidth = getMaxLabelWidth(labels);\n      interval = (maxWidth + minGap) / distance;\n    } else {\n      interval = (firstBBox.height / ratio + minGap) / distance;\n    }\n  } else {\n    // 水平坐标轴\n    var ratio = Math.abs(Math.sin(angle));\n    if (near(ratio, 0, Math.PI / 180)) {\n      var maxWidth = getMaxLabelWidth(labels);\n      interval = (maxWidth + minGap) / distance;\n    } else {\n      interval = (firstBBox.height / ratio + minGap) / distance;\n    }\n  }\n  // interval > 1 时需要对 label 进行隐藏\n  if (interval > 1) {\n    interval = Math.ceil(interval);\n    for (var i = 0; i < count; i++) {\n      if (i % interval !== 0) {\n        // 仅保留被整除的 label\n        labels[i].hide();\n        hasHide = true;\n      }\n    }\n  }\n  return hasHide;\n}\nexport function getDefault() {\n  return equidistance;\n}\n/**\n * 保证首个 label 可见，即使超过 limitLength 也不隐藏\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\nexport function reserveFirst(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  return reserveOne(isVertical, labelsGroup, false, autoHideCfg);\n}\n/**\n * 保证最后一个 label 可见，即使超过 limitLength 也不隐藏\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\nexport function reserveLast(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  return reserveOne(isVertical, labelsGroup, true, autoHideCfg);\n}\n/**\n * 保证第一个最后一个 label 可见，即使超过 limitLength 也不隐藏\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\nexport function reserveBoth(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  var minGap = (autoHideCfg === null || autoHideCfg === void 0 ? void 0 : autoHideCfg.minGap) || 0;\n  var labels = labelsGroup.getChildren().slice(); // 复制数组\n  if (labels.length <= 2) {\n    // 如果数量小于或等于 2 则直接返回\n    return false;\n  }\n  var hasHide = false;\n  var count = labels.length;\n  var first = labels[0];\n  var last = labels[count - 1];\n  var preLabel = first;\n  // 按照先保存第一个的逻辑循环一遍，最后一个不参与循环\n  for (var i = 1; i < count - 1; i++) {\n    var label = labels[i];\n    var curBBox = label.getBBox();\n    // 废弃 isOutLimit(isVertical, label, limitLength) ||\n    var isHide = isOverlap(isVertical, preLabel, label, minGap);\n    if (isHide) {\n      label.hide();\n      hasHide = true;\n    } else {\n      preLabel = label;\n    }\n  }\n  var overlap = isOverlap(isVertical, preLabel, last, minGap);\n  if (overlap) {\n    // 发生冲突，则隐藏前一个保留后一个\n    preLabel.hide();\n    hasHide = true;\n  }\n  return hasHide;\n}\n/**\n * 保证 label 均匀显示 和 不出现重叠，主要解决文本层叠的问题，对于 limitLength 不处理\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\nexport function equidistance(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  var hasHide = parityHide(isVertical, labelsGroup, autoHideCfg);\n  // 处理  timeCat 类型的 tick，在均匀的基础上，再次检查出现重叠的进行隐藏\n  if (reserveOne(isVertical, labelsGroup, false)) {\n    hasHide = true;\n  }\n  return hasHide;\n}\n/**\n * 同 equidistance， 首先会保证 labels 均匀显示，然后会保留首尾\n * @param isVertical\n * @param labelsGroup\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\nexport function equidistanceWithReverseBoth(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  var labels = labelsGroup.getChildren().slice(); // 复制数组\n  var hasHide = parityHide(isVertical, labelsGroup, autoHideCfg);\n  if (labels.length > 2) {\n    var first = labels[0];\n    var last = labels[labels.length - 1];\n    // 如果第一个被隐藏了\n    if (!first.get('visible')) {\n      first.show();\n      if (reserveOne(isVertical, labelsGroup, false, autoHideCfg)) {\n        hasHide = true;\n      }\n    }\n    // 如果最后一个被隐藏了\n    if (!last.get('visible')) {\n      last.show();\n      if (reserveOne(isVertical, labelsGroup, true, autoHideCfg)) {\n        hasHide = true;\n      }\n    }\n  }\n  return hasHide;\n}","map":{"version":3,"names":["getMaxLabelWidth","getAngleByMatrix","near","isRotate","label","matrix","attr","getRotateAngle","angle","isOverlap","isVertical","first","second","minGap","overlap","distance","Math","abs","prevBBox","getBBox","ratio","cos","PI","width","height","sin","reserveOne","labelsGroup","reversed","autoHideCfg","labels","getChildren","slice","filter","item","get","length","hasHide","reverse","count","prev","i","curBBox","isHide","hide","parityHide","firstBBox","interval","maxWidth","ceil","getDefault","equidistance","reserveFirst","limitLength","reserveLast","reserveBoth","last","preLabel","equidistanceWithReverseBoth","show"],"sources":["../../../src/axis/overlap/auto-hide.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}