{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _dec, _class;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { lodashUtil } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\n/* babel-plugin-inline-import '../../../../shaders/post-processing/bloom.glsl' */\nvar blur = \"varying vec2 v_UV;\\n\\nuniform float u_BloomFinal: 0.0;\\nuniform sampler2D u_Texture;\\nuniform sampler2D u_Texture2;\\n\\nuniform vec2 u_ViewportSize: [1.0, 1.0];\\nuniform float u_radius: 5.0;\\nuniform float u_intensity: 0.3;\\nuniform float u_baseRadio: 0.5;\\n\\n// https://github.com/Jam3/glsl-fast-gaussian-blur/blob/master/9.glsl\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv) * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n  return color;\\n}\\n\\nfloat luminance(vec4 color) {\\n  return  0.2125 * color.r + 0.7154 * color.g + 0.0721 * color.b;\\n}\\n\\nvoid main() {\\n  // vec4 baseColor = texture2D(u_Texture, v_UV);\\n\\n  float r = sqrt(u_radius);\\n\\n  vec4 c1 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(u_radius, 0.0));\\n  // c1 *= luminance(c1);\\n  vec4 c2 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(0.0, u_radius));\\n  // c2 *= luminance(c2);\\n  vec4 c3 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(r, r));\\n  // c3 *= luminance(c3);\\n  vec4 c4 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(r, -r));\\n  // c4 *= luminance(c4);\\n  vec4 inbloomColor = (c1 + c2 + c3 + c4) * 0.25;\\n\\n  // float lum = luminance(inbloomColor);\\n  // inbloomColor.rgb *= lum;\\n\\n  if(u_BloomFinal > 0.0) {\\n    vec4 baseColor = texture2D(u_Texture2, v_UV);\\n    float baselum = luminance(baseColor);\\n    gl_FragColor = mix(inbloomColor, baseColor, u_baseRadio);\\n    if(baselum <= 0.2) {\\n      gl_FragColor = inbloomColor * u_intensity;\\n    }\\n  } else {\\n    gl_FragColor = inbloomColor;\\n  }\\n}\";\n/* babel-plugin-inline-import '../../../../shaders/post-processing/quad.glsl' */\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport BasePostProcessingPass from \"../BasePostProcessingPass\";\nvar isNil = lodashUtil.isNil;\nvar BloomPass = (_dec = injectable(), _dec(_class = /*#__PURE__*/function (_BasePostProcessingPa) {\n  _inherits(BloomPass, _BasePostProcessingPa);\n  var _super = _createSuper(BloomPass);\n  function BloomPass() {\n    _classCallCheck(this, BloomPass);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BloomPass, [{\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      this.shaderModuleService.registerModule('blur-pass', {\n        vs: quad,\n        fs: blur\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule('blur-pass'),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        uniforms = _this$shaderModuleSer.uniforms;\n      var _this$rendererService = this.rendererService.getViewportSize(),\n        width = _this$rendererService.width,\n        height = _this$rendererService.height;\n      return {\n        vs: vs,\n        fs: fs,\n        uniforms: _objectSpread(_objectSpread({}, uniforms), {}, {\n          u_ViewportSize: [width, height]\n        })\n      };\n    }\n  }, {\n    key: \"convertOptionsToUniforms\",\n    value: function convertOptionsToUniforms(options) {\n      var uniforms = {};\n      if (!isNil(options.bloomRadius)) {\n        uniforms.u_radius = options.bloomRadius;\n      }\n      if (!isNil(options.bloomIntensity)) {\n        uniforms.u_intensity = options.bloomIntensity;\n      }\n      if (!isNil(options.bloomBaseRadio)) {\n        uniforms.u_baseRadio = options.bloomBaseRadio;\n      }\n      return uniforms;\n    }\n  }]);\n  return BloomPass;\n}(BasePostProcessingPass)) || _class);\nexport { BloomPass as default };","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_dec","_class","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","lodashUtil","injectable","blur","quad","BasePostProcessingPass","isNil","BloomPass","_BasePostProcessingPa","_super","key","value","setupShaders","shaderModuleService","registerModule","vs","fs","_this$shaderModuleSer","getModule","uniforms","_this$rendererService","rendererService","getViewportSize","width","height","u_ViewportSize","convertOptionsToUniforms","options","bloomRadius","u_radius","bloomIntensity","u_intensity","bloomBaseRadio","u_baseRadio","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/renderer/passes/post-processing/BloomPass.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _dec, _class;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { lodashUtil } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\n/* babel-plugin-inline-import '../../../../shaders/post-processing/bloom.glsl' */\nvar blur = \"varying vec2 v_UV;\\n\\nuniform float u_BloomFinal: 0.0;\\nuniform sampler2D u_Texture;\\nuniform sampler2D u_Texture2;\\n\\nuniform vec2 u_ViewportSize: [1.0, 1.0];\\nuniform float u_radius: 5.0;\\nuniform float u_intensity: 0.3;\\nuniform float u_baseRadio: 0.5;\\n\\n// https://github.com/Jam3/glsl-fast-gaussian-blur/blob/master/9.glsl\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv) * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n  return color;\\n}\\n\\nfloat luminance(vec4 color) {\\n  return  0.2125 * color.r + 0.7154 * color.g + 0.0721 * color.b;\\n}\\n\\nvoid main() {\\n  // vec4 baseColor = texture2D(u_Texture, v_UV);\\n\\n  float r = sqrt(u_radius);\\n\\n  vec4 c1 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(u_radius, 0.0));\\n  // c1 *= luminance(c1);\\n  vec4 c2 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(0.0, u_radius));\\n  // c2 *= luminance(c2);\\n  vec4 c3 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(r, r));\\n  // c3 *= luminance(c3);\\n  vec4 c4 = blur9(u_Texture, v_UV, u_ViewportSize, vec2(r, -r));\\n  // c4 *= luminance(c4);\\n  vec4 inbloomColor = (c1 + c2 + c3 + c4) * 0.25;\\n\\n  // float lum = luminance(inbloomColor);\\n  // inbloomColor.rgb *= lum;\\n\\n  if(u_BloomFinal > 0.0) {\\n    vec4 baseColor = texture2D(u_Texture2, v_UV);\\n    float baselum = luminance(baseColor);\\n    gl_FragColor = mix(inbloomColor, baseColor, u_baseRadio);\\n    if(baselum <= 0.2) {\\n      gl_FragColor = inbloomColor * u_intensity;\\n    }\\n  } else {\\n    gl_FragColor = inbloomColor;\\n  }\\n}\";\n/* babel-plugin-inline-import '../../../../shaders/post-processing/quad.glsl' */\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport BasePostProcessingPass from \"../BasePostProcessingPass\";\nvar isNil = lodashUtil.isNil;\nvar BloomPass = (_dec = injectable(), _dec(_class = /*#__PURE__*/function (_BasePostProcessingPa) {\n  _inherits(BloomPass, _BasePostProcessingPa);\n  var _super = _createSuper(BloomPass);\n  function BloomPass() {\n    _classCallCheck(this, BloomPass);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BloomPass, [{\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      this.shaderModuleService.registerModule('blur-pass', {\n        vs: quad,\n        fs: blur\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule('blur-pass'),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        uniforms = _this$shaderModuleSer.uniforms;\n      var _this$rendererService = this.rendererService.getViewportSize(),\n        width = _this$rendererService.width,\n        height = _this$rendererService.height;\n      return {\n        vs: vs,\n        fs: fs,\n        uniforms: _objectSpread(_objectSpread({}, uniforms), {}, {\n          u_ViewportSize: [width, height]\n        })\n      };\n    }\n  }, {\n    key: \"convertOptionsToUniforms\",\n    value: function convertOptionsToUniforms(options) {\n      var uniforms = {};\n      if (!isNil(options.bloomRadius)) {\n        uniforms.u_radius = options.bloomRadius;\n      }\n      if (!isNil(options.bloomIntensity)) {\n        uniforms.u_intensity = options.bloomIntensity;\n      }\n      if (!isNil(options.bloomBaseRadio)) {\n        uniforms.u_baseRadio = options.bloomBaseRadio;\n      }\n      return uniforms;\n    }\n  }]);\n  return BloomPass;\n}(BasePostProcessingPass)) || _class);\nexport { BloomPass as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}