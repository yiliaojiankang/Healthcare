{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { lodashUtil, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SimpleLineTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_frag.glsl' */\nvar simple_line_frag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\nin float v_distanceScale;\\nin vec4 v_color;\\n//dash\\nin vec4 v_dash_array;\\n\\nout vec4 outputColor;\\nvoid main() {\\n  if(u_dash_array!=vec4(0.0)){\\n    float dashLength = mod(v_distanceScale, v_dash_array.x + v_dash_array.y + v_dash_array.z + v_dash_array.w);\\n    if(!(dashLength < v_dash_array.x || (dashLength > (v_dash_array.x + v_dash_array.y) && dashLength <  v_dash_array.x + v_dash_array.y + v_dash_array.z))) {\\n      // \\u865A\\u7EBF\\u90E8\\u5206\\n      discard;\\n    };\\n  }\\n  if(u_linearColor==1.0){\\n    outputColor = mix(u_sourceColor, u_targetColor, v_distanceScale);\\n    outputColor.a *= v_color.a; // \\u5168\\u5C40\\u900F\\u660E\\u5EA6\\n  }\\n  else{\\n    outputColor = v_color;\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_vert.glsl' */\nvar simple_line_vert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec4 a_SizeDistanceAndTotalDistance;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\nout float v_distanceScale;\\nout vec4 v_dash_array;\\n\\nvoid main() {\\n  //dash\\u8F93\\u51FA\\n  v_dash_array = pow(2.0, 20.0 - u_Zoom) * u_dash_array / a_SizeDistanceAndTotalDistance.a;\\n\\n  v_color = a_Color; \\n  v_distanceScale = a_SizeDistanceAndTotalDistance.b / a_SizeDistanceAndTotalDistance.a;\\n  v_color.a = v_color.a * opacity;\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0, 1.0));\\n\\n  float h = float(a_Position.z) * u_vertexScale; // \\u7EBF\\u9876\\u70B9\\u7684\\u9AD8\\u5EA6 - \\u517C\\u5BB9\\u4E0D\\u5B58\\u5728\\u7B2C\\u4E09\\u4E2A\\u6570\\u503C\\u7684\\u60C5\\u51B5\\n\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) { // gaode2.x\\n    gl_Position = u_Mvp * (vec4(project_pos.xy, project_pixel(a_SizeDistanceAndTotalDistance.y) + h * 0.2, 1.0));\\n  } else {\\n    float lineHeight = a_SizeDistanceAndTotalDistance.y;\\n    // \\u517C\\u5BB9 mapbox \\u5728\\u7EBF\\u9AD8\\u5EA6\\u4E0A\\u7684\\u6548\\u679C\\u8868\\u73B0\\u57FA\\u672C\\u4E00\\u81F4\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n      // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n      h *= 2.0/pow(2.0, 20.0 - u_Zoom);\\n    }\\n\\n    // amap1.x\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_P20 || u_CoordinateSystem == COORDINATE_SYSTEM_P20_OFFSET) {\\n      // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n      lineHeight *= pow(2.0, 20.0 - u_Zoom);\\n    }\\n\\n    gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy, lineHeight + h, 1.0));\\n    gl_PointSize = 10.0;\\n  }\\n}\\n\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar isNumber = lodashUtil.isNumber;\nvar SimpleLineModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(SimpleLineModel, _BaseModel);\n  var _super = _createSuper(SimpleLineModel);\n  function SimpleLineModel() {\n    _classCallCheck(this, SimpleLineModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SimpleLineModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        sourceColor = _ref.sourceColor,\n        targetColor = _ref.targetColor,\n        _ref$lineType = _ref.lineType,\n        lineType = _ref$lineType === void 0 ? 'solid' : _ref$lineType,\n        _ref$dashArray = _ref.dashArray,\n        dashArray = _ref$dashArray === void 0 ? [10, 5, 0, 0] : _ref$dashArray,\n        _ref$vertexHeightScal = _ref.vertexHeightScale,\n        vertexHeightScale = _ref$vertexHeightScal === void 0 ? 20.0 : _ref$vertexHeightScal;\n      var u_dash_array = dashArray;\n      if (lineType !== 'dash') {\n        u_dash_array = [0, 0, 0, 0];\n      }\n      if (u_dash_array.length === 2) {\n        u_dash_array.push(0, 0);\n      }\n      // 转化渐变色\n      var useLinearColor = 0; // 默认不生效\n      var sourceColorArr = [0, 0, 0, 0];\n      var targetColorArr = [0, 0, 0, 0];\n      if (sourceColor && targetColor) {\n        sourceColorArr = rgb2arr(sourceColor);\n        targetColorArr = rgb2arr(targetColor);\n        useLinearColor = 1;\n      }\n      var commonOptions = {\n        u_sourceColor: sourceColorArr,\n        u_targetColor: targetColorArr,\n        u_dash_array: u_dash_array,\n        // 顶点高度 scale\n        u_vertexScale: vertexHeightScale,\n        // 渐变色支持参数\n        u_linearColor: useLinearColor\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        frag: simple_line_frag,\n        vert: simple_line_vert,\n        type: 'lineSimpleNormal'\n      };\n    }\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this$getShaders, frag, vert, type, model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.initUniformsBuffer();\n              _this$getShaders = this.getShaders(), frag = _this$getShaders.frag, vert = _this$getShaders.vert, type = _this$getShaders.type;\n              _context2.next = 4;\n              return this.layer.buildLayerModel({\n                moduleName: type,\n                vertexShader: vert,\n                fragmentShader: frag,\n                triangulation: SimpleLineTriangulation,\n                inject: this.getInject(),\n                primitive: gl.LINES,\n                depth: {\n                  enable: false\n                },\n                pick: false\n              });\n            case 4:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      // this.styleAttributeService.registerStyleAttribute({\n      //   name: 'distance',\n      //   type: AttributeType.Attribute,\n      //   descriptor: {\n      //     name: 'a_Distance',\n      //     shaderLocation: 14,\n      //     buffer: {\n      //       // give the WebGL driver a hint that this buffer may change\n      //       usage: gl.STATIC_DRAW,\n      //       data: [],\n      //       type: gl.FLOAT,\n      //     },\n      //     size: 1,\n      //     update: (\n      //       feature: IEncodeFeature,\n      //       featureIdx: number,\n      //       vertex: number[],\n      //     ) => {\n      //       return [vertex[3]];\n      //     },\n      //   },\n      // });\n      // this.styleAttributeService.registerStyleAttribute({\n      //   name: 'total_distance',\n      //   type: AttributeType.Attribute,\n      //   descriptor: {\n      //     name: 'a_Total_Distance',\n      //     shaderLocation: 13,//枚举不够了,先固定写值吧,在shader中location也成一致的并且不与其他的重复就行了\n      //     buffer: {\n      //       // give the WebGL driver a hint that this buffer may change\n      //       usage: gl.STATIC_DRAW,\n      //       data: [],\n      //       type: gl.FLOAT,\n      //     },\n      //     size: 1,\n      //     update: (\n      //       feature: IEncodeFeature,\n      //       featureIdx: number,\n      //       vertex: number[],\n      //     ) => {\n      //       return [vertex[5]];\n      //     },\n      //   },\n      // });\n      //size.x,size,y,distance,totalDistance\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'sizeDistanceAndTotalDistance',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_SizeDistanceAndTotalDistance',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature, featureIdx, vertex) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            var a_Size = Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n            return [a_Size[0], a_Size[1], vertex[3], vertex[5]];\n          }\n        }\n      });\n    }\n  }]);\n  return SimpleLineModel;\n}(BaseModel);\nexport { SimpleLineModel as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","lodashUtil","rgb2arr","BaseModel","SimpleLineTriangulation","simple_line_frag","simple_line_vert","ShaderLocation","isNumber","SimpleLineModel","_BaseModel","_super","key","value","getCommonUniformsInfo","_ref","layer","getLayerConfig","sourceColor","targetColor","_ref$lineType","lineType","_ref$dashArray","dashArray","_ref$vertexHeightScal","vertexHeightScale","u_dash_array","length","push","useLinearColor","sourceColorArr","targetColorArr","commonOptions","u_sourceColor","u_targetColor","u_vertexScale","u_linearColor","commonBufferInfo","getUniformsBufferInfo","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","buildModels","stop","initModels","getShaders","frag","vert","type","_buildModels","_callee2","_this$getShaders","model","_callee2$","_context2","initUniformsBuffer","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","inject","getInject","primitive","LINES","depth","enable","pick","sent","registerBuiltinAttributes","styleAttributeService","registerStyleAttribute","name","Attribute","descriptor","shaderLocation","SIZE","buffer","usage","STATIC_DRAW","data","FLOAT","size","update","feature","featureIdx","vertex","_feature$size","a_Size","Array","isArray","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/line/models/simple_line.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { lodashUtil, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SimpleLineTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_frag.glsl' */\nvar simple_line_frag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\nin float v_distanceScale;\\nin vec4 v_color;\\n//dash\\nin vec4 v_dash_array;\\n\\nout vec4 outputColor;\\nvoid main() {\\n  if(u_dash_array!=vec4(0.0)){\\n    float dashLength = mod(v_distanceScale, v_dash_array.x + v_dash_array.y + v_dash_array.z + v_dash_array.w);\\n    if(!(dashLength < v_dash_array.x || (dashLength > (v_dash_array.x + v_dash_array.y) && dashLength <  v_dash_array.x + v_dash_array.y + v_dash_array.z))) {\\n      // \\u865A\\u7EBF\\u90E8\\u5206\\n      discard;\\n    };\\n  }\\n  if(u_linearColor==1.0){\\n    outputColor = mix(u_sourceColor, u_targetColor, v_distanceScale);\\n    outputColor.a *= v_color.a; // \\u5168\\u5C40\\u900F\\u660E\\u5EA6\\n  }\\n  else{\\n    outputColor = v_color;\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_vert.glsl' */\nvar simple_line_vert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec4 a_SizeDistanceAndTotalDistance;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\nout float v_distanceScale;\\nout vec4 v_dash_array;\\n\\nvoid main() {\\n  //dash\\u8F93\\u51FA\\n  v_dash_array = pow(2.0, 20.0 - u_Zoom) * u_dash_array / a_SizeDistanceAndTotalDistance.a;\\n\\n  v_color = a_Color; \\n  v_distanceScale = a_SizeDistanceAndTotalDistance.b / a_SizeDistanceAndTotalDistance.a;\\n  v_color.a = v_color.a * opacity;\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0, 1.0));\\n\\n  float h = float(a_Position.z) * u_vertexScale; // \\u7EBF\\u9876\\u70B9\\u7684\\u9AD8\\u5EA6 - \\u517C\\u5BB9\\u4E0D\\u5B58\\u5728\\u7B2C\\u4E09\\u4E2A\\u6570\\u503C\\u7684\\u60C5\\u51B5\\n\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) { // gaode2.x\\n    gl_Position = u_Mvp * (vec4(project_pos.xy, project_pixel(a_SizeDistanceAndTotalDistance.y) + h * 0.2, 1.0));\\n  } else {\\n    float lineHeight = a_SizeDistanceAndTotalDistance.y;\\n    // \\u517C\\u5BB9 mapbox \\u5728\\u7EBF\\u9AD8\\u5EA6\\u4E0A\\u7684\\u6548\\u679C\\u8868\\u73B0\\u57FA\\u672C\\u4E00\\u81F4\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n      // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n      h *= 2.0/pow(2.0, 20.0 - u_Zoom);\\n    }\\n\\n    // amap1.x\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_P20 || u_CoordinateSystem == COORDINATE_SYSTEM_P20_OFFSET) {\\n      // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n      lineHeight *= pow(2.0, 20.0 - u_Zoom);\\n    }\\n\\n    gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy, lineHeight + h, 1.0));\\n    gl_PointSize = 10.0;\\n  }\\n}\\n\";\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar isNumber = lodashUtil.isNumber;\nvar SimpleLineModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(SimpleLineModel, _BaseModel);\n  var _super = _createSuper(SimpleLineModel);\n  function SimpleLineModel() {\n    _classCallCheck(this, SimpleLineModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SimpleLineModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        sourceColor = _ref.sourceColor,\n        targetColor = _ref.targetColor,\n        _ref$lineType = _ref.lineType,\n        lineType = _ref$lineType === void 0 ? 'solid' : _ref$lineType,\n        _ref$dashArray = _ref.dashArray,\n        dashArray = _ref$dashArray === void 0 ? [10, 5, 0, 0] : _ref$dashArray,\n        _ref$vertexHeightScal = _ref.vertexHeightScale,\n        vertexHeightScale = _ref$vertexHeightScal === void 0 ? 20.0 : _ref$vertexHeightScal;\n      var u_dash_array = dashArray;\n      if (lineType !== 'dash') {\n        u_dash_array = [0, 0, 0, 0];\n      }\n      if (u_dash_array.length === 2) {\n        u_dash_array.push(0, 0);\n      }\n      // 转化渐变色\n      var useLinearColor = 0; // 默认不生效\n      var sourceColorArr = [0, 0, 0, 0];\n      var targetColorArr = [0, 0, 0, 0];\n      if (sourceColor && targetColor) {\n        sourceColorArr = rgb2arr(sourceColor);\n        targetColorArr = rgb2arr(targetColor);\n        useLinearColor = 1;\n      }\n      var commonOptions = {\n        u_sourceColor: sourceColorArr,\n        u_targetColor: targetColorArr,\n        u_dash_array: u_dash_array,\n        // 顶点高度 scale\n        u_vertexScale: vertexHeightScale,\n        // 渐变色支持参数\n        u_linearColor: useLinearColor\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.buildModels());\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        frag: simple_line_frag,\n        vert: simple_line_vert,\n        type: 'lineSimpleNormal'\n      };\n    }\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this$getShaders, frag, vert, type, model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.initUniformsBuffer();\n              _this$getShaders = this.getShaders(), frag = _this$getShaders.frag, vert = _this$getShaders.vert, type = _this$getShaders.type;\n              _context2.next = 4;\n              return this.layer.buildLayerModel({\n                moduleName: type,\n                vertexShader: vert,\n                fragmentShader: frag,\n                triangulation: SimpleLineTriangulation,\n                inject: this.getInject(),\n                primitive: gl.LINES,\n                depth: {\n                  enable: false\n                },\n                pick: false\n              });\n            case 4:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      // this.styleAttributeService.registerStyleAttribute({\n      //   name: 'distance',\n      //   type: AttributeType.Attribute,\n      //   descriptor: {\n      //     name: 'a_Distance',\n      //     shaderLocation: 14,\n      //     buffer: {\n      //       // give the WebGL driver a hint that this buffer may change\n      //       usage: gl.STATIC_DRAW,\n      //       data: [],\n      //       type: gl.FLOAT,\n      //     },\n      //     size: 1,\n      //     update: (\n      //       feature: IEncodeFeature,\n      //       featureIdx: number,\n      //       vertex: number[],\n      //     ) => {\n      //       return [vertex[3]];\n      //     },\n      //   },\n      // });\n      // this.styleAttributeService.registerStyleAttribute({\n      //   name: 'total_distance',\n      //   type: AttributeType.Attribute,\n      //   descriptor: {\n      //     name: 'a_Total_Distance',\n      //     shaderLocation: 13,//枚举不够了,先固定写值吧,在shader中location也成一致的并且不与其他的重复就行了\n      //     buffer: {\n      //       // give the WebGL driver a hint that this buffer may change\n      //       usage: gl.STATIC_DRAW,\n      //       data: [],\n      //       type: gl.FLOAT,\n      //     },\n      //     size: 1,\n      //     update: (\n      //       feature: IEncodeFeature,\n      //       featureIdx: number,\n      //       vertex: number[],\n      //     ) => {\n      //       return [vertex[5]];\n      //     },\n      //   },\n      // });\n      //size.x,size,y,distance,totalDistance\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'sizeDistanceAndTotalDistance',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_SizeDistanceAndTotalDistance',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature, featureIdx, vertex) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            var a_Size = Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n            return [a_Size[0], a_Size[1], vertex[3], vertex[5]];\n          }\n        }\n      });\n    }\n  }]);\n  return SimpleLineModel;\n}(BaseModel);\nexport { SimpleLineModel as default };"],"mappings":";AAAA,OAAOA,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,0BAA0B,MAAM,sDAAsD;AAC7F,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,SAASC,YAAYA,CAACC,OAAO,EAAE;EAAE,IAAIC,yBAAyB,GAAGC,yBAAyB,CAAC,CAAC;EAAE,OAAO,SAASC,oBAAoBA,CAAA,EAAG;IAAE,IAAIC,KAAK,GAAGP,eAAe,CAACG,OAAO,CAAC;MAAEK,MAAM;IAAE,IAAIJ,yBAAyB,EAAE;MAAE,IAAIK,SAAS,GAAGT,eAAe,CAAC,IAAI,CAAC,CAACU,WAAW;MAAEF,MAAM,GAAGG,OAAO,CAACC,SAAS,CAACL,KAAK,EAAEM,SAAS,EAAEJ,SAAS,CAAC;IAAE,CAAC,MAAM;MAAED,MAAM,GAAGD,KAAK,CAACO,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;IAAE;IAAE,OAAOd,0BAA0B,CAAC,IAAI,EAAES,MAAM,CAAC;EAAE,CAAC;AAAE;AACxa,SAASH,yBAAyBA,CAAA,EAAG;EAAE,IAAI,OAAOM,OAAO,KAAK,WAAW,IAAI,CAACA,OAAO,CAACC,SAAS,EAAE,OAAO,KAAK;EAAE,IAAID,OAAO,CAACC,SAAS,CAACG,IAAI,EAAE,OAAO,KAAK;EAAE,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAI;IAAEC,OAAO,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAACT,OAAO,CAACC,SAAS,CAACK,OAAO,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,OAAOI,CAAC,EAAE;IAAE,OAAO,KAAK;EAAE;AAAE;AACxU,SAASC,aAAa,EAAEC,EAAE,QAAQ,eAAe;AACjD,SAASC,UAAU,EAAEC,OAAO,QAAQ,gBAAgB;AACpD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,uBAAuB,QAAQ,0BAA0B;AAClE;AACA,IAAIC,gBAAgB,GAAG,u2BAAu2B;AAC93B;AACA,IAAIC,gBAAgB,GAAG,m5DAAm5D;AAC16D,SAASC,cAAc,QAAQ,iCAAiC;AAChE,IAAIC,QAAQ,GAAGP,UAAU,CAACO,QAAQ;AAClC,IAAIC,eAAe,GAAG,aAAa,UAAUC,UAAU,EAAE;EACvDnC,SAAS,CAACkC,eAAe,EAAEC,UAAU,CAAC;EACtC,IAAIC,MAAM,GAAGhC,YAAY,CAAC8B,eAAe,CAAC;EAC1C,SAASA,eAAeA,CAAA,EAAG;IACzBpC,eAAe,CAAC,IAAI,EAAEoC,eAAe,CAAC;IACtC,OAAOE,MAAM,CAACpB,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;EACtC;EACAhB,YAAY,CAACmC,eAAe,EAAE,CAAC;IAC7BG,GAAG,EAAE,uBAAuB;IAC5BC,KAAK,EAAE,SAASC,qBAAqBA,CAAA,EAAG;MACtC,IAAIC,IAAI,GAAG,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,CAAC;QACpCC,WAAW,GAAGH,IAAI,CAACG,WAAW;QAC9BC,WAAW,GAAGJ,IAAI,CAACI,WAAW;QAC9BC,aAAa,GAAGL,IAAI,CAACM,QAAQ;QAC7BA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGA,aAAa;QAC7DE,cAAc,GAAGP,IAAI,CAACQ,SAAS;QAC/BA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGA,cAAc;QACtEE,qBAAqB,GAAGT,IAAI,CAACU,iBAAiB;QAC9CA,iBAAiB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,qBAAqB;MACrF,IAAIE,YAAY,GAAGH,SAAS;MAC5B,IAAIF,QAAQ,KAAK,MAAM,EAAE;QACvBK,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC7B;MACA,IAAIA,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;QAC7BD,YAAY,CAACE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MACzB;MACA;MACA,IAAIC,cAAc,GAAG,CAAC,CAAC,CAAC;MACxB,IAAIC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjC,IAAIC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjC,IAAIb,WAAW,IAAIC,WAAW,EAAE;QAC9BW,cAAc,GAAG5B,OAAO,CAACgB,WAAW,CAAC;QACrCa,cAAc,GAAG7B,OAAO,CAACiB,WAAW,CAAC;QACrCU,cAAc,GAAG,CAAC;MACpB;MACA,IAAIG,aAAa,GAAG;QAClBC,aAAa,EAAEH,cAAc;QAC7BI,aAAa,EAAEH,cAAc;QAC7BL,YAAY,EAAEA,YAAY;QAC1B;QACAS,aAAa,EAAEV,iBAAiB;QAChC;QACAW,aAAa,EAAEP;MACjB,CAAC;MACD,IAAIQ,gBAAgB,GAAG,IAAI,CAACC,qBAAqB,CAACN,aAAa,CAAC;MAChE,OAAOK,gBAAgB;IACzB;EACF,CAAC,EAAE;IACDzB,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,YAAY;MACjB,IAAI0B,WAAW,GAAGnE,iBAAiB,EAAE,aAAaM,mBAAmB,CAAC8D,IAAI,CAAC,SAASC,OAAOA,CAAA,EAAG;QAC5F,OAAO/D,mBAAmB,CAACgE,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;UAC1D,OAAO,CAAC,EAAE,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;YAC7C,KAAK,CAAC;cACJ,OAAOF,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;YACtD,KAAK,CAAC;YACN,KAAK,KAAK;cACR,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAC1B;QACF,CAAC,EAAER,OAAO,EAAE,IAAI,CAAC;MACnB,CAAC,CAAC,CAAC;MACH,SAASS,UAAUA,CAAA,EAAG;QACpB,OAAOX,WAAW,CAAChD,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;MAC3C;MACA,OAAO4D,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE;IACDtC,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,SAASsC,UAAUA,CAAA,EAAG;MAC3B,OAAO;QACLC,IAAI,EAAE/C,gBAAgB;QACtBgD,IAAI,EAAE/C,gBAAgB;QACtBgD,IAAI,EAAE;MACR,CAAC;IACH;EACF,CAAC,EAAE;IACD1C,GAAG,EAAE,aAAa;IAClBC,KAAK,EAAE,YAAY;MACjB,IAAI0C,YAAY,GAAGnF,iBAAiB,EAAE,aAAaM,mBAAmB,CAAC8D,IAAI,CAAC,SAASgB,QAAQA,CAAA,EAAG;QAC9F,IAAIC,gBAAgB,EAAEL,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEI,KAAK;QAC7C,OAAOhF,mBAAmB,CAACgE,IAAI,CAAC,SAASiB,SAASA,CAACC,SAAS,EAAE;UAC5D,OAAO,CAAC,EAAE,QAAQA,SAAS,CAACf,IAAI,GAAGe,SAAS,CAACd,IAAI;YAC/C,KAAK,CAAC;cACJ,IAAI,CAACe,kBAAkB,CAAC,CAAC;cACzBJ,gBAAgB,GAAG,IAAI,CAACN,UAAU,CAAC,CAAC,EAAEC,IAAI,GAAGK,gBAAgB,CAACL,IAAI,EAAEC,IAAI,GAAGI,gBAAgB,CAACJ,IAAI,EAAEC,IAAI,GAAGG,gBAAgB,CAACH,IAAI;cAC9HM,SAAS,CAACd,IAAI,GAAG,CAAC;cAClB,OAAO,IAAI,CAAC9B,KAAK,CAAC8C,eAAe,CAAC;gBAChCC,UAAU,EAAET,IAAI;gBAChBU,YAAY,EAAEX,IAAI;gBAClBY,cAAc,EAAEb,IAAI;gBACpBc,aAAa,EAAE9D,uBAAuB;gBACtC+D,MAAM,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC;gBACxBC,SAAS,EAAErE,EAAE,CAACsE,KAAK;gBACnBC,KAAK,EAAE;kBACLC,MAAM,EAAE;gBACV,CAAC;gBACDC,IAAI,EAAE;cACR,CAAC,CAAC;YACJ,KAAK,CAAC;cACJf,KAAK,GAAGE,SAAS,CAACc,IAAI;cACtB,OAAOd,SAAS,CAACb,MAAM,CAAC,QAAQ,EAAE,CAACW,KAAK,CAAC,CAAC;YAC5C,KAAK,CAAC;YACN,KAAK,KAAK;cACR,OAAOE,SAAS,CAACX,IAAI,CAAC,CAAC;UAC3B;QACF,CAAC,EAAEO,QAAQ,EAAE,IAAI,CAAC;MACpB,CAAC,CAAC,CAAC;MACH,SAASR,WAAWA,CAAA,EAAG;QACrB,OAAOO,YAAY,CAAChE,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;MAC5C;MACA,OAAO0D,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE;IACDpC,GAAG,EAAE,2BAA2B;IAChCC,KAAK,EAAE,SAAS8D,yBAAyBA,CAAA,EAAG;MAC1C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACC,qBAAqB,CAACC,sBAAsB,CAAC;QAChDC,IAAI,EAAE,8BAA8B;QACpCxB,IAAI,EAAEvD,aAAa,CAACgF,SAAS;QAC7BC,UAAU,EAAE;UACVF,IAAI,EAAE,gCAAgC;UACtCG,cAAc,EAAE1E,cAAc,CAAC2E,IAAI;UACnCC,MAAM,EAAE;YACNC,KAAK,EAAEpF,EAAE,CAACqF,WAAW;YACrBC,IAAI,EAAE,EAAE;YACRhC,IAAI,EAAEtD,EAAE,CAACuF;UACX,CAAC;UACDC,IAAI,EAAE,CAAC;UACPC,MAAM,EAAE,SAASA,MAAMA,CAACC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAE;YACnD,IAAIC,aAAa,GAAGH,OAAO,CAACF,IAAI;cAC9BA,IAAI,GAAGK,aAAa,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,aAAa;YACrD,IAAIC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,IAAI,EAAE,CAAC,CAAC;YACjE,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;UACrD;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,CAAC;EACH,OAAOnF,eAAe;AACxB,CAAC,CAACN,SAAS,CAAC;AACZ,SAASM,eAAe,IAAIwF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}