{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { edgeArgsToId, isFunction } from '../util';\nimport { GraphEnum } from './enum';\nimport { decrementOrRemoveEntry, edgeArgsToObj, edgeObjToId, incrementOrInitEntry } from '../util';\nimport { read, write } from './toJSON';\nvar defaultOption = {\n  compound: false,\n  multigraph: false,\n  directed: true\n};\nvar Graph = /*#__PURE__*/function () {\n  // Graph option or basic props\n\n  /**\n   * @description Label for this graph itself\n   * @description.zh-CN 图本身的标签（label）\n   * @default undefined\n   */\n\n  /**\n   * @description Number of nodes in the graph\n   * @description.zh-CN 节点的数量\n   * @default 0\n   */\n\n  /**\n   * @description Number of edges in the graph\n   * @description.zh-CN 节点的数量\n   * @default 0\n   */\n\n  /**\n   * @description return node label with its id\n   * @description.zh-CN 返回节点的默认的标签\n   */\n\n  /**\n   * @description return edge label with its id\n   * @description.zh-CN 返回边的默认的标签\n   */\n  function Graph() {\n    var _this = this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Graph);\n    this.directed = true;\n    this.multigraph = false;\n    this.compound = false;\n    this.GRAPH_NODE = GraphEnum.GRAPH_NODE;\n    this.label = void 0;\n    this.nodeCountNum = 0;\n    this.edgeCountNum = 0;\n    this.defaultNodeLabelFn = function () {\n      return undefined;\n    };\n    this.defaultEdgeLabelFn = function () {\n      return undefined;\n    };\n    this.parentMap = void 0;\n    this.childrenMap = void 0;\n    this.nodesLabelMap = new Map();\n    this.inEdgesMap = new Map();\n    this.outEdgesMap = new Map();\n    this.predecessorsMap = new Map();\n    this.successorsMap = new Map();\n    this.edgesMap = new Map();\n    this.edgesLabelsMap = new Map();\n    this.isDirected = function () {\n      return _this.directed;\n    };\n    this.isMultigraph = function () {\n      return _this.multigraph;\n    };\n    this.isCompound = function () {\n      return _this.compound;\n    };\n    this.setGraph = function (label) {\n      _this.label = label;\n      return _this;\n    };\n    this.graph = function () {\n      return _this.label;\n    };\n    this.setDefaultNodeLabel = function (newDefault) {\n      if (isFunction(newDefault)) {\n        _this.defaultNodeLabelFn = newDefault;\n      } else {\n        _this.defaultNodeLabelFn = function () {\n          return newDefault;\n        };\n      }\n      return _this;\n    };\n    this.nodeCount = function () {\n      return _this.nodeCountNum;\n    };\n    this.node = function (n) {\n      return _this.nodesLabelMap.get(n);\n    };\n    this.nodes = function () {\n      return Array.from(_this.nodesLabelMap.keys());\n    };\n    this.sources = function () {\n      return _this.nodes().filter(function (n) {\n        var _this$inEdgesMap$get;\n        return !((_this$inEdgesMap$get = _this.inEdgesMap.get(n)) === null || _this$inEdgesMap$get === void 0 ? void 0 : _this$inEdgesMap$get.size);\n      });\n    };\n    this.sinks = function () {\n      return _this.nodes().filter(function (n) {\n        var _this$outEdgesMap$get;\n        return !((_this$outEdgesMap$get = _this.outEdgesMap.get(n)) === null || _this$outEdgesMap$get === void 0 ? void 0 : _this$outEdgesMap$get.size);\n      });\n    };\n    this.setNodes = function (nodes, value) {\n      nodes.map(function (node) {\n        return _this.setNode(node, value);\n      });\n      return _this;\n    };\n    this.hasNode = function (node) {\n      return _this.nodesLabelMap.has(node);\n    };\n    this.checkCompound = function () {\n      if (!_this.isCompound()) {\n        throw new Error('Cannot construct parent-children relations in a non-compound graph');\n      }\n    };\n    this.parent = function (node) {\n      if (_this.isCompound()) {\n        var _this$parentMap;\n        var parent = (_this$parentMap = _this.parentMap) === null || _this$parentMap === void 0 ? void 0 : _this$parentMap.get(node);\n        if (parent !== _this.GRAPH_NODE) {\n          return parent;\n        }\n      }\n    };\n    this.removeFromParentsChildList = function (node) {\n      var targetParent = _this.parentMap.get(node);\n      _this.childrenMap.get(targetParent).delete(node);\n    };\n    this.setParent = function (node, parent) {\n      var _this$parentMap2, _this$childrenMap;\n      _this.checkCompound();\n      var realParent = parent === undefined ? _this.GRAPH_NODE : parent;\n      var checkNode = _this.parent(realParent);\n      while (checkNode) {\n        if (node === checkNode) {\n          throw new Error('Setting ' + parent + ' as parent of ' + node + ' would create a cycle');\n        }\n        checkNode = _this.parent(checkNode);\n      }\n      if (parent) {\n        _this.setNode(parent);\n      }\n      _this.setNode(node);\n      _this.removeFromParentsChildList(node);\n      (_this$parentMap2 = _this.parentMap) === null || _this$parentMap2 === void 0 ? void 0 : _this$parentMap2.set(node, realParent);\n      var realParentChilren = _this.childrenMap.get(realParent);\n      realParentChilren.set(node, true);\n      (_this$childrenMap = _this.childrenMap) === null || _this$childrenMap === void 0 ? void 0 : _this$childrenMap.set(realParent, realParentChilren);\n      return _this;\n    };\n    this.children = function (node) {\n      var targetNode = node === undefined ? _this.GRAPH_NODE : node;\n      if (_this.isCompound()) {\n        var _this$childrenMap2;\n        var target = (_this$childrenMap2 = _this.childrenMap) === null || _this$childrenMap2 === void 0 ? void 0 : _this$childrenMap2.get(targetNode);\n        if (target) {\n          return Array.from(target.keys());\n        }\n        return undefined;\n      }\n      if (targetNode === _this.GRAPH_NODE) {\n        return _this.nodes();\n      }\n      if (node && _this.hasNode(node)) {\n        return [];\n      }\n    };\n    this.predecessors = function (node) {\n      var preds = _this.predecessorsMap.get(node);\n      return preds ? Array.from(preds.keys()) : undefined;\n    };\n    this.successors = function (node) {\n      var succs = _this.successorsMap.get(node);\n      return succs ? Array.from(succs.keys()) : undefined;\n    };\n    this.neighbors = function (node) {\n      var _this$predecessors;\n      if (!_this.hasNode(node)) {\n        return undefined;\n      }\n      return Array.from(new Set((_this$predecessors = _this.predecessors(node)) === null || _this$predecessors === void 0 ? void 0 : _this$predecessors.concat(_this.successors(node))));\n    };\n    this.isLeaf = function (node) {\n      var _this$neighbors;\n      if (_this.isDirected()) {\n        var _this$successors;\n        return !((_this$successors = _this.successors(node)) === null || _this$successors === void 0 ? void 0 : _this$successors.length);\n      }\n      return !((_this$neighbors = _this.neighbors(node)) === null || _this$neighbors === void 0 ? void 0 : _this$neighbors.length);\n    };\n    this.filterNodes = function (filter) {\n      var directed = _this.directed,\n        multigraph = _this.multigraph,\n        compound = _this.compound;\n      var copyGraph = new Graph({\n        directed: directed,\n        multigraph: multigraph,\n        compound: compound\n      });\n      copyGraph.setGraph(_this.graph());\n      _this.nodes().forEach(function (n) {\n        if (filter(n)) {\n          copyGraph.setNode(n, _this.node(n));\n        }\n      });\n      _this.edges().forEach(function (edgeObj) {\n        if (copyGraph.hasNode(edgeObj.v) && copyGraph.hasNode(edgeObj.w)) {\n          copyGraph.setEdgeObj(edgeObj, _this.edge(edgeObj));\n        }\n      });\n      if (compound) {\n        var findParent = function findParent(node) {\n          var parent = _this.parent(node);\n          while (parent !== undefined && !copyGraph.hasNode(parent)) {\n            parent = _this.parent(parent);\n          }\n          return parent;\n        };\n        copyGraph.nodes().forEach(function (node) {\n          copyGraph.setParent(node, findParent(node));\n        });\n      }\n      return copyGraph;\n    };\n    this.setDefaultEdgeLabel = function (newDefault) {\n      if (isFunction(newDefault)) {\n        _this.defaultEdgeLabelFn = newDefault;\n      } else {\n        _this.defaultEdgeLabelFn = function () {\n          return newDefault;\n        };\n      }\n      return _this;\n    };\n    this.edgeCount = function () {\n      return _this.edgeCountNum;\n    };\n    this.setEdgeObj = function (edgeObj, value) {\n      return _this.setEdge(edgeObj.v, edgeObj.w, value, edgeObj.name);\n    };\n    this.setPath = function (edges, value) {\n      edges.reduce(function (v, w) {\n        _this.setEdge(v, w, value);\n        return w;\n      });\n      return _this;\n    };\n    this.edgeFromArgs = function (v, w, name) {\n      return _this.edge({\n        v: v,\n        w: w,\n        name: name\n      });\n    };\n    this.edge = function (edgeObj) {\n      return _this.edgesLabelsMap.get(edgeObjToId(_this.isDirected(), edgeObj));\n    };\n    this.hasEdge = function (v, w, name) {\n      return _this.edgesLabelsMap.has(edgeObjToId(_this.isDirected(), {\n        v: v,\n        w: w,\n        name: name\n      }));\n    };\n    this.removeEdgeObj = function (_ref) {\n      var v = _ref.v,\n        w = _ref.w,\n        name = _ref.name;\n      return _this.removeEdge(v, w, name);\n    };\n    this.edges = function () {\n      return Array.from(_this.edgesMap.values());\n    };\n    this.inEdges = function (v, u) {\n      var inV = _this.inEdgesMap.get(v);\n      if (inV) {\n        return Array.from(inV.values()).filter(function (e) {\n          return !u || e.v === u;\n        });\n      }\n      return undefined;\n    };\n    this.outEdges = function (w, u) {\n      var outW = _this.outEdgesMap.get(w);\n      if (outW) {\n        return Array.from(outW.values()).filter(function (e) {\n          return !u || e.w === u;\n        });\n      }\n      return undefined;\n    };\n    this.nodeEdges = function (v, w) {\n      var _this$inEdges;\n      if (!_this.hasNode(v)) {\n        return undefined;\n      }\n      return (_this$inEdges = _this.inEdges(v, w)) === null || _this$inEdges === void 0 ? void 0 : _this$inEdges.concat(_this.outEdges(v, w));\n    };\n    this.toJSON = function () {\n      return write(_this);\n    };\n    this.nodeInDegree = function (node) {\n      var inEdges = _this.inEdgesMap.get(node);\n      if (inEdges) {\n        return inEdges.size;\n      }\n      return 0;\n    };\n    this.nodeOutDegree = function (node) {\n      var outEdges = _this.outEdgesMap.get(node);\n      if (outEdges) {\n        return outEdges.size;\n      }\n      return 0;\n    };\n    this.nodeDegree = function (node) {\n      return _this.nodeInDegree(node) + _this.nodeOutDegree(node);\n    };\n    this.source = function (edge) {\n      return edge.v;\n    };\n    this.target = function (edge) {\n      return edge.w;\n    };\n    var resultOptions = _objectSpread(_objectSpread({}, defaultOption), options);\n    this.compound = resultOptions.compound;\n    this.directed = resultOptions.directed;\n    this.multigraph = resultOptions.multigraph;\n    if (this.compound) {\n      this.parentMap = new Map();\n      this.childrenMap = new Map();\n    }\n  } // Map for graph\n\n  /**\n   * @description Map for parent relationship\n   * @description.zh-CN 父子关系的映射\n   */\n\n  _createClass(Graph, [{\n    key: \"setNode\",\n    value:\n    /**\n     * @description Set Node label in graph if node not in graph then create it\n     * @description.zh-CN 设置节点的label，如果这个节点不在图中，则在图中创建这个节点\n     * @param node\n     * @param value\n     * @returns\n     */\n    function setNode(node, value) {\n      var nodesLabelMap = this.nodesLabelMap,\n        defaultNodeLabelFn = this.defaultNodeLabelFn,\n        isCompound = this.isCompound,\n        parentMap = this.parentMap,\n        childrenMap = this.childrenMap,\n        inEdgesMap = this.inEdgesMap,\n        outEdgesMap = this.outEdgesMap,\n        predecessorsMap = this.predecessorsMap,\n        successorsMap = this.successorsMap; // 如果节点不在图中，则创建节点\n\n      if (nodesLabelMap.has(node)) {\n        if (value !== undefined) {\n          nodesLabelMap.set(node, value);\n        }\n        return this;\n      }\n      nodesLabelMap.set(node, value || defaultNodeLabelFn(node)); // 如果是复合图，则创建节点的子节点\n\n      if (isCompound()) {\n        var _childrenMap$get;\n        parentMap === null || parentMap === void 0 ? void 0 : parentMap.set(node, this.GRAPH_NODE);\n        childrenMap === null || childrenMap === void 0 ? void 0 : childrenMap.set(node, new Map());\n        if (!(childrenMap === null || childrenMap === void 0 ? void 0 : childrenMap.has(this.GRAPH_NODE))) {\n          childrenMap === null || childrenMap === void 0 ? void 0 : childrenMap.set(this.GRAPH_NODE, new Map());\n        }\n        childrenMap === null || childrenMap === void 0 ? void 0 : (_childrenMap$get = childrenMap.get(this.GRAPH_NODE)) === null || _childrenMap$get === void 0 ? void 0 : _childrenMap$get.set(node, true);\n      }\n      [inEdgesMap, outEdgesMap, predecessorsMap, successorsMap].forEach(function (map) {\n        return map.set(node, new Map());\n      });\n      this.nodeCountNum += 1;\n      return this;\n    }\n    /**\n     * @description Set nodes or add nodes in batch\n     * @description.zh-CN 批量设置或者创建节点\n     * @param nodes\n     * @param value\n     * @returns\n     */\n  }, {\n    key: \"removeNode\",\n    value:\n    /**\n     * @description Remove node from graph\n     * @description.zh-CN 将节点从图中移除\n     * @param node\n     * @returns\n     */\n    function removeNode(node) {\n      var _this2 = this;\n      if (this.hasNode(node)) {\n        var cleanEdge = function cleanEdge(edgeObj) {\n          _this2.removeEdge(edgeObj.v, edgeObj.w, edgeObj.name);\n        };\n        var inEdgesMap = this.inEdgesMap,\n          outEdgesMap = this.outEdgesMap,\n          predecessorsMap = this.predecessorsMap,\n          successorsMap = this.successorsMap,\n          nodesLabelMap = this.nodesLabelMap;\n        if (this.isCompound()) {\n          var _this$parentMap3, _this$children, _this$childrenMap3;\n          this.removeFromParentsChildList(node);\n          (_this$parentMap3 = this.parentMap) === null || _this$parentMap3 === void 0 ? void 0 : _this$parentMap3.delete(node);\n          (_this$children = this.children(node)) === null || _this$children === void 0 ? void 0 : _this$children.forEach(function (n) {\n            return _this2.setParent(n);\n          });\n          (_this$childrenMap3 = this.childrenMap) === null || _this$childrenMap3 === void 0 ? void 0 : _this$childrenMap3.delete(node);\n        }\n        var inE = inEdgesMap.get(node);\n        var outE = outEdgesMap.get(node);\n        Array.from(inE.values()).forEach(function (edge) {\n          return cleanEdge(edge);\n        });\n        Array.from(outE.values()).forEach(function (edge) {\n          return cleanEdge(edge);\n        });\n        nodesLabelMap.delete(node);\n        inEdgesMap.delete(node);\n        outEdgesMap.delete(node);\n        predecessorsMap.delete(node);\n        successorsMap.delete(node);\n        this.nodeCountNum -= 1;\n      }\n      return this;\n    }\n    /**\n     * @description Set function that generate default label for edge, if param is non-function value then default label will always be this value;\n     * @description.zh-CN 设置默认获取边Label的方法，如果传入不是函数的，那么默认label 的值只会是传入值\n     * @param newDefault\n     * @returns\n     */\n  }, {\n    key: \"setEdge\",\n    value:\n    /**\n     * @description set edge value, if nodes or edges not exsit then add to graph\n     * @description.zh-CN 设置边的属性，如果边或节点不存在，那么将他们加入这个图\n     * @param v\n     * @param w\n     * @param value\n     * @param name\n     * @returns\n     */\n    function setEdge(v_, w_, value, name) {\n      var _this$inEdgesMap$get2, _this$outEdgesMap$get2;\n      var edgeObj = edgeArgsToObj(this.isDirected(), v_, w_, name);\n      var edgeId = edgeObjToId(this.isDirected(), edgeObj);\n      var v = edgeObj.v,\n        w = edgeObj.w;\n      if (this.edgesLabelsMap.has(edgeId)) {\n        this.edgesLabelsMap.set(edgeId, value);\n        return this;\n      }\n      if (name !== undefined && !this.isMultigraph()) {\n        throw new Error('Cannot set a named edge when isMultigraph = false');\n      }\n      this.setNode(v);\n      this.setNode(w);\n      this.edgesLabelsMap.set(edgeId, value || this.defaultEdgeLabelFn(v, w, name));\n      Object.freeze(edgeObj);\n      this.edgesMap.set(edgeId, edgeObj);\n      var preds = this.predecessorsMap.get(w);\n      var succs = this.successorsMap.get(v);\n      incrementOrInitEntry(preds, v);\n      incrementOrInitEntry(succs, w);\n      (_this$inEdgesMap$get2 = this.inEdgesMap.get(w)) === null || _this$inEdgesMap$get2 === void 0 ? void 0 : _this$inEdgesMap$get2.set(edgeId, edgeObj);\n      (_this$outEdgesMap$get2 = this.outEdgesMap.get(v)) === null || _this$outEdgesMap$get2 === void 0 ? void 0 : _this$outEdgesMap$get2.set(edgeId, edgeObj);\n      this.edgeCountNum += 1;\n      return this;\n    }\n  }, {\n    key: \"removeEdge\",\n    value:\n    /**\n     * @description remove a specific edge\n     * @description.zh-CN 删除一条边\n     * @param v\n     * @param w\n     * @param name\n     * @returns\n     */\n    function removeEdge(v_, w_, name) {\n      var edgeId = edgeArgsToId(this.isDirected(), v_, w_, name);\n      var edgeObj = this.edgesMap.get(edgeId);\n      if (edgeObj) {\n        var _edgeArgsToObj = edgeArgsToObj(this.isDirected(), v_, w_, name),\n          v = _edgeArgsToObj.v,\n          w = _edgeArgsToObj.w;\n        this.edgesLabelsMap.delete(edgeId);\n        this.edgesMap.delete(edgeId);\n        var preds = this.predecessorsMap.get(w);\n        var succs = this.successorsMap.get(v);\n        decrementOrRemoveEntry(preds, v);\n        decrementOrRemoveEntry(succs, w);\n        this.inEdgesMap.get(w).delete(edgeId);\n        this.outEdgesMap.get(v).delete(edgeId);\n        this.edgeCountNum -= 1;\n      }\n      return this;\n    }\n    /**\n     * @description remove a specific edge by edge object\n     * @description.zh-CN 删除一条边\n     */\n  }]);\n\n  return Graph;\n}();\nGraph.fromJSON = read;\nexport { Graph as default };","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","edgeArgsToId","isFunction","GraphEnum","decrementOrRemoveEntry","edgeArgsToObj","edgeObjToId","incrementOrInitEntry","read","write","defaultOption","compound","multigraph","directed","Graph","_this","options","undefined","GRAPH_NODE","label","nodeCountNum","edgeCountNum","defaultNodeLabelFn","defaultEdgeLabelFn","parentMap","childrenMap","nodesLabelMap","Map","inEdgesMap","outEdgesMap","predecessorsMap","successorsMap","edgesMap","edgesLabelsMap","isDirected","isMultigraph","isCompound","setGraph","graph","setDefaultNodeLabel","newDefault","nodeCount","node","n","get","nodes","Array","from","sources","_this$inEdgesMap$get","size","sinks","_this$outEdgesMap$get","setNodes","map","setNode","hasNode","has","checkCompound","Error","parent","_this$parentMap","removeFromParentsChildList","targetParent","delete","setParent","_this$parentMap2","_this$childrenMap","realParent","checkNode","set","realParentChilren","children","targetNode","_this$childrenMap2","predecessors","preds","successors","succs","neighbors","_this$predecessors","Set","concat","isLeaf","_this$neighbors","_this$successors","filterNodes","copyGraph","edges","edgeObj","v","w","setEdgeObj","edge","findParent","setDefaultEdgeLabel","edgeCount","setEdge","name","setPath","reduce","edgeFromArgs","hasEdge","removeEdgeObj","_ref","removeEdge","values","inEdges","u","inV","e","outEdges","outW","nodeEdges","_this$inEdges","toJSON","nodeInDegree","nodeOutDegree","nodeDegree","resultOptions","_childrenMap$get","removeNode","_this2","cleanEdge","_this$parentMap3","_this$children","_this$childrenMap3","inE","outE","v_","w_","_this$inEdgesMap$get2","_this$outEdgesMap$get2","edgeId","freeze","_edgeArgsToObj","fromJSON","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/graphlib/es/Graph/index.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { edgeArgsToId, isFunction } from '../util';\nimport { GraphEnum } from './enum';\nimport { decrementOrRemoveEntry, edgeArgsToObj, edgeObjToId, incrementOrInitEntry } from '../util';\nimport { read, write } from './toJSON';\nvar defaultOption = {\n  compound: false,\n  multigraph: false,\n  directed: true\n};\n\nvar Graph = /*#__PURE__*/function () {\n  // Graph option or basic props\n\n  /**\n   * @description Label for this graph itself\n   * @description.zh-CN 图本身的标签（label）\n   * @default undefined\n   */\n\n  /**\n   * @description Number of nodes in the graph\n   * @description.zh-CN 节点的数量\n   * @default 0\n   */\n\n  /**\n   * @description Number of edges in the graph\n   * @description.zh-CN 节点的数量\n   * @default 0\n   */\n\n  /**\n   * @description return node label with its id\n   * @description.zh-CN 返回节点的默认的标签\n   */\n\n  /**\n   * @description return edge label with its id\n   * @description.zh-CN 返回边的默认的标签\n   */\n  function Graph() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Graph);\n\n    this.directed = true;\n    this.multigraph = false;\n    this.compound = false;\n    this.GRAPH_NODE = GraphEnum.GRAPH_NODE;\n    this.label = void 0;\n    this.nodeCountNum = 0;\n    this.edgeCountNum = 0;\n\n    this.defaultNodeLabelFn = function () {\n      return undefined;\n    };\n\n    this.defaultEdgeLabelFn = function () {\n      return undefined;\n    };\n\n    this.parentMap = void 0;\n    this.childrenMap = void 0;\n    this.nodesLabelMap = new Map();\n    this.inEdgesMap = new Map();\n    this.outEdgesMap = new Map();\n    this.predecessorsMap = new Map();\n    this.successorsMap = new Map();\n    this.edgesMap = new Map();\n    this.edgesLabelsMap = new Map();\n\n    this.isDirected = function () {\n      return _this.directed;\n    };\n\n    this.isMultigraph = function () {\n      return _this.multigraph;\n    };\n\n    this.isCompound = function () {\n      return _this.compound;\n    };\n\n    this.setGraph = function (label) {\n      _this.label = label;\n      return _this;\n    };\n\n    this.graph = function () {\n      return _this.label;\n    };\n\n    this.setDefaultNodeLabel = function (newDefault) {\n      if (isFunction(newDefault)) {\n        _this.defaultNodeLabelFn = newDefault;\n      } else {\n        _this.defaultNodeLabelFn = function () {\n          return newDefault;\n        };\n      }\n\n      return _this;\n    };\n\n    this.nodeCount = function () {\n      return _this.nodeCountNum;\n    };\n\n    this.node = function (n) {\n      return _this.nodesLabelMap.get(n);\n    };\n\n    this.nodes = function () {\n      return Array.from(_this.nodesLabelMap.keys());\n    };\n\n    this.sources = function () {\n      return _this.nodes().filter(function (n) {\n        var _this$inEdgesMap$get;\n\n        return !((_this$inEdgesMap$get = _this.inEdgesMap.get(n)) === null || _this$inEdgesMap$get === void 0 ? void 0 : _this$inEdgesMap$get.size);\n      });\n    };\n\n    this.sinks = function () {\n      return _this.nodes().filter(function (n) {\n        var _this$outEdgesMap$get;\n\n        return !((_this$outEdgesMap$get = _this.outEdgesMap.get(n)) === null || _this$outEdgesMap$get === void 0 ? void 0 : _this$outEdgesMap$get.size);\n      });\n    };\n\n    this.setNodes = function (nodes, value) {\n      nodes.map(function (node) {\n        return _this.setNode(node, value);\n      });\n      return _this;\n    };\n\n    this.hasNode = function (node) {\n      return _this.nodesLabelMap.has(node);\n    };\n\n    this.checkCompound = function () {\n      if (!_this.isCompound()) {\n        throw new Error('Cannot construct parent-children relations in a non-compound graph');\n      }\n    };\n\n    this.parent = function (node) {\n      if (_this.isCompound()) {\n        var _this$parentMap;\n\n        var parent = (_this$parentMap = _this.parentMap) === null || _this$parentMap === void 0 ? void 0 : _this$parentMap.get(node);\n\n        if (parent !== _this.GRAPH_NODE) {\n          return parent;\n        }\n      }\n    };\n\n    this.removeFromParentsChildList = function (node) {\n      var targetParent = _this.parentMap.get(node);\n\n      _this.childrenMap.get(targetParent).delete(node);\n    };\n\n    this.setParent = function (node, parent) {\n      var _this$parentMap2, _this$childrenMap;\n\n      _this.checkCompound();\n\n      var realParent = parent === undefined ? _this.GRAPH_NODE : parent;\n\n      var checkNode = _this.parent(realParent);\n\n      while (checkNode) {\n        if (node === checkNode) {\n          throw new Error('Setting ' + parent + ' as parent of ' + node + ' would create a cycle');\n        }\n\n        checkNode = _this.parent(checkNode);\n      }\n\n      if (parent) {\n        _this.setNode(parent);\n      }\n\n      _this.setNode(node);\n\n      _this.removeFromParentsChildList(node);\n\n      (_this$parentMap2 = _this.parentMap) === null || _this$parentMap2 === void 0 ? void 0 : _this$parentMap2.set(node, realParent);\n\n      var realParentChilren = _this.childrenMap.get(realParent);\n\n      realParentChilren.set(node, true);\n      (_this$childrenMap = _this.childrenMap) === null || _this$childrenMap === void 0 ? void 0 : _this$childrenMap.set(realParent, realParentChilren);\n      return _this;\n    };\n\n    this.children = function (node) {\n      var targetNode = node === undefined ? _this.GRAPH_NODE : node;\n\n      if (_this.isCompound()) {\n        var _this$childrenMap2;\n\n        var target = (_this$childrenMap2 = _this.childrenMap) === null || _this$childrenMap2 === void 0 ? void 0 : _this$childrenMap2.get(targetNode);\n\n        if (target) {\n          return Array.from(target.keys());\n        }\n\n        return undefined;\n      }\n\n      if (targetNode === _this.GRAPH_NODE) {\n        return _this.nodes();\n      }\n\n      if (node && _this.hasNode(node)) {\n        return [];\n      }\n    };\n\n    this.predecessors = function (node) {\n      var preds = _this.predecessorsMap.get(node);\n\n      return preds ? Array.from(preds.keys()) : undefined;\n    };\n\n    this.successors = function (node) {\n      var succs = _this.successorsMap.get(node);\n\n      return succs ? Array.from(succs.keys()) : undefined;\n    };\n\n    this.neighbors = function (node) {\n      var _this$predecessors;\n\n      if (!_this.hasNode(node)) {\n        return undefined;\n      }\n\n      return Array.from(new Set((_this$predecessors = _this.predecessors(node)) === null || _this$predecessors === void 0 ? void 0 : _this$predecessors.concat(_this.successors(node))));\n    };\n\n    this.isLeaf = function (node) {\n      var _this$neighbors;\n\n      if (_this.isDirected()) {\n        var _this$successors;\n\n        return !((_this$successors = _this.successors(node)) === null || _this$successors === void 0 ? void 0 : _this$successors.length);\n      }\n\n      return !((_this$neighbors = _this.neighbors(node)) === null || _this$neighbors === void 0 ? void 0 : _this$neighbors.length);\n    };\n\n    this.filterNodes = function (filter) {\n      var directed = _this.directed,\n          multigraph = _this.multigraph,\n          compound = _this.compound;\n      var copyGraph = new Graph({\n        directed: directed,\n        multigraph: multigraph,\n        compound: compound\n      });\n      copyGraph.setGraph(_this.graph());\n\n      _this.nodes().forEach(function (n) {\n        if (filter(n)) {\n          copyGraph.setNode(n, _this.node(n));\n        }\n      });\n\n      _this.edges().forEach(function (edgeObj) {\n        if (copyGraph.hasNode(edgeObj.v) && copyGraph.hasNode(edgeObj.w)) {\n          copyGraph.setEdgeObj(edgeObj, _this.edge(edgeObj));\n        }\n      });\n\n      if (compound) {\n        var findParent = function findParent(node) {\n          var parent = _this.parent(node);\n\n          while (parent !== undefined && !copyGraph.hasNode(parent)) {\n            parent = _this.parent(parent);\n          }\n\n          return parent;\n        };\n\n        copyGraph.nodes().forEach(function (node) {\n          copyGraph.setParent(node, findParent(node));\n        });\n      }\n\n      return copyGraph;\n    };\n\n    this.setDefaultEdgeLabel = function (newDefault) {\n      if (isFunction(newDefault)) {\n        _this.defaultEdgeLabelFn = newDefault;\n      } else {\n        _this.defaultEdgeLabelFn = function () {\n          return newDefault;\n        };\n      }\n\n      return _this;\n    };\n\n    this.edgeCount = function () {\n      return _this.edgeCountNum;\n    };\n\n    this.setEdgeObj = function (edgeObj, value) {\n      return _this.setEdge(edgeObj.v, edgeObj.w, value, edgeObj.name);\n    };\n\n    this.setPath = function (edges, value) {\n      edges.reduce(function (v, w) {\n        _this.setEdge(v, w, value);\n\n        return w;\n      });\n      return _this;\n    };\n\n    this.edgeFromArgs = function (v, w, name) {\n      return _this.edge({\n        v: v,\n        w: w,\n        name: name\n      });\n    };\n\n    this.edge = function (edgeObj) {\n      return _this.edgesLabelsMap.get(edgeObjToId(_this.isDirected(), edgeObj));\n    };\n\n    this.hasEdge = function (v, w, name) {\n      return _this.edgesLabelsMap.has(edgeObjToId(_this.isDirected(), {\n        v: v,\n        w: w,\n        name: name\n      }));\n    };\n\n    this.removeEdgeObj = function (_ref) {\n      var v = _ref.v,\n          w = _ref.w,\n          name = _ref.name;\n      return _this.removeEdge(v, w, name);\n    };\n\n    this.edges = function () {\n      return Array.from(_this.edgesMap.values());\n    };\n\n    this.inEdges = function (v, u) {\n      var inV = _this.inEdgesMap.get(v);\n\n      if (inV) {\n        return Array.from(inV.values()).filter(function (e) {\n          return !u || e.v === u;\n        });\n      }\n\n      return undefined;\n    };\n\n    this.outEdges = function (w, u) {\n      var outW = _this.outEdgesMap.get(w);\n\n      if (outW) {\n        return Array.from(outW.values()).filter(function (e) {\n          return !u || e.w === u;\n        });\n      }\n\n      return undefined;\n    };\n\n    this.nodeEdges = function (v, w) {\n      var _this$inEdges;\n\n      if (!_this.hasNode(v)) {\n        return undefined;\n      }\n\n      return (_this$inEdges = _this.inEdges(v, w)) === null || _this$inEdges === void 0 ? void 0 : _this$inEdges.concat(_this.outEdges(v, w));\n    };\n\n    this.toJSON = function () {\n      return write(_this);\n    };\n\n    this.nodeInDegree = function (node) {\n      var inEdges = _this.inEdgesMap.get(node);\n\n      if (inEdges) {\n        return inEdges.size;\n      }\n\n      return 0;\n    };\n\n    this.nodeOutDegree = function (node) {\n      var outEdges = _this.outEdgesMap.get(node);\n\n      if (outEdges) {\n        return outEdges.size;\n      }\n\n      return 0;\n    };\n\n    this.nodeDegree = function (node) {\n      return _this.nodeInDegree(node) + _this.nodeOutDegree(node);\n    };\n\n    this.source = function (edge) {\n      return edge.v;\n    };\n\n    this.target = function (edge) {\n      return edge.w;\n    };\n\n    var resultOptions = _objectSpread(_objectSpread({}, defaultOption), options);\n\n    this.compound = resultOptions.compound;\n    this.directed = resultOptions.directed;\n    this.multigraph = resultOptions.multigraph;\n\n    if (this.compound) {\n      this.parentMap = new Map();\n      this.childrenMap = new Map();\n    }\n  } // Map for graph\n\n  /**\n   * @description Map for parent relationship\n   * @description.zh-CN 父子关系的映射\n   */\n\n\n  _createClass(Graph, [{\n    key: \"setNode\",\n    value:\n    /**\n     * @description Set Node label in graph if node not in graph then create it\n     * @description.zh-CN 设置节点的label，如果这个节点不在图中，则在图中创建这个节点\n     * @param node\n     * @param value\n     * @returns\n     */\n    function setNode(node, value) {\n      var nodesLabelMap = this.nodesLabelMap,\n          defaultNodeLabelFn = this.defaultNodeLabelFn,\n          isCompound = this.isCompound,\n          parentMap = this.parentMap,\n          childrenMap = this.childrenMap,\n          inEdgesMap = this.inEdgesMap,\n          outEdgesMap = this.outEdgesMap,\n          predecessorsMap = this.predecessorsMap,\n          successorsMap = this.successorsMap; // 如果节点不在图中，则创建节点\n\n      if (nodesLabelMap.has(node)) {\n        if (value !== undefined) {\n          nodesLabelMap.set(node, value);\n        }\n\n        return this;\n      }\n\n      nodesLabelMap.set(node, value || defaultNodeLabelFn(node)); // 如果是复合图，则创建节点的子节点\n\n      if (isCompound()) {\n        var _childrenMap$get;\n\n        parentMap === null || parentMap === void 0 ? void 0 : parentMap.set(node, this.GRAPH_NODE);\n        childrenMap === null || childrenMap === void 0 ? void 0 : childrenMap.set(node, new Map());\n\n        if (!(childrenMap === null || childrenMap === void 0 ? void 0 : childrenMap.has(this.GRAPH_NODE))) {\n          childrenMap === null || childrenMap === void 0 ? void 0 : childrenMap.set(this.GRAPH_NODE, new Map());\n        }\n\n        childrenMap === null || childrenMap === void 0 ? void 0 : (_childrenMap$get = childrenMap.get(this.GRAPH_NODE)) === null || _childrenMap$get === void 0 ? void 0 : _childrenMap$get.set(node, true);\n      }\n\n      [inEdgesMap, outEdgesMap, predecessorsMap, successorsMap].forEach(function (map) {\n        return map.set(node, new Map());\n      });\n      this.nodeCountNum += 1;\n      return this;\n    }\n    /**\n     * @description Set nodes or add nodes in batch\n     * @description.zh-CN 批量设置或者创建节点\n     * @param nodes\n     * @param value\n     * @returns\n     */\n\n  }, {\n    key: \"removeNode\",\n    value:\n    /**\n     * @description Remove node from graph\n     * @description.zh-CN 将节点从图中移除\n     * @param node\n     * @returns\n     */\n    function removeNode(node) {\n      var _this2 = this;\n\n      if (this.hasNode(node)) {\n        var cleanEdge = function cleanEdge(edgeObj) {\n          _this2.removeEdge(edgeObj.v, edgeObj.w, edgeObj.name);\n        };\n\n        var inEdgesMap = this.inEdgesMap,\n            outEdgesMap = this.outEdgesMap,\n            predecessorsMap = this.predecessorsMap,\n            successorsMap = this.successorsMap,\n            nodesLabelMap = this.nodesLabelMap;\n\n        if (this.isCompound()) {\n          var _this$parentMap3, _this$children, _this$childrenMap3;\n\n          this.removeFromParentsChildList(node);\n          (_this$parentMap3 = this.parentMap) === null || _this$parentMap3 === void 0 ? void 0 : _this$parentMap3.delete(node);\n          (_this$children = this.children(node)) === null || _this$children === void 0 ? void 0 : _this$children.forEach(function (n) {\n            return _this2.setParent(n);\n          });\n          (_this$childrenMap3 = this.childrenMap) === null || _this$childrenMap3 === void 0 ? void 0 : _this$childrenMap3.delete(node);\n        }\n\n        var inE = inEdgesMap.get(node);\n        var outE = outEdgesMap.get(node);\n        Array.from(inE.values()).forEach(function (edge) {\n          return cleanEdge(edge);\n        });\n        Array.from(outE.values()).forEach(function (edge) {\n          return cleanEdge(edge);\n        });\n        nodesLabelMap.delete(node);\n        inEdgesMap.delete(node);\n        outEdgesMap.delete(node);\n        predecessorsMap.delete(node);\n        successorsMap.delete(node);\n        this.nodeCountNum -= 1;\n      }\n\n      return this;\n    }\n    /**\n     * @description Set function that generate default label for edge, if param is non-function value then default label will always be this value;\n     * @description.zh-CN 设置默认获取边Label的方法，如果传入不是函数的，那么默认label 的值只会是传入值\n     * @param newDefault\n     * @returns\n     */\n\n  }, {\n    key: \"setEdge\",\n    value:\n    /**\n     * @description set edge value, if nodes or edges not exsit then add to graph\n     * @description.zh-CN 设置边的属性，如果边或节点不存在，那么将他们加入这个图\n     * @param v\n     * @param w\n     * @param value\n     * @param name\n     * @returns\n     */\n    function setEdge(v_, w_, value, name) {\n      var _this$inEdgesMap$get2, _this$outEdgesMap$get2;\n\n      var edgeObj = edgeArgsToObj(this.isDirected(), v_, w_, name);\n      var edgeId = edgeObjToId(this.isDirected(), edgeObj);\n      var v = edgeObj.v,\n          w = edgeObj.w;\n\n      if (this.edgesLabelsMap.has(edgeId)) {\n        this.edgesLabelsMap.set(edgeId, value);\n        return this;\n      }\n\n      if (name !== undefined && !this.isMultigraph()) {\n        throw new Error('Cannot set a named edge when isMultigraph = false');\n      }\n\n      this.setNode(v);\n      this.setNode(w);\n      this.edgesLabelsMap.set(edgeId, value || this.defaultEdgeLabelFn(v, w, name));\n      Object.freeze(edgeObj);\n      this.edgesMap.set(edgeId, edgeObj);\n      var preds = this.predecessorsMap.get(w);\n      var succs = this.successorsMap.get(v);\n      incrementOrInitEntry(preds, v);\n      incrementOrInitEntry(succs, w);\n      (_this$inEdgesMap$get2 = this.inEdgesMap.get(w)) === null || _this$inEdgesMap$get2 === void 0 ? void 0 : _this$inEdgesMap$get2.set(edgeId, edgeObj);\n      (_this$outEdgesMap$get2 = this.outEdgesMap.get(v)) === null || _this$outEdgesMap$get2 === void 0 ? void 0 : _this$outEdgesMap$get2.set(edgeId, edgeObj);\n      this.edgeCountNum += 1;\n      return this;\n    }\n  }, {\n    key: \"removeEdge\",\n    value:\n    /**\n     * @description remove a specific edge\n     * @description.zh-CN 删除一条边\n     * @param v\n     * @param w\n     * @param name\n     * @returns\n     */\n    function removeEdge(v_, w_, name) {\n      var edgeId = edgeArgsToId(this.isDirected(), v_, w_, name);\n      var edgeObj = this.edgesMap.get(edgeId);\n\n      if (edgeObj) {\n        var _edgeArgsToObj = edgeArgsToObj(this.isDirected(), v_, w_, name),\n            v = _edgeArgsToObj.v,\n            w = _edgeArgsToObj.w;\n\n        this.edgesLabelsMap.delete(edgeId);\n        this.edgesMap.delete(edgeId);\n        var preds = this.predecessorsMap.get(w);\n        var succs = this.successorsMap.get(v);\n        decrementOrRemoveEntry(preds, v);\n        decrementOrRemoveEntry(succs, w);\n        this.inEdgesMap.get(w).delete(edgeId);\n        this.outEdgesMap.get(v).delete(edgeId);\n        this.edgeCountNum -= 1;\n      }\n\n      return this;\n    }\n    /**\n     * @description remove a specific edge by edge object\n     * @description.zh-CN 删除一条边\n     */\n\n  }]);\n\n  return Graph;\n}();\n\nGraph.fromJSON = read;\nexport { Graph as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}