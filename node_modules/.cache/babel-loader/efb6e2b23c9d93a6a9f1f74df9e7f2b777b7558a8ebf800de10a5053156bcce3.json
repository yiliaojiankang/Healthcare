{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar min = Math.min,\n  max = Math.max,\n  abs = Math.abs;\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['drag', 'shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      brushStyle: {\n        fill: '#EEF6FF',\n        fillOpacity: 0.4,\n        stroke: '#DDEEFE',\n        lineWidth: 1\n      },\n      onSelect: function onSelect() {},\n      onDeselect: function onDeselect() {},\n      selectedState: 'selected',\n      trigger: DEFAULT_TRIGGER,\n      includeEdges: true,\n      includeCombos: false,\n      selectOnCombo: false,\n      selectedEdges: [],\n      selectedNodes: [],\n      selectedCombos: []\n    };\n  },\n  getEvents: function getEvents() {\n    // 检测输入是否合法\n    if (!(ALLOW_EVENTS.indexOf(this.trigger.toLowerCase()) > -1)) {\n      this.trigger = DEFAULT_TRIGGER;\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n    if (this.trigger === 'drag') {\n      return {\n        dragstart: 'onMouseDown',\n        drag: 'onMouseMove',\n        dragend: 'onMouseUp',\n        'canvas:click': 'clearStates'\n      };\n    }\n    return {\n      dragstart: 'onMouseDown',\n      drag: 'onMouseMove',\n      dragend: 'onMouseUp',\n      'canvas:click': 'clearStates',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onMouseDown: function onMouseDown(e) {\n    // 按在node上面拖动时候不应该是框选\n    var item = e.item;\n    var brush = this.brush;\n    var selectOnCombo = this.selectOnCombo;\n    var isCombo = (item === null || item === void 0 ? void 0 : item.getType()) === 'combo';\n    // 若在 combo 上操作，且不允许在 combo 上选择，则不继续\n    if (isCombo && !selectOnCombo) {\n      return;\n    }\n    // 若不在 combo 上操作，而是其他的 item ，则不继续\n    if (!isCombo && item) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    if (this.selectedNodes && this.selectedNodes.length !== 0) {\n      this.clearStates();\n    }\n    if (!brush) {\n      brush = this.createBrush();\n    }\n    this.originPoint = {\n      x: e.canvasX,\n      y: e.canvasY\n    };\n    brush.attr({\n      width: 0,\n      height: 0\n    });\n    brush.show();\n    this.dragging = true;\n  },\n  onMouseMove: function onMouseMove(e) {\n    if (!this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.updateBrush(e);\n  },\n  onMouseUp: function onMouseUp(e) {\n    var graph = this.graph;\n    // TODO: 触发了 canvas:click 导致 clearStates\n    if (!this.brush && !this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.brush.remove(true); // remove and destroy\n    this.brush = null;\n    this.getSelectedNodes(e);\n    this.dragging = false;\n  },\n  clearStates: function clearStates() {\n    var _a = this,\n      graph = _a.graph,\n      selectedState = _a.selectedState;\n    var nodes = graph.findAllByState('node', selectedState);\n    var edges = graph.findAllByState('edge', selectedState);\n    var combos = graph.findAllByState('combo', selectedState);\n    nodes.forEach(function (node) {\n      return graph.setItemState(node, selectedState, false);\n    });\n    edges.forEach(function (edge) {\n      return graph.setItemState(edge, selectedState, false);\n    });\n    combos.forEach(function (combo) {\n      return graph.setItemState(combo, selectedState, false);\n    });\n    this.selectedNodes = [];\n    this.selectedEdges = [];\n    this.selectedCombos = [];\n    if (this.onDeselect) {\n      this.onDeselect(this.selectedNodes, this.selectedEdges, this.selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  isBBoxCenterInRect: function isBBoxCenterInRect(item, left, right, top, bottom) {\n    var bbox = item.getBBox();\n    return bbox.centerX >= left && bbox.centerX <= right && bbox.centerY >= top && bbox.centerY <= bottom;\n  },\n  getSelectedNodes: function getSelectedNodes(e) {\n    var _this = this;\n    var _a = this,\n      graph = _a.graph,\n      originPoint = _a.originPoint,\n      shouldUpdate = _a.shouldUpdate,\n      isBBoxCenterInRect = _a.isBBoxCenterInRect;\n    var state = this.selectedState;\n    var p1 = {\n      x: e.x,\n      y: e.y\n    };\n    var p2 = graph.getPointByCanvas(originPoint.x, originPoint.y);\n    var left = min(p1.x, p2.x);\n    var right = max(p1.x, p2.x);\n    var top = min(p1.y, p2.y);\n    var bottom = max(p1.y, p2.y);\n    var selectedNodes = [];\n    var selectedIds = [];\n    graph.getNodes().forEach(function (node) {\n      if (node.isVisible() &&\n      // 隐藏节点不能被选中\n      isBBoxCenterInRect(node, left, right, top, bottom) && shouldUpdate(node, 'select', _this)) {\n        selectedNodes.push(node);\n        var model = node.getModel();\n        selectedIds.push(model.id);\n        graph.setItemState(node, state, true);\n      }\n    });\n    var selectedEdges = [];\n    if (this.includeEdges) {\n      // 选中边，边的source和target都在选中的节点中时才选中\n      selectedNodes.forEach(function (node) {\n        var edges = node.getOutEdges();\n        edges.forEach(function (edge) {\n          if (!edge.isVisible()) return; // 隐藏边不能够被选中\n          var model = edge.getModel();\n          var source = model.source,\n            target = model.target;\n          if (selectedIds.includes(source) && selectedIds.includes(target) && shouldUpdate(edge, 'select', _this)) {\n            selectedEdges.push(edge);\n            graph.setItemState(edge, _this.selectedState, true);\n          }\n        });\n      });\n    }\n    var selectedCombos = [];\n    if (this.includeCombos) {\n      graph.getCombos().forEach(function (combo) {\n        if (combo.isVisible() &&\n        // 隐藏节点不能被选中\n        isBBoxCenterInRect(combo, left, right, top, bottom) && shouldUpdate(combo, 'select', _this)) {\n          selectedCombos.push(combo);\n          var model = combo.getModel();\n          selectedIds.push(model.id);\n          graph.setItemState(combo, state, true);\n        }\n      });\n    }\n    this.selectedEdges = selectedEdges;\n    this.selectedNodes = selectedNodes;\n    this.selectedCombos = selectedCombos;\n    if (this.onSelect) {\n      this.onSelect(selectedNodes, selectedEdges, selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: selectedNodes,\n        edges: selectedEdges,\n        combos: selectedCombos\n      },\n      select: true\n    });\n  },\n  createBrush: function createBrush() {\n    var self = this;\n    var brush = self.graph.get('canvas').addShape('rect', {\n      attrs: self.brushStyle,\n      capture: false,\n      name: 'brush-shape'\n    });\n    this.brush = brush;\n    this.delegate = brush;\n    return brush;\n  },\n  updateBrush: function updateBrush(e) {\n    var originPoint = this.originPoint;\n    this.brush.attr({\n      width: abs(e.canvasX - originPoint.x),\n      height: abs(e.canvasY - originPoint.y),\n      x: min(e.canvasX, originPoint.x),\n      y: min(e.canvasY, originPoint.y)\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n    if (!code) {\n      return;\n    }\n    var triggerLowerCase = this.trigger.toLowerCase();\n    var codeLowerCase = code.toLowerCase();\n    // 按住 control 键时，允许用户设置 trigger 为 ctrl\n    if (codeLowerCase === triggerLowerCase || codeLowerCase === 'control' && triggerLowerCase === 'ctrl' || codeLowerCase === 'ctrl' && triggerLowerCase === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    if (this.brush) {\n      // 清除所有选中状态后，设置拖得动状态为false，并清除框选的brush\n      this.brush.remove(true);\n      this.brush = null;\n      this.dragging = false;\n    }\n    this.keydown = false;\n  }\n};","map":{"version":3,"names":["min","Math","max","abs","DEFAULT_TRIGGER","ALLOW_EVENTS","getDefaultCfg","brushStyle","fill","fillOpacity","stroke","lineWidth","onSelect","onDeselect","selectedState","trigger","includeEdges","includeCombos","selectOnCombo","selectedEdges","selectedNodes","selectedCombos","getEvents","indexOf","toLowerCase","console","warn","dragstart","drag","dragend","keyup","keydown","onMouseDown","e","item","brush","isCombo","getType","length","clearStates","createBrush","originPoint","x","canvasX","y","canvasY","attr","width","height","show","dragging","onMouseMove","updateBrush","onMouseUp","graph","remove","getSelectedNodes","_a","nodes","findAllByState","edges","combos","forEach","node","setItemState","edge","combo","emit","selectedItems","select","isBBoxCenterInRect","left","right","top","bottom","bbox","getBBox","centerX","centerY","_this","shouldUpdate","state","p1","p2","getPointByCanvas","selectedIds","getNodes","isVisible","push","model","getModel","id","getOutEdges","source","target","includes","getCombos","self","get","addShape","attrs","capture","name","delegate","onKeyDown","code","key","triggerLowerCase","codeLowerCase","onKeyUp"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-pc/es/behavior/brush-select.js"],"sourcesContent":["var min = Math.min,\n  max = Math.max,\n  abs = Math.abs;\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['drag', 'shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      brushStyle: {\n        fill: '#EEF6FF',\n        fillOpacity: 0.4,\n        stroke: '#DDEEFE',\n        lineWidth: 1\n      },\n      onSelect: function onSelect() {},\n      onDeselect: function onDeselect() {},\n      selectedState: 'selected',\n      trigger: DEFAULT_TRIGGER,\n      includeEdges: true,\n      includeCombos: false,\n      selectOnCombo: false,\n      selectedEdges: [],\n      selectedNodes: [],\n      selectedCombos: []\n    };\n  },\n  getEvents: function getEvents() {\n    // 检测输入是否合法\n    if (!(ALLOW_EVENTS.indexOf(this.trigger.toLowerCase()) > -1)) {\n      this.trigger = DEFAULT_TRIGGER;\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n    if (this.trigger === 'drag') {\n      return {\n        dragstart: 'onMouseDown',\n        drag: 'onMouseMove',\n        dragend: 'onMouseUp',\n        'canvas:click': 'clearStates'\n      };\n    }\n    return {\n      dragstart: 'onMouseDown',\n      drag: 'onMouseMove',\n      dragend: 'onMouseUp',\n      'canvas:click': 'clearStates',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onMouseDown: function onMouseDown(e) {\n    // 按在node上面拖动时候不应该是框选\n    var item = e.item;\n    var brush = this.brush;\n    var selectOnCombo = this.selectOnCombo;\n    var isCombo = (item === null || item === void 0 ? void 0 : item.getType()) === 'combo';\n    // 若在 combo 上操作，且不允许在 combo 上选择，则不继续\n    if (isCombo && !selectOnCombo) {\n      return;\n    }\n    // 若不在 combo 上操作，而是其他的 item ，则不继续\n    if (!isCombo && item) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    if (this.selectedNodes && this.selectedNodes.length !== 0) {\n      this.clearStates();\n    }\n    if (!brush) {\n      brush = this.createBrush();\n    }\n    this.originPoint = {\n      x: e.canvasX,\n      y: e.canvasY\n    };\n    brush.attr({\n      width: 0,\n      height: 0\n    });\n    brush.show();\n    this.dragging = true;\n  },\n  onMouseMove: function onMouseMove(e) {\n    if (!this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.updateBrush(e);\n  },\n  onMouseUp: function onMouseUp(e) {\n    var graph = this.graph;\n    // TODO: 触发了 canvas:click 导致 clearStates\n    if (!this.brush && !this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.brush.remove(true); // remove and destroy\n    this.brush = null;\n    this.getSelectedNodes(e);\n    this.dragging = false;\n  },\n  clearStates: function clearStates() {\n    var _a = this,\n      graph = _a.graph,\n      selectedState = _a.selectedState;\n    var nodes = graph.findAllByState('node', selectedState);\n    var edges = graph.findAllByState('edge', selectedState);\n    var combos = graph.findAllByState('combo', selectedState);\n    nodes.forEach(function (node) {\n      return graph.setItemState(node, selectedState, false);\n    });\n    edges.forEach(function (edge) {\n      return graph.setItemState(edge, selectedState, false);\n    });\n    combos.forEach(function (combo) {\n      return graph.setItemState(combo, selectedState, false);\n    });\n    this.selectedNodes = [];\n    this.selectedEdges = [];\n    this.selectedCombos = [];\n    if (this.onDeselect) {\n      this.onDeselect(this.selectedNodes, this.selectedEdges, this.selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  isBBoxCenterInRect: function isBBoxCenterInRect(item, left, right, top, bottom) {\n    var bbox = item.getBBox();\n    return bbox.centerX >= left && bbox.centerX <= right && bbox.centerY >= top && bbox.centerY <= bottom;\n  },\n  getSelectedNodes: function getSelectedNodes(e) {\n    var _this = this;\n    var _a = this,\n      graph = _a.graph,\n      originPoint = _a.originPoint,\n      shouldUpdate = _a.shouldUpdate,\n      isBBoxCenterInRect = _a.isBBoxCenterInRect;\n    var state = this.selectedState;\n    var p1 = {\n      x: e.x,\n      y: e.y\n    };\n    var p2 = graph.getPointByCanvas(originPoint.x, originPoint.y);\n    var left = min(p1.x, p2.x);\n    var right = max(p1.x, p2.x);\n    var top = min(p1.y, p2.y);\n    var bottom = max(p1.y, p2.y);\n    var selectedNodes = [];\n    var selectedIds = [];\n    graph.getNodes().forEach(function (node) {\n      if (node.isVisible() &&\n      // 隐藏节点不能被选中\n      isBBoxCenterInRect(node, left, right, top, bottom) && shouldUpdate(node, 'select', _this)) {\n        selectedNodes.push(node);\n        var model = node.getModel();\n        selectedIds.push(model.id);\n        graph.setItemState(node, state, true);\n      }\n    });\n    var selectedEdges = [];\n    if (this.includeEdges) {\n      // 选中边，边的source和target都在选中的节点中时才选中\n      selectedNodes.forEach(function (node) {\n        var edges = node.getOutEdges();\n        edges.forEach(function (edge) {\n          if (!edge.isVisible()) return; // 隐藏边不能够被选中\n          var model = edge.getModel();\n          var source = model.source,\n            target = model.target;\n          if (selectedIds.includes(source) && selectedIds.includes(target) && shouldUpdate(edge, 'select', _this)) {\n            selectedEdges.push(edge);\n            graph.setItemState(edge, _this.selectedState, true);\n          }\n        });\n      });\n    }\n    var selectedCombos = [];\n    if (this.includeCombos) {\n      graph.getCombos().forEach(function (combo) {\n        if (combo.isVisible() &&\n        // 隐藏节点不能被选中\n        isBBoxCenterInRect(combo, left, right, top, bottom) && shouldUpdate(combo, 'select', _this)) {\n          selectedCombos.push(combo);\n          var model = combo.getModel();\n          selectedIds.push(model.id);\n          graph.setItemState(combo, state, true);\n        }\n      });\n    }\n    this.selectedEdges = selectedEdges;\n    this.selectedNodes = selectedNodes;\n    this.selectedCombos = selectedCombos;\n    if (this.onSelect) {\n      this.onSelect(selectedNodes, selectedEdges, selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: selectedNodes,\n        edges: selectedEdges,\n        combos: selectedCombos\n      },\n      select: true\n    });\n  },\n  createBrush: function createBrush() {\n    var self = this;\n    var brush = self.graph.get('canvas').addShape('rect', {\n      attrs: self.brushStyle,\n      capture: false,\n      name: 'brush-shape'\n    });\n    this.brush = brush;\n    this.delegate = brush;\n    return brush;\n  },\n  updateBrush: function updateBrush(e) {\n    var originPoint = this.originPoint;\n    this.brush.attr({\n      width: abs(e.canvasX - originPoint.x),\n      height: abs(e.canvasY - originPoint.y),\n      x: min(e.canvasX, originPoint.x),\n      y: min(e.canvasY, originPoint.y)\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n    if (!code) {\n      return;\n    }\n    var triggerLowerCase = this.trigger.toLowerCase();\n    var codeLowerCase = code.toLowerCase();\n    // 按住 control 键时，允许用户设置 trigger 为 ctrl\n    if (codeLowerCase === triggerLowerCase || codeLowerCase === 'control' && triggerLowerCase === 'ctrl' || codeLowerCase === 'ctrl' && triggerLowerCase === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    if (this.brush) {\n      // 清除所有选中状态后，设置拖得动状态为false，并清除框选的brush\n      this.brush.remove(true);\n      this.brush = null;\n      this.dragging = false;\n    }\n    this.keydown = false;\n  }\n};"],"mappings":";AAAA,IAAIA,GAAG,GAAGC,IAAI,CAACD,GAAG;EAChBE,GAAG,GAAGD,IAAI,CAACC,GAAG;EACdC,GAAG,GAAGF,IAAI,CAACE,GAAG;AAChB,IAAIC,eAAe,GAAG,OAAO;AAC7B,IAAIC,YAAY,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC;AAC9D,eAAe;EACbC,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;IACtC,OAAO;MACLC,UAAU,EAAE;QACVC,IAAI,EAAE,SAAS;QACfC,WAAW,EAAE,GAAG;QAChBC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE;MACb,CAAC;MACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG,CAAC,CAAC;MAChCC,UAAU,EAAE,SAASA,UAAUA,CAAA,EAAG,CAAC,CAAC;MACpCC,aAAa,EAAE,UAAU;MACzBC,OAAO,EAAEX,eAAe;MACxBY,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,SAAS,EAAE,SAASA,SAASA,CAAA,EAAG;IAC9B;IACA,IAAI,EAAEjB,YAAY,CAACkB,OAAO,CAAC,IAAI,CAACR,OAAO,CAACS,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC5D,IAAI,CAACT,OAAO,GAAGX,eAAe;MAC9BqB,OAAO,CAACC,IAAI,CAAC,yEAAyE,CAAC;IACzF;IACA,IAAI,IAAI,CAACX,OAAO,KAAK,MAAM,EAAE;MAC3B,OAAO;QACLY,SAAS,EAAE,aAAa;QACxBC,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAE,WAAW;QACpB,cAAc,EAAE;MAClB,CAAC;IACH;IACA,OAAO;MACLF,SAAS,EAAE,aAAa;MACxBC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE,WAAW;MACpB,cAAc,EAAE,aAAa;MAC7BC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,WAAW,EAAE,SAASA,WAAWA,CAACC,CAAC,EAAE;IACnC;IACA,IAAIC,IAAI,GAAGD,CAAC,CAACC,IAAI;IACjB,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIjB,aAAa,GAAG,IAAI,CAACA,aAAa;IACtC,IAAIkB,OAAO,GAAG,CAACF,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACG,OAAO,CAAC,CAAC,MAAM,OAAO;IACtF;IACA,IAAID,OAAO,IAAI,CAAClB,aAAa,EAAE;MAC7B;IACF;IACA;IACA,IAAI,CAACkB,OAAO,IAAIF,IAAI,EAAE;MACpB;IACF;IACA,IAAI,IAAI,CAACnB,OAAO,KAAK,MAAM,IAAI,CAAC,IAAI,CAACgB,OAAO,EAAE;MAC5C;IACF;IACA,IAAI,IAAI,CAACX,aAAa,IAAI,IAAI,CAACA,aAAa,CAACkB,MAAM,KAAK,CAAC,EAAE;MACzD,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;IACA,IAAI,CAACJ,KAAK,EAAE;MACVA,KAAK,GAAG,IAAI,CAACK,WAAW,CAAC,CAAC;IAC5B;IACA,IAAI,CAACC,WAAW,GAAG;MACjBC,CAAC,EAAET,CAAC,CAACU,OAAO;MACZC,CAAC,EAAEX,CAAC,CAACY;IACP,CAAC;IACDV,KAAK,CAACW,IAAI,CAAC;MACTC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC,CAAC;IACFb,KAAK,CAACc,IAAI,CAAC,CAAC;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB,CAAC;EACDC,WAAW,EAAE,SAASA,WAAWA,CAAClB,CAAC,EAAE;IACnC,IAAI,CAAC,IAAI,CAACiB,QAAQ,EAAE;MAClB;IACF;IACA,IAAI,IAAI,CAACnC,OAAO,KAAK,MAAM,IAAI,CAAC,IAAI,CAACgB,OAAO,EAAE;MAC5C;IACF;IACA,IAAI,CAACqB,WAAW,CAACnB,CAAC,CAAC;EACrB,CAAC;EACDoB,SAAS,EAAE,SAASA,SAASA,CAACpB,CAAC,EAAE;IAC/B,IAAIqB,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB;IACA,IAAI,CAAC,IAAI,CAACnB,KAAK,IAAI,CAAC,IAAI,CAACe,QAAQ,EAAE;MACjC;IACF;IACA,IAAI,IAAI,CAACnC,OAAO,KAAK,MAAM,IAAI,CAAC,IAAI,CAACgB,OAAO,EAAE;MAC5C;IACF;IACA,IAAI,CAACI,KAAK,CAACoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,IAAI,CAACpB,KAAK,GAAG,IAAI;IACjB,IAAI,CAACqB,gBAAgB,CAACvB,CAAC,CAAC;IACxB,IAAI,CAACiB,QAAQ,GAAG,KAAK;EACvB,CAAC;EACDX,WAAW,EAAE,SAASA,WAAWA,CAAA,EAAG;IAClC,IAAIkB,EAAE,GAAG,IAAI;MACXH,KAAK,GAAGG,EAAE,CAACH,KAAK;MAChBxC,aAAa,GAAG2C,EAAE,CAAC3C,aAAa;IAClC,IAAI4C,KAAK,GAAGJ,KAAK,CAACK,cAAc,CAAC,MAAM,EAAE7C,aAAa,CAAC;IACvD,IAAI8C,KAAK,GAAGN,KAAK,CAACK,cAAc,CAAC,MAAM,EAAE7C,aAAa,CAAC;IACvD,IAAI+C,MAAM,GAAGP,KAAK,CAACK,cAAc,CAAC,OAAO,EAAE7C,aAAa,CAAC;IACzD4C,KAAK,CAACI,OAAO,CAAC,UAAUC,IAAI,EAAE;MAC5B,OAAOT,KAAK,CAACU,YAAY,CAACD,IAAI,EAAEjD,aAAa,EAAE,KAAK,CAAC;IACvD,CAAC,CAAC;IACF8C,KAAK,CAACE,OAAO,CAAC,UAAUG,IAAI,EAAE;MAC5B,OAAOX,KAAK,CAACU,YAAY,CAACC,IAAI,EAAEnD,aAAa,EAAE,KAAK,CAAC;IACvD,CAAC,CAAC;IACF+C,MAAM,CAACC,OAAO,CAAC,UAAUI,KAAK,EAAE;MAC9B,OAAOZ,KAAK,CAACU,YAAY,CAACE,KAAK,EAAEpD,aAAa,EAAE,KAAK,CAAC;IACxD,CAAC,CAAC;IACF,IAAI,CAACM,aAAa,GAAG,EAAE;IACvB,IAAI,CAACD,aAAa,GAAG,EAAE;IACvB,IAAI,CAACE,cAAc,GAAG,EAAE;IACxB,IAAI,IAAI,CAACR,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,CAAC,IAAI,CAACO,aAAa,EAAE,IAAI,CAACD,aAAa,EAAE,IAAI,CAACE,cAAc,CAAC;IAC9E;IACAiC,KAAK,CAACa,IAAI,CAAC,kBAAkB,EAAE;MAC7BC,aAAa,EAAE;QACbV,KAAK,EAAE,EAAE;QACTE,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE;MACV,CAAC;MACDQ,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EACDC,kBAAkB,EAAE,SAASA,kBAAkBA,CAACpC,IAAI,EAAEqC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE;IAC9E,IAAIC,IAAI,GAAGzC,IAAI,CAAC0C,OAAO,CAAC,CAAC;IACzB,OAAOD,IAAI,CAACE,OAAO,IAAIN,IAAI,IAAII,IAAI,CAACE,OAAO,IAAIL,KAAK,IAAIG,IAAI,CAACG,OAAO,IAAIL,GAAG,IAAIE,IAAI,CAACG,OAAO,IAAIJ,MAAM;EACvG,CAAC;EACDlB,gBAAgB,EAAE,SAASA,gBAAgBA,CAACvB,CAAC,EAAE;IAC7C,IAAI8C,KAAK,GAAG,IAAI;IAChB,IAAItB,EAAE,GAAG,IAAI;MACXH,KAAK,GAAGG,EAAE,CAACH,KAAK;MAChBb,WAAW,GAAGgB,EAAE,CAAChB,WAAW;MAC5BuC,YAAY,GAAGvB,EAAE,CAACuB,YAAY;MAC9BV,kBAAkB,GAAGb,EAAE,CAACa,kBAAkB;IAC5C,IAAIW,KAAK,GAAG,IAAI,CAACnE,aAAa;IAC9B,IAAIoE,EAAE,GAAG;MACPxC,CAAC,EAAET,CAAC,CAACS,CAAC;MACNE,CAAC,EAAEX,CAAC,CAACW;IACP,CAAC;IACD,IAAIuC,EAAE,GAAG7B,KAAK,CAAC8B,gBAAgB,CAAC3C,WAAW,CAACC,CAAC,EAAED,WAAW,CAACG,CAAC,CAAC;IAC7D,IAAI2B,IAAI,GAAGvE,GAAG,CAACkF,EAAE,CAACxC,CAAC,EAAEyC,EAAE,CAACzC,CAAC,CAAC;IAC1B,IAAI8B,KAAK,GAAGtE,GAAG,CAACgF,EAAE,CAACxC,CAAC,EAAEyC,EAAE,CAACzC,CAAC,CAAC;IAC3B,IAAI+B,GAAG,GAAGzE,GAAG,CAACkF,EAAE,CAACtC,CAAC,EAAEuC,EAAE,CAACvC,CAAC,CAAC;IACzB,IAAI8B,MAAM,GAAGxE,GAAG,CAACgF,EAAE,CAACtC,CAAC,EAAEuC,EAAE,CAACvC,CAAC,CAAC;IAC5B,IAAIxB,aAAa,GAAG,EAAE;IACtB,IAAIiE,WAAW,GAAG,EAAE;IACpB/B,KAAK,CAACgC,QAAQ,CAAC,CAAC,CAACxB,OAAO,CAAC,UAAUC,IAAI,EAAE;MACvC,IAAIA,IAAI,CAACwB,SAAS,CAAC,CAAC;MACpB;MACAjB,kBAAkB,CAACP,IAAI,EAAEQ,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,CAAC,IAAIM,YAAY,CAACjB,IAAI,EAAE,QAAQ,EAAEgB,KAAK,CAAC,EAAE;QACzF3D,aAAa,CAACoE,IAAI,CAACzB,IAAI,CAAC;QACxB,IAAI0B,KAAK,GAAG1B,IAAI,CAAC2B,QAAQ,CAAC,CAAC;QAC3BL,WAAW,CAACG,IAAI,CAACC,KAAK,CAACE,EAAE,CAAC;QAC1BrC,KAAK,CAACU,YAAY,CAACD,IAAI,EAAEkB,KAAK,EAAE,IAAI,CAAC;MACvC;IACF,CAAC,CAAC;IACF,IAAI9D,aAAa,GAAG,EAAE;IACtB,IAAI,IAAI,CAACH,YAAY,EAAE;MACrB;MACAI,aAAa,CAAC0C,OAAO,CAAC,UAAUC,IAAI,EAAE;QACpC,IAAIH,KAAK,GAAGG,IAAI,CAAC6B,WAAW,CAAC,CAAC;QAC9BhC,KAAK,CAACE,OAAO,CAAC,UAAUG,IAAI,EAAE;UAC5B,IAAI,CAACA,IAAI,CAACsB,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC;UAC/B,IAAIE,KAAK,GAAGxB,IAAI,CAACyB,QAAQ,CAAC,CAAC;UAC3B,IAAIG,MAAM,GAAGJ,KAAK,CAACI,MAAM;YACvBC,MAAM,GAAGL,KAAK,CAACK,MAAM;UACvB,IAAIT,WAAW,CAACU,QAAQ,CAACF,MAAM,CAAC,IAAIR,WAAW,CAACU,QAAQ,CAACD,MAAM,CAAC,IAAId,YAAY,CAACf,IAAI,EAAE,QAAQ,EAAEc,KAAK,CAAC,EAAE;YACvG5D,aAAa,CAACqE,IAAI,CAACvB,IAAI,CAAC;YACxBX,KAAK,CAACU,YAAY,CAACC,IAAI,EAAEc,KAAK,CAACjE,aAAa,EAAE,IAAI,CAAC;UACrD;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,IAAIO,cAAc,GAAG,EAAE;IACvB,IAAI,IAAI,CAACJ,aAAa,EAAE;MACtBqC,KAAK,CAAC0C,SAAS,CAAC,CAAC,CAAClC,OAAO,CAAC,UAAUI,KAAK,EAAE;QACzC,IAAIA,KAAK,CAACqB,SAAS,CAAC,CAAC;QACrB;QACAjB,kBAAkB,CAACJ,KAAK,EAAEK,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,CAAC,IAAIM,YAAY,CAACd,KAAK,EAAE,QAAQ,EAAEa,KAAK,CAAC,EAAE;UAC3F1D,cAAc,CAACmE,IAAI,CAACtB,KAAK,CAAC;UAC1B,IAAIuB,KAAK,GAAGvB,KAAK,CAACwB,QAAQ,CAAC,CAAC;UAC5BL,WAAW,CAACG,IAAI,CAACC,KAAK,CAACE,EAAE,CAAC;UAC1BrC,KAAK,CAACU,YAAY,CAACE,KAAK,EAAEe,KAAK,EAAE,IAAI,CAAC;QACxC;MACF,CAAC,CAAC;IACJ;IACA,IAAI,CAAC9D,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,IAAI,CAACT,QAAQ,EAAE;MACjB,IAAI,CAACA,QAAQ,CAACQ,aAAa,EAAED,aAAa,EAAEE,cAAc,CAAC;IAC7D;IACAiC,KAAK,CAACa,IAAI,CAAC,kBAAkB,EAAE;MAC7BC,aAAa,EAAE;QACbV,KAAK,EAAEtC,aAAa;QACpBwC,KAAK,EAAEzC,aAAa;QACpB0C,MAAM,EAAExC;MACV,CAAC;MACDgD,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EACD7B,WAAW,EAAE,SAASA,WAAWA,CAAA,EAAG;IAClC,IAAIyD,IAAI,GAAG,IAAI;IACf,IAAI9D,KAAK,GAAG8D,IAAI,CAAC3C,KAAK,CAAC4C,GAAG,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,MAAM,EAAE;MACpDC,KAAK,EAAEH,IAAI,CAAC1F,UAAU;MACtB8F,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAI,CAACnE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACoE,QAAQ,GAAGpE,KAAK;IACrB,OAAOA,KAAK;EACd,CAAC;EACDiB,WAAW,EAAE,SAASA,WAAWA,CAACnB,CAAC,EAAE;IACnC,IAAIQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAI,CAACN,KAAK,CAACW,IAAI,CAAC;MACdC,KAAK,EAAE5C,GAAG,CAAC8B,CAAC,CAACU,OAAO,GAAGF,WAAW,CAACC,CAAC,CAAC;MACrCM,MAAM,EAAE7C,GAAG,CAAC8B,CAAC,CAACY,OAAO,GAAGJ,WAAW,CAACG,CAAC,CAAC;MACtCF,CAAC,EAAE1C,GAAG,CAACiC,CAAC,CAACU,OAAO,EAAEF,WAAW,CAACC,CAAC,CAAC;MAChCE,CAAC,EAAE5C,GAAG,CAACiC,CAAC,CAACY,OAAO,EAAEJ,WAAW,CAACG,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EACD4D,SAAS,EAAE,SAASA,SAASA,CAACvE,CAAC,EAAE;IAC/B,IAAIwE,IAAI,GAAGxE,CAAC,CAACyE,GAAG;IAChB,IAAI,CAACD,IAAI,EAAE;MACT;IACF;IACA,IAAIE,gBAAgB,GAAG,IAAI,CAAC5F,OAAO,CAACS,WAAW,CAAC,CAAC;IACjD,IAAIoF,aAAa,GAAGH,IAAI,CAACjF,WAAW,CAAC,CAAC;IACtC;IACA,IAAIoF,aAAa,KAAKD,gBAAgB,IAAIC,aAAa,KAAK,SAAS,IAAID,gBAAgB,KAAK,MAAM,IAAIC,aAAa,KAAK,MAAM,IAAID,gBAAgB,KAAK,SAAS,EAAE;MAClK,IAAI,CAAC5E,OAAO,GAAG,IAAI;IACrB,CAAC,MAAM;MACL,IAAI,CAACA,OAAO,GAAG,KAAK;IACtB;EACF,CAAC;EACD8E,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;IAC1B,IAAI,IAAI,CAAC1E,KAAK,EAAE;MACd;MACA,IAAI,CAACA,KAAK,CAACoB,MAAM,CAAC,IAAI,CAAC;MACvB,IAAI,CAACpB,KAAK,GAAG,IAAI;MACjB,IAAI,CAACe,QAAQ,GAAG,KAAK;IACvB;IACA,IAAI,CAACnB,OAAO,GAAG,KAAK;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}