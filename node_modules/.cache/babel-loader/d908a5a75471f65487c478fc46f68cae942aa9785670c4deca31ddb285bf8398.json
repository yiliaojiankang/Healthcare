{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { each, isArray } from '@antv/util';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nfunction getMaskBBox(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  return getMaskBBoxByShape(maskShape, tolerance);\n}\n/**\n * 如果 mask BBox 过小则不返回\n */\nfunction isValidMaskBBox(maskShape, tolerance) {\n  var maskBBox = maskShape.getCanvasBBox();\n  var width = maskBBox.width,\n    height = maskBBox.height;\n  return width > 0 && height > 0 && (width >= tolerance || height >= tolerance);\n}\n/**\n * 通过 maskShape 获取 mask 的 canvasBBox\n * @param maskShape\n * @param tolerance\n * @returns\n */\nfunction getMaskBBoxByShape(maskShape, tolerance) {\n  var maskBBox = maskShape.getCanvasBBox();\n  return isValidMaskBBox(maskShape, tolerance) ? maskBBox : null;\n}\n/**\n * 获取 multiple 模式下 mask 的 canvasBBox 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskBBoxList(context, tolerance) {\n  var maskShapes = context.event.maskShapes;\n  return maskShapes.map(function (maskShape) {\n    return getMaskBBoxByShape(maskShape, tolerance);\n  }).filter(function (bBox) {\n    return !!bBox;\n  });\n}\nfunction getMaskPath(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  return getMaskPathByMaskShape(maskShape, tolerance);\n}\n/**\n * 通过 maskShape 获取 mask path\n * @param maskShape\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMaskPathByMaskShape(maskShape, tolerance) {\n  return isValidMaskBBox(maskShape, tolerance) ? maskShape.attr('path') : null;\n}\n/**\n * 获取 multiple 模式下 mask path 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskPathList(context, tolerance) {\n  var maskShapes = context.event.maskShapes;\n  return maskShapes.map(function (maskShape) {\n    return getMaskPathByMaskShape(maskShape, tolerance);\n  });\n}\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context) {\n  var event = context.event;\n  var element;\n  var target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context) {\n  var event = context.event;\n  var target = event.target;\n  var delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\nexport function isElementChange(context) {\n  var event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context) {\n  var event = context.event;\n  var target = event.target;\n  return target && (target === null || target === void 0 ? void 0 : target.get('name')) === 'mask' || isMultipleMask(context);\n}\n/**\n * 是否由 multiple mask 触发\n * @param context\n * @returns\n */\nexport function isMultipleMask(context) {\n  var _a;\n  return ((_a = context.event.target) === null || _a === void 0 ? void 0 : _a.get('name')) === 'multi-mask';\n}\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context, tolerance) {\n  var target = context.event.target;\n  // multiple 模式下\n  if (isMultipleMask(context)) {\n    return getMultiMaskedElements(context, tolerance);\n  }\n  // 正常模式下\n  if (target.get('type') === 'path') {\n    var maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  var maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n/**\n * 获取 multiple 模式下被 mask 遮挡的 elements\n * @param context 上下文\n * @returns\n */\nfunction getMultiMaskedElements(context, tolerance) {\n  var target = context.event.target;\n  if (target.get('type') === 'path') {\n    var maskPathList = getMultiMaskPathList(context, tolerance);\n    if (maskPathList.length > 0) {\n      return maskPathList.flatMap(function (maskPath) {\n        return getElementsByPath(context.view, maskPath);\n      });\n    }\n    return null;\n  }\n  var maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n  if (maskBBoxList.length > 0) {\n    return maskBBoxList.flatMap(function (maskBBox) {\n      return getIntersectElements(context.view, maskBBox);\n    });\n  }\n  return null;\n}\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context, sibling, tolerance) {\n  // multiple 模式下\n  if (isMultipleMask(context)) {\n    return getSiblingMultiMaskedElements(context, sibling, tolerance);\n  }\n  // 正常模式下\n  var maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getSiblingMaskElementsByBBox(maskBBox, context, sibling);\n}\n/**\n * 通过 mashBBox 获取 sibling 模式下被 mask 遮挡的 elements\n * @param maskBBox\n * @param context 上下文\n * @param sibling sibling view\n * @returns\n */\nfunction getSiblingMaskElementsByBBox(maskBBox, context, sibling) {\n  var view = context.view;\n  var start = getSiblingPoint(view, sibling, {\n    x: maskBBox.x,\n    y: maskBBox.y\n  });\n  var end = getSiblingPoint(view, sibling, {\n    x: maskBBox.maxX,\n    y: maskBBox.maxY\n  });\n  var box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y\n  };\n  return getIntersectElements(sibling, box);\n}\n/**\n * 获取 sibling 模式下被 multiple mask 遮挡的 elements\n * @param context 上下文\n * @param sibling sibling view\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getSiblingMultiMaskedElements(context, sibling, tolerance) {\n  var maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n  if (maskBBoxList.length > 0) {\n    return maskBBoxList.flatMap(function (maskBBox) {\n      return getSiblingMaskElementsByBBox(maskBBox, context, sibling);\n    });\n  }\n  return null;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, function (subView) {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view, field, value) {\n  var elements = getElements(view);\n  return elements.filter(function (el) {\n    return getElementValue(el, field) === value;\n  });\n}\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view, stateName) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.getElementsBy(function (el) {\n      return el.hasState(stateName);\n    });\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element, field) {\n  var model = element.getModel();\n  var record = model.data;\n  var value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view, box) {\n  var elements = getElements(view);\n  var rst = [];\n  each(elements, function (el) {\n    var shape = el.shape;\n    var shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path) {\n  var points = [];\n  each(path, function (seg) {\n    var command = seg[0];\n    if (command !== 'A') {\n      for (var i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      var length_1 = seg.length;\n      points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view, path) {\n  var elements = getElements(view);\n  var points = pathToPoints(path);\n  var rst = elements.filter(function (el) {\n    var shape = el.shape;\n    var shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      var shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map(function (co) {\n    return co.component;\n  });\n}\n/** @ignore */\nexport function distance(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/** @ignore */\nexport function getSpline(points, z) {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  var first = points[0];\n  var arr = [];\n  each(points, function (point) {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  var path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box, point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view) {\n  var parent = view.parent;\n  var siblings = null;\n  if (parent) {\n    siblings = parent.views.filter(function (sub) {\n      return sub !== view;\n    });\n  }\n  return siblings;\n}\nfunction point2Normalize(view, point) {\n  var coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view, sibling, point) {\n  var normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records, record, xFiled, yField) {\n  var isIn = false;\n  each(records, function (r) {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view, field) {\n  var scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, function (subView) {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n\n  return scale;\n}","map":{"version":3,"names":["each","isArray","catmullRom2bezier","getLinePath","toPoints","isPolygonsIntersect","getMaskBBox","context","tolerance","event","maskShape","target","getMaskBBoxByShape","isValidMaskBBox","maskBBox","getCanvasBBox","width","height","getMultiMaskBBoxList","maskShapes","map","filter","bBox","getMaskPath","getMaskPathByMaskShape","attr","getMultiMaskPathList","getCurrentElement","element","get","getDelegationObject","delegateObject","isElementChange","gEvent","fromShape","toShape","isList","component","isSlider","isMask","isMultipleMask","_a","getMaskedElements","getMultiMaskedElements","maskPath","getElementsByPath","view","getIntersectElements","maskPathList","length","flatMap","maskBBoxList","getSiblingMaskElements","sibling","getSiblingMultiMaskedElements","getSiblingMaskElementsByBBox","start","getSiblingPoint","x","y","end","maxX","maxY","box","minX","minY","getElements","geometries","rst","geom","elements","concat","views","subView","getElementsByField","field","value","el","getElementValue","getElementsByState","stateName","getElementsBy","hasState","model","getModel","record","data","intersectRect","box1","box2","shape","shapeBBox","push","pathToPoints","path","points","seg","command","i","length_1","shapePoints","getComponents","co","distance","p1","p2","dx","dy","Math","sqrt","getSpline","z","first","arr","point","unshift","isInBox","getSilbings","parent","siblings","sub","point2Normalize","coord","getCoordinate","invert","normalPoint","convert","isInRecords","records","xFiled","yField","isIn","r","getScaleByField","scale"],"sources":["../../../src/interaction/action/util.ts"],"sourcesContent":["import { each, isArray } from '@antv/util';\nimport { View } from '../../chart';\nimport { BBox, PathCommand, Point } from '../../dependents';\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element/';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nimport { ComponentOption, IInteractionContext, LooseObject } from '../../interface';\n\nfunction getMaskBBox(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  return getMaskBBoxByShape(maskShape, tolerance);\n}\n\n/**\n * 如果 mask BBox 过小则不返回\n */\nfunction isValidMaskBBox(maskShape, tolerance: number) {\n  const maskBBox = maskShape.getCanvasBBox();\n  const { width, height } = maskBBox;\n  return width > 0 && height > 0 && (width >= tolerance || height >= tolerance);\n}\n\n/**\n * 通过 maskShape 获取 mask 的 canvasBBox\n * @param maskShape\n * @param tolerance\n * @returns\n */\nfunction getMaskBBoxByShape(maskShape, tolerance: number) {\n  const maskBBox = maskShape.getCanvasBBox();\n  return isValidMaskBBox(maskShape, tolerance) ? maskBBox : null;\n}\n\n/**\n * 获取 multiple 模式下 mask 的 canvasBBox 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskBBoxList(context: IInteractionContext, tolerance: number) {\n  const { maskShapes } = context.event;\n  return maskShapes.map((maskShape) => getMaskBBoxByShape(maskShape, tolerance)).filter((bBox) => !!bBox);\n}\n\nfunction getMaskPath(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  return getMaskPathByMaskShape(maskShape, tolerance);\n}\n\n/**\n * 通过 maskShape 获取 mask path\n * @param maskShape\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMaskPathByMaskShape(maskShape, tolerance: number) {\n  return isValidMaskBBox(maskShape, tolerance) ? maskShape.attr('path') : null;\n}\n\n/**\n * 获取 multiple 模式下 mask path 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskPathList(context: IInteractionContext, tolerance: number) {\n  const { maskShapes } = context.event;\n  return maskShapes.map((maskShape) => getMaskPathByMaskShape(maskShape, tolerance));\n}\n\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context: IInteractionContext): Element {\n  const event = context.event;\n  let element;\n  const target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context: IInteractionContext): LooseObject {\n  const event = context.event;\n  const target = event.target;\n  let delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\n\nexport function isElementChange(context: IInteractionContext) {\n  const event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context: IInteractionContext): boolean {\n  const event = context.event;\n  const target = event.target;\n  return (target && target?.get('name') === 'mask') || isMultipleMask(context);\n}\n\n/**\n * 是否由 multiple mask 触发\n * @param context\n * @returns\n */\nexport function isMultipleMask(context: IInteractionContext): boolean {\n  return context.event.target?.get('name') === 'multi-mask';\n}\n\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context: IInteractionContext, tolerance: number): Element[] {\n  const target = context.event.target;\n\n  // multiple 模式下\n  if (isMultipleMask(context)) {\n    return getMultiMaskedElements(context, tolerance);\n  }\n\n  // 正常模式下\n  if (target.get('type') === 'path') {\n    const maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n\n/**\n * 获取 multiple 模式下被 mask 遮挡的 elements\n * @param context 上下文\n * @returns\n */\nfunction getMultiMaskedElements(context: IInteractionContext, tolerance: number): Element[] {\n  const { target } = context.event;\n  if (target.get('type') === 'path') {\n    const maskPathList = getMultiMaskPathList(context, tolerance);\n    if (maskPathList.length > 0) {\n      return maskPathList.flatMap((maskPath) => getElementsByPath(context.view, maskPath));\n    }\n    return null;\n  }\n  const maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n  if (maskBBoxList.length > 0) {\n    return maskBBoxList.flatMap((maskBBox) => getIntersectElements(context.view, maskBBox));\n  }\n  return null;\n}\n\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context: IInteractionContext, sibling: View, tolerance: number) {\n  // multiple 模式下\n  if (isMultipleMask(context)) {\n    return getSiblingMultiMaskedElements(context, sibling, tolerance);\n  }\n\n  // 正常模式下\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getSiblingMaskElementsByBBox(maskBBox, context, sibling);\n}\n\n/**\n * 通过 mashBBox 获取 sibling 模式下被 mask 遮挡的 elements\n * @param maskBBox\n * @param context 上下文\n * @param sibling sibling view\n * @returns\n */\nfunction getSiblingMaskElementsByBBox(maskBBox, context: IInteractionContext, sibling: View) {\n  const view = context.view;\n  const start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\n  const end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\n  const box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y,\n  };\n  return getIntersectElements(sibling, box);\n}\n\n/**\n * 获取 sibling 模式下被 multiple mask 遮挡的 elements\n * @param context 上下文\n * @param sibling sibling view\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getSiblingMultiMaskedElements(context: IInteractionContext, sibling: View, tolerance: number): Element[] {\n  const maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n  if (maskBBoxList.length > 0) {\n    return maskBBoxList.flatMap((maskBBox) => getSiblingMaskElementsByBBox(maskBBox, context, sibling));\n  }\n  return null;\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view: View): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, (subView) => {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view: View, field: string, value: any) {\n  const elements = getElements(view);\n  return elements.filter((el) => {\n    return getElementValue(el, field) === value;\n  });\n}\n\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view: View, stateName: string): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.getElementsBy((el) => el.hasState(stateName));\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element: Element, field) {\n  const model = element.getModel();\n  const record = model.data;\n  let value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view: View, box) {\n  const elements = getElements(view);\n  const rst = [];\n  each(elements, (el) => {\n    const shape = el.shape;\n    const shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path: any[]) {\n  const points = [];\n  each(path, (seg) => {\n    const command = seg[0];\n    if (command !== 'A') {\n      for (let i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      const length = seg.length;\n      points.push([seg[length - 2], seg[length - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view: View, path: any[]) {\n  const elements = getElements(view);\n  const points = pathToPoints(path);\n  const rst = elements.filter((el: Element) => {\n    const shape = el.shape;\n    let shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      const shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map((co: ComponentOption) => co.component);\n}\n\n/** @ignore */\nexport function distance(p1: Point, p2: Point) {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/** @ignore */\nexport function getSpline(points: Point[], z: boolean): PathCommand[] {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  const first = points[0];\n  const arr = [];\n  each(points, (point) => {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  const path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box: BBox, point: Point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view: View): View[] {\n  const parent = view.parent;\n  let siblings = null;\n  if (parent) {\n    siblings = parent.views.filter((sub) => sub !== view);\n  }\n  return siblings;\n}\n\nfunction point2Normalize(view: View, point: Point): Point {\n  const coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view: View, sibling: View, point: Point): Point {\n  const normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records: object[], record: object, xFiled: string, yField: string) {\n  let isIn = false;\n  each(records, (r) => {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view: View, field: string) {\n  let scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, (subView) => {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n  return scale;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}