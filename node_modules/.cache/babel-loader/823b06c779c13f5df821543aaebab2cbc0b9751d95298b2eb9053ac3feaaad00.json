{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __rest } from \"tslib\";\nimport { each, get, isArray, isEmpty, isFunction, isNil, isNumber, isString, toString } from '@antv/util';\nimport { animation, annotation, legend, state, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { pattern } from '../../adaptor/pattern';\nimport { getLocale } from '../../core/locale';\nimport { deepAssign, flow, processIllegalData, renderStatistic, template, transformLabel } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { PIE_STATISTIC } from './interactions';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\n/**\n * 字段\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    angleField = options.angleField,\n    colorField = options.colorField,\n    color = options.color,\n    pieStyle = options.pieStyle,\n    shape = options.shape;\n  // 处理不合法的数据\n  var processData = processIllegalData(data, angleField);\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    var percentageField_1 = '$$percentage$$';\n    processData = processData.map(function (d) {\n      var _a;\n      return __assign(__assign({}, d), (_a = {}, _a[percentageField_1] = 1 / processData.length, _a));\n    });\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField_1,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          shape: shape,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true\n        }\n      }\n    });\n    interval(p);\n  } else {\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          shape: shape,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true\n        }\n      }\n    });\n    interval(p);\n  }\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var meta = options.meta,\n    colorField = options.colorField;\n  // meta 直接是 scale 的信息\n  var scales = deepAssign({}, meta);\n  chart.scale(scales, (_a = {}, _a[colorField] = {\n    type: 'cat'\n  }, _a));\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    innerRadius = options.innerRadius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  });\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    colorField = options.colorField,\n    angleField = options.angleField;\n  var geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    var labelCfg = transformLabel(cfg);\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      var content_1 = labelCfg.content;\n      labelCfg.content = function (data, dataum, index) {\n        var name = data[colorField];\n        var value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        var angleScale = chart.getScaleByField(angleField);\n        var percent = angleScale === null || angleScale === void 0 ? void 0 : angleScale.scale(value);\n        return isFunction(content_1) ?\n        // append percent (number) to data, users can get origin data from `dataum._origin`\n        content_1(__assign(__assign({}, data), {\n          percent: percent\n        }), dataum, index) : isString(content_1) ? template(content_1, {\n          value: value,\n          name: name,\n          // percentage (string), default keep 2\n          percentage: isNumber(percent) && !isNil(value) ? \"\".concat((percent * 100).toFixed(2), \"%\") : null\n        }) : content_1;\n      };\n    }\n    var LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider'\n    };\n    var labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    var labelLayoutCfg = labelCfg.layout ? !isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout : [];\n    labelCfg.layout = (labelLayoutType ? [{\n      type: labelLayoutType\n    }] : []).concat(labelLayoutCfg);\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback: callback,\n      cfg: __assign(__assign({}, labelCfg), {\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie'\n      })\n    });\n  }\n  return params;\n}\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\nexport function transformStatisticOptions(options) {\n  var innerRadius = options.innerRadius,\n    statistic = options.statistic,\n    angleField = options.angleField,\n    colorField = options.colorField,\n    meta = options.meta,\n    locale = options.locale;\n  var i18n = getLocale(locale);\n  if (innerRadius && statistic) {\n    var _a = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic),\n      titleOpt_1 = _a.title,\n      contentOpt_1 = _a.content;\n    if (titleOpt_1 !== false) {\n      titleOpt_1 = deepAssign({}, {\n        formatter: function (datum) {\n          // 交互中, datum existed.\n          var text = datum ? datum[colorField] : !isNil(titleOpt_1.content) ? titleOpt_1.content : i18n.get(['statistic', 'total']);\n          var metaFormatter = get(meta, [colorField, 'formatter']) || function (v) {\n            return v;\n          };\n          return metaFormatter(text);\n        }\n      }, titleOpt_1);\n    }\n    if (contentOpt_1 !== false) {\n      contentOpt_1 = deepAssign({}, {\n        formatter: function (datum, data) {\n          var dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n          var metaFormatter = get(meta, [angleField, 'formatter']) || function (v) {\n            return v;\n          };\n          // 交互中\n          if (datum) {\n            return metaFormatter(dataValue);\n          }\n          return !isNil(contentOpt_1.content) ? contentOpt_1.content : metaFormatter(dataValue);\n        }\n      }, contentOpt_1);\n    }\n    return deepAssign({}, {\n      statistic: {\n        title: titleOpt_1,\n        content: contentOpt_1\n      }\n    }, options);\n  }\n  return options;\n}\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = transformStatisticOptions(options),\n    innerRadius = _a.innerRadius,\n    statistic = _a.statistic;\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    renderStatistic(chart, {\n      statistic: statistic,\n      plotType: 'pie'\n    });\n  }\n  return params;\n}\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip,\n    colorField = options.colorField,\n    angleField = options.angleField,\n    data = options.data;\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, {\n      shared: false\n    }));\n    // 主要解决 all zero， 对于非 all zero 不再适用\n    if (isAllZero(data, angleField)) {\n      var fields = get(tooltip, 'fields');\n      var formatter = get(tooltip, 'formatter');\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n        formatter = formatter || function (datum) {\n          return {\n            name: datum[colorField],\n            value: toString(datum[angleField])\n          };\n        };\n      }\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n  return params;\n}\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\nexport function interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = transformStatisticOptions(options),\n    interactions = _a.interactions,\n    statistic = _a.statistic,\n    annotations = _a.annotations;\n  each(interactions, function (i) {\n    var _a, _b;\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      var startStages_1 = [];\n      if (!((_a = i.cfg) === null || _a === void 0 ? void 0 : _a.start)) {\n        startStages_1 = [{\n          trigger: 'element:mouseenter',\n          action: \"\".concat(PIE_STATISTIC, \":change\"),\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }];\n      }\n      each((_b = i.cfg) === null || _b === void 0 ? void 0 : _b.start, function (stage) {\n        startStages_1.push(__assign(__assign({}, stage), {\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }));\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, {\n        start: startStages_1\n      }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n  return params;\n}\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(pattern('pieStyle'), geometry, meta, theme, coordinate, legend, tooltip, label, state, /** 指标卡中心文本 放在下层 */\n  pieAnnotation, interaction, animation)(params);\n}","map":{"version":3,"names":["each","get","isArray","isEmpty","isFunction","isNil","isNumber","isString","toString","animation","annotation","legend","state","theme","interval","getMappingFunction","pattern","getLocale","deepAssign","flow","processIllegalData","renderStatistic","template","transformLabel","DEFAULT_OPTIONS","PIE_STATISTIC","adaptOffset","getTotalValue","isAllZero","geometry","params","chart","options","data","angleField","colorField","color","pieStyle","shape","processData","percentageField_1","map","d","__assign","_a","length","p","xField","yField","seriesField","isStack","style","args","zIndexReversed","sortZIndex","meta","scales","scale","type","coordinate","radius","innerRadius","startAngle","endAngle","cfg","label","geometries","callback","__rest","labelCfg","content","content_1","dataum","index","name","value","angleScale","getScaleByField","percent","percentage","concat","toFixed","LABEL_LAYOUT_TYPE_MAP","inner","outer","spider","labelLayoutType","labelLayoutCfg","layout","fields","offset","transformStatisticOptions","statistic","locale","i18n","titleOpt_1","title","contentOpt_1","formatter","datum","text","metaFormatter","v","dataValue","pieAnnotation","getController","clear","plotType","tooltip","shared","join","interaction","interactions","annotations","i","enable","removeInteraction","startStages_1","start","trigger","action","arg","_b","stage","push","adaptor"],"sources":["../../../src/plots/pie/adaptor.ts"],"sourcesContent":["import { each, get, isArray, isEmpty, isFunction, isNil, isNumber, isString, toString } from '@antv/util';\nimport { animation, annotation, legend, state, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { pattern } from '../../adaptor/pattern';\nimport { Params } from '../../core/adaptor';\nimport { getLocale } from '../../core/locale';\nimport { Data, Datum } from '../../types';\nimport { Interaction } from '../../types/interaction';\nimport { deepAssign, flow, processIllegalData, renderStatistic, template, transformLabel } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { PIE_STATISTIC } from './interactions';\nimport { PieOptions } from './types';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { data, angleField, colorField, color, pieStyle, shape } = options;\n\n  // 处理不合法的数据\n  let processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    const percentageField = '$$percentage$$';\n    processData = processData.map((d) => ({ ...d, [percentageField]: 1 / processData.length }));\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          shape,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true,\n        },\n      },\n    });\n\n    interval(p);\n  } else {\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          shape,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true,\n        },\n      },\n    });\n\n    interval(p);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { meta, colorField } = options;\n\n  // meta 直接是 scale 的信息\n  const scales = deepAssign({}, meta);\n  chart.scale(scales, {\n    [colorField]: { type: 'cat' },\n  });\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { label, colorField, angleField } = options;\n\n  const geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    const labelCfg = transformLabel(cfg);\n\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      const { content } = labelCfg;\n      labelCfg.content = (data: object, dataum: any, index: number) => {\n        const name = data[colorField];\n        const value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        const angleScale = chart.getScaleByField(angleField);\n        const percent = angleScale?.scale(value);\n        return isFunction(content)\n          ? // append percent (number) to data, users can get origin data from `dataum._origin`\n            content({ ...data, percent }, dataum, index)\n          : isString(content)\n          ? template(content as string, {\n              value,\n              name,\n              // percentage (string), default keep 2\n              percentage: isNumber(percent) && !isNil(value) ? `${(percent * 100).toFixed(2)}%` : null,\n            })\n          : content;\n      };\n    }\n\n    const LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider',\n    };\n    const labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    const labelLayoutCfg = labelCfg.layout ? (!isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout) : [];\n    labelCfg.layout = (labelLayoutType ? [{ type: labelLayoutType }] : []).concat(labelLayoutCfg);\n\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback,\n      cfg: {\n        ...labelCfg,\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie',\n      },\n    });\n  }\n  return params;\n}\n\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\nexport function transformStatisticOptions(options: PieOptions): PieOptions {\n  const { innerRadius, statistic, angleField, colorField, meta, locale } = options;\n\n  const i18n = getLocale(locale);\n\n  if (innerRadius && statistic) {\n    let { title: titleOpt, content: contentOpt } = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic);\n    if (titleOpt !== false) {\n      titleOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum) => {\n            // 交互中, datum existed.\n            const text = datum\n              ? datum[colorField]\n              : !isNil(titleOpt.content)\n              ? titleOpt.content\n              : i18n.get(['statistic', 'total']);\n            const metaFormatter = get(meta, [colorField, 'formatter']) || ((v) => v);\n            return metaFormatter(text);\n          },\n        },\n        titleOpt\n      );\n    }\n    if (contentOpt !== false) {\n      contentOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum, data: Data) => {\n            const dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n            const metaFormatter = get(meta, [angleField, 'formatter']) || ((v) => v);\n            // 交互中\n            if (datum) {\n              return metaFormatter(dataValue);\n            }\n            return !isNil(contentOpt.content) ? contentOpt.content : metaFormatter(dataValue);\n          },\n        },\n        contentOpt\n      );\n    }\n\n    return deepAssign({}, { statistic: { title: titleOpt, content: contentOpt } }, options);\n  }\n  return options;\n}\n\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { innerRadius, statistic } = transformStatisticOptions(options);\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    renderStatistic(chart, { statistic, plotType: 'pie' });\n  }\n\n  return params;\n}\n\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { tooltip, colorField, angleField, data } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, { shared: false }));\n\n    // 主要解决 all zero， 对于非 all zero 不再适用\n    if (isAllZero(data, angleField)) {\n      let fields = get(tooltip, 'fields');\n      let formatter = get(tooltip, 'formatter');\n\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n        formatter = formatter || ((datum) => ({ name: datum[colorField], value: toString(datum[angleField]) }));\n      }\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\nexport function interaction(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { interactions, statistic, annotations } = transformStatisticOptions(options);\n\n  each(interactions, (i: Interaction) => {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      let startStages = [];\n      if (!i.cfg?.start) {\n        startStages = [\n          {\n            trigger: 'element:mouseenter',\n            action: `${PIE_STATISTIC}:change`,\n            arg: { statistic, annotations },\n          },\n        ];\n      }\n      each(i.cfg?.start, (stage) => {\n        startStages.push({ ...stage, arg: { statistic, annotations } });\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, { start: startStages }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<PieOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<PieOptions>>(\n    pattern('pieStyle'),\n    geometry,\n    meta,\n    theme,\n    coordinate,\n    legend,\n    tooltip,\n    label,\n    state,\n    /** 指标卡中心文本 放在下层 */\n    pieAnnotation,\n    interaction,\n    animation\n  )(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}