{"ast":null,"code":"import { each, isArray, isNil, isNumber } from '@antv/util';\nexport function formatPadding(padding) {\n  var top = 0;\n  var left = 0;\n  var right = 0;\n  var bottom = 0;\n  if (isNumber(padding)) {\n    top = left = right = bottom = padding;\n  } else if (isArray(padding)) {\n    top = padding[0];\n    right = !isNil(padding[1]) ? padding[1] : padding[0];\n    bottom = !isNil(padding[2]) ? padding[2] : padding[0];\n    left = !isNil(padding[3]) ? padding[3] : right;\n  }\n  return [top, right, bottom, left];\n}\nexport function clearDom(container) {\n  var children = container.childNodes;\n  var length = children.length;\n  for (var i = length - 1; i >= 0; i--) {\n    container.removeChild(children[i]);\n  }\n}\nexport function hasClass(elements, cName) {\n  return !!elements.className.match(new RegExp(\"(\\\\s|^)\" + cName + \"(\\\\s|$)\"));\n}\nexport function regionToBBox(region) {\n  var start = region.start,\n    end = region.end;\n  var minX = Math.min(start.x, end.x);\n  var minY = Math.min(start.y, end.y);\n  var maxX = Math.max(start.x, end.x);\n  var maxY = Math.max(start.y, end.y);\n  return {\n    x: minX,\n    y: minY,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nexport function pointsToBBox(points) {\n  var xs = points.map(function (point) {\n    return point.x;\n  });\n  var ys = points.map(function (point) {\n    return point.y;\n  });\n  var minX = Math.min.apply(Math, xs);\n  var minY = Math.min.apply(Math, ys);\n  var maxX = Math.max.apply(Math, xs);\n  var maxY = Math.max.apply(Math, ys);\n  return {\n    x: minX,\n    y: minY,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nexport function createBBox(x, y, width, height) {\n  var maxX = x + width;\n  var maxY = y + height;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    minX: x,\n    minY: y,\n    // 非常奇葩的 js 特性\n    // Infinity + Infinity = Infinity\n    // Infinity - Infinity = NaN\n    // fixed https://github.com/antvis/G2Plot/issues/1243\n    maxX: isNaN(maxX) ? 0 : maxX,\n    maxY: isNaN(maxY) ? 0 : maxY\n  };\n}\nexport function getValueByPercent(min, max, percent) {\n  return (1 - percent) * min + max * percent;\n}\nexport function getCirclePoint(center, radius, angle) {\n  return {\n    x: center.x + Math.cos(angle) * radius,\n    y: center.y + Math.sin(angle) * radius\n  };\n}\nexport function distance(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\nexport var wait = function (interval) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, interval);\n  });\n};\n/**\n * 判断两个数值 是否接近\n * - 解决精度问题（由于无法确定精度上限，根据具体场景可传入 精度 参数）\n */\nexport var near = function (x, y, e) {\n  if (e === void 0) {\n    e = Math.pow(Number.EPSILON, 0.5);\n  }\n  return [x, y].includes(Infinity) ? Math.abs(x) === Math.abs(y) : Math.abs(x - y) < e;\n};\nexport function intersectBBox(box1, box2) {\n  var minX = Math.max(box1.minX, box2.minX);\n  var minY = Math.max(box1.minY, box2.minY);\n  var maxX = Math.min(box1.maxX, box2.maxX);\n  var maxY = Math.min(box1.maxY, box2.maxY);\n  return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\nexport function mergeBBox(box1, box2) {\n  var minX = Math.min(box1.minX, box2.minX);\n  var minY = Math.min(box1.minY, box2.minY);\n  var maxX = Math.max(box1.maxX, box2.maxX);\n  var maxY = Math.max(box1.maxY, box2.maxY);\n  return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\nexport function getBBoxWithClip(element) {\n  var clipShape = element.getClip();\n  var clipBBox = clipShape && clipShape.getBBox();\n  var bbox;\n  if (!element.isGroup()) {\n    // 如果是普通的图形\n    bbox = element.getBBox();\n  } else {\n    var minX_1 = Infinity;\n    var maxX_1 = -Infinity;\n    var minY_1 = Infinity;\n    var maxY_1 = -Infinity;\n    var children = element.getChildren();\n    if (children.length > 0) {\n      each(children, function (child) {\n        if (child.get('visible')) {\n          // 如果分组没有子元素，则直接跳过\n          if (child.isGroup() && child.get('children').length === 0) {\n            return true;\n          }\n          var box = getBBoxWithClip(child);\n          // 计算 4 个顶点\n          var leftTop = child.applyToMatrix([box.minX, box.minY, 1]);\n          var leftBottom = child.applyToMatrix([box.minX, box.maxY, 1]);\n          var rightTop = child.applyToMatrix([box.maxX, box.minY, 1]);\n          var rightBottom = child.applyToMatrix([box.maxX, box.maxY, 1]);\n          // 从中取最小的范围\n          var boxMinX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          var boxMaxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          var boxMinY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n          var boxMaxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n          if (boxMinX < minX_1) {\n            minX_1 = boxMinX;\n          }\n          if (boxMaxX > maxX_1) {\n            maxX_1 = boxMaxX;\n          }\n          if (boxMinY < minY_1) {\n            minY_1 = boxMinY;\n          }\n          if (boxMaxY > maxY_1) {\n            maxY_1 = boxMaxY;\n          }\n        }\n      });\n    } else {\n      minX_1 = 0;\n      maxX_1 = 0;\n      minY_1 = 0;\n      maxY_1 = 0;\n    }\n    bbox = createBBox(minX_1, minY_1, maxX_1 - minX_1, maxY_1 - minY_1);\n  }\n  if (clipBBox) {\n    return intersectBBox(bbox, clipBBox);\n  } else {\n    return bbox;\n  }\n}\nexport function updateClip(element, newElement) {\n  if (!element.getClip() && !newElement.getClip()) {\n    // 两者都没有 clip\n    return;\n  }\n  var newClipShape = newElement.getClip();\n  if (!newClipShape) {\n    // 新的 element 没有 clip\n    element.setClip(null); // 移除 clip\n    return;\n  }\n  var clipCfg = {\n    type: newClipShape.get('type'),\n    attrs: newClipShape.attr()\n  };\n  element.setClip(clipCfg);\n}\nexport function toPx(number) {\n  return number + \"px\";\n}\nexport function getTextPoint(start, end, position, offset) {\n  var lineLength = distance(start, end);\n  var offsetPercent = offset / lineLength; // 计算间距同线的比例，用于计算最终的位置\n  var percent = 0;\n  if (position === 'start') {\n    percent = 0 - offsetPercent;\n  } else if (position === 'end') {\n    percent = 1 + offsetPercent;\n  }\n  return {\n    x: getValueByPercent(start.x, end.x, percent),\n    y: getValueByPercent(start.y, end.y, percent)\n  };\n}","map":{"version":3,"names":["each","isArray","isNil","isNumber","formatPadding","padding","top","left","right","bottom","clearDom","container","children","childNodes","length","i","removeChild","hasClass","elements","cName","className","match","RegExp","regionToBBox","region","start","end","minX","Math","min","x","minY","y","maxX","max","maxY","width","height","pointsToBBox","points","xs","map","point","ys","apply","createBBox","isNaN","getValueByPercent","percent","getCirclePoint","center","radius","angle","cos","sin","distance","p1","p2","dx","dy","sqrt","wait","interval","Promise","resolve","setTimeout","near","e","pow","Number","EPSILON","includes","Infinity","abs","intersectBBox","box1","box2","mergeBBox","getBBoxWithClip","element","clipShape","getClip","clipBBox","getBBox","bbox","isGroup","minX_1","maxX_1","minY_1","maxY_1","getChildren","child","get","box","leftTop","applyToMatrix","leftBottom","rightTop","rightBottom","boxMinX","boxMaxX","boxMinY","boxMaxY","updateClip","newElement","newClipShape","setClip","clipCfg","type","attrs","attr","toPx","number","getTextPoint","position","offset","lineLength","offsetPercent"],"sources":["../../src/util/util.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}