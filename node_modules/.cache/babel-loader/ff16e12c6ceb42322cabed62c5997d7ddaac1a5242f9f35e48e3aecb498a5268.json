{"ast":null,"code":"import { __assign, __extends, __values } from \"tslib\";\nimport { each, head, isEqual, last, get, flatten, isArray, uniq, isNil } from '@antv/util';\nimport { findItemsFromViewRecurisive } from '../../util/tooltip';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\nvar DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3\n};\nexport function getItemsOfView(view, point, tooltipCfg) {\n  var e_1, _a, e_2, _b, e_3, _c;\n  var items = findItemsFromViewRecurisive(view, point, tooltipCfg);\n  if (items.length) {\n    // 三层\n    items = flatten(items);\n    try {\n      for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n        var itemArr = items_1_1.value;\n        try {\n          for (var itemArr_1 = (e_2 = void 0, __values(itemArr)), itemArr_1_1 = itemArr_1.next(); !itemArr_1_1.done; itemArr_1_1 = itemArr_1.next()) {\n            var item = itemArr_1_1.value;\n            var _d = item.mappingData,\n              x = _d.x,\n              y = _d.y;\n            item.x = isArray(x) ? x[x.length - 1] : x;\n            item.y = isArray(y) ? y[y.length - 1] : y;\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (itemArr_1_1 && !itemArr_1_1.done && (_b = itemArr_1.return)) _b.call(itemArr_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    var shared = tooltipCfg.shared;\n    // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n    if (shared === false && items.length > 1) {\n      var snapItem = items[0];\n      var min = Math.abs(point.y - snapItem[0].y);\n      try {\n        for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n          var aItem = items_2_1.value;\n          var yDistance = Math.abs(point.y - aItem[0].y);\n          if (yDistance <= min) {\n            snapItem = aItem;\n            min = yDistance;\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (items_2_1 && !items_2_1.done && (_c = items_2.return)) _c.call(items_2);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n      items = [snapItem];\n    }\n    return uniq(flatten(items));\n  }\n  return [];\n}\n/**\n * 背景框的 Action. 只作用于 interval 和 schema geometry\n * @ignore\n */\nvar ActiveRegion = /** @class */function (_super) {\n  __extends(ActiveRegion, _super);\n  function ActiveRegion() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   * @param {number} appendRatio 适用于笛卡尔坐标系. 对于 x 轴非 linear 类型: 默认：0.25, x 轴 linear 类型: 默认 0\n   * @param {number} appendWidth  适用于笛卡尔坐标系. 像素级别，优先级 > appendRatio\n   */\n  ActiveRegion.prototype.show = function (args) {\n    var view = this.context.view;\n    var ev = this.context.event;\n    var tooltipCfg = view.getController('tooltip').getTooltipCfg();\n    var tooltipItems = getItemsOfView(view, {\n      x: ev.x,\n      y: ev.y\n    }, tooltipCfg);\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n    this.items = tooltipItems;\n    if (tooltipItems.length) {\n      var xField_1 = view.getXScale().field;\n      var xValue_1 = tooltipItems[0].data[xField_1];\n      // 根据 x 对应的值查找 elements\n      var elements_1 = [];\n      var geometries = view.geometries;\n      each(geometries, function (geometry) {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          var result = geometry.getElementsBy(function (ele) {\n            var eleData = ele.getData();\n            return eleData[xField_1] === xValue_1;\n          });\n          elements_1 = elements_1.concat(result);\n        }\n      });\n      // 根据 bbox 计算背景框的面积区域\n      if (elements_1.length) {\n        var coordinate_1 = view.getCoordinate();\n        var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var groupBBox_1 = firstBBox_1;\n        each(elements_1, function (ele) {\n          var bbox = ele.shape.getCanvasBBox();\n          if (coordinate_1.isTransposed) {\n            if (bbox.minY < firstBBox_1.minY) {\n              firstBBox_1 = bbox;\n            }\n            if (bbox.maxY > lastBBox_1.maxY) {\n              lastBBox_1 = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox_1.minX) {\n              firstBBox_1 = bbox;\n            }\n            if (bbox.maxX > lastBBox_1.maxX) {\n              lastBBox_1 = bbox;\n            }\n          }\n          groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\n          groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\n          groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\n          groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\n        });\n        var backgroundGroup = view.backgroundGroup,\n          coordinateBBox = view.coordinateBBox;\n        var path = void 0;\n        if (coordinate_1.isRect) {\n          var xScale = view.getXScale();\n          var _a = args || {},\n            appendRatio = _a.appendRatio,\n            appendWidth = _a.appendWidth;\n          if (isNil(appendWidth)) {\n            appendRatio = isNil(appendRatio) ? xScale.isLinear ? 0 : 0.25 : appendRatio; // 如果 x 轴是数值类型，如直方图，默认不需要加额外的宽度\n            appendWidth = coordinate_1.isTransposed ? appendRatio * lastBBox_1.height : appendRatio * firstBBox_1.width;\n          }\n          var minX = void 0;\n          var minY = void 0;\n          var width = void 0;\n          var height = void 0;\n          if (coordinate_1.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendWidth;\n            width = coordinateBBox.width;\n            height = groupBBox_1.height + appendWidth * 2;\n          } else {\n            minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendWidth;\n            // 直角坐标系 非转置：最小值直接取 坐标系 minY\n            minY = coordinateBBox.minY;\n            width = groupBBox_1.width + appendWidth * 2;\n            height = coordinateBBox.height;\n          }\n          path = [['M', minX, minY], ['L', minX + width, minY], ['L', minX + width, minY + height], ['L', minX, minY + height], ['Z']];\n        } else {\n          var firstElement = head(elements_1);\n          var lastElement = last(elements_1);\n          var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\n          var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\n          var center = coordinate_1.getCenter();\n          var radius = coordinate_1.getRadius();\n          var innterRadius = coordinate_1.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          var style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: __assign(__assign({}, style), {\n              path: path\n            })\n          });\n        }\n      }\n    }\n  };\n  /**\n   * 隐藏\n   */\n  ActiveRegion.prototype.hide = function () {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    }\n    // this.regionPath = null;\n    this.items = null;\n  };\n  /**\n   * 销毁\n   */\n  ActiveRegion.prototype.destroy = function () {\n    this.hide();\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n    _super.prototype.destroy.call(this);\n  };\n  return ActiveRegion;\n}(Action);\nexport default ActiveRegion;","map":{"version":3,"names":["each","head","isEqual","last","get","flatten","isArray","uniq","isNil","findItemsFromViewRecurisive","getAngle","getSectorPath","Action","DEFAULT_REGION_PATH_STYLE","fill","opacity","getItemsOfView","view","point","tooltipCfg","items","length","items_1","__values","items_1_1","next","done","itemArr","value","itemArr_1","e_2","itemArr_1_1","item","_d","mappingData","x","y","shared","snapItem","min","Math","abs","items_2","items_2_1","aItem","yDistance","ActiveRegion","_super","__extends","prototype","show","args","context","ev","event","getController","getTooltipCfg","tooltipItems","xField_1","getXScale","field","xValue_1","data","elements_1","geometries","geometry","type","result","getElementsBy","ele","eleData","getData","concat","coordinate_1","getCoordinate","firstBBox_1","shape","getCanvasBBox","lastBBox_1","groupBBox_1","bbox","isTransposed","minY","maxY","minX","maxX","width","max","height","backgroundGroup","coordinateBBox","path","isRect","xScale","_a","appendRatio","appendWidth","isLinear","firstElement","lastElement","startAngle","getModel","endAngle","center","getCenter","radius","getRadius","innterRadius","innerRadius","regionPath","attr","style","addShape","name","capture","attrs","__assign","hide","destroy","remove","call"],"sources":["../../../src/interaction/action/active-region.ts"],"sourcesContent":["import { each, head, isEqual, last, get, flatten, isArray, uniq, isNil } from '@antv/util';\nimport View from '../../chart/view';\nimport { findItemsFromViewRecurisive } from '../../util/tooltip';\nimport { IShape, Point, ShapeAttrs } from '../../dependents';\nimport Element from '../../geometry/element';\nimport { LooseObject, TooltipCfg } from '../../interface';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\n\nconst DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3,\n};\n\nexport function getItemsOfView(view: View, point: Point, tooltipCfg: TooltipCfg) {\n  let items = findItemsFromViewRecurisive(view, point, tooltipCfg);\n  if (items.length) {\n    // 三层\n    items = flatten(items);\n    for (const itemArr of items) {\n      for (const item of itemArr) {\n        const { x, y } = item.mappingData;\n        item.x = isArray(x) ? x[x.length - 1] : x;\n        item.y = isArray(y) ? y[y.length - 1] : y;\n      }\n    }\n\n    const { shared } = tooltipCfg;\n    // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n    if (shared === false && items.length > 1) {\n      let snapItem = items[0];\n      let min = Math.abs(point.y - snapItem[0].y);\n      for (const aItem of items) {\n        const yDistance = Math.abs(point.y - aItem[0].y);\n        if (yDistance <= min) {\n          snapItem = aItem;\n          min = yDistance;\n        }\n      }\n      items = [snapItem];\n    }\n\n    return uniq(flatten(items));\n  }\n\n  return [];\n}\n\n/**\n * 背景框的 Action. 只作用于 interval 和 schema geometry\n * @ignore\n */\nclass ActiveRegion extends Action {\n  private items: any[];\n  private regionPath: IShape;\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   * @param {number} appendRatio 适用于笛卡尔坐标系. 对于 x 轴非 linear 类型: 默认：0.25, x 轴 linear 类型: 默认 0\n   * @param {number} appendWidth  适用于笛卡尔坐标系. 像素级别，优先级 > appendRatio\n   */\n  public show(args?: { style: ShapeAttrs; appendRatio?: number; appendWidth?: number }) {\n    const view = this.context.view;\n    const ev = this.context.event;\n\n    const tooltipCfg = view.getController('tooltip').getTooltipCfg();\n    const tooltipItems = getItemsOfView(\n      view,\n      {\n        x: ev.x,\n        y: ev.y,\n      },\n      tooltipCfg\n    );\n\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n    this.items = tooltipItems;\n    if (tooltipItems.length) {\n      const xField = view.getXScale().field;\n      const xValue = tooltipItems[0].data[xField];\n      // 根据 x 对应的值查找 elements\n      let elements: Element[] = [];\n      const geometries = view.geometries;\n      each(geometries, (geometry) => {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          const result = geometry.getElementsBy((ele) => {\n            const eleData = ele.getData();\n            return eleData[xField] === xValue;\n          });\n\n          elements = elements.concat(result);\n        }\n      });\n\n      // 根据 bbox 计算背景框的面积区域\n      if (elements.length) {\n        const coordinate = view.getCoordinate();\n\n        let firstBBox = elements[0].shape.getCanvasBBox();\n        let lastBBox = elements[0].shape.getCanvasBBox();\n        const groupBBox: LooseObject = firstBBox;\n\n        each(elements, (ele: Element) => {\n          const bbox = ele.shape.getCanvasBBox();\n          if (coordinate.isTransposed) {\n            if (bbox.minY < firstBBox.minY) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxY > lastBBox.maxY) {\n              lastBBox = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox.minX) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxX > lastBBox.maxX) {\n              lastBBox = bbox;\n            }\n          }\n\n          groupBBox.x = Math.min(bbox.minX, groupBBox.minX);\n          groupBBox.y = Math.min(bbox.minY, groupBBox.minY);\n          groupBBox.width = Math.max(bbox.maxX, groupBBox.maxX) - groupBBox.x;\n          groupBBox.height = Math.max(bbox.maxY, groupBBox.maxY) - groupBBox.y;\n        });\n\n        const { backgroundGroup, coordinateBBox } = view;\n        let path;\n        if (coordinate.isRect) {\n          const xScale = view.getXScale();\n\n          let { appendRatio, appendWidth } = args || {};\n          if (isNil(appendWidth)) {\n            appendRatio = isNil(appendRatio) ? (xScale.isLinear ? 0 : 0.25) : appendRatio; // 如果 x 轴是数值类型，如直方图，默认不需要加额外的宽度\n            appendWidth = coordinate.isTransposed ? appendRatio * lastBBox.height : appendRatio * firstBBox.width;\n          }\n\n          let minX: number;\n          let minY: number;\n          let width: number;\n          let height: number;\n          if (coordinate.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox.minY, firstBBox.minY) - appendWidth;\n            width = coordinateBBox.width;\n            height = groupBBox.height + appendWidth * 2;\n          } else {\n            minX = Math.min(firstBBox.minX, lastBBox.minX) - appendWidth;\n            // 直角坐标系 非转置：最小值直接取 坐标系 minY\n            minY = coordinateBBox.minY;\n            width = groupBBox.width + appendWidth * 2;\n            height = coordinateBBox.height;\n          }\n\n          path = [\n            ['M', minX, minY],\n            ['L', minX + width, minY],\n            ['L', minX + width, minY + height],\n            ['L', minX, minY + height],\n            ['Z'],\n          ];\n        } else {\n          const firstElement = head(elements);\n          const lastElement = last(elements);\n          const { startAngle } = getAngle(firstElement.getModel(), coordinate);\n          const { endAngle } = getAngle(lastElement.getModel(), coordinate);\n          const center = coordinate.getCenter();\n          const radius = coordinate.getRadius();\n          const innterRadius = coordinate.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          const style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: {\n              ...style,\n              path,\n            },\n          });\n        }\n      }\n    }\n  }\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    }\n    // this.regionPath = null;\n    this.items = null;\n  }\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.hide();\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n    super.destroy();\n  }\n}\n\nexport default ActiveRegion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}