{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends } from \"tslib\";\nimport { each, isString, mix, isFunction } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport Theme from '../util/theme';\nvar GridBase = /** @class */function (_super) {\n  __extends(GridBase, _super);\n  function GridBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  GridBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'grid',\n      line: {},\n      alternateColor: null,\n      capture: false,\n      items: [],\n      closed: false,\n      defaultCfg: {\n        line: {\n          type: 'line',\n          style: {\n            lineWidth: 1,\n            stroke: Theme.lineColor\n          }\n        }\n      }\n    });\n  };\n  /**\n   * 获取栅格线的类型\n   * @return {string} 栅格线类型\n   */\n  GridBase.prototype.getLineType = function () {\n    var line = this.get('line') || this.get('defaultCfg').line;\n    return line.type;\n  };\n  GridBase.prototype.renderInner = function (group) {\n    this.drawGrid(group);\n  };\n  GridBase.prototype.getAlternatePath = function (prePoints, points) {\n    var regionPath = this.getGridPath(prePoints);\n    var reversePoints = points.slice(0).reverse();\n    var nextPath = this.getGridPath(reversePoints, true);\n    var closed = this.get('closed');\n    if (closed) {\n      regionPath = regionPath.concat(nextPath);\n    } else {\n      nextPath[0][0] = 'L'; // 更新第一个节点\n      regionPath = regionPath.concat(nextPath);\n      regionPath.push(['Z']);\n    }\n    return regionPath;\n  };\n  // 获取路径的配置项\n  GridBase.prototype.getPathStyle = function () {\n    return this.get('line').style;\n  };\n  // 绘制栅格\n  GridBase.prototype.drawGrid = function (group) {\n    var _this = this;\n    var line = this.get('line');\n    var items = this.get('items');\n    var alternateColor = this.get('alternateColor');\n    var preItem = null;\n    each(items, function (item, index) {\n      var id = item.id || index;\n      // 绘制栅格线\n      if (line) {\n        var style = _this.getPathStyle();\n        style = isFunction(style) ? style(item, index, items) : style;\n        var lineId = _this.getElementId(\"line-\" + id);\n        var gridPath = _this.getGridPath(item.points);\n        _this.addShape(group, {\n          type: 'path',\n          name: 'grid-line',\n          id: lineId,\n          attrs: mix({\n            path: gridPath\n          }, style)\n        });\n      }\n      // 如果存在 alternateColor 则绘制矩形\n      // 从第二个栅格线开始绘制\n      if (alternateColor && index > 0) {\n        var regionId = _this.getElementId(\"region-\" + id);\n        var isEven = index % 2 === 0;\n        if (isString(alternateColor)) {\n          // 如果颜色是单值，则是仅绘制偶数时的区域\n          if (isEven) {\n            _this.drawAlternateRegion(regionId, group, preItem.points, item.points, alternateColor);\n          }\n        } else {\n          var color = isEven ? alternateColor[1] : alternateColor[0];\n          _this.drawAlternateRegion(regionId, group, preItem.points, item.points, color);\n        }\n      }\n      preItem = item;\n    });\n  };\n  // 绘制栅格线间的间隔\n  GridBase.prototype.drawAlternateRegion = function (id, group, prePoints, points, color) {\n    var regionPath = this.getAlternatePath(prePoints, points);\n    this.addShape(group, {\n      type: 'path',\n      id: id,\n      name: 'grid-region',\n      attrs: {\n        path: regionPath,\n        fill: color\n      }\n    });\n  };\n  return GridBase;\n}(GroupComponent);\nexport default GridBase;","map":{"version":3,"names":["each","isString","mix","isFunction","GroupComponent","Theme","GridBase","_super","__extends","prototype","getDefaultCfg","cfg","call","__assign","name","line","alternateColor","capture","items","closed","defaultCfg","type","style","lineWidth","stroke","lineColor","getLineType","get","renderInner","group","drawGrid","getAlternatePath","prePoints","points","regionPath","getGridPath","reversePoints","slice","reverse","nextPath","concat","push","getPathStyle","_this","preItem","item","index","id","lineId","getElementId","gridPath","addShape","attrs","path","regionId","isEven","drawAlternateRegion","color","fill"],"sources":["../../src/grid/base.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}