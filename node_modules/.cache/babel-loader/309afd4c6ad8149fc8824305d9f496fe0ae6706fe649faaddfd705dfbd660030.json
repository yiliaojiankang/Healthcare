{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { getArcPath } from '../../../util/graphics';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getCPath, getQPath } from './util';\nfunction getArcShapePath(from, to, center) {\n  var sub = getQPath(to, center);\n  var path = [['M', from.x, from.y]];\n  path.push(sub);\n  return path;\n}\nfunction getArcShapeWeightPath(points, center) {\n  var arc1 = getQPath(points[1], center);\n  var arc2 = getQPath(points[3], center);\n  var path = [['M', points[0].x, points[0].y]];\n  path.push(arc2);\n  path.push(['L', points[3].x, points[3].y]);\n  path.push(['L', points[2].x, points[2].y]);\n  path.push(arc1);\n  path.push(['L', points[1].x, points[1].y]);\n  path.push(['L', points[0].x, points[0].y]);\n  path.push(['Z']);\n  return path;\n}\n// 弧线包括笛卡尔坐标系下的半圆弧线、极坐标系下以圆心为控制点的二阶曲线、笛卡尔坐标系下带权重的三阶曲线、极坐标系下带权重的以圆心为控制点的二阶曲线\nregisterShape('edge', 'arc', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var points = cfg.points;\n    var type = points.length > 2 ? 'weight' : 'normal';\n    var path;\n    if (cfg.isInCircle) {\n      var center = {\n        x: 0,\n        y: 1\n      };\n      if (type === 'normal') {\n        path = getArcShapePath(points[0], points[1], center);\n      } else {\n        style.fill = style.stroke;\n        path = getArcShapeWeightPath(points, center);\n      }\n      path = this.parsePath(path);\n      return container.addShape('path', {\n        attrs: __assign(__assign({}, style), {\n          path: path\n        })\n      });\n    } else {\n      if (type === 'normal') {\n        points = this.parsePoints(points);\n        path = getArcPath((points[1].x + points[0].x) / 2, points[0].y, Math.abs(points[1].x - points[0].x) / 2, Math.PI, Math.PI * 2);\n        return container.addShape('path', {\n          attrs: __assign(__assign({}, style), {\n            path: path\n          })\n        });\n      } else {\n        var c1 = getCPath(points[1], points[3]);\n        var c2 = getCPath(points[2], points[0]);\n        path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], c1, ['L', points[3].x, points[3].y], ['L', points[2].x, points[2].y], c2, ['Z']];\n        path = this.parsePath(path);\n        style.fill = style.stroke;\n        return container.addShape('path', {\n          attrs: __assign(__assign({}, style), {\n            path: path\n          })\n        });\n      }\n    }\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});","map":{"version":3,"names":["getArcPath","registerShape","getStyle","getCPath","getQPath","getArcShapePath","from","to","center","sub","path","x","y","push","getArcShapeWeightPath","points","arc1","arc2","draw","cfg","container","style","type","length","isInCircle","fill","stroke","parsePath","addShape","attrs","__assign","parsePoints","Math","abs","PI","c1","c2","getMarker","markerCfg","symbol","r","color"],"sources":["../../../../src/geometry/shape/edge/arc.ts"],"sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { getArcPath } from '../../../util/graphics';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getCPath, getQPath } from './util';\n\nfunction getArcShapePath(from: Point, to: Point, center: Point) {\n  const sub = getQPath(to, center);\n  const path = [['M', from.x, from.y]];\n  path.push(sub);\n  return path;\n}\n\nfunction getArcShapeWeightPath(points: Point[], center: Point) {\n  const arc1 = getQPath(points[1], center);\n  const arc2 = getQPath(points[3], center);\n  const path = [['M', points[0].x, points[0].y]];\n  path.push(arc2);\n  path.push(['L', points[3].x, points[3].y]);\n  path.push(['L', points[2].x, points[2].y]);\n  path.push(arc1);\n  path.push(['L', points[1].x, points[1].y]);\n  path.push(['L', points[0].x, points[0].y]);\n  path.push(['Z']);\n  return path;\n}\n\n// 弧线包括笛卡尔坐标系下的半圆弧线、极坐标系下以圆心为控制点的二阶曲线、笛卡尔坐标系下带权重的三阶曲线、极坐标系下带权重的以圆心为控制点的二阶曲线\nregisterShape('edge', 'arc', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n\n    let points = cfg.points as Point[];\n    const type = points.length > 2 ? 'weight' : 'normal';\n    let path;\n    if (cfg.isInCircle) {\n      const center = { x: 0, y: 1 };\n      if (type === 'normal') {\n        path = getArcShapePath(points[0], points[1], center);\n      } else {\n        style.fill = style.stroke;\n        path = getArcShapeWeightPath(points, center);\n      }\n      path = this.parsePath(path);\n\n      return container.addShape('path', {\n        attrs: {\n          ...style,\n          path,\n        },\n      });\n    } else {\n      if (type === 'normal') {\n        points = this.parsePoints(points);\n        path = getArcPath(\n          (points[1].x + points[0].x) / 2,\n          points[0].y,\n          Math.abs(points[1].x - points[0].x) / 2,\n          Math.PI,\n          Math.PI * 2\n        );\n        return container.addShape('path', {\n          attrs: {\n            ...style,\n            path,\n          },\n        });\n      } else {\n        const c1 = getCPath(points[1], points[3]);\n        const c2 = getCPath(points[2], points[0]);\n\n        path = [\n          ['M', points[0].x, points[0].y],\n          ['L', points[1].x, points[1].y],\n          c1,\n          ['L', points[3].x, points[3].y],\n          ['L', points[2].x, points[2].y],\n          c2,\n          ['Z'],\n        ];\n        path = this.parsePath(path);\n        style.fill = style.stroke;\n\n        return container.addShape('path', {\n          attrs: {\n            ...style,\n            path,\n          },\n        });\n      }\n    }\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}