{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * @description DFS traversal.\n * @description.zh-CN DFS 遍历。\n */\nvar doDFS = function doDFS(graph, node, postorder, visited, navigator, result) {\n  if (!visited.includes(node)) {\n    visited.push(node);\n    if (!postorder) {\n      result.push(node);\n    }\n    navigator(node).forEach(function (n) {\n      return doDFS(graph, n, postorder, visited, navigator, result);\n    });\n    if (postorder) {\n      result.push(node);\n    }\n  }\n};\n/**\n * @description DFS traversal.\n * @description.zh-CN DFS 遍历。\n */\n\nvar dfs = function dfs(graph, node, order) {\n  var nodes = Array.isArray(node) ? node : [node];\n  var navigator = function navigator(n) {\n    return graph.isDirected() ? graph.successors(n) : graph.neighbors(n);\n  };\n  var results = [];\n  var visited = [];\n  nodes.forEach(function (node) {\n    if (!graph.hasNode(node)) {\n      throw new Error('Graph does not have node: ' + node);\n    } else {\n      doDFS(graph, node, order === 'post', visited, navigator, results);\n    }\n  });\n  return results;\n};\nexport default dfs;","map":{"version":3,"names":["doDFS","graph","node","postorder","visited","navigator","result","includes","push","forEach","n","dfs","order","nodes","Array","isArray","isDirected","successors","neighbors","results","hasNode","Error"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/graphlib/es/algorithm/dfs.js"],"sourcesContent":["/**\n * @description DFS traversal.\n * @description.zh-CN DFS 遍历。\n */\nvar doDFS = function doDFS(graph, node, postorder, visited, navigator, result) {\n  if (!visited.includes(node)) {\n    visited.push(node);\n\n    if (!postorder) {\n      result.push(node);\n    }\n\n    navigator(node).forEach(function (n) {\n      return doDFS(graph, n, postorder, visited, navigator, result);\n    });\n\n    if (postorder) {\n      result.push(node);\n    }\n  }\n};\n/**\n * @description DFS traversal.\n * @description.zh-CN DFS 遍历。\n */\n\n\nvar dfs = function dfs(graph, node, order) {\n  var nodes = Array.isArray(node) ? node : [node];\n\n  var navigator = function navigator(n) {\n    return graph.isDirected() ? graph.successors(n) : graph.neighbors(n);\n  };\n\n  var results = [];\n  var visited = [];\n  nodes.forEach(function (node) {\n    if (!graph.hasNode(node)) {\n      throw new Error('Graph does not have node: ' + node);\n    } else {\n      doDFS(graph, node, order === 'post', visited, navigator, results);\n    }\n  });\n  return results;\n};\n\nexport default dfs;"],"mappings":";AAAA;AACA;AACA;AACA;AACA,IAAIA,KAAK,GAAG,SAASA,KAAKA,CAACC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,OAAO,EAAEC,SAAS,EAAEC,MAAM,EAAE;EAC7E,IAAI,CAACF,OAAO,CAACG,QAAQ,CAACL,IAAI,CAAC,EAAE;IAC3BE,OAAO,CAACI,IAAI,CAACN,IAAI,CAAC;IAElB,IAAI,CAACC,SAAS,EAAE;MACdG,MAAM,CAACE,IAAI,CAACN,IAAI,CAAC;IACnB;IAEAG,SAAS,CAACH,IAAI,CAAC,CAACO,OAAO,CAAC,UAAUC,CAAC,EAAE;MACnC,OAAOV,KAAK,CAACC,KAAK,EAAES,CAAC,EAAEP,SAAS,EAAEC,OAAO,EAAEC,SAAS,EAAEC,MAAM,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAIH,SAAS,EAAE;MACbG,MAAM,CAACE,IAAI,CAACN,IAAI,CAAC;IACnB;EACF;AACF,CAAC;AACD;AACA;AACA;AACA;;AAGA,IAAIS,GAAG,GAAG,SAASA,GAAGA,CAACV,KAAK,EAAEC,IAAI,EAAEU,KAAK,EAAE;EACzC,IAAIC,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACb,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;EAE/C,IAAIG,SAAS,GAAG,SAASA,SAASA,CAACK,CAAC,EAAE;IACpC,OAAOT,KAAK,CAACe,UAAU,CAAC,CAAC,GAAGf,KAAK,CAACgB,UAAU,CAACP,CAAC,CAAC,GAAGT,KAAK,CAACiB,SAAS,CAACR,CAAC,CAAC;EACtE,CAAC;EAED,IAAIS,OAAO,GAAG,EAAE;EAChB,IAAIf,OAAO,GAAG,EAAE;EAChBS,KAAK,CAACJ,OAAO,CAAC,UAAUP,IAAI,EAAE;IAC5B,IAAI,CAACD,KAAK,CAACmB,OAAO,CAAClB,IAAI,CAAC,EAAE;MACxB,MAAM,IAAImB,KAAK,CAAC,4BAA4B,GAAGnB,IAAI,CAAC;IACtD,CAAC,MAAM;MACLF,KAAK,CAACC,KAAK,EAAEC,IAAI,EAAEU,KAAK,KAAK,MAAM,EAAER,OAAO,EAAEC,SAAS,EAAEc,OAAO,CAAC;IACnE;EACF,CAAC,CAAC;EACF,OAAOA,OAAO;AAChB,CAAC;AAED,eAAeR,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}