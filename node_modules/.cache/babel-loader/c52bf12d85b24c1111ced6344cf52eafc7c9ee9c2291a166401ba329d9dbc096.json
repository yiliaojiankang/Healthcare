{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { TYPES } from '@antv/l7-core';\nimport { decodePickingColor, encodePickingColor } from '@antv/l7-utils';\nimport { TileSourceService } from \"./TileSourceService\";\nvar SELECT = 'select';\nvar ACTIVE = 'active';\nexport var TilePickService = /*#__PURE__*/function () {\n  function TilePickService(_ref) {\n    var layerService = _ref.layerService,\n      tileLayerService = _ref.tileLayerService,\n      parent = _ref.parent;\n    _classCallCheck(this, TilePickService);\n    _defineProperty(this, \"tilePickID\", new Map());\n    this.layerService = layerService;\n    this.tileLayerService = tileLayerService;\n    this.parent = parent;\n    this.tileSourceService = new TileSourceService();\n  }\n  _createClass(TilePickService, [{\n    key: \"pickRender\",\n    value: function pickRender(target) {\n      // 一个 TileLayer 有多个 Tile，但是会同时触发事件的只有一个 Tile\n      var tile = this.tileLayerService.getVisibleTileBylngLat(target.lngLat);\n      if (tile) {\n        // TODO 多图层拾取\n        var pickLayer = tile.getMainLayer();\n        pickLayer === null || pickLayer === void 0 || pickLayer.layerPickService.pickRender(target);\n      }\n    }\n  }, {\n    key: \"pick\",\n    value: function () {\n      var _pick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(layer, target) {\n        var container, pickingService, tile, pickLayer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              container = this.parent.getContainer();\n              pickingService = container.get(TYPES.IPickingService);\n              if (!(layer.type === 'RasterLayer')) {\n                _context.next = 8;\n                break;\n              }\n              tile = this.tileLayerService.getVisibleTileBylngLat(target.lngLat);\n              if (!(tile && tile.getMainLayer() !== undefined)) {\n                _context.next = 7;\n                break;\n              }\n              pickLayer = tile.getMainLayer();\n              return _context.abrupt(\"return\", pickLayer.layerPickService.pickRasterLayer(pickLayer, target, this.parent));\n            case 7:\n              return _context.abrupt(\"return\", false);\n            case 8:\n              this.pickRender(target);\n              return _context.abrupt(\"return\", pickingService.pickFromPickingFBO(layer, target));\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function pick(_x, _x2) {\n        return _pick.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"selectFeature\",\n    value: function selectFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors = _slicedToArray(pickedColors, 3),\n        r = _pickedColors[0],\n        g = _pickedColors[1],\n        b = _pickedColors[2];\n      var id = this.color2PickId(r, g, b);\n      this.tilePickID.set(SELECT, id);\n      this.updateHighLight(r, g, b, SELECT);\n    }\n  }, {\n    key: \"highlightPickedFeature\",\n    value: function highlightPickedFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors2 = _slicedToArray(pickedColors, 3),\n        r = _pickedColors2[0],\n        g = _pickedColors2[1],\n        b = _pickedColors2[2];\n      var id = this.color2PickId(r, g, b);\n      this.tilePickID.set(ACTIVE, id);\n      this.updateHighLight(r, g, b, ACTIVE);\n    }\n  }, {\n    key: \"updateHighLight\",\n    value: function updateHighLight(r, g, b, type) {\n      this.tileLayerService.tiles.map(function (tile) {\n        var layer = tile.getMainLayer();\n        switch (type) {\n          case SELECT:\n            layer === null || layer === void 0 || layer.hooks.beforeSelect.call([r, g, b]);\n            break;\n          case ACTIVE:\n            layer === null || layer === void 0 || layer.hooks.beforeHighlight.call([r, g, b]);\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"setPickState\",\n    value: function setPickState() {\n      var selectColor = this.tilePickID.get(SELECT);\n      var activeColor = this.tilePickID.get(ACTIVE);\n      if (selectColor) {\n        var _this$pickId2Color = this.pickId2Color(selectColor),\n          _this$pickId2Color2 = _slicedToArray(_this$pickId2Color, 3),\n          r = _this$pickId2Color2[0],\n          g = _this$pickId2Color2[1],\n          b = _this$pickId2Color2[2];\n        this.updateHighLight(r, g, b, SELECT);\n        return;\n      }\n      if (activeColor) {\n        var _this$pickId2Color3 = this.pickId2Color(activeColor),\n          _this$pickId2Color4 = _slicedToArray(_this$pickId2Color3, 3),\n          _r = _this$pickId2Color4[0],\n          _g = _this$pickId2Color4[1],\n          _b = _this$pickId2Color4[2];\n        this.updateHighLight(_r, _g, _b, ACTIVE);\n        return;\n      }\n    }\n  }, {\n    key: \"color2PickId\",\n    value: function color2PickId(r, g, b) {\n      return decodePickingColor(new Uint8Array([r, g, b]));\n    }\n  }, {\n    key: \"pickId2Color\",\n    value: function pickId2Color(str) {\n      return encodePickingColor(str);\n    }\n\n    /** 从瓦片中根据数据 */\n  }, {\n    key: \"getFeatureById\",\n    value: function getFeatureById(pickedFeatureIdx) {\n      // 提取当前可见瓦片\n      var tiles = this.tileLayerService.getTiles().filter(function (tile) {\n        return tile.visible;\n      });\n      // 提取当前可见瓦片中匹配 ID 的 feature 列表\n      var features = [];\n      tiles.forEach(function (tile) {\n        features.push.apply(features, _toConsumableArray(tile.getFeatureById(pickedFeatureIdx)));\n      });\n\n      // 将 feature 列表合并后返回\n      // 统一返回成 polygon 的格式 点、线、面可以通用\n\n      // const data = this.tileSourceService.getCombineFeature(features);\n\n      return features;\n    }\n\n    // Tip: for interface define\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  }, {\n    key: \"pickRasterLayer\",\n    value: function pickRasterLayer(layer, target, parent) {\n      return false;\n    }\n  }]);\n  return TilePickService;\n}();","map":{"version":3,"names":["_toConsumableArray","_slicedToArray","_asyncToGenerator","_classCallCheck","_createClass","_defineProperty","_regeneratorRuntime","TYPES","decodePickingColor","encodePickingColor","TileSourceService","SELECT","ACTIVE","TilePickService","_ref","layerService","tileLayerService","parent","Map","tileSourceService","key","value","pickRender","target","tile","getVisibleTileBylngLat","lngLat","pickLayer","getMainLayer","layerPickService","_pick","mark","_callee","layer","container","pickingService","wrap","_callee$","_context","prev","next","getContainer","get","IPickingService","type","undefined","abrupt","pickRasterLayer","pickFromPickingFBO","stop","pick","_x","_x2","apply","arguments","selectFeature","pickedColors","_pickedColors","r","g","b","id","color2PickId","tilePickID","set","updateHighLight","highlightPickedFeature","_pickedColors2","tiles","map","hooks","beforeSelect","call","beforeHighlight","setPickState","selectColor","activeColor","_this$pickId2Color","pickId2Color","_this$pickId2Color2","_this$pickId2Color3","_this$pickId2Color4","_r","_g","_b","Uint8Array","str","getFeatureById","pickedFeatureIdx","getTiles","filter","visible","features","forEach","push"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/tile/service/TilePickService.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { TYPES } from '@antv/l7-core';\nimport { decodePickingColor, encodePickingColor } from '@antv/l7-utils';\nimport { TileSourceService } from \"./TileSourceService\";\nvar SELECT = 'select';\nvar ACTIVE = 'active';\nexport var TilePickService = /*#__PURE__*/function () {\n  function TilePickService(_ref) {\n    var layerService = _ref.layerService,\n      tileLayerService = _ref.tileLayerService,\n      parent = _ref.parent;\n    _classCallCheck(this, TilePickService);\n    _defineProperty(this, \"tilePickID\", new Map());\n    this.layerService = layerService;\n    this.tileLayerService = tileLayerService;\n    this.parent = parent;\n    this.tileSourceService = new TileSourceService();\n  }\n  _createClass(TilePickService, [{\n    key: \"pickRender\",\n    value: function pickRender(target) {\n      // 一个 TileLayer 有多个 Tile，但是会同时触发事件的只有一个 Tile\n      var tile = this.tileLayerService.getVisibleTileBylngLat(target.lngLat);\n      if (tile) {\n        // TODO 多图层拾取\n        var pickLayer = tile.getMainLayer();\n        pickLayer === null || pickLayer === void 0 || pickLayer.layerPickService.pickRender(target);\n      }\n    }\n  }, {\n    key: \"pick\",\n    value: function () {\n      var _pick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(layer, target) {\n        var container, pickingService, tile, pickLayer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              container = this.parent.getContainer();\n              pickingService = container.get(TYPES.IPickingService);\n              if (!(layer.type === 'RasterLayer')) {\n                _context.next = 8;\n                break;\n              }\n              tile = this.tileLayerService.getVisibleTileBylngLat(target.lngLat);\n              if (!(tile && tile.getMainLayer() !== undefined)) {\n                _context.next = 7;\n                break;\n              }\n              pickLayer = tile.getMainLayer();\n              return _context.abrupt(\"return\", pickLayer.layerPickService.pickRasterLayer(pickLayer, target, this.parent));\n            case 7:\n              return _context.abrupt(\"return\", false);\n            case 8:\n              this.pickRender(target);\n              return _context.abrupt(\"return\", pickingService.pickFromPickingFBO(layer, target));\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function pick(_x, _x2) {\n        return _pick.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"selectFeature\",\n    value: function selectFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors = _slicedToArray(pickedColors, 3),\n        r = _pickedColors[0],\n        g = _pickedColors[1],\n        b = _pickedColors[2];\n      var id = this.color2PickId(r, g, b);\n      this.tilePickID.set(SELECT, id);\n      this.updateHighLight(r, g, b, SELECT);\n    }\n  }, {\n    key: \"highlightPickedFeature\",\n    value: function highlightPickedFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors2 = _slicedToArray(pickedColors, 3),\n        r = _pickedColors2[0],\n        g = _pickedColors2[1],\n        b = _pickedColors2[2];\n      var id = this.color2PickId(r, g, b);\n      this.tilePickID.set(ACTIVE, id);\n      this.updateHighLight(r, g, b, ACTIVE);\n    }\n  }, {\n    key: \"updateHighLight\",\n    value: function updateHighLight(r, g, b, type) {\n      this.tileLayerService.tiles.map(function (tile) {\n        var layer = tile.getMainLayer();\n        switch (type) {\n          case SELECT:\n            layer === null || layer === void 0 || layer.hooks.beforeSelect.call([r, g, b]);\n            break;\n          case ACTIVE:\n            layer === null || layer === void 0 || layer.hooks.beforeHighlight.call([r, g, b]);\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"setPickState\",\n    value: function setPickState() {\n      var selectColor = this.tilePickID.get(SELECT);\n      var activeColor = this.tilePickID.get(ACTIVE);\n      if (selectColor) {\n        var _this$pickId2Color = this.pickId2Color(selectColor),\n          _this$pickId2Color2 = _slicedToArray(_this$pickId2Color, 3),\n          r = _this$pickId2Color2[0],\n          g = _this$pickId2Color2[1],\n          b = _this$pickId2Color2[2];\n        this.updateHighLight(r, g, b, SELECT);\n        return;\n      }\n      if (activeColor) {\n        var _this$pickId2Color3 = this.pickId2Color(activeColor),\n          _this$pickId2Color4 = _slicedToArray(_this$pickId2Color3, 3),\n          _r = _this$pickId2Color4[0],\n          _g = _this$pickId2Color4[1],\n          _b = _this$pickId2Color4[2];\n        this.updateHighLight(_r, _g, _b, ACTIVE);\n        return;\n      }\n    }\n  }, {\n    key: \"color2PickId\",\n    value: function color2PickId(r, g, b) {\n      return decodePickingColor(new Uint8Array([r, g, b]));\n    }\n  }, {\n    key: \"pickId2Color\",\n    value: function pickId2Color(str) {\n      return encodePickingColor(str);\n    }\n\n    /** 从瓦片中根据数据 */\n  }, {\n    key: \"getFeatureById\",\n    value: function getFeatureById(pickedFeatureIdx) {\n      // 提取当前可见瓦片\n      var tiles = this.tileLayerService.getTiles().filter(function (tile) {\n        return tile.visible;\n      });\n      // 提取当前可见瓦片中匹配 ID 的 feature 列表\n      var features = [];\n      tiles.forEach(function (tile) {\n        features.push.apply(features, _toConsumableArray(tile.getFeatureById(pickedFeatureIdx)));\n      });\n\n      // 将 feature 列表合并后返回\n      // 统一返回成 polygon 的格式 点、线、面可以通用\n\n      // const data = this.tileSourceService.getCombineFeature(features);\n\n      return features;\n    }\n\n    // Tip: for interface define\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  }, {\n    key: \"pickRasterLayer\",\n    value: function pickRasterLayer(layer, target, parent) {\n      return false;\n    }\n  }]);\n  return TilePickService;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}