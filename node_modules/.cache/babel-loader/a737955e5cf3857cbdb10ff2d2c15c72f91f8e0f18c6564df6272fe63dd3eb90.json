{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nimport { __awaiter, __extends, __generator, __rest } from \"tslib\";\nimport { AbstractLayout, Util } from '@antv/g6-core';\nimport { Layout } from '../../layout';\nimport { LayoutWorker } from '../../layout/worker/layout';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { gpuDetector } from '../../util/gpu';\nimport { mix, clone } from '@antv/util';\n// eslint-disable-next-line @typescript-eslint/no-implied-eval\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = typeof window !== 'undefined' ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf : mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = typeof window !== 'undefined' ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf : mockCaf;\n    return fn(requestId);\n  }\n};\nvar GPU_LAYOUT_NAMES = ['fruchterman', 'gForce'];\nvar LAYOUT_PIPES_ADJUST_NAMES = ['force', 'grid', 'circular'];\nvar LayoutController = /** @class */function (_super) {\n  __extends(LayoutController, _super);\n  // the configurations of the layout\n  // private layoutCfg: any; // LayoutOptions\n  // the type name of the layout\n  // private layoutType: string;\n  // private data: GraphData;\n  // private layoutMethods: typeof Layout;\n  function LayoutController(graph) {\n    var _this = _super.call(this, graph) || this;\n    _this.graph = graph;\n    _this.layoutCfg = graph.get('layout') || {};\n    _this.layoutType = _this.getLayoutType();\n    _this.worker = null;\n    _this.workerData = {};\n    _this.initLayout();\n    return _this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  LayoutController.prototype.initLayout = function () {\n    // no data before rendering\n  };\n  // get layout worker and create one if not exists\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = LayoutWorker(this.layoutCfg.workerScriptURL);\n    }\n    return this.worker;\n  };\n  // stop layout worker\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n    if (!this.worker) {\n      return;\n    }\n    this.worker.terminate();\n    this.worker = null;\n    // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n  LayoutController.prototype.execLayoutMethod = function (layoutCfg, order) {\n    var _this = this;\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, onTick_1, animate_1, isDefaultAnimateLayout_1, tick, enableTick, layoutMethod, onTick_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              if (!graph || graph.get('destroyed')) return [2 /*return*/];\n              layoutType = layoutCfg.type;\n              // 每个布局方法都需要注册\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n              // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n              if (layoutType && this.isGPU) {\n                if (!hasGPUVersion(layoutType)) {\n                  console.warn(\"The '\".concat(layoutType, \"' layout does not support GPU calculation for now, it will run in CPU.\"));\n                } else {\n                  layoutType = \"\".concat(layoutType, \"-gpu\");\n                }\n              }\n              if (Util.isForce(layoutType)) {\n                onTick_1 = layoutCfg.onTick, animate_1 = layoutCfg.animate;\n                isDefaultAnimateLayout_1 = animate_1 === undefined && (layoutType === 'force' || layoutType === 'force2');\n                tick = function tick() {\n                  if (onTick_1) {\n                    onTick_1();\n                  }\n                  if (animate_1 || isDefaultAnimateLayout_1) graph.refreshPositions();\n                };\n                layoutCfg.tick = tick;\n              } else if (layoutType === 'comboForce' || layoutType === 'comboCombined') {\n                layoutCfg.comboTrees = graph.get('comboTrees');\n              }\n              enableTick = false;\n              try {\n                layoutMethod = new Layout[layoutType](layoutCfg);\n                if (this.layoutMethods[order]) {\n                  this.layoutMethods[order].destroy();\n                }\n                this.layoutMethods[order] = layoutMethod;\n              } catch (e) {\n                console.warn(\"The layout method: '\".concat(layoutType, \"' does not exist! Please specify it first.\"));\n                reject();\n              }\n              // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n              enableTick = layoutMethod.enableTick;\n              if (enableTick) {\n                onTick_2 = layoutCfg.onTick;\n                tick = function tick() {\n                  if (onTick_2) {\n                    onTick_2();\n                  }\n                  graph.refreshPositions();\n                };\n                layoutMethod.tick = tick;\n              }\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              addLayoutOrder(layoutData, order);\n              layoutMethod.init(layoutData);\n              // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n              // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4 /*yield*/, layoutMethod.execute()];\n            case 1:\n              _a.sent();\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n\n  LayoutController.prototype.updateLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, onTick_3, animate_2, isDefaultAnimateLayout_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type;\n              // 每个布局方法都需要注册\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n              if (Util.isForce(layoutType)) {\n                onTick_3 = layoutCfg.onTick, animate_2 = layoutCfg.animate;\n                isDefaultAnimateLayout_2 = animate_2 === undefined && (layoutType === 'force' || layoutType === 'force2');\n                tick = function tick() {\n                  onTick_3 === null || onTick_3 === void 0 ? void 0 : onTick_3();\n                  if (animate_2 || isDefaultAnimateLayout_2) graph.refreshPositions();\n                };\n                layoutCfg.tick = tick;\n              }\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              layoutMethod.init(layoutData);\n              layoutMethod.updateCfg(layoutCfg);\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4 /*yield*/, layoutMethod.execute()];\n            case 1:\n              _a.sent();\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n  LayoutController.prototype.layout = function (success) {\n    var _this = this;\n    var _a;\n    var graph = this.graph;\n    if (!graph || graph.get('destroyed')) return;\n    this.data = this.setDataFromGraph();\n    var _b = this.data,\n      nodes = _b.nodes,\n      hiddenNodes = _b.hiddenNodes;\n    if (!nodes) {\n      return false;\n    }\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    var layoutType = layoutCfg.type;\n    var prevHasNodes = false;\n    (_a = this.layoutMethods) === null || _a === void 0 ? void 0 : _a.forEach(function (method) {\n      var _a;\n      return prevHasNodes = !!((_a = method.nodes) === null || _a === void 0 ? void 0 : _a.length) || prevHasNodes;\n    });\n    var preLayoutTypes = this.destoryLayoutMethods();\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    // 增量情况下（上一次的布局与当前布局一致），上一次有节点，使用 treakInit\n    if (prevHasNodes && layoutType && (preLayoutTypes === null || preLayoutTypes === void 0 ? void 0 : preLayoutTypes.length) === 1 && preLayoutTypes[0] === layoutType) {\n      this.tweakInit();\n    } else {\n      // 初始化位置，若配置了 preset，则使用 preset 的参数生成布局作为预布局，否则使用 grid\n      start = this.initPositions(layoutCfg.center, nodes);\n    }\n    // init hidden nodes\n    var initHiddenPromise = this.initPositions(layoutCfg.center, hiddenNodes);\n    initHiddenPromise.then();\n    // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n    this.isGPU = getGPUEnabled(layoutCfg, layoutType);\n    // 在 onAllLayoutEnd 中执行用户自定义 onLayoutEnd，触发 afterlayout、更新节点位置、fitView/fitCenter、触发 afterrender\n    var onLayoutEnd = layoutCfg.onLayoutEnd,\n      layoutEndFormatted = layoutCfg.layoutEndFormatted,\n      adjust = layoutCfg.adjust;\n    if (!layoutEndFormatted) {\n      layoutCfg.layoutEndFormatted = true;\n      layoutCfg.onAllLayoutEnd = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // 执行用户自定义 onLayoutEnd\n                if (onLayoutEnd) {\n                  onLayoutEnd(nodes);\n                }\n                // 更新节点位置\n                this.refreshLayout();\n                if (!(adjust && layoutCfg.pipes)) return [3 /*break*/, 2];\n                return [4 /*yield*/, this.adjustPipesBox(this.data, adjust)];\n              case 1:\n                _a.sent();\n                this.refreshLayout();\n                _a.label = 2;\n              case 2:\n                // 触发 afterlayout\n                graph.emit('afterlayout');\n                return [2 /*return*/];\n            }\n          });\n        });\n      };\n    }\n\n    this.stopWorker();\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data, success)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n    var hasLayout = false;\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.execLayoutMethod(layoutCfg, 0)];\n              case 1:\n                return [2 /*return*/, _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n      layoutCfg.pipes.forEach(function (cfg, index) {\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4 /*yield*/, this.execLayoutMethod(cfg, index)];\n                case 1:\n                  return [2 /*return*/, _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n        // 在执行 execute 后立即执行 success，且在 timeBar 中有 throttle，可以防止 timeBar 监听 afterrender 进行 changeData 后 layout，从而死循环\n        // 对于 force 一类布局完成后的 fitView 需要用户自己在 onLayoutEnd 中配置\n        if (success) success();\n      }).catch(function (error) {\n        console.warn('graph layout failed,', error);\n      });\n    } else {\n      // 无布局配置\n      graph.refreshPositions();\n      success === null || success === void 0 ? void 0 : success();\n    }\n    return false;\n  };\n  /**\n   * 增量数据初始化位置\n   */\n  LayoutController.prototype.tweakInit = function () {\n    var _a = this,\n      data = _a.data,\n      graph = _a.graph;\n    var nodes = data.nodes,\n      edges = data.edges;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    var positionMap = {};\n    nodes.forEach(function (node) {\n      var x = node.x,\n        y = node.y;\n      if (!isNaN(x) && !isNaN(y)) {\n        positionMap[node.id] = {\n          x: x,\n          y: y\n        };\n        // 有位置信息，则是原有节点，增加 mass\n        node.mass = node.mass || 2;\n      }\n    });\n    edges.forEach(function (edge) {\n      var source = edge.source,\n        target = edge.target;\n      var sourcePosition = positionMap[source];\n      var targetPosition = positionMap[target];\n      if (!sourcePosition && targetPosition) {\n        positionMap[source] = {\n          x: targetPosition.x + (Math.random() - 0.5) * 80,\n          y: targetPosition.y + (Math.random() - 0.5) * 80\n        };\n      } else if (!targetPosition && sourcePosition) {\n        positionMap[target] = {\n          x: sourcePosition.x + (Math.random() - 0.5) * 80,\n          y: sourcePosition.y + (Math.random() - 0.5) * 80\n        };\n      }\n    });\n    var width = graph.get('width');\n    var height = graph.get('height');\n    nodes.forEach(function (node) {\n      var position = positionMap[node.id] || {\n        x: width / 2 + (Math.random() - 0.5) * 20,\n        y: height / 2 + (Math.random() - 0.5) * 20\n      };\n      node.x = position.x;\n      node.y = position.y;\n    });\n  };\n  LayoutController.prototype.initWithPreset = function (hasPresetCallback, noPresetCallback) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, layoutCfg, data, preset, isGPU, layoutType, presetLayout;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this, layoutCfg = _a.layoutCfg, data = _a.data;\n              preset = layoutCfg.preset;\n              if (!(preset === null || preset === void 0 ? void 0 : preset.type) || !Layout[preset === null || preset === void 0 ? void 0 : preset.type]) {\n                noPresetCallback === null || noPresetCallback === void 0 ? void 0 : noPresetCallback();\n                resolve();\n                return [2 /*return*/, false];\n              }\n              isGPU = getGPUEnabled(preset, preset.type);\n              layoutType = isGPU ? \"\".concat(preset.type, \"-gpu\") : preset.type;\n              presetLayout = new Layout[layoutType](preset);\n              delete layoutCfg.preset;\n              presetLayout.init(data);\n              return [4 /*yield*/, presetLayout.execute()];\n            case 1:\n              _b.sent();\n              hasPresetCallback === null || hasPresetCallback === void 0 ? void 0 : hasPresetCallback();\n              resolve();\n              return [2 /*return*/, true];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @return {boolean} 是否支持web worker\n   */\n  LayoutController.prototype.layoutWithWorker = function (data, success) {\n    var _this = this;\n    var _a = this,\n      layoutCfg = _a.layoutCfg,\n      graph = _a.graph;\n    var worker = this.getWorker();\n    // 每次worker message event handler调用之间的共享数据，会被修改。\n    var workerData = this.workerData;\n    if (!worker) {\n      return false;\n    }\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null;\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return _this.runWebworker(worker, data, layoutCfg);\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n      var _loop_1 = function _loop_1(cfg) {\n        start = start.then(function () {\n          return _this.runWebworker(worker, data, cfg);\n        });\n      };\n      for (var _i = 0, _b = layoutCfg.pipes; _i < _b.length; _i++) {\n        var cfg = _b[_i];\n        _loop_1(cfg);\n      }\n    }\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n        success === null || success === void 0 ? void 0 : success();\n      }).catch(function (error) {\n        console.error('layout failed', error);\n      });\n    }\n    return true;\n  };\n  LayoutController.prototype.runWebworker = function (worker, allData, layoutCfg) {\n    var _this = this;\n    var isGPU = this.isGPU;\n    var data = this.filterLayoutData(allData, layoutCfg);\n    var nodes = data.nodes,\n      edges = data.edges;\n    var offScreenCanvas = document.createElement('canvas');\n    var gpuWorkerAbility = isGPU && typeof window !== 'undefined' &&\n    // eslint-disable-next-line @typescript-eslint/dot-notation\n    window.navigator && !navigator[\"gpu\"] &&\n    // WebGPU 还不支持 OffscreenCanvas\n    'OffscreenCanvas' in window && 'transferControlToOffscreen' in offScreenCanvas;\n    // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n    if (!gpuWorkerAbility) {\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.RUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg\n      });\n    } else {\n      var offscreen = offScreenCanvas.transferControlToOffscreen();\n      // filteredLayoutCfg.canvas = offscreen;\n      filteredLayoutCfg.type = \"\".concat(filteredLayoutCfg.type, \"-gpu\");\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.GPURUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg,\n        canvas: offscreen\n      }, [offscreen]);\n    }\n    return new Promise(function (reslove, reject) {\n      worker.onmessage = function (event) {\n        _this.handleWorkerMessage(reslove, reject, event, data, layoutCfg);\n      };\n    });\n  };\n  // success callback will be called when updating graph positions for the first time.\n  LayoutController.prototype.handleWorkerMessage = function (reslove, reject, event, data, layoutCfg) {\n    var _a = this,\n      graph = _a.graph,\n      workerData = _a.workerData;\n    var eventData = event.data;\n    var type = eventData.type;\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              reslove();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                reslove();\n              });\n            }\n            workerData.requestId = null;\n          });\n        }\n        break;\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          reslove();\n        }\n        break;\n      case LAYOUT_MESSAGE.GPUEND:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateGPUWorkerLayoutPosition(data, eventData);\n          reslove();\n        }\n        break;\n      case LAYOUT_MESSAGE.ERROR:\n        console.warn('Web-Worker layout error!', eventData.message);\n        reject();\n        break;\n      default:\n        reject();\n        break;\n    }\n  };\n  // 更新布局参数\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _this = this;\n    var _a = this,\n      graph = _a.graph,\n      layoutMethods = _a.layoutMethods;\n    if (!graph || graph.get('destroyed')) return;\n    // disableTriggerLayout 不触发重新布局，仅更新参数\n    var disableTriggerLayout = cfg.disableTriggerLayout,\n      otherCfg = __rest(cfg, [\"disableTriggerLayout\"]);\n    var layoutCfg = mix({}, this.layoutCfg, otherCfg);\n    this.layoutCfg = layoutCfg;\n    // disableTriggerLayout 不触发重新布局，仅更新参数\n    if (disableTriggerLayout) {\n      return;\n    }\n    if (!(layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length)) {\n      this.layout();\n      return;\n    }\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n    if (otherCfg.workerEnabled && this.layoutWithWorker(this.data, null)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n    if ((layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length) === 1) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.updateLayoutMethod(layoutMethods[0], layoutCfg)];\n              case 1:\n                return [2 /*return*/, _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length) {\n      hasLayout = true;\n      layoutMethods.forEach(function (layoutMethod, index) {\n        var currentCfg = layoutCfg.pipes[index];\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4 /*yield*/, this.updateLayoutMethod(layoutMethod, currentCfg)];\n                case 1:\n                  return [2 /*return*/, _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n    if (hasLayout) {\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n      }).catch(function (error) {\n        console.warn('layout failed', error);\n      });\n    }\n  };\n  LayoutController.prototype.adjustPipesBox = function (data, adjust) {\n    var _this = this;\n    return new Promise(function (resolve) {\n      var nodes = data.nodes;\n      if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n        resolve();\n      }\n      if (!LAYOUT_PIPES_ADJUST_NAMES.includes(adjust)) {\n        console.warn(\"The adjust type \".concat(adjust, \" is not supported yet, please assign it with 'force', 'grid', or 'circular'.\"));\n        resolve();\n      }\n      var layoutCfg = {\n        center: _this.layoutCfg.center,\n        nodeSize: function nodeSize(d) {\n          return Math.max(d.height, d.width);\n        },\n        preventOverlap: true,\n        onLayoutEnd: function onLayoutEnd() {}\n      };\n      // 计算出大单元\n      var _a = _this.getLayoutBBox(nodes),\n        groupNodes = _a.groupNodes,\n        layoutNodes = _a.layoutNodes;\n      var preNodes = clone(layoutNodes);\n      // 根据大单元坐标的变化，调整这里面每个小单元nodes\n      layoutCfg.onLayoutEnd = function () {\n        layoutNodes === null || layoutNodes === void 0 ? void 0 : layoutNodes.forEach(function (ele, index) {\n          var _a, _b, _c;\n          var dx = ele.x - ((_a = preNodes[index]) === null || _a === void 0 ? void 0 : _a.x);\n          var dy = ele.y - ((_b = preNodes[index]) === null || _b === void 0 ? void 0 : _b.y);\n          (_c = groupNodes[index]) === null || _c === void 0 ? void 0 : _c.forEach(function (n) {\n            n.x += dx;\n            n.y += dy;\n          });\n        });\n        resolve();\n      };\n      var layoutMethod = new Layout[adjust](layoutCfg);\n      layoutMethod.layout({\n        nodes: layoutNodes\n      });\n    });\n  };\n  LayoutController.prototype.destroy = function () {\n    this.destoryLayoutMethods();\n    var worker = this.worker;\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n    this.destroyed = true;\n    this.graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n    this.graph = null;\n  };\n  return LayoutController;\n}(AbstractLayout);\nexport default LayoutController;\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  var nodeLength = nodes.length;\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  }\n}\nfunction filterObject(collection, callback) {\n  var result = {};\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n  return collection;\n}\nfunction updateGPUWorkerLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var vertexEdgeData = layoutData.vertexEdgeData;\n  var nodeLength = nodes.length;\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    var x = vertexEdgeData[4 * i];\n    var y = vertexEdgeData[4 * i + 1];\n    node.x = x;\n    node.y = y;\n  }\n}\nfunction addLayoutOrder(data, order) {\n  var _a;\n  if (!((_a = data === null || data === void 0 ? void 0 : data.nodes) === null || _a === void 0 ? void 0 : _a.length)) {\n    return;\n  }\n  var nodes = data.nodes;\n  nodes.forEach(function (node) {\n    node.layoutOrder = order;\n  });\n}\nfunction hasGPUVersion(layoutName) {\n  return GPU_LAYOUT_NAMES.includes(layoutName);\n}\nfunction getGPUEnabled(layoutCfg, layoutType) {\n  var type = layoutType;\n  // 防止用户直接用 -gpu 结尾指定布局\n  if (layoutType && layoutType.split('-')[1] === 'gpu') {\n    type = layoutType.split('-')[0];\n    layoutCfg.gpuEnabled = true;\n  }\n  var enableGPU = false;\n  if (layoutCfg.gpuEnabled) {\n    enableGPU = true;\n    // 打开下面语句将会导致 webworker 报找不到 window\n    if (!gpuDetector().webgl) {\n      console.warn(\"Your browser does not support webGL or GPGPU. The layout will run in CPU.\");\n      enableGPU = false;\n    }\n  }\n  // the layout does not support GPU, will run in CPU\n  if (enableGPU && !hasGPUVersion(type)) {\n    console.warn(\"The '\".concat(type, \"' layout does not support GPU calculation for now, it will run in CPU.\"));\n    enableGPU = false;\n  }\n  return enableGPU;\n}","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","__awaiter","__extends","__generator","__rest","AbstractLayout","Util","Layout","LayoutWorker","LAYOUT_MESSAGE","gpuDetector","mix","clone","mockRaf","cb","setTimeout","mockCaf","reqId","clearTimeout","helper","requestAnimationFrame","callback","fn","window","webkitRequestAnimationFrame","cancelAnimationFrame","requestId","webkitCancelAnimationFrame","GPU_LAYOUT_NAMES","LAYOUT_PIPES_ADJUST_NAMES","LayoutController","_super","graph","_this","call","layoutCfg","get","layoutType","getLayoutType","worker","workerData","initLayout","getWorker","Worker","console","warn","workerScriptURL","stopWorker","terminate","requestId2","execLayoutMethod","order","Promise","reslove","reject","onTick_1","animate_1","isDefaultAnimateLayout_1","tick","enableTick","layoutMethod","onTick_2","layoutData","_a","label","type","onLayoutEnd","emit","isGPU","hasGPUVersion","concat","isForce","onTick","animate","undefined","refreshPositions","comboTrees","layoutMethods","destroy","e","filterLayoutData","data","addLayoutOrder","init","execute","sent","isCustomLayout","updateLayoutMethod","onTick_3","animate_2","isDefaultAnimateLayout_2","updateCfg","layout","success","setDataFromGraph","_b","nodes","hiddenNodes","width","height","Object","assign","center","prevHasNodes","forEach","method","length","preLayoutTypes","destoryLayoutMethods","start","resolve","tweakInit","initPositions","initHiddenPromise","then","getGPUEnabled","layoutEndFormatted","adjust","onAllLayoutEnd","refreshLayout","pipes","adjustPipesBox","workerEnabled","layoutWithWorker","hasLayout","cfg","index","catch","error","edges","positionMap","node","x","y","isNaN","id","mass","edge","source","target","sourcePosition","targetPosition","Math","random","position","initWithPreset","hasPresetCallback","noPresetCallback","preset","presetLayout","currentTick","currentTickData","runWebworker","_loop_1","_i","allData","offScreenCanvas","document","createElement","gpuWorkerAbility","navigator","filteredLayoutCfg","filterObject","value","postMessage","RUN","offscreen","transferControlToOffscreen","GPURUN","canvas","onmessage","event","handleWorkerMessage","eventData","TICK","updateLayoutPosition","totalTicks","END","GPUEND","updateGPUWorkerLayoutPosition","ERROR","message","updateLayoutCfg","disableTriggerLayout","otherCfg","currentCfg","includes","nodeSize","d","max","preventOverlap","getLayoutBBox","groupNodes","layoutNodes","preNodes","ele","_c","dx","dy","n","destroyed","set","nodeLength","i","collection","result","keys","key","hasOwnProperty","vertexEdgeData","layoutOrder","layoutName","split","gpuEnabled","enableGPU","webgl"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-pc/es/graph/controller/layout.js"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nimport { __awaiter, __extends, __generator, __rest } from \"tslib\";\nimport { AbstractLayout, Util } from '@antv/g6-core';\nimport { Layout } from '../../layout';\nimport { LayoutWorker } from '../../layout/worker/layout';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { gpuDetector } from '../../util/gpu';\nimport { mix, clone } from '@antv/util';\n// eslint-disable-next-line @typescript-eslint/no-implied-eval\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = typeof window !== 'undefined' ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf : mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = typeof window !== 'undefined' ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf : mockCaf;\n    return fn(requestId);\n  }\n};\nvar GPU_LAYOUT_NAMES = ['fruchterman', 'gForce'];\nvar LAYOUT_PIPES_ADJUST_NAMES = ['force', 'grid', 'circular'];\nvar LayoutController = /** @class */function (_super) {\n  __extends(LayoutController, _super);\n  // the configurations of the layout\n  // private layoutCfg: any; // LayoutOptions\n  // the type name of the layout\n  // private layoutType: string;\n  // private data: GraphData;\n  // private layoutMethods: typeof Layout;\n  function LayoutController(graph) {\n    var _this = _super.call(this, graph) || this;\n    _this.graph = graph;\n    _this.layoutCfg = graph.get('layout') || {};\n    _this.layoutType = _this.getLayoutType();\n    _this.worker = null;\n    _this.workerData = {};\n    _this.initLayout();\n    return _this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  LayoutController.prototype.initLayout = function () {\n    // no data before rendering\n  };\n  // get layout worker and create one if not exists\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = LayoutWorker(this.layoutCfg.workerScriptURL);\n    }\n    return this.worker;\n  };\n  // stop layout worker\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n    if (!this.worker) {\n      return;\n    }\n    this.worker.terminate();\n    this.worker = null;\n    // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n  LayoutController.prototype.execLayoutMethod = function (layoutCfg, order) {\n    var _this = this;\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, onTick_1, animate_1, isDefaultAnimateLayout_1, tick, enableTick, layoutMethod, onTick_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              if (!graph || graph.get('destroyed')) return [2 /*return*/];\n              layoutType = layoutCfg.type;\n              // 每个布局方法都需要注册\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n              // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n              if (layoutType && this.isGPU) {\n                if (!hasGPUVersion(layoutType)) {\n                  console.warn(\"The '\".concat(layoutType, \"' layout does not support GPU calculation for now, it will run in CPU.\"));\n                } else {\n                  layoutType = \"\".concat(layoutType, \"-gpu\");\n                }\n              }\n              if (Util.isForce(layoutType)) {\n                onTick_1 = layoutCfg.onTick, animate_1 = layoutCfg.animate;\n                isDefaultAnimateLayout_1 = animate_1 === undefined && (layoutType === 'force' || layoutType === 'force2');\n                tick = function tick() {\n                  if (onTick_1) {\n                    onTick_1();\n                  }\n                  if (animate_1 || isDefaultAnimateLayout_1) graph.refreshPositions();\n                };\n                layoutCfg.tick = tick;\n              } else if (layoutType === 'comboForce' || layoutType === 'comboCombined') {\n                layoutCfg.comboTrees = graph.get('comboTrees');\n              }\n              enableTick = false;\n              try {\n                layoutMethod = new Layout[layoutType](layoutCfg);\n                if (this.layoutMethods[order]) {\n                  this.layoutMethods[order].destroy();\n                }\n                this.layoutMethods[order] = layoutMethod;\n              } catch (e) {\n                console.warn(\"The layout method: '\".concat(layoutType, \"' does not exist! Please specify it first.\"));\n                reject();\n              }\n              // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n              enableTick = layoutMethod.enableTick;\n              if (enableTick) {\n                onTick_2 = layoutCfg.onTick;\n                tick = function tick() {\n                  if (onTick_2) {\n                    onTick_2();\n                  }\n                  graph.refreshPositions();\n                };\n                layoutMethod.tick = tick;\n              }\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              addLayoutOrder(layoutData, order);\n              layoutMethod.init(layoutData);\n              // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n              // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4 /*yield*/, layoutMethod.execute()];\n            case 1:\n              _a.sent();\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n\n  LayoutController.prototype.updateLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, onTick_3, animate_2, isDefaultAnimateLayout_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type;\n              // 每个布局方法都需要注册\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n              if (Util.isForce(layoutType)) {\n                onTick_3 = layoutCfg.onTick, animate_2 = layoutCfg.animate;\n                isDefaultAnimateLayout_2 = animate_2 === undefined && (layoutType === 'force' || layoutType === 'force2');\n                tick = function tick() {\n                  onTick_3 === null || onTick_3 === void 0 ? void 0 : onTick_3();\n                  if (animate_2 || isDefaultAnimateLayout_2) graph.refreshPositions();\n                };\n                layoutCfg.tick = tick;\n              }\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              layoutMethod.init(layoutData);\n              layoutMethod.updateCfg(layoutCfg);\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4 /*yield*/, layoutMethod.execute()];\n            case 1:\n              _a.sent();\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n  LayoutController.prototype.layout = function (success) {\n    var _this = this;\n    var _a;\n    var graph = this.graph;\n    if (!graph || graph.get('destroyed')) return;\n    this.data = this.setDataFromGraph();\n    var _b = this.data,\n      nodes = _b.nodes,\n      hiddenNodes = _b.hiddenNodes;\n    if (!nodes) {\n      return false;\n    }\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    var layoutType = layoutCfg.type;\n    var prevHasNodes = false;\n    (_a = this.layoutMethods) === null || _a === void 0 ? void 0 : _a.forEach(function (method) {\n      var _a;\n      return prevHasNodes = !!((_a = method.nodes) === null || _a === void 0 ? void 0 : _a.length) || prevHasNodes;\n    });\n    var preLayoutTypes = this.destoryLayoutMethods();\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    // 增量情况下（上一次的布局与当前布局一致），上一次有节点，使用 treakInit\n    if (prevHasNodes && layoutType && (preLayoutTypes === null || preLayoutTypes === void 0 ? void 0 : preLayoutTypes.length) === 1 && preLayoutTypes[0] === layoutType) {\n      this.tweakInit();\n    } else {\n      // 初始化位置，若配置了 preset，则使用 preset 的参数生成布局作为预布局，否则使用 grid\n      start = this.initPositions(layoutCfg.center, nodes);\n    }\n    // init hidden nodes\n    var initHiddenPromise = this.initPositions(layoutCfg.center, hiddenNodes);\n    initHiddenPromise.then();\n    // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n    this.isGPU = getGPUEnabled(layoutCfg, layoutType);\n    // 在 onAllLayoutEnd 中执行用户自定义 onLayoutEnd，触发 afterlayout、更新节点位置、fitView/fitCenter、触发 afterrender\n    var onLayoutEnd = layoutCfg.onLayoutEnd,\n      layoutEndFormatted = layoutCfg.layoutEndFormatted,\n      adjust = layoutCfg.adjust;\n    if (!layoutEndFormatted) {\n      layoutCfg.layoutEndFormatted = true;\n      layoutCfg.onAllLayoutEnd = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // 执行用户自定义 onLayoutEnd\n                if (onLayoutEnd) {\n                  onLayoutEnd(nodes);\n                }\n                // 更新节点位置\n                this.refreshLayout();\n                if (!(adjust && layoutCfg.pipes)) return [3 /*break*/, 2];\n                return [4 /*yield*/, this.adjustPipesBox(this.data, adjust)];\n              case 1:\n                _a.sent();\n                this.refreshLayout();\n                _a.label = 2;\n              case 2:\n                // 触发 afterlayout\n                graph.emit('afterlayout');\n                return [2 /*return*/];\n            }\n          });\n        });\n      };\n    }\n\n    this.stopWorker();\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data, success)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n    var hasLayout = false;\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.execLayoutMethod(layoutCfg, 0)];\n              case 1:\n                return [2 /*return*/, _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n      layoutCfg.pipes.forEach(function (cfg, index) {\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4 /*yield*/, this.execLayoutMethod(cfg, index)];\n                case 1:\n                  return [2 /*return*/, _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n        // 在执行 execute 后立即执行 success，且在 timeBar 中有 throttle，可以防止 timeBar 监听 afterrender 进行 changeData 后 layout，从而死循环\n        // 对于 force 一类布局完成后的 fitView 需要用户自己在 onLayoutEnd 中配置\n        if (success) success();\n      }).catch(function (error) {\n        console.warn('graph layout failed,', error);\n      });\n    } else {\n      // 无布局配置\n      graph.refreshPositions();\n      success === null || success === void 0 ? void 0 : success();\n    }\n    return false;\n  };\n  /**\n   * 增量数据初始化位置\n   */\n  LayoutController.prototype.tweakInit = function () {\n    var _a = this,\n      data = _a.data,\n      graph = _a.graph;\n    var nodes = data.nodes,\n      edges = data.edges;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    var positionMap = {};\n    nodes.forEach(function (node) {\n      var x = node.x,\n        y = node.y;\n      if (!isNaN(x) && !isNaN(y)) {\n        positionMap[node.id] = {\n          x: x,\n          y: y\n        };\n        // 有位置信息，则是原有节点，增加 mass\n        node.mass = node.mass || 2;\n      }\n    });\n    edges.forEach(function (edge) {\n      var source = edge.source,\n        target = edge.target;\n      var sourcePosition = positionMap[source];\n      var targetPosition = positionMap[target];\n      if (!sourcePosition && targetPosition) {\n        positionMap[source] = {\n          x: targetPosition.x + (Math.random() - 0.5) * 80,\n          y: targetPosition.y + (Math.random() - 0.5) * 80\n        };\n      } else if (!targetPosition && sourcePosition) {\n        positionMap[target] = {\n          x: sourcePosition.x + (Math.random() - 0.5) * 80,\n          y: sourcePosition.y + (Math.random() - 0.5) * 80\n        };\n      }\n    });\n    var width = graph.get('width');\n    var height = graph.get('height');\n    nodes.forEach(function (node) {\n      var position = positionMap[node.id] || {\n        x: width / 2 + (Math.random() - 0.5) * 20,\n        y: height / 2 + (Math.random() - 0.5) * 20\n      };\n      node.x = position.x;\n      node.y = position.y;\n    });\n  };\n  LayoutController.prototype.initWithPreset = function (hasPresetCallback, noPresetCallback) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, layoutCfg, data, preset, isGPU, layoutType, presetLayout;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this, layoutCfg = _a.layoutCfg, data = _a.data;\n              preset = layoutCfg.preset;\n              if (!(preset === null || preset === void 0 ? void 0 : preset.type) || !Layout[preset === null || preset === void 0 ? void 0 : preset.type]) {\n                noPresetCallback === null || noPresetCallback === void 0 ? void 0 : noPresetCallback();\n                resolve();\n                return [2 /*return*/, false];\n              }\n              isGPU = getGPUEnabled(preset, preset.type);\n              layoutType = isGPU ? \"\".concat(preset.type, \"-gpu\") : preset.type;\n              presetLayout = new Layout[layoutType](preset);\n              delete layoutCfg.preset;\n              presetLayout.init(data);\n              return [4 /*yield*/, presetLayout.execute()];\n            case 1:\n              _b.sent();\n              hasPresetCallback === null || hasPresetCallback === void 0 ? void 0 : hasPresetCallback();\n              resolve();\n              return [2 /*return*/, true];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @return {boolean} 是否支持web worker\n   */\n  LayoutController.prototype.layoutWithWorker = function (data, success) {\n    var _this = this;\n    var _a = this,\n      layoutCfg = _a.layoutCfg,\n      graph = _a.graph;\n    var worker = this.getWorker();\n    // 每次worker message event handler调用之间的共享数据，会被修改。\n    var workerData = this.workerData;\n    if (!worker) {\n      return false;\n    }\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null;\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return _this.runWebworker(worker, data, layoutCfg);\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n      var _loop_1 = function _loop_1(cfg) {\n        start = start.then(function () {\n          return _this.runWebworker(worker, data, cfg);\n        });\n      };\n      for (var _i = 0, _b = layoutCfg.pipes; _i < _b.length; _i++) {\n        var cfg = _b[_i];\n        _loop_1(cfg);\n      }\n    }\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n        success === null || success === void 0 ? void 0 : success();\n      }).catch(function (error) {\n        console.error('layout failed', error);\n      });\n    }\n    return true;\n  };\n  LayoutController.prototype.runWebworker = function (worker, allData, layoutCfg) {\n    var _this = this;\n    var isGPU = this.isGPU;\n    var data = this.filterLayoutData(allData, layoutCfg);\n    var nodes = data.nodes,\n      edges = data.edges;\n    var offScreenCanvas = document.createElement('canvas');\n    var gpuWorkerAbility = isGPU && typeof window !== 'undefined' &&\n    // eslint-disable-next-line @typescript-eslint/dot-notation\n    window.navigator && !navigator[\"gpu\"] &&\n    // WebGPU 还不支持 OffscreenCanvas\n    'OffscreenCanvas' in window && 'transferControlToOffscreen' in offScreenCanvas;\n    // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n    if (!gpuWorkerAbility) {\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.RUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg\n      });\n    } else {\n      var offscreen = offScreenCanvas.transferControlToOffscreen();\n      // filteredLayoutCfg.canvas = offscreen;\n      filteredLayoutCfg.type = \"\".concat(filteredLayoutCfg.type, \"-gpu\");\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.GPURUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg,\n        canvas: offscreen\n      }, [offscreen]);\n    }\n    return new Promise(function (reslove, reject) {\n      worker.onmessage = function (event) {\n        _this.handleWorkerMessage(reslove, reject, event, data, layoutCfg);\n      };\n    });\n  };\n  // success callback will be called when updating graph positions for the first time.\n  LayoutController.prototype.handleWorkerMessage = function (reslove, reject, event, data, layoutCfg) {\n    var _a = this,\n      graph = _a.graph,\n      workerData = _a.workerData;\n    var eventData = event.data;\n    var type = eventData.type;\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              reslove();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                reslove();\n              });\n            }\n            workerData.requestId = null;\n          });\n        }\n        break;\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          reslove();\n        }\n        break;\n      case LAYOUT_MESSAGE.GPUEND:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateGPUWorkerLayoutPosition(data, eventData);\n          reslove();\n        }\n        break;\n      case LAYOUT_MESSAGE.ERROR:\n        console.warn('Web-Worker layout error!', eventData.message);\n        reject();\n        break;\n      default:\n        reject();\n        break;\n    }\n  };\n  // 更新布局参数\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _this = this;\n    var _a = this,\n      graph = _a.graph,\n      layoutMethods = _a.layoutMethods;\n    if (!graph || graph.get('destroyed')) return;\n    // disableTriggerLayout 不触发重新布局，仅更新参数\n    var disableTriggerLayout = cfg.disableTriggerLayout,\n      otherCfg = __rest(cfg, [\"disableTriggerLayout\"]);\n    var layoutCfg = mix({}, this.layoutCfg, otherCfg);\n    this.layoutCfg = layoutCfg;\n    // disableTriggerLayout 不触发重新布局，仅更新参数\n    if (disableTriggerLayout) {\n      return;\n    }\n    if (!(layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length)) {\n      this.layout();\n      return;\n    }\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n    if (otherCfg.workerEnabled && this.layoutWithWorker(this.data, null)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n    if ((layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length) === 1) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.updateLayoutMethod(layoutMethods[0], layoutCfg)];\n              case 1:\n                return [2 /*return*/, _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length) {\n      hasLayout = true;\n      layoutMethods.forEach(function (layoutMethod, index) {\n        var currentCfg = layoutCfg.pipes[index];\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4 /*yield*/, this.updateLayoutMethod(layoutMethod, currentCfg)];\n                case 1:\n                  return [2 /*return*/, _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n    if (hasLayout) {\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n      }).catch(function (error) {\n        console.warn('layout failed', error);\n      });\n    }\n  };\n  LayoutController.prototype.adjustPipesBox = function (data, adjust) {\n    var _this = this;\n    return new Promise(function (resolve) {\n      var nodes = data.nodes;\n      if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n        resolve();\n      }\n      if (!LAYOUT_PIPES_ADJUST_NAMES.includes(adjust)) {\n        console.warn(\"The adjust type \".concat(adjust, \" is not supported yet, please assign it with 'force', 'grid', or 'circular'.\"));\n        resolve();\n      }\n      var layoutCfg = {\n        center: _this.layoutCfg.center,\n        nodeSize: function nodeSize(d) {\n          return Math.max(d.height, d.width);\n        },\n        preventOverlap: true,\n        onLayoutEnd: function onLayoutEnd() {}\n      };\n      // 计算出大单元\n      var _a = _this.getLayoutBBox(nodes),\n        groupNodes = _a.groupNodes,\n        layoutNodes = _a.layoutNodes;\n      var preNodes = clone(layoutNodes);\n      // 根据大单元坐标的变化，调整这里面每个小单元nodes\n      layoutCfg.onLayoutEnd = function () {\n        layoutNodes === null || layoutNodes === void 0 ? void 0 : layoutNodes.forEach(function (ele, index) {\n          var _a, _b, _c;\n          var dx = ele.x - ((_a = preNodes[index]) === null || _a === void 0 ? void 0 : _a.x);\n          var dy = ele.y - ((_b = preNodes[index]) === null || _b === void 0 ? void 0 : _b.y);\n          (_c = groupNodes[index]) === null || _c === void 0 ? void 0 : _c.forEach(function (n) {\n            n.x += dx;\n            n.y += dy;\n          });\n        });\n        resolve();\n      };\n      var layoutMethod = new Layout[adjust](layoutCfg);\n      layoutMethod.layout({\n        nodes: layoutNodes\n      });\n    });\n  };\n  LayoutController.prototype.destroy = function () {\n    this.destoryLayoutMethods();\n    var worker = this.worker;\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n    this.destroyed = true;\n    this.graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n    this.graph = null;\n  };\n  return LayoutController;\n}(AbstractLayout);\nexport default LayoutController;\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  var nodeLength = nodes.length;\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  }\n}\nfunction filterObject(collection, callback) {\n  var result = {};\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n  return collection;\n}\nfunction updateGPUWorkerLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var vertexEdgeData = layoutData.vertexEdgeData;\n  var nodeLength = nodes.length;\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    var x = vertexEdgeData[4 * i];\n    var y = vertexEdgeData[4 * i + 1];\n    node.x = x;\n    node.y = y;\n  }\n}\nfunction addLayoutOrder(data, order) {\n  var _a;\n  if (!((_a = data === null || data === void 0 ? void 0 : data.nodes) === null || _a === void 0 ? void 0 : _a.length)) {\n    return;\n  }\n  var nodes = data.nodes;\n  nodes.forEach(function (node) {\n    node.layoutOrder = order;\n  });\n}\nfunction hasGPUVersion(layoutName) {\n  return GPU_LAYOUT_NAMES.includes(layoutName);\n}\nfunction getGPUEnabled(layoutCfg, layoutType) {\n  var type = layoutType;\n  // 防止用户直接用 -gpu 结尾指定布局\n  if (layoutType && layoutType.split('-')[1] === 'gpu') {\n    type = layoutType.split('-')[0];\n    layoutCfg.gpuEnabled = true;\n  }\n  var enableGPU = false;\n  if (layoutCfg.gpuEnabled) {\n    enableGPU = true;\n    // 打开下面语句将会导致 webworker 报找不到 window\n    if (!gpuDetector().webgl) {\n      console.warn(\"Your browser does not support webGL or GPGPU. The layout will run in CPU.\");\n      enableGPU = false;\n    }\n  }\n  // the layout does not support GPU, will run in CPU\n  if (enableGPU && !hasGPUVersion(type)) {\n    console.warn(\"The '\".concat(type, \"' layout does not support GPU calculation for now, it will run in CPU.\"));\n    enableGPU = false;\n  }\n  return enableGPU;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}