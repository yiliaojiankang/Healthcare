{"ast":null,"code":"import WebWorker from './work';\nexport var LayoutWorker = function LayoutWorker(workerScriptURL) {\n  if (workerScriptURL === void 0) {\n    workerScriptURL = 'https://unpkg.com/@antv/layout@0.3.23/dist/layout.min.js';\n  }\n  function workerCode() {\n    var LAYOUT_MESSAGE = {\n      // run layout\n      RUN: 'LAYOUT_RUN',\n      // layout ended with success\n      END: 'LAYOUT_END',\n      // layout error\n      ERROR: 'LAYOUT_ERROR',\n      // layout tick, used in force directed layout\n      TICK: 'LAYOUT_TICK',\n      GPURUN: 'GPU_LAYOUT_RUN',\n      GPUEND: 'GPU_LAYOUT_END'\n    };\n    // @ts-ignore\n    layout.registerLayout('grid', layout.GridLayout);\n    // @ts-ignore\n    layout.registerLayout('random', layout.RandomLayout);\n    // @ts-ignore\n    layout.registerLayout('force', layout.ForceLayout);\n    // @ts-ignore\n    layout.registerLayout('force2', layout.Force2Layout);\n    // @ts-ignore\n    layout.registerLayout('circular', layout.CircularLayout);\n    // @ts-ignore\n    layout.registerLayout('dagre', layout.DagreLayout);\n    // @ts-ignore\n    layout.registerLayout('dagreCompound', layout.DagreCompoundLayout);\n    // @ts-ignore\n    layout.registerLayout('radial', layout.RadialLayout);\n    // @ts-ignore\n    layout.registerLayout('concentric', layout.ConcentricLayout);\n    // @ts-ignore\n    layout.registerLayout('mds', layout.MDSLayout);\n    // @ts-ignore\n    layout.registerLayout('fruchterman', layout.FruchtermanLayout);\n    // @ts-ignore\n    layout.registerLayout('fruchterman-gpu', layout.FruchtermanGPULayout);\n    // @ts-ignore\n    layout.registerLayout('gForce', layout.GForceLayout);\n    // @ts-ignore\n    layout.registerLayout('gForce-gpu', layout.GForceGPULayout);\n    // @ts-ignore\n    layout.registerLayout('comboForce', layout.ComboForceLayout);\n    // @ts-ignore\n    layout.registerLayout('comboCombined', layout.ComboCombinedLayout);\n    // @ts-ignore\n    layout.registerLayout('forceAtlas2', layout.ForceAtlas2Layout);\n    function isLayoutMessage(event) {\n      var type = event.data.type;\n      return type === LAYOUT_MESSAGE.RUN || type === LAYOUT_MESSAGE.GPURUN;\n    }\n    function handleLayoutMessage(event) {\n      var _this = this;\n      var type = event.data.type;\n      switch (type) {\n        case LAYOUT_MESSAGE.RUN:\n          {\n            var _a = event.data,\n              nodes_1 = _a.nodes,\n              edges = _a.edges,\n              _b = _a.layoutCfg,\n              layoutCfg = _b === void 0 ? {} : _b;\n            var layoutType = layoutCfg.type;\n            // @ts-ignore\n            var LayoutClass = layout.getLayoutByName(layoutType);\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            }\n            // eslint-disable-next-line prefer-const\n            var layoutMethod_1;\n            layoutCfg.onLayoutEnd = function () {\n              _this.postMessage({\n                type: LAYOUT_MESSAGE.END,\n                nodes: nodes_1\n              });\n              layoutMethod_1 === null || layoutMethod_1 === void 0 ? void 0 : layoutMethod_1.destroy();\n            };\n            layoutMethod_1 = new LayoutClass(layoutCfg);\n            layoutMethod_1.init({\n              nodes: nodes_1,\n              edges: edges\n            });\n            layoutMethod_1.execute();\n            break;\n          }\n        case LAYOUT_MESSAGE.GPURUN:\n          {\n            var _c = event.data,\n              nodes = _c.nodes,\n              edges = _c.edges,\n              _d = _c.layoutCfg,\n              layoutCfg = _d === void 0 ? {} : _d,\n              canvas = _c.canvas;\n            var layoutType = layoutCfg.type;\n            // @ts-ignore\n            var LayoutClass = layout.getLayoutByName(layoutType);\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            }\n            if (layoutType.split('-')[1] !== 'gpu') {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" does not support GPU\")\n              });\n              break;\n            }\n            var layoutMethod = new LayoutClass(layoutCfg);\n            layoutMethod.init({\n              nodes: nodes,\n              edges: edges\n            });\n            layoutMethod.executeWithWorker(canvas, this);\n            break;\n          }\n        default:\n          break;\n      }\n    }\n    onmessage = function onmessage(event) {\n      if (isLayoutMessage(event)) {\n        handleLayoutMessage(event);\n      }\n    };\n  }\n  var layoutWorker = new WebWorker(workerCode, workerScriptURL);\n  return layoutWorker;\n};","map":{"version":3,"names":["WebWorker","LayoutWorker","workerScriptURL","workerCode","LAYOUT_MESSAGE","RUN","END","ERROR","TICK","GPURUN","GPUEND","layout","registerLayout","GridLayout","RandomLayout","ForceLayout","Force2Layout","CircularLayout","DagreLayout","DagreCompoundLayout","RadialLayout","ConcentricLayout","MDSLayout","FruchtermanLayout","FruchtermanGPULayout","GForceLayout","GForceGPULayout","ComboForceLayout","ComboCombinedLayout","ForceAtlas2Layout","isLayoutMessage","event","type","data","handleLayoutMessage","_this","_a","nodes_1","nodes","edges","_b","layoutCfg","layoutType","LayoutClass","getLayoutByName","postMessage","message","concat","layoutMethod_1","onLayoutEnd","destroy","init","execute","_c","_d","canvas","split","layoutMethod","executeWithWorker","onmessage","layoutWorker"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-pc/es/layout/worker/layout.js"],"sourcesContent":["import WebWorker from './work';\nexport var LayoutWorker = function LayoutWorker(workerScriptURL) {\n  if (workerScriptURL === void 0) {\n    workerScriptURL = 'https://unpkg.com/@antv/layout@0.3.23/dist/layout.min.js';\n  }\n  function workerCode() {\n    var LAYOUT_MESSAGE = {\n      // run layout\n      RUN: 'LAYOUT_RUN',\n      // layout ended with success\n      END: 'LAYOUT_END',\n      // layout error\n      ERROR: 'LAYOUT_ERROR',\n      // layout tick, used in force directed layout\n      TICK: 'LAYOUT_TICK',\n      GPURUN: 'GPU_LAYOUT_RUN',\n      GPUEND: 'GPU_LAYOUT_END'\n    };\n    // @ts-ignore\n    layout.registerLayout('grid', layout.GridLayout);\n    // @ts-ignore\n    layout.registerLayout('random', layout.RandomLayout);\n    // @ts-ignore\n    layout.registerLayout('force', layout.ForceLayout);\n    // @ts-ignore\n    layout.registerLayout('force2', layout.Force2Layout);\n    // @ts-ignore\n    layout.registerLayout('circular', layout.CircularLayout);\n    // @ts-ignore\n    layout.registerLayout('dagre', layout.DagreLayout);\n    // @ts-ignore\n    layout.registerLayout('dagreCompound', layout.DagreCompoundLayout);\n    // @ts-ignore\n    layout.registerLayout('radial', layout.RadialLayout);\n    // @ts-ignore\n    layout.registerLayout('concentric', layout.ConcentricLayout);\n    // @ts-ignore\n    layout.registerLayout('mds', layout.MDSLayout);\n    // @ts-ignore\n    layout.registerLayout('fruchterman', layout.FruchtermanLayout);\n    // @ts-ignore\n    layout.registerLayout('fruchterman-gpu', layout.FruchtermanGPULayout);\n    // @ts-ignore\n    layout.registerLayout('gForce', layout.GForceLayout);\n    // @ts-ignore\n    layout.registerLayout('gForce-gpu', layout.GForceGPULayout);\n    // @ts-ignore\n    layout.registerLayout('comboForce', layout.ComboForceLayout);\n    // @ts-ignore\n    layout.registerLayout('comboCombined', layout.ComboCombinedLayout);\n    // @ts-ignore\n    layout.registerLayout('forceAtlas2', layout.ForceAtlas2Layout);\n    function isLayoutMessage(event) {\n      var type = event.data.type;\n      return type === LAYOUT_MESSAGE.RUN || type === LAYOUT_MESSAGE.GPURUN;\n    }\n    function handleLayoutMessage(event) {\n      var _this = this;\n      var type = event.data.type;\n      switch (type) {\n        case LAYOUT_MESSAGE.RUN:\n          {\n            var _a = event.data,\n              nodes_1 = _a.nodes,\n              edges = _a.edges,\n              _b = _a.layoutCfg,\n              layoutCfg = _b === void 0 ? {} : _b;\n            var layoutType = layoutCfg.type;\n            // @ts-ignore\n            var LayoutClass = layout.getLayoutByName(layoutType);\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            }\n            // eslint-disable-next-line prefer-const\n            var layoutMethod_1;\n            layoutCfg.onLayoutEnd = function () {\n              _this.postMessage({\n                type: LAYOUT_MESSAGE.END,\n                nodes: nodes_1\n              });\n              layoutMethod_1 === null || layoutMethod_1 === void 0 ? void 0 : layoutMethod_1.destroy();\n            };\n            layoutMethod_1 = new LayoutClass(layoutCfg);\n            layoutMethod_1.init({\n              nodes: nodes_1,\n              edges: edges\n            });\n            layoutMethod_1.execute();\n            break;\n          }\n        case LAYOUT_MESSAGE.GPURUN:\n          {\n            var _c = event.data,\n              nodes = _c.nodes,\n              edges = _c.edges,\n              _d = _c.layoutCfg,\n              layoutCfg = _d === void 0 ? {} : _d,\n              canvas = _c.canvas;\n            var layoutType = layoutCfg.type;\n            // @ts-ignore\n            var LayoutClass = layout.getLayoutByName(layoutType);\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            }\n            if (layoutType.split('-')[1] !== 'gpu') {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" does not support GPU\")\n              });\n              break;\n            }\n            var layoutMethod = new LayoutClass(layoutCfg);\n            layoutMethod.init({\n              nodes: nodes,\n              edges: edges\n            });\n            layoutMethod.executeWithWorker(canvas, this);\n            break;\n          }\n        default:\n          break;\n      }\n    }\n    onmessage = function onmessage(event) {\n      if (isLayoutMessage(event)) {\n        handleLayoutMessage(event);\n      }\n    };\n  }\n  var layoutWorker = new WebWorker(workerCode, workerScriptURL);\n  return layoutWorker;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}