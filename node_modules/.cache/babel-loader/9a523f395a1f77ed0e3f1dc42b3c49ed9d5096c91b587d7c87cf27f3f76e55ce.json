{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n    let qr = this.QR;\n    let m = qr.rows;\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}","map":{"version":3,"names":["Matrix","WrapperMatrix2D","hypotenuse","QrDecomposition","constructor","value","checkMatrix","qr","clone","m","rows","n","columns","rdiag","Float64Array","i","j","k","s","nrm","get","set","QR","Rdiag","solve","Error","isFullRank","count","X","subMatrix","upperTriangularMatrix","orthogonalMatrix"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/layout/node_modules/ml-matrix/src/dc/qr.js"],"sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}