{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { vec2 } from '@antv/matrix-util';\nimport { catmullRom2Bezier } from '@antv/path-util';\n/**\n * 替换字符串中的字段\n * @param {String} str 模版字符串\n * @param {Object} o json data\n */\nvar substitute = function substitute(str, o) {\n  if (!str || !o) {\n    return str;\n  }\n  return str.replace(/\\\\?\\{([^{}]+)\\}/g, function (match, name) {\n    if (match.charAt(0) === '\\\\') {\n      return match.slice(1);\n    }\n    var res = o[name];\n    if (res === 0) res = '0';\n    return res || '';\n  });\n};\n/**\n * 给定坐标获取三次贝塞尔曲线的 M 及 C 值\n * @param points coordinate set\n */\nexport var getSpline = function getSpline(points) {\n  var data = [];\n  if (points.length < 2) {\n    throw new Error(\"point length must largn than 2, now it's \".concat(points.length));\n  }\n  for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n    var point = points_1[_i];\n    var x = point.x,\n      y = point.y;\n    data.push(x);\n    data.push(y);\n  }\n  var spliePath = catmullRom2Bezier(data);\n  spliePath.unshift(['M', points[0].x, points[0].y]);\n  return spliePath;\n};\n/**\n * 根据起始点、相对位置、偏移量计算控制点\n * @param  {IPoint} startPoint 起始点，包含 x,y\n * @param  {IPoint} endPoint  结束点, 包含 x,y\n * @param  {Number} percent   相对位置,范围 0-1\n * @param  {Number} offset    偏移量\n * @return {IPoint} 控制点，包含 x,y\n */\nexport var getControlPoint = function getControlPoint(startPoint, endPoint, percent, offset) {\n  if (percent === void 0) {\n    percent = 0;\n  }\n  if (offset === void 0) {\n    offset = 0;\n  }\n  var point = {\n    x: (1 - percent) * startPoint.x + percent * endPoint.x,\n    y: (1 - percent) * startPoint.y + percent * endPoint.y\n  };\n  var tangent = [0, 0];\n  vec2.normalize(tangent, [endPoint.x - startPoint.x, endPoint.y - startPoint.y]);\n  if (!tangent || !tangent[0] && !tangent[1]) {\n    tangent = [0, 0];\n  }\n  var perpendicular = [-tangent[1] * offset, tangent[0] * offset]; // 垂直向量\n  point.x += perpendicular[0];\n  point.y += perpendicular[1];\n  return point;\n};\n/**\n * 点集转化为Path多边形\n * @param {Array} points 点集\n * @param {Boolen} z 是否封闭\n * @return {Array} Path\n */\nexport var pointsToPolygon = function pointsToPolygon(points, z) {\n  var length = points.length;\n  if (!length) {\n    return '';\n  }\n  var path = '';\n  var str = '';\n  for (var i = 0; i < length; i++) {\n    var item = points[i];\n    if (i === 0) {\n      str = 'M{x} {y}';\n    } else {\n      str = 'L{x} {y}';\n    }\n    path += substitute(str, item);\n  }\n  if (z) {\n    path += 'Z';\n  }\n  return path;\n};\nexport var pathToPoints = function pathToPoints(path) {\n  var points = [];\n  path.forEach(function (seg) {\n    var command = seg[0];\n    if (command !== 'A') {\n      for (var i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      var length_1 = seg.length;\n      points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n    }\n  });\n  return points;\n};\n/**\n * 生成平滑的闭合曲线\n * @param points\n */\nexport var getClosedSpline = function getClosedSpline(points) {\n  if (points.length < 2) {\n    throw new Error(\"point length must larger than 2, now it's \".concat(points.length));\n  }\n  var first = points[0];\n  var second = points[1];\n  var last = points[points.length - 1];\n  var lastSecond = points[points.length - 2];\n  points.unshift(last);\n  points.unshift(lastSecond);\n  points.push(first);\n  points.push(second);\n  var closedPath = [];\n  for (var i = 1; i < points.length - 2; i += 1) {\n    var x0 = points[i - 1].x;\n    var y0 = points[i - 1].y;\n    var x1 = points[i].x;\n    var y1 = points[i].y;\n    var x2 = points[i + 1].x;\n    var y2 = points[i + 1].y;\n    var x3 = i !== points.length - 2 ? points[i + 2].x : x2;\n    var y3 = i !== points.length - 2 ? points[i + 2].y : y2;\n    var cp1x = x1 + (x2 - x0) / 6;\n    var cp1y = y1 + (y2 - y0) / 6;\n    var cp2x = x2 - (x3 - x1) / 6;\n    var cp2y = y2 - (y3 - y1) / 6;\n    closedPath.push(['C', cp1x, cp1y, cp2x, cp2y, x2, y2]);\n  }\n  closedPath.unshift(['M', last.x, last.y]);\n  return closedPath;\n};\nvar vecScaleTo = function vecScaleTo(v, length) {\n  // Vector with direction of v with specified length\n  return vec2.scale([0, 0], vec2.normalize([0, 0], v), length);\n};\nvar unitNormal = function unitNormal(p0, p1) {\n  // Returns the unit normal to the line segment from p0 to p1.\n  var n = [p0[1] - p1[1], p1[0] - p0[0]];\n  var nLength = Math.sqrt(n[0] * n[0] + n[1] * n[1]);\n  if (nLength === 0) {\n    throw new Error('p0 should not be equal to p1');\n  }\n  return [n[0] / nLength, n[1] / nLength];\n};\nvar vecFrom = function vecFrom(p0, p1) {\n  // Vector from p0 to p1\n  return [p1[0] - p0[0], p1[1] - p0[1]];\n};\n/**\n * 传入的节点作为多边形顶点，生成有圆角的多边形\n * @param polyPoints 多边形顶点\n * @param padding 在原多边形基础上增加最终轮廓和原多边形的空白间隔\n */\nexport function roundedHull(polyPoints, padding) {\n  // The rounded hull path around a single point\n  var roundedHull1 = function roundedHull1(points) {\n    var p1 = [points[0][0], points[0][1] - padding];\n    var p2 = [points[0][0], points[0][1] + padding];\n    return \"M \".concat(p1, \" A \").concat(padding, \",\").concat(padding, \",0,0,0,\").concat(p2, \" A \").concat(padding, \",\").concat(padding, \",0,0,0,\").concat(p1);\n  };\n  // The rounded hull path around two points\n  var roundedHull2 = function roundedHull2(points) {\n    var offsetVector = vec2.scale([0, 0], unitNormal(points[0], points[1]), padding);\n    var invOffsetVector = vec2.scale([0, 0], offsetVector, -1);\n    var p0 = vec2.add([0, 0], points[0], offsetVector);\n    var p1 = vec2.add([0, 0], points[1], offsetVector);\n    var p2 = vec2.add([0, 0], points[1], invOffsetVector);\n    var p3 = vec2.add([0, 0], points[0], invOffsetVector);\n    return \"M \".concat(p0, \" L \").concat(p1, \" A \").concat([padding, padding, '0,0,0', p2].join(','), \" L \").concat(p3, \" A \").concat([padding, padding, '0,0,0', p0].join(','));\n  };\n  // 特殊情况处理：节点数小于等于2\n  if (!polyPoints || polyPoints.length < 1) return '';\n  if (polyPoints.length === 1) return roundedHull1(polyPoints);\n  if (polyPoints.length === 2) return roundedHull2(polyPoints);\n  var segments = new Array(polyPoints.length);\n  // Calculate each offset (outwards) segment of the convex hull.\n  for (var segmentIndex = 0; segmentIndex < segments.length; ++segmentIndex) {\n    var p0 = segmentIndex === 0 ? polyPoints[polyPoints.length - 1] : polyPoints[segmentIndex - 1];\n    var p1 = polyPoints[segmentIndex];\n    // Compute the offset vector for the line segment, with length = padding.\n    var offset = vec2.scale([0, 0], unitNormal(p0, p1), padding);\n    segments[segmentIndex] = [vec2.add([0, 0], p0, offset), vec2.add([0, 0], p1, offset)];\n  }\n  var arcData = \"A \".concat([padding, padding, '0,0,0,'].join(','));\n  segments = segments.map(function (segment, index) {\n    var pathFragment = '';\n    if (index === 0) {\n      pathFragment = \"M \".concat(segments[segments.length - 1][1], \" \");\n    }\n    pathFragment += \"\".concat(arcData + segment[0], \" L \").concat(segment[1]);\n    return pathFragment;\n  });\n  return segments.join(' ');\n}\n/**\n * 传入的节点作为多边形顶点，生成平滑的闭合多边形\n * @param polyPoints\n * @param padding\n */\nexport function paddedHull(polyPoints, padding) {\n  var pointCount = polyPoints.length;\n  var smoothHull1 = function smoothHull1(points) {\n    // Returns the path for a circular hull around a single point.\n    var p1 = [points[0][0], points[0][1] - padding];\n    var p2 = [points[0][0], points[0][1] + padding];\n    return \"M \".concat(p1, \" A \").concat([padding, padding, '0,0,0', p2].join(','), \" A \").concat([padding, padding, '0,0,0', p1].join(','));\n  };\n  // Returns the path for a rounded hull around two points.\n  var smoothHull2 = function smoothHull2(points) {\n    var v = vecFrom(points[0], points[1]);\n    var extensionVec = vecScaleTo(v, padding);\n    var extension0 = vec2.add([0, 0], points[0], vec2.scale([0, 0], extensionVec, -1));\n    var extension1 = vec2.add([0, 0], points[1], extensionVec);\n    var tangentHalfLength = 1.2 * padding;\n    var controlDelta = vecScaleTo(vec2.normalize([0, 0], v), tangentHalfLength);\n    var invControlDelta = vec2.scale([0, 0], controlDelta, -1);\n    var control0 = vec2.add([0, 0], extension0, invControlDelta);\n    var control1 = vec2.add([0, 0], extension1, invControlDelta);\n    var control3 = vec2.add([0, 0], extension0, controlDelta);\n    // return [\n    //   ['M', extension0[0], extension0[1]],\n    //   ['C', control0, control1, extension1],\n    //   ['S', control3, extension0],\n    //   'Z',\n    // ];\n    return \"M \".concat(extension0, \" C \").concat([control0, control1, extension1].join(','), \" S \").concat([control3, extension0].join(','), \" Z\");\n  };\n  // Handle special cases\n  if (!polyPoints || pointCount < 1) return '';\n  if (pointCount === 1) return smoothHull1(polyPoints);\n  if (pointCount === 2) return smoothHull2(polyPoints);\n  var hullPoints = polyPoints.map(function (point, index) {\n    var pNext = polyPoints[(index + 1) % pointCount];\n    return {\n      p: point,\n      v: vec2.normalize([0, 0], vecFrom(point, pNext))\n    };\n  });\n  // Compute the expanded hull points, and the nearest prior control point for each.\n  for (var i = 0; i < hullPoints.length; ++i) {\n    var priorIndex = i > 0 ? i - 1 : pointCount - 1;\n    var extensionVec = vec2.normalize([0, 0], vec2.add([0, 0], hullPoints[priorIndex].v, vec2.scale([0, 0], hullPoints[i].v, -1)));\n    hullPoints[i].p = vec2.add([0, 0], hullPoints[i].p, vec2.scale([0, 0], extensionVec, padding));\n  }\n  return hullPoints.map(function (obj) {\n    var point = obj.p;\n    return {\n      x: point[0],\n      y: point[1]\n    };\n  });\n}\n/**\n * get a path of a star with outer radius and inner radius\n * @param outerR\n * @param innerR\n * @returns\n */\nexport var getStarPath = function getStarPath(outerR, innerR) {\n  var path = [];\n  for (var i = 0; i < 5; i++) {\n    var x1 = Math.cos((18 + 72 * i) / 180 * Math.PI) * outerR;\n    var y1 = Math.sin((18 + 72 * i) / 180 * Math.PI) * outerR;\n    var x2 = Math.cos((54 + 72 * i) / 180 * Math.PI) * innerR;\n    var y2 = Math.sin((54 + 72 * i) / 180 * Math.PI) * innerR;\n    if (i === 0) {\n      path.push(['M', x1, -y1]);\n    } else {\n      path.push(['L', x1, -y1]);\n    }\n    path.push(['L', x2, -y2]);\n  }\n  path.push(['Z']);\n  return path;\n};","map":{"version":3,"names":["vec2","catmullRom2Bezier","substitute","str","o","replace","match","name","charAt","slice","res","getSpline","points","data","length","Error","concat","_i","points_1","point","x","y","push","spliePath","unshift","getControlPoint","startPoint","endPoint","percent","offset","tangent","normalize","perpendicular","pointsToPolygon","z","path","i","item","pathToPoints","forEach","seg","command","length_1","getClosedSpline","first","second","last","lastSecond","closedPath","x0","y0","x1","y1","x2","y2","x3","y3","cp1x","cp1y","cp2x","cp2y","vecScaleTo","v","scale","unitNormal","p0","p1","n","nLength","Math","sqrt","vecFrom","roundedHull","polyPoints","padding","roundedHull1","p2","roundedHull2","offsetVector","invOffsetVector","add","p3","join","segments","Array","segmentIndex","arcData","map","segment","index","pathFragment","paddedHull","pointCount","smoothHull1","smoothHull2","extensionVec","extension0","extension1","tangentHalfLength","controlDelta","invControlDelta","control0","control1","control3","hullPoints","pNext","p","priorIndex","obj","getStarPath","outerR","innerR","cos","PI","sin"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-core/es/util/path.js"],"sourcesContent":["import { vec2 } from '@antv/matrix-util';\nimport { catmullRom2Bezier } from '@antv/path-util';\n/**\n * 替换字符串中的字段\n * @param {String} str 模版字符串\n * @param {Object} o json data\n */\nvar substitute = function substitute(str, o) {\n  if (!str || !o) {\n    return str;\n  }\n  return str.replace(/\\\\?\\{([^{}]+)\\}/g, function (match, name) {\n    if (match.charAt(0) === '\\\\') {\n      return match.slice(1);\n    }\n    var res = o[name];\n    if (res === 0) res = '0';\n    return res || '';\n  });\n};\n/**\n * 给定坐标获取三次贝塞尔曲线的 M 及 C 值\n * @param points coordinate set\n */\nexport var getSpline = function getSpline(points) {\n  var data = [];\n  if (points.length < 2) {\n    throw new Error(\"point length must largn than 2, now it's \".concat(points.length));\n  }\n  for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n    var point = points_1[_i];\n    var x = point.x,\n      y = point.y;\n    data.push(x);\n    data.push(y);\n  }\n  var spliePath = catmullRom2Bezier(data);\n  spliePath.unshift(['M', points[0].x, points[0].y]);\n  return spliePath;\n};\n/**\n * 根据起始点、相对位置、偏移量计算控制点\n * @param  {IPoint} startPoint 起始点，包含 x,y\n * @param  {IPoint} endPoint  结束点, 包含 x,y\n * @param  {Number} percent   相对位置,范围 0-1\n * @param  {Number} offset    偏移量\n * @return {IPoint} 控制点，包含 x,y\n */\nexport var getControlPoint = function getControlPoint(startPoint, endPoint, percent, offset) {\n  if (percent === void 0) {\n    percent = 0;\n  }\n  if (offset === void 0) {\n    offset = 0;\n  }\n  var point = {\n    x: (1 - percent) * startPoint.x + percent * endPoint.x,\n    y: (1 - percent) * startPoint.y + percent * endPoint.y\n  };\n  var tangent = [0, 0];\n  vec2.normalize(tangent, [endPoint.x - startPoint.x, endPoint.y - startPoint.y]);\n  if (!tangent || !tangent[0] && !tangent[1]) {\n    tangent = [0, 0];\n  }\n  var perpendicular = [-tangent[1] * offset, tangent[0] * offset]; // 垂直向量\n  point.x += perpendicular[0];\n  point.y += perpendicular[1];\n  return point;\n};\n/**\n * 点集转化为Path多边形\n * @param {Array} points 点集\n * @param {Boolen} z 是否封闭\n * @return {Array} Path\n */\nexport var pointsToPolygon = function pointsToPolygon(points, z) {\n  var length = points.length;\n  if (!length) {\n    return '';\n  }\n  var path = '';\n  var str = '';\n  for (var i = 0; i < length; i++) {\n    var item = points[i];\n    if (i === 0) {\n      str = 'M{x} {y}';\n    } else {\n      str = 'L{x} {y}';\n    }\n    path += substitute(str, item);\n  }\n  if (z) {\n    path += 'Z';\n  }\n  return path;\n};\nexport var pathToPoints = function pathToPoints(path) {\n  var points = [];\n  path.forEach(function (seg) {\n    var command = seg[0];\n    if (command !== 'A') {\n      for (var i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      var length_1 = seg.length;\n      points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n    }\n  });\n  return points;\n};\n/**\n * 生成平滑的闭合曲线\n * @param points\n */\nexport var getClosedSpline = function getClosedSpline(points) {\n  if (points.length < 2) {\n    throw new Error(\"point length must larger than 2, now it's \".concat(points.length));\n  }\n  var first = points[0];\n  var second = points[1];\n  var last = points[points.length - 1];\n  var lastSecond = points[points.length - 2];\n  points.unshift(last);\n  points.unshift(lastSecond);\n  points.push(first);\n  points.push(second);\n  var closedPath = [];\n  for (var i = 1; i < points.length - 2; i += 1) {\n    var x0 = points[i - 1].x;\n    var y0 = points[i - 1].y;\n    var x1 = points[i].x;\n    var y1 = points[i].y;\n    var x2 = points[i + 1].x;\n    var y2 = points[i + 1].y;\n    var x3 = i !== points.length - 2 ? points[i + 2].x : x2;\n    var y3 = i !== points.length - 2 ? points[i + 2].y : y2;\n    var cp1x = x1 + (x2 - x0) / 6;\n    var cp1y = y1 + (y2 - y0) / 6;\n    var cp2x = x2 - (x3 - x1) / 6;\n    var cp2y = y2 - (y3 - y1) / 6;\n    closedPath.push(['C', cp1x, cp1y, cp2x, cp2y, x2, y2]);\n  }\n  closedPath.unshift(['M', last.x, last.y]);\n  return closedPath;\n};\nvar vecScaleTo = function vecScaleTo(v, length) {\n  // Vector with direction of v with specified length\n  return vec2.scale([0, 0], vec2.normalize([0, 0], v), length);\n};\nvar unitNormal = function unitNormal(p0, p1) {\n  // Returns the unit normal to the line segment from p0 to p1.\n  var n = [p0[1] - p1[1], p1[0] - p0[0]];\n  var nLength = Math.sqrt(n[0] * n[0] + n[1] * n[1]);\n  if (nLength === 0) {\n    throw new Error('p0 should not be equal to p1');\n  }\n  return [n[0] / nLength, n[1] / nLength];\n};\nvar vecFrom = function vecFrom(p0, p1) {\n  // Vector from p0 to p1\n  return [p1[0] - p0[0], p1[1] - p0[1]];\n};\n/**\n * 传入的节点作为多边形顶点，生成有圆角的多边形\n * @param polyPoints 多边形顶点\n * @param padding 在原多边形基础上增加最终轮廓和原多边形的空白间隔\n */\nexport function roundedHull(polyPoints, padding) {\n  // The rounded hull path around a single point\n  var roundedHull1 = function roundedHull1(points) {\n    var p1 = [points[0][0], points[0][1] - padding];\n    var p2 = [points[0][0], points[0][1] + padding];\n    return \"M \".concat(p1, \" A \").concat(padding, \",\").concat(padding, \",0,0,0,\").concat(p2, \" A \").concat(padding, \",\").concat(padding, \",0,0,0,\").concat(p1);\n  };\n  // The rounded hull path around two points\n  var roundedHull2 = function roundedHull2(points) {\n    var offsetVector = vec2.scale([0, 0], unitNormal(points[0], points[1]), padding);\n    var invOffsetVector = vec2.scale([0, 0], offsetVector, -1);\n    var p0 = vec2.add([0, 0], points[0], offsetVector);\n    var p1 = vec2.add([0, 0], points[1], offsetVector);\n    var p2 = vec2.add([0, 0], points[1], invOffsetVector);\n    var p3 = vec2.add([0, 0], points[0], invOffsetVector);\n    return \"M \".concat(p0, \" L \").concat(p1, \" A \").concat([padding, padding, '0,0,0', p2].join(','), \" L \").concat(p3, \" A \").concat([padding, padding, '0,0,0', p0].join(','));\n  };\n  // 特殊情况处理：节点数小于等于2\n  if (!polyPoints || polyPoints.length < 1) return '';\n  if (polyPoints.length === 1) return roundedHull1(polyPoints);\n  if (polyPoints.length === 2) return roundedHull2(polyPoints);\n  var segments = new Array(polyPoints.length);\n  // Calculate each offset (outwards) segment of the convex hull.\n  for (var segmentIndex = 0; segmentIndex < segments.length; ++segmentIndex) {\n    var p0 = segmentIndex === 0 ? polyPoints[polyPoints.length - 1] : polyPoints[segmentIndex - 1];\n    var p1 = polyPoints[segmentIndex];\n    // Compute the offset vector for the line segment, with length = padding.\n    var offset = vec2.scale([0, 0], unitNormal(p0, p1), padding);\n    segments[segmentIndex] = [vec2.add([0, 0], p0, offset), vec2.add([0, 0], p1, offset)];\n  }\n  var arcData = \"A \".concat([padding, padding, '0,0,0,'].join(','));\n  segments = segments.map(function (segment, index) {\n    var pathFragment = '';\n    if (index === 0) {\n      pathFragment = \"M \".concat(segments[segments.length - 1][1], \" \");\n    }\n    pathFragment += \"\".concat(arcData + segment[0], \" L \").concat(segment[1]);\n    return pathFragment;\n  });\n  return segments.join(' ');\n}\n/**\n * 传入的节点作为多边形顶点，生成平滑的闭合多边形\n * @param polyPoints\n * @param padding\n */\nexport function paddedHull(polyPoints, padding) {\n  var pointCount = polyPoints.length;\n  var smoothHull1 = function smoothHull1(points) {\n    // Returns the path for a circular hull around a single point.\n    var p1 = [points[0][0], points[0][1] - padding];\n    var p2 = [points[0][0], points[0][1] + padding];\n    return \"M \".concat(p1, \" A \").concat([padding, padding, '0,0,0', p2].join(','), \" A \").concat([padding, padding, '0,0,0', p1].join(','));\n  };\n  // Returns the path for a rounded hull around two points.\n  var smoothHull2 = function smoothHull2(points) {\n    var v = vecFrom(points[0], points[1]);\n    var extensionVec = vecScaleTo(v, padding);\n    var extension0 = vec2.add([0, 0], points[0], vec2.scale([0, 0], extensionVec, -1));\n    var extension1 = vec2.add([0, 0], points[1], extensionVec);\n    var tangentHalfLength = 1.2 * padding;\n    var controlDelta = vecScaleTo(vec2.normalize([0, 0], v), tangentHalfLength);\n    var invControlDelta = vec2.scale([0, 0], controlDelta, -1);\n    var control0 = vec2.add([0, 0], extension0, invControlDelta);\n    var control1 = vec2.add([0, 0], extension1, invControlDelta);\n    var control3 = vec2.add([0, 0], extension0, controlDelta);\n    // return [\n    //   ['M', extension0[0], extension0[1]],\n    //   ['C', control0, control1, extension1],\n    //   ['S', control3, extension0],\n    //   'Z',\n    // ];\n    return \"M \".concat(extension0, \" C \").concat([control0, control1, extension1].join(','), \" S \").concat([control3, extension0].join(','), \" Z\");\n  };\n  // Handle special cases\n  if (!polyPoints || pointCount < 1) return '';\n  if (pointCount === 1) return smoothHull1(polyPoints);\n  if (pointCount === 2) return smoothHull2(polyPoints);\n  var hullPoints = polyPoints.map(function (point, index) {\n    var pNext = polyPoints[(index + 1) % pointCount];\n    return {\n      p: point,\n      v: vec2.normalize([0, 0], vecFrom(point, pNext))\n    };\n  });\n  // Compute the expanded hull points, and the nearest prior control point for each.\n  for (var i = 0; i < hullPoints.length; ++i) {\n    var priorIndex = i > 0 ? i - 1 : pointCount - 1;\n    var extensionVec = vec2.normalize([0, 0], vec2.add([0, 0], hullPoints[priorIndex].v, vec2.scale([0, 0], hullPoints[i].v, -1)));\n    hullPoints[i].p = vec2.add([0, 0], hullPoints[i].p, vec2.scale([0, 0], extensionVec, padding));\n  }\n  return hullPoints.map(function (obj) {\n    var point = obj.p;\n    return {\n      x: point[0],\n      y: point[1]\n    };\n  });\n}\n/**\n * get a path of a star with outer radius and inner radius\n * @param outerR\n * @param innerR\n * @returns\n */\nexport var getStarPath = function getStarPath(outerR, innerR) {\n  var path = [];\n  for (var i = 0; i < 5; i++) {\n    var x1 = Math.cos((18 + 72 * i) / 180 * Math.PI) * outerR;\n    var y1 = Math.sin((18 + 72 * i) / 180 * Math.PI) * outerR;\n    var x2 = Math.cos((54 + 72 * i) / 180 * Math.PI) * innerR;\n    var y2 = Math.sin((54 + 72 * i) / 180 * Math.PI) * innerR;\n    if (i === 0) {\n      path.push(['M', x1, -y1]);\n    } else {\n      path.push(['L', x1, -y1]);\n    }\n    path.push(['L', x2, -y2]);\n  }\n  path.push(['Z']);\n  return path;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}