{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n/** 线条形 marker symbol */\nvar STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle, style) {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker, color) {\n  var symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    var markerStyle = get(marker, 'style', {});\n    var lineWidth = get(markerStyle, 'lineWidth', 1);\n    var stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, {\n      lineWidth: lineWidth,\n      stroke: stroke,\n      fill: null\n    });\n  }\n}\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker) {\n  var symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction) {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n  var scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    var field_1 = scale.field;\n    var colorAttr_1 = geometry.getAttribute('color');\n    var shapeAttr_1 = geometry.getAttribute('shape');\n    var defaultColor_1 = view.getTheme().defaultColor;\n    var isInPolar_1 = geometry.coordinate.isPolar;\n    return scale.getTicks().map(function (tick, index) {\n      var _a;\n      var text = tick.text,\n        scaleValue = tick.value;\n      var name = text;\n      var value = scale.invert(scaleValue);\n      // 通过过滤图例项的数据，来看是否 unchecked\n      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n      each(view.views, function (subView) {\n        var _a;\n        if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n          unchecked = true;\n        }\n      });\n      // @ts-ignore\n      var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n      var shape = getMappingValue(shapeAttr_1, value, 'point');\n      var marker = geometry.getShapeMarker(shape, {\n        color: color,\n        isInPolar: isInPolar_1\n      });\n      var markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, __assign({\n          name: name,\n          value: value\n        }, deepMix({}, themeMarker, marker)));\n      }\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit(__assign({}, markerCfg), ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n      return {\n        id: value,\n        name: name,\n        value: value,\n        marker: marker,\n        unchecked: unchecked\n      };\n    });\n  }\n  return [];\n}\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map(function (item, index) {\n    var markerCfg = userMarker;\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n    var itemMarker = isFunction(item.marker) ? item.marker(item.name, index, deepMix({}, themeMarker, item)) : item.marker;\n    var marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n    item.marker = marker;\n    return item;\n  });\n}\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme, direction) {\n  var legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}","map":{"version":3,"names":["deepMix","isString","each","get","isFunction","DIRECTION","getMappingValue","omit","MarkerSymbols","STROKES_SYMBOLS","handleUserMarkerStyle","markerStyle","style","adpatorMarkerStyle","marker","color","symbol","indexOf","lineWidth","stroke","fill","setMarkerSymbol","getLegendLayout","direction","startsWith","LEFT","RIGHT","getLegendItems","view","geometry","attr","themeMarker","userMarker","scale","getScale","type","isCategory","field_1","field","colorAttr_1","getAttribute","shapeAttr_1","defaultColor_1","getTheme","defaultColor","isInPolar_1","coordinate","isPolar","getTicks","map","tick","index","text","scaleValue","value","name","invert","unchecked","filterFieldData","_a","length","views","subView","shape","getShapeMarker","isInPolar","markerCfg","__assign","id","getCustomLegendItems","customItems","item","itemMarker","getLegendThemeCfg","theme","legendTheme"],"sources":["../../src/util/legend.ts"],"sourcesContent":["import { LegendMarkerCfg } from '@antv/component';\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { Attribute, ShapeAttrs, Tick } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { LegendCfg, LegendItem, MarkerCfg } from '../interface';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n\n/** 线条形 marker symbol */\nconst STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle: ShapeAttrs, style: MarkerCfg['style']): ShapeAttrs {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker: LegendMarkerCfg, color: string): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    const markerStyle = get(marker, 'style', {});\n    const lineWidth = get(markerStyle, 'lineWidth', 1);\n    const stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, { lineWidth, stroke, fill: null });\n  }\n}\n\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker: LegendMarkerCfg): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction: DIRECTION): 'vertical' | 'horizontal' {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n\n/** item of @antv/component legend  */\ntype ComponentLegendItem = Omit<LegendItem, 'marker'> & {\n  marker: any;\n};\n\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(\n  view: View,\n  geometry: Geometry,\n  attr: Attribute,\n  themeMarker: object,\n  userMarker: LegendCfg['marker']\n): ComponentLegendItem[] {\n  const scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    const field = scale.field;\n    const colorAttr = geometry.getAttribute('color');\n    const shapeAttr = geometry.getAttribute('shape');\n    const defaultColor = view.getTheme().defaultColor;\n    const isInPolar = geometry.coordinate.isPolar;\n\n    return scale.getTicks().map((tick: Tick, index: number) => {\n      const { text, value: scaleValue } = tick;\n      const name = text;\n      const value = scale.invert(scaleValue);\n\n      // 通过过滤图例项的数据，来看是否 unchecked\n      let unchecked = view.filterFieldData(field, [{ [field]: value }]).length === 0;\n      each(view.views, (subView) => {\n        if (!subView.filterFieldData(field, [{ [field]: value }]).length) {\n          unchecked = true;\n        }\n      });\n\n      // @ts-ignore\n      const color = getMappingValue(colorAttr, value, defaultColor);\n      const shape = getMappingValue(shapeAttr, value, 'point');\n      let marker = geometry.getShapeMarker(shape, {\n        color,\n        isInPolar,\n      });\n\n      let markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, { name, value, ...deepMix({}, themeMarker, marker) });\n      }\n\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit({ ...markerCfg }, ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n\n      return { id: value, name, value, marker, unchecked };\n    });\n  }\n  return [];\n}\n\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker: object, userMarker: object, customItems: LegendItem[]) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map((item: LegendItem, index: number) => {\n    let markerCfg = userMarker;\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n\n    const itemMarker = isFunction(item.marker)\n      ? item.marker(item.name, index, deepMix({}, themeMarker, item))\n      : item.marker;\n\n    const marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n\n    item.marker = marker;\n    return item;\n  });\n}\n\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme: object, direction: string): object {\n  const legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}