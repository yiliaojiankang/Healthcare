{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { WorkerFarm } from 'web-worker-helper';\n// @ts-ignore\n// TODO 暂时注释掉，后续需要修改\n// import WorkerInlineSource from '../../dist/l7-utils.worker.js';\nimport { WorkerSourceMap } from \"../workers\";\nimport { getWorkerSource, registerWorkerSource } from \"./worker-map\";\nexport { WorkerSourceMap };\nvar L7_WORKER_NAME = 'l7-worker';\nvar WORKER_MAX_CONCURRENCY = 3;\nvar WORKER_REUSE = true;\nexport function setL7WorkerSource(workerSource) {\n  registerWorkerSource(L7_WORKER_NAME, workerSource);\n}\nfunction getL7WorkerSource() {\n  var workerSource = getWorkerSource(L7_WORKER_NAME);\n  if (!workerSource) {\n    throw new Error(\"get worker failed by workerName: \".concat(L7_WORKER_NAME, \".\"));\n  }\n  return workerSource;\n}\nexport function executeWorkerTask(_x, _x2) {\n  return _executeWorkerTask.apply(this, arguments);\n}\n\n// setL7WorkerSource(WorkerInlineSource);\nfunction _executeWorkerTask() {\n  _executeWorkerTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(workerType, data) {\n    var source, workerFarm, workerPool, job, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          source = getL7WorkerSource();\n          workerFarm = WorkerFarm.getWorkerFarm({\n            maxConcurrency: WORKER_MAX_CONCURRENCY,\n            reuseWorkers: WORKER_REUSE\n          });\n          workerPool = workerFarm.getWorkerPool({\n            name: L7_WORKER_NAME,\n            source: source\n          });\n          _context.next = 5;\n          return workerPool.startJob(L7_WORKER_NAME, function (myJob, type, myData) {\n            return myJob.done(myData);\n          });\n        case 5:\n          job = _context.sent;\n          job.postMessage('process', {\n            input: {\n              workerType: workerType,\n              data: data\n            }\n          });\n          _context.next = 9;\n          return job.result;\n        case 9:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result.result);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _executeWorkerTask.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","_regeneratorRuntime","WorkerFarm","WorkerSourceMap","getWorkerSource","registerWorkerSource","L7_WORKER_NAME","WORKER_MAX_CONCURRENCY","WORKER_REUSE","setL7WorkerSource","workerSource","getL7WorkerSource","Error","concat","executeWorkerTask","_x","_x2","_executeWorkerTask","apply","arguments","mark","_callee","workerType","data","source","workerFarm","workerPool","job","result","wrap","_callee$","_context","prev","next","getWorkerFarm","maxConcurrency","reuseWorkers","getWorkerPool","name","startJob","myJob","type","myData","done","sent","postMessage","input","abrupt","stop"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-utils/es/worker-helper/index.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { WorkerFarm } from 'web-worker-helper';\n// @ts-ignore\n// TODO 暂时注释掉，后续需要修改\n// import WorkerInlineSource from '../../dist/l7-utils.worker.js';\nimport { WorkerSourceMap } from \"../workers\";\nimport { getWorkerSource, registerWorkerSource } from \"./worker-map\";\nexport { WorkerSourceMap };\nvar L7_WORKER_NAME = 'l7-worker';\nvar WORKER_MAX_CONCURRENCY = 3;\nvar WORKER_REUSE = true;\nexport function setL7WorkerSource(workerSource) {\n  registerWorkerSource(L7_WORKER_NAME, workerSource);\n}\nfunction getL7WorkerSource() {\n  var workerSource = getWorkerSource(L7_WORKER_NAME);\n  if (!workerSource) {\n    throw new Error(\"get worker failed by workerName: \".concat(L7_WORKER_NAME, \".\"));\n  }\n  return workerSource;\n}\nexport function executeWorkerTask(_x, _x2) {\n  return _executeWorkerTask.apply(this, arguments);\n}\n\n// setL7WorkerSource(WorkerInlineSource);\nfunction _executeWorkerTask() {\n  _executeWorkerTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(workerType, data) {\n    var source, workerFarm, workerPool, job, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          source = getL7WorkerSource();\n          workerFarm = WorkerFarm.getWorkerFarm({\n            maxConcurrency: WORKER_MAX_CONCURRENCY,\n            reuseWorkers: WORKER_REUSE\n          });\n          workerPool = workerFarm.getWorkerPool({\n            name: L7_WORKER_NAME,\n            source: source\n          });\n          _context.next = 5;\n          return workerPool.startJob(L7_WORKER_NAME, function (myJob, type, myData) {\n            return myJob.done(myData);\n          });\n        case 5:\n          job = _context.sent;\n          job.postMessage('process', {\n            input: {\n              workerType: workerType,\n              data: data\n            }\n          });\n          _context.next = 9;\n          return job.result;\n        case 9:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result.result);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _executeWorkerTask.apply(this, arguments);\n}"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,SAASC,UAAU,QAAQ,mBAAmB;AAC9C;AACA;AACA;AACA,SAASC,eAAe,QAAQ,YAAY;AAC5C,SAASC,eAAe,EAAEC,oBAAoB,QAAQ,cAAc;AACpE,SAASF,eAAe;AACxB,IAAIG,cAAc,GAAG,WAAW;AAChC,IAAIC,sBAAsB,GAAG,CAAC;AAC9B,IAAIC,YAAY,GAAG,IAAI;AACvB,OAAO,SAASC,iBAAiBA,CAACC,YAAY,EAAE;EAC9CL,oBAAoB,CAACC,cAAc,EAAEI,YAAY,CAAC;AACpD;AACA,SAASC,iBAAiBA,CAAA,EAAG;EAC3B,IAAID,YAAY,GAAGN,eAAe,CAACE,cAAc,CAAC;EAClD,IAAI,CAACI,YAAY,EAAE;IACjB,MAAM,IAAIE,KAAK,CAAC,mCAAmC,CAACC,MAAM,CAACP,cAAc,EAAE,GAAG,CAAC,CAAC;EAClF;EACA,OAAOI,YAAY;AACrB;AACA,OAAO,SAASI,iBAAiBA,CAACC,EAAE,EAAEC,GAAG,EAAE;EACzC,OAAOC,kBAAkB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAClD;;AAEA;AACA,SAASF,kBAAkBA,CAAA,EAAG;EAC5BA,kBAAkB,GAAGjB,iBAAiB,EAAE,aAAaC,mBAAmB,CAACmB,IAAI,CAAC,SAASC,OAAOA,CAACC,UAAU,EAAEC,IAAI,EAAE;IAC/G,IAAIC,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM;IAC/C,OAAO3B,mBAAmB,CAAC4B,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;MAC1D,OAAO,CAAC,EAAE,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;QAC7C,KAAK,CAAC;UACJT,MAAM,GAAGb,iBAAiB,CAAC,CAAC;UAC5Bc,UAAU,GAAGvB,UAAU,CAACgC,aAAa,CAAC;YACpCC,cAAc,EAAE5B,sBAAsB;YACtC6B,YAAY,EAAE5B;UAChB,CAAC,CAAC;UACFkB,UAAU,GAAGD,UAAU,CAACY,aAAa,CAAC;YACpCC,IAAI,EAAEhC,cAAc;YACpBkB,MAAM,EAAEA;UACV,CAAC,CAAC;UACFO,QAAQ,CAACE,IAAI,GAAG,CAAC;UACjB,OAAOP,UAAU,CAACa,QAAQ,CAACjC,cAAc,EAAE,UAAUkC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAE;YACxE,OAAOF,KAAK,CAACG,IAAI,CAACD,MAAM,CAAC;UAC3B,CAAC,CAAC;QACJ,KAAK,CAAC;UACJf,GAAG,GAAGI,QAAQ,CAACa,IAAI;UACnBjB,GAAG,CAACkB,WAAW,CAAC,SAAS,EAAE;YACzBC,KAAK,EAAE;cACLxB,UAAU,EAAEA,UAAU;cACtBC,IAAI,EAAEA;YACR;UACF,CAAC,CAAC;UACFQ,QAAQ,CAACE,IAAI,GAAG,CAAC;UACjB,OAAON,GAAG,CAACC,MAAM;QACnB,KAAK,CAAC;UACJA,MAAM,GAAGG,QAAQ,CAACa,IAAI;UACtB,OAAOb,QAAQ,CAACgB,MAAM,CAAC,QAAQ,EAAEnB,MAAM,CAACA,MAAM,CAAC;QACjD,KAAK,EAAE;QACP,KAAK,KAAK;UACR,OAAOG,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAC1B;IACF,CAAC,EAAE3B,OAAO,CAAC;EACb,CAAC,CAAC,CAAC;EACH,OAAOJ,kBAAkB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}