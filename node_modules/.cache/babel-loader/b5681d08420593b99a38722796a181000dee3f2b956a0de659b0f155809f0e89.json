{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\n * 基本的椭圆，可以添加文本，默认文本居中\n */\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    group['shapeMap']['ellipse-keyShape'] = keyShape;\n    var width = icon.width,\n      height = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n      linkPoints = _a === void 0 ? {} : _a;\n    var top = linkPoints.top,\n      left = linkPoints.left,\n      right = linkPoints.right,\n      bottom = linkPoints.bottom,\n      markSize = linkPoints.size,\n      markR = linkPoints.r,\n      markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer();\n    // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","__rest","registerNode","BaseGlobal","Global","mix","options","size","style","x","y","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","mergeStyle","getOptions","getShapeStyle","keyShape","addShape","attrs","className","name","draggable","text","concat","type","textBaseline","textAlign","drawLinkPoints","markSize","markR","r","markStyle","getSize","rx","ry","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-element/es/nodes/ellipse.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\n * 基本的椭圆，可以添加文本，默认文本居中\n */\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    group['shapeMap']['ellipse-keyShape'] = keyShape;\n    var width = icon.width,\n      height = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n      linkPoints = _a === void 0 ? {} : _a;\n    var top = linkPoints.top,\n      left = linkPoints.left,\n      right = linkPoints.right,\n      bottom = linkPoints.bottom,\n      markSize = linkPoints.size,\n      markR = linkPoints.r,\n      markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer();\n    // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}