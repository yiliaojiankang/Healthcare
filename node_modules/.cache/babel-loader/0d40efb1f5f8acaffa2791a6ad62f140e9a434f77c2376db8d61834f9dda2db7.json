{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { registerNode, BaseGlobal as Global, Util } from '@antv/g6-core';\nimport { deepMix } from '@antv/util';\nvar defaultSubjectColors = Util.defaultSubjectColors;\nvar FAN_NAME_PREFIX = 'fan-shape-';\n// 饼图节点\nregisterNode('donut', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true,\n      name: \"\".concat(this.type, \"-keyShape\")\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var width = icon.width,\n      height = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    // draw the fan shapes\n    drawFans(cfg, group, keyShape);\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  updateShape: function updateShape(cfg, item, keyShapeStyle, hasIcon, updateType) {\n    // here cfg is merged configure including old model and new configs\n    var keyShape = item.get('keyShape');\n    keyShape.attr(__assign({}, keyShapeStyle));\n    updateFans(cfg, item, keyShape);\n    if (!undefined || (updateType === null || updateType === void 0 ? void 0 : updateType.includes('label'))) {\n      this.updateLabel(cfg, item, updateType);\n    }\n    if (hasIcon) {\n      this.updateIcon(cfg, item);\n    }\n  }\n}, 'circle');\n/**\n * draws the fan shapes\n * @param cfg\n * @param group\n * @param keyShape\n * @returns\n */\nvar drawFans = function drawFans(cfg, group, keyShape) {\n  var _a = cfg.donutAttrs,\n    donutAttrs = _a === void 0 ? {} : _a,\n    _b = cfg.donutColorMap,\n    donutColorMap = _b === void 0 ? {} : _b;\n  var attrNum = Object.keys(donutAttrs).length;\n  if (donutAttrs && attrNum > 1) {\n    var _c = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _c.configs,\n      totalValue = _c.totalValue;\n    if (totalValue) {\n      var _d = getDonutSize(keyShape),\n        lineWidth = _d.lineWidth,\n        arcR = _d.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      if (attrNum === 1) {\n        // draw a path represents a circle\n        drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[0],\n          fanIndex: 0,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: true\n        });\n        return;\n      }\n      for (var i = 0; i < configs.length; i++) {\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue\n        });\n        if (result.shouldEnd) return;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n};\n/**\n * draws one fan shape and returns the next position and angle\n * @param group\n * @param fanConfig\n * @returns\n */\nvar drawFan = function drawFan(group, fanConfig) {\n  var arcR = fanConfig.arcR,\n    arcBegin = fanConfig.arcBegin,\n    beginAngle = fanConfig.beginAngle,\n    config = fanConfig.config,\n    fanIndex = fanConfig.fanIndex,\n    lineWidth = fanConfig.lineWidth,\n    totalValue = fanConfig.totalValue,\n    _a = fanConfig.drawWhole,\n    drawWhole = _a === void 0 ? false : _a,\n    _b = fanConfig.updateShape,\n    updateShape = _b === void 0 ? undefined : _b;\n  var percent = config.value / totalValue;\n  if (percent < 0.001) {\n    // too small to add a fan\n    return {\n      beginAngle: beginAngle,\n      arcBegin: arcBegin,\n      shape: undefined,\n      shouldEnd: false\n    };\n  }\n  var arcEnd, endAngle, isBig;\n  // draw a path represents the whole circle, or the percentage is close to 1\n  if (drawWhole || percent > 0.999) {\n    arcEnd = [arcR, 0.0001]; // [arcR * cos(2 * PI), -arcR * sin(2 * PI)]\n    isBig = 1;\n  } else {\n    var angle = percent * Math.PI * 2;\n    endAngle = beginAngle + angle;\n    arcEnd = [arcR * Math.cos(endAngle), -arcR * Math.sin(endAngle)];\n    isBig = angle > Math.PI ? 1 : 0;\n  }\n  var style = {\n    path: [['M', arcBegin[0], arcBegin[1]], ['A', arcR, arcR, 0, isBig, 0, arcEnd[0], arcEnd[1]]],\n    stroke: config.color || (updateShape === null || updateShape === void 0 ? void 0 : updateShape.attr('stroke')) || defaultSubjectColors[fanIndex % defaultSubjectColors.length],\n    lineWidth: lineWidth\n  };\n  if (updateShape) {\n    // update\n    updateShape.attr(style);\n  } else {\n    // draw\n    group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)] = group.addShape('path', {\n      attrs: style,\n      name: \"\".concat(FAN_NAME_PREFIX).concat(fanIndex),\n      draggable: true\n    });\n  }\n  return {\n    beginAngle: endAngle,\n    arcBegin: arcEnd,\n    shape: group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)],\n    shouldEnd: drawWhole || percent > 0.999\n  };\n};\n/**\n * utilizes the existing fan shapes, update them with new configs\n * removes the redundent fan shapes\n * or adds more fan shapes\n * @param cfg\n * @param item\n * @param keyShape\n */\nvar updateFans = function updateFans(cfg, item, keyShape) {\n  var donutAttrs = cfg.donutAttrs,\n    _a = cfg.donutColorMap,\n    donutColorMap = _a === void 0 ? {} : _a;\n  var visitMap = {};\n  var group = item.getContainer();\n  if (donutAttrs) {\n    var _b = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _b.configs,\n      totalValue = _b.totalValue;\n    if (totalValue) {\n      var _c = getDonutSize(keyShape),\n        lineWidth = _c.lineWidth,\n        arcR = _c.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      for (var i = 0; i < configs.length; i++) {\n        var shapeName = \"\".concat(FAN_NAME_PREFIX).concat(i);\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: configs.length === 1,\n          updateShape: group['shapeMap'][shapeName]\n        });\n        if (result.shape) visitMap[shapeName] = true;\n        if (result.shouldEnd) break;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n  // remove the old shapes which are not visited, including the situation taht donutAttrs is empty\n  var fanKeys = Object.keys(group['shapeMap']).filter(function (key) {\n    return key.includes(FAN_NAME_PREFIX);\n  });\n  fanKeys.forEach(function (key) {\n    if (!visitMap[key]) {\n      group['shapeMap'][key].remove(true);\n      delete group['shapeMap'][key];\n    }\n  });\n};\n/**\n * calculate the total value and format single value for each fan\n * @param donutAttrs\n * @param donutColorMap\n * @returns\n */\nvar getDonutConfig = function getDonutConfig(donutAttrs, donutColorMap) {\n  var totalValue = 0;\n  var configs = [];\n  Object.keys(donutAttrs).forEach(function (name) {\n    var value = +donutAttrs[name];\n    if (isNaN(value)) return;\n    configs.push({\n      key: name,\n      value: value,\n      color: donutColorMap[name]\n    });\n    totalValue += value;\n  });\n  return {\n    totalValue: totalValue,\n    configs: configs\n  };\n};\n/**\n * calculate the lineWidth and radius for fan shapes according to the keyShape's radius\n * @param keyShape\n * @returns\n */\nvar getDonutSize = function getDonutSize(keyShape) {\n  var keyShapeR = keyShape.attr('r');\n  var innerR = 0.6 * keyShapeR; // 甜甜圈的内环半径\n  var arcR = (keyShapeR + innerR) / 2; // 内环半径与外环半径的平均值\n  var lineWidth = keyShapeR - innerR;\n  return {\n    lineWidth: lineWidth,\n    arcR: arcR\n  };\n};","map":{"version":3,"names":["__assign","registerNode","BaseGlobal","Global","Util","deepMix","defaultSubjectColors","FAN_NAME_PREFIX","options","size","defaultNode","style","x","y","stroke","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","mergeStyle","getOptions","defaultIcon","getShapeStyle","keyShape","addShape","attrs","className","concat","type","draggable","name","text","textBaseline","textAlign","drawFans","drawLinkPoints","updateShape","item","keyShapeStyle","hasIcon","updateType","get","attr","updateFans","undefined","includes","updateLabel","updateIcon","donutAttrs","_b","donutColorMap","attrNum","Object","keys","length","_c","getDonutConfig","configs","totalValue","_d","getDonutSize","arcR","arcBegin","beginAngle","drawFan","config","fanIndex","drawWhole","i","result","shouldEnd","fanConfig","percent","value","shape","arcEnd","endAngle","isBig","angle","Math","PI","cos","sin","path","color","visitMap","getContainer","shapeName","fanKeys","filter","key","forEach","remove","isNaN","push","keyShapeR","innerR"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-element/es/nodes/donut.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { registerNode, BaseGlobal as Global, Util } from '@antv/g6-core';\nimport { deepMix } from '@antv/util';\nvar defaultSubjectColors = Util.defaultSubjectColors;\nvar FAN_NAME_PREFIX = 'fan-shape-';\n// 饼图节点\nregisterNode('donut', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true,\n      name: \"\".concat(this.type, \"-keyShape\")\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var width = icon.width,\n      height = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    // draw the fan shapes\n    drawFans(cfg, group, keyShape);\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  updateShape: function updateShape(cfg, item, keyShapeStyle, hasIcon, updateType) {\n    // here cfg is merged configure including old model and new configs\n    var keyShape = item.get('keyShape');\n    keyShape.attr(__assign({}, keyShapeStyle));\n    updateFans(cfg, item, keyShape);\n    if (!undefined || (updateType === null || updateType === void 0 ? void 0 : updateType.includes('label'))) {\n      this.updateLabel(cfg, item, updateType);\n    }\n    if (hasIcon) {\n      this.updateIcon(cfg, item);\n    }\n  }\n}, 'circle');\n/**\n * draws the fan shapes\n * @param cfg\n * @param group\n * @param keyShape\n * @returns\n */\nvar drawFans = function drawFans(cfg, group, keyShape) {\n  var _a = cfg.donutAttrs,\n    donutAttrs = _a === void 0 ? {} : _a,\n    _b = cfg.donutColorMap,\n    donutColorMap = _b === void 0 ? {} : _b;\n  var attrNum = Object.keys(donutAttrs).length;\n  if (donutAttrs && attrNum > 1) {\n    var _c = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _c.configs,\n      totalValue = _c.totalValue;\n    if (totalValue) {\n      var _d = getDonutSize(keyShape),\n        lineWidth = _d.lineWidth,\n        arcR = _d.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      if (attrNum === 1) {\n        // draw a path represents a circle\n        drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[0],\n          fanIndex: 0,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: true\n        });\n        return;\n      }\n      for (var i = 0; i < configs.length; i++) {\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue\n        });\n        if (result.shouldEnd) return;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n};\n/**\n * draws one fan shape and returns the next position and angle\n * @param group\n * @param fanConfig\n * @returns\n */\nvar drawFan = function drawFan(group, fanConfig) {\n  var arcR = fanConfig.arcR,\n    arcBegin = fanConfig.arcBegin,\n    beginAngle = fanConfig.beginAngle,\n    config = fanConfig.config,\n    fanIndex = fanConfig.fanIndex,\n    lineWidth = fanConfig.lineWidth,\n    totalValue = fanConfig.totalValue,\n    _a = fanConfig.drawWhole,\n    drawWhole = _a === void 0 ? false : _a,\n    _b = fanConfig.updateShape,\n    updateShape = _b === void 0 ? undefined : _b;\n  var percent = config.value / totalValue;\n  if (percent < 0.001) {\n    // too small to add a fan\n    return {\n      beginAngle: beginAngle,\n      arcBegin: arcBegin,\n      shape: undefined,\n      shouldEnd: false\n    };\n  }\n  var arcEnd, endAngle, isBig;\n  // draw a path represents the whole circle, or the percentage is close to 1\n  if (drawWhole || percent > 0.999) {\n    arcEnd = [arcR, 0.0001]; // [arcR * cos(2 * PI), -arcR * sin(2 * PI)]\n    isBig = 1;\n  } else {\n    var angle = percent * Math.PI * 2;\n    endAngle = beginAngle + angle;\n    arcEnd = [arcR * Math.cos(endAngle), -arcR * Math.sin(endAngle)];\n    isBig = angle > Math.PI ? 1 : 0;\n  }\n  var style = {\n    path: [['M', arcBegin[0], arcBegin[1]], ['A', arcR, arcR, 0, isBig, 0, arcEnd[0], arcEnd[1]]],\n    stroke: config.color || (updateShape === null || updateShape === void 0 ? void 0 : updateShape.attr('stroke')) || defaultSubjectColors[fanIndex % defaultSubjectColors.length],\n    lineWidth: lineWidth\n  };\n  if (updateShape) {\n    // update\n    updateShape.attr(style);\n  } else {\n    // draw\n    group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)] = group.addShape('path', {\n      attrs: style,\n      name: \"\".concat(FAN_NAME_PREFIX).concat(fanIndex),\n      draggable: true\n    });\n  }\n  return {\n    beginAngle: endAngle,\n    arcBegin: arcEnd,\n    shape: group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)],\n    shouldEnd: drawWhole || percent > 0.999\n  };\n};\n/**\n * utilizes the existing fan shapes, update them with new configs\n * removes the redundent fan shapes\n * or adds more fan shapes\n * @param cfg\n * @param item\n * @param keyShape\n */\nvar updateFans = function updateFans(cfg, item, keyShape) {\n  var donutAttrs = cfg.donutAttrs,\n    _a = cfg.donutColorMap,\n    donutColorMap = _a === void 0 ? {} : _a;\n  var visitMap = {};\n  var group = item.getContainer();\n  if (donutAttrs) {\n    var _b = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _b.configs,\n      totalValue = _b.totalValue;\n    if (totalValue) {\n      var _c = getDonutSize(keyShape),\n        lineWidth = _c.lineWidth,\n        arcR = _c.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      for (var i = 0; i < configs.length; i++) {\n        var shapeName = \"\".concat(FAN_NAME_PREFIX).concat(i);\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: configs.length === 1,\n          updateShape: group['shapeMap'][shapeName]\n        });\n        if (result.shape) visitMap[shapeName] = true;\n        if (result.shouldEnd) break;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n  // remove the old shapes which are not visited, including the situation taht donutAttrs is empty\n  var fanKeys = Object.keys(group['shapeMap']).filter(function (key) {\n    return key.includes(FAN_NAME_PREFIX);\n  });\n  fanKeys.forEach(function (key) {\n    if (!visitMap[key]) {\n      group['shapeMap'][key].remove(true);\n      delete group['shapeMap'][key];\n    }\n  });\n};\n/**\n * calculate the total value and format single value for each fan\n * @param donutAttrs\n * @param donutColorMap\n * @returns\n */\nvar getDonutConfig = function getDonutConfig(donutAttrs, donutColorMap) {\n  var totalValue = 0;\n  var configs = [];\n  Object.keys(donutAttrs).forEach(function (name) {\n    var value = +donutAttrs[name];\n    if (isNaN(value)) return;\n    configs.push({\n      key: name,\n      value: value,\n      color: donutColorMap[name]\n    });\n    totalValue += value;\n  });\n  return {\n    totalValue: totalValue,\n    configs: configs\n  };\n};\n/**\n * calculate the lineWidth and radius for fan shapes according to the keyShape's radius\n * @param keyShape\n * @returns\n */\nvar getDonutSize = function getDonutSize(keyShape) {\n  var keyShapeR = keyShape.attr('r');\n  var innerR = 0.6 * keyShapeR; // 甜甜圈的内环半径\n  var arcR = (keyShapeR + innerR) / 2; // 内环半径与外环半径的平均值\n  var lineWidth = keyShapeR - innerR;\n  return {\n    lineWidth: lineWidth,\n    arcR: arcR\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}