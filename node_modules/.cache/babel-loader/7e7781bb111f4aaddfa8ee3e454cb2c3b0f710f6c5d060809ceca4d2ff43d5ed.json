{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { head, last } from '@antv/util';\nimport MaskBase from './base';\nexport function getRegion(points) {\n  return {\n    start: head(points),\n    end: last(points)\n  };\n}\n/**\n * 添加图形\n * @param points\n * @returns\n */\nexport function getMaskAttrs(start, end) {\n  var x = Math.min(start.x, end.x);\n  var y = Math.min(start.y, end.y);\n  var width = Math.abs(end.x - start.x);\n  var height = Math.abs(end.y - start.y);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\n * @ignore\n * 矩形的辅助框 Action\n */\nvar RectMask = /** @class */function (_super) {\n  __extends(RectMask, _super);\n  function RectMask() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.shapeType = 'rect';\n    return _this;\n  }\n  RectMask.prototype.getRegion = function () {\n    return getRegion(this.points);\n  };\n  RectMask.prototype.getMaskAttrs = function () {\n    var _a = this.getRegion(),\n      start = _a.start,\n      end = _a.end;\n    return getMaskAttrs(start, end);\n  };\n  return RectMask;\n}(MaskBase);\nexport default RectMask;","map":{"version":3,"names":["head","last","MaskBase","getRegion","points","start","end","getMaskAttrs","x","Math","min","y","width","abs","height","RectMask","_super","__extends","_this","apply","arguments","shapeType","prototype","_a"],"sources":["../../../../src/interaction/action/mask/rect.ts"],"sourcesContent":["import { head, last } from '@antv/util';\nimport { Region } from '../../../interface';\nimport MaskBase from './base';\n\nexport function getRegion(points): Region {\n  return {\n    start: head(points),\n    end: last(points),\n  };\n}\n\n/**\n * 添加图形\n * @param points\n * @returns\n */\nexport function getMaskAttrs(start, end) {\n  const x = Math.min(start.x, end.x);\n  const y = Math.min(start.y, end.y);\n  const width = Math.abs(end.x - start.x);\n  const height = Math.abs(end.y - start.y);\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n}\n\n/**\n * @ignore\n * 矩形的辅助框 Action\n */\nclass RectMask extends MaskBase {\n  protected shapeType = 'rect';\n  protected getRegion() {\n    return getRegion(this.points);\n  }\n  protected getMaskAttrs() {\n    const { start, end } = this.getRegion();\n    return getMaskAttrs(start, end);\n  }\n}\n\nexport default RectMask;\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,IAAI,QAAQ,YAAY;AAEvC,OAAOC,QAAQ,MAAM,QAAQ;AAE7B,OAAM,SAAUC,SAASA,CAACC,MAAM;EAC9B,OAAO;IACLC,KAAK,EAAEL,IAAI,CAACI,MAAM,CAAC;IACnBE,GAAG,EAAEL,IAAI,CAACG,MAAM;GACjB;AACH;AAEA;;;;;AAKA,OAAM,SAAUG,YAAYA,CAACF,KAAK,EAAEC,GAAG;EACrC,IAAME,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACL,KAAK,CAACG,CAAC,EAAEF,GAAG,CAACE,CAAC,CAAC;EAClC,IAAMG,CAAC,GAAGF,IAAI,CAACC,GAAG,CAACL,KAAK,CAACM,CAAC,EAAEL,GAAG,CAACK,CAAC,CAAC;EAClC,IAAMC,KAAK,GAAGH,IAAI,CAACI,GAAG,CAACP,GAAG,CAACE,CAAC,GAAGH,KAAK,CAACG,CAAC,CAAC;EACvC,IAAMM,MAAM,GAAGL,IAAI,CAACI,GAAG,CAACP,GAAG,CAACK,CAAC,GAAGN,KAAK,CAACM,CAAC,CAAC;EACxC,OAAO;IACLH,CAAC,EAAAA,CAAA;IACDG,CAAC,EAAAA,CAAA;IACDC,KAAK,EAAAA,KAAA;IACLE,MAAM,EAAAA;GACP;AACH;AAEA;;;;AAIA,IAAAC,QAAA,0BAAAC,MAAA;EAAuBC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAAvB,SAAAD,SAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACYF,KAAA,CAAAG,SAAS,GAAG,MAAM;;EAQ9B;EAPYN,QAAA,CAAAO,SAAA,CAAAnB,SAAS,GAAnB;IACE,OAAOA,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC;EAC/B,CAAC;EACSW,QAAA,CAAAO,SAAA,CAAAf,YAAY,GAAtB;IACQ,IAAAgB,EAAA,GAAiB,IAAI,CAACpB,SAAS,EAAE;MAA/BE,KAAK,GAAAkB,EAAA,CAAAlB,KAAA;MAAEC,GAAG,GAAAiB,EAAA,CAAAjB,GAAqB;IACvC,OAAOC,YAAY,CAACF,KAAK,EAAEC,GAAG,CAAC;EACjC,CAAC;EACH,OAAAS,QAAC;AAAD,CAAC,CATsBb,QAAQ;AAW/B,eAAea,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}