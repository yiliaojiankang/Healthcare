{"ast":null,"code":"import { __extends } from \"tslib\";\nimport MultipleRectMask from './rect';\nimport { getRegion } from '../dim-rect';\n/**\n * @ignore\n */\nvar DimRectMultiMask = /** @class */function (_super) {\n  __extends(DimRectMultiMask, _super);\n  function DimRectMultiMask() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dim = 'x';\n    _this.inPlot = true;\n    return _this;\n  }\n  DimRectMultiMask.prototype.getRegion = function (points) {\n    var coord = this.context.view.getCoordinate();\n    return getRegion(points, this.dim, this.inPlot, coord);\n  };\n  return DimRectMultiMask;\n}(MultipleRectMask);\nexport default DimRectMultiMask;","map":{"version":3,"names":["MultipleRectMask","getRegion","DimRectMultiMask","_super","__extends","_this","apply","arguments","dim","inPlot","prototype","points","coord","context","view","getCoordinate"],"sources":["../../../../../src/interaction/action/mask/multiple/dim-rect.ts"],"sourcesContent":["import MultipleRectMask from './rect';\nimport { getRegion } from '../dim-rect';\n\n/**\n * @ignore\n */\nclass DimRectMultiMask extends MultipleRectMask {\n  protected dim = 'x';\n  protected inPlot = true;\n  protected getRegion(points) {\n    const coord = this.context.view.getCoordinate();\n    return getRegion(points, this.dim, this.inPlot, coord);\n  }\n}\n\nexport default DimRectMultiMask;\n"],"mappings":";AAAA,OAAOA,gBAAgB,MAAM,QAAQ;AACrC,SAASC,SAAS,QAAQ,aAAa;AAEvC;;;AAGA,IAAAC,gBAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAA/B,SAAAD,iBAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACYF,KAAA,CAAAG,GAAG,GAAG,GAAG;IACTH,KAAA,CAAAI,MAAM,GAAG,IAAI;;EAKzB;EAJYP,gBAAA,CAAAQ,SAAA,CAAAT,SAAS,GAAnB,UAAoBU,MAAM;IACxB,IAAMC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,aAAa,EAAE;IAC/C,OAAOd,SAAS,CAACU,MAAM,EAAE,IAAI,CAACH,GAAG,EAAE,IAAI,CAACC,MAAM,EAAEG,KAAK,CAAC;EACxD,CAAC;EACH,OAAAV,gBAAC;AAAD,CAAC,CAP8BF,gBAAgB;AAS/C,eAAeE,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}