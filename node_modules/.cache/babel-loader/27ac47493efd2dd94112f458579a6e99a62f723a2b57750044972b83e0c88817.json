{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { AbstractShape } from '@antv/g-base';\nimport { setShadow, setTransform, setClip } from '../util/svg';\nimport { createDom } from '../util/dom';\nimport { refreshElement } from '../util/draw';\nimport { SVG_ATTR_MAP } from '../constant';\nimport * as Shape from './index';\nimport Group from '../group';\nimport { getBBoxMethod } from '@antv/g-base';\nvar ShapeBase = /** @class */function (_super) {\n  __extends(ShapeBase, _super);\n  function ShapeBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'svg';\n    _this.canFill = false;\n    _this.canStroke = false;\n    return _this;\n  }\n  ShapeBase.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    // 设置默认值\n    return __assign(__assign({}, attrs), {\n      lineWidth: 1,\n      lineAppendWidth: 0,\n      strokeOpacity: 1,\n      fillOpacity: 1\n    });\n  };\n  // 覆盖基类的 afterAttrsChange 方法\n  ShapeBase.prototype.afterAttrsChange = function (targetAttrs) {\n    _super.prototype.afterAttrsChange.call(this, targetAttrs);\n    var canvas = this.get('canvas');\n    // 只有挂载到画布下，才对元素进行实际渲染\n    if (canvas && canvas.get('autoDraw')) {\n      var context = canvas.get('context');\n      this.draw(context, targetAttrs);\n    }\n  };\n  ShapeBase.prototype.getShapeBase = function () {\n    return Shape;\n  };\n  ShapeBase.prototype.getGroupBase = function () {\n    return Group;\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n  ShapeBase.prototype.onCanvasChange = function (changeType) {\n    refreshElement(this, changeType);\n  };\n  ShapeBase.prototype.calculateBBox = function () {\n    var el = this.get('el');\n    var bbox = null;\n    // 包围盒计算依赖于绘制，如果还没有生成对应的 Dom 元素，则包围盒的长宽均为 0\n    if (el) {\n      bbox = el.getBBox();\n    } else {\n      var bboxMethod = getBBoxMethod(this.get('type'));\n      if (bboxMethod) {\n        bbox = bboxMethod(this);\n      }\n    }\n    if (bbox) {\n      var x = bbox.x,\n        y = bbox.y,\n        width = bbox.width,\n        height = bbox.height;\n      var lineWidth = this.getHitLineWidth();\n      var halfWidth = lineWidth / 2;\n      var minX = x - halfWidth;\n      var minY = y - halfWidth;\n      var maxX = x + width + halfWidth;\n      var maxY = y + height + halfWidth;\n      return {\n        x: minX,\n        y: minY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        width: width + lineWidth,\n        height: height + lineWidth\n      };\n    }\n    return {\n      x: 0,\n      y: 0,\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n      width: 0,\n      height: 0\n    };\n  };\n  ShapeBase.prototype.isFill = function () {\n    var _a = this.attr(),\n      fill = _a.fill,\n      fillStyle = _a.fillStyle;\n    return (fill || fillStyle || this.isClipShape()) && this.canFill;\n  };\n  ShapeBase.prototype.isStroke = function () {\n    var _a = this.attr(),\n      stroke = _a.stroke,\n      strokeStyle = _a.strokeStyle;\n    return (stroke || strokeStyle) && this.canStroke;\n  };\n  ShapeBase.prototype.draw = function (context, targetAttrs) {\n    var el = this.get('el');\n    if (this.get('destroyed')) {\n      if (el) {\n        el.parentNode.removeChild(el);\n      }\n    } else {\n      if (!el) {\n        createDom(this);\n      }\n      setClip(this, context);\n      this.createPath(context, targetAttrs);\n      this.shadow(context, targetAttrs);\n      this.strokeAndFill(context, targetAttrs);\n      this.transform(targetAttrs);\n    }\n  };\n  /**\n   * @protected\n   * 绘制图形的路径\n   * @param {Defs} context 上下文\n   * @param {ShapeAttrs} targetAttrs 渲染的目标属性\n   */\n  ShapeBase.prototype.createPath = function (context, targetAttrs) {};\n  // stroke and fill\n  ShapeBase.prototype.strokeAndFill = function (context, targetAttrs) {\n    var attrs = targetAttrs || this.attr();\n    var fill = attrs.fill,\n      fillStyle = attrs.fillStyle,\n      stroke = attrs.stroke,\n      strokeStyle = attrs.strokeStyle,\n      fillOpacity = attrs.fillOpacity,\n      strokeOpacity = attrs.strokeOpacity,\n      lineWidth = attrs.lineWidth;\n    var el = this.get('el');\n    if (this.canFill) {\n      // 初次渲染和更新渲染的逻辑有所不同: 初次渲染值为空时，需要设置为 none，否则就会是黑色，而更新渲染则不需要\n      if (!targetAttrs) {\n        this._setColor(context, 'fill', fill || fillStyle);\n      } else if ('fill' in attrs) {\n        this._setColor(context, 'fill', fill);\n      } else if ('fillStyle' in attrs) {\n        // compatible with fillStyle\n        this._setColor(context, 'fill', fillStyle);\n      }\n      if (fillOpacity) {\n        el.setAttribute(SVG_ATTR_MAP['fillOpacity'], fillOpacity);\n      }\n    }\n    if (this.canStroke && lineWidth > 0) {\n      if (!targetAttrs) {\n        this._setColor(context, 'stroke', stroke || strokeStyle);\n      } else if ('stroke' in attrs) {\n        this._setColor(context, 'stroke', stroke);\n      } else if ('strokeStyle' in attrs) {\n        // compatible with strokeStyle\n        this._setColor(context, 'stroke', strokeStyle);\n      }\n      if (strokeOpacity) {\n        el.setAttribute(SVG_ATTR_MAP['strokeOpacity'], strokeOpacity);\n      }\n      if (lineWidth) {\n        el.setAttribute(SVG_ATTR_MAP['lineWidth'], lineWidth);\n      }\n    }\n  };\n  ShapeBase.prototype._setColor = function (context, attr, value) {\n    var el = this.get('el');\n    if (!value) {\n      // need to set `none` to avoid default value\n      el.setAttribute(SVG_ATTR_MAP[attr], 'none');\n      return;\n    }\n    value = value.trim();\n    if (/^[r,R,L,l]{1}[\\s]*\\(/.test(value)) {\n      var id = context.find('gradient', value);\n      if (!id) {\n        id = context.addGradient(value);\n      }\n      el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n    } else if (/^[p,P]{1}[\\s]*\\(/.test(value)) {\n      var id = context.find('pattern', value);\n      if (!id) {\n        id = context.addPattern(value);\n      }\n      el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n    } else {\n      el.setAttribute(SVG_ATTR_MAP[attr], value);\n    }\n  };\n  ShapeBase.prototype.shadow = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var _a = targetAttrs || attrs,\n      shadowOffsetX = _a.shadowOffsetX,\n      shadowOffsetY = _a.shadowOffsetY,\n      shadowBlur = _a.shadowBlur,\n      shadowColor = _a.shadowColor;\n    if (shadowOffsetX || shadowOffsetY || shadowBlur || shadowColor) {\n      setShadow(this, context);\n    }\n  };\n  ShapeBase.prototype.transform = function (targetAttrs) {\n    var attrs = this.attr();\n    var matrix = (targetAttrs || attrs).matrix;\n    if (matrix) {\n      setTransform(this);\n    }\n  };\n  ShapeBase.prototype.isInShape = function (refX, refY) {\n    return this.isPointInPath(refX, refY);\n  };\n  ShapeBase.prototype.isPointInPath = function (refX, refY) {\n    var el = this.get('el');\n    var canvas = this.get('canvas');\n    var bbox = canvas.get('el').getBoundingClientRect();\n    var clientX = refX + bbox.left;\n    var clientY = refY + bbox.top;\n    var element = document.elementFromPoint(clientX, clientY);\n    if (element && element.isEqualNode(el)) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * 获取线拾取的宽度\n   * @returns {number} 线的拾取宽度\n   */\n  ShapeBase.prototype.getHitLineWidth = function () {\n    var _a = this.attrs,\n      lineWidth = _a.lineWidth,\n      lineAppendWidth = _a.lineAppendWidth;\n    if (this.isStroke()) {\n      return lineWidth + lineAppendWidth;\n    }\n    return 0;\n  };\n  return ShapeBase;\n}(AbstractShape);\nexport default ShapeBase;","map":{"version":3,"names":["AbstractShape","setShadow","setTransform","setClip","createDom","refreshElement","SVG_ATTR_MAP","Shape","Group","getBBoxMethod","ShapeBase","_super","__extends","_this","apply","arguments","type","canFill","canStroke","prototype","getDefaultAttrs","attrs","call","__assign","lineWidth","lineAppendWidth","strokeOpacity","fillOpacity","afterAttrsChange","targetAttrs","canvas","get","context","draw","getShapeBase","getGroupBase","onCanvasChange","changeType","calculateBBox","el","bbox","getBBox","bboxMethod","x","y","width","height","getHitLineWidth","halfWidth","minX","minY","maxX","maxY","isFill","_a","attr","fill","fillStyle","isClipShape","isStroke","stroke","strokeStyle","parentNode","removeChild","createPath","shadow","strokeAndFill","transform","_setColor","setAttribute","value","trim","test","id","find","addGradient","addPattern","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","matrix","isInShape","refX","refY","isPointInPath","getBoundingClientRect","clientX","left","clientY","top","element","document","elementFromPoint","isEqualNode"],"sources":["../../src/shape/base.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}