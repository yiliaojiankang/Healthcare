{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends } from \"tslib\";\nimport { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, LineAxis, LineGrid } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { getAxisDirection, getAxisFactorByRegion, getAxisRegion, getAxisThemeCfg, getAxisTitleOptions, getAxisTitleText, getCircleAxisCenterRadius, isVertical } from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport { Controller } from './base';\n// update 组件的时候，忽略的数据更新\nvar OMIT_CFG = ['container'];\n// 坐标轴默认动画配置\nvar AXIS_DEFAULT_ANIMATE_CFG = __assign(__assign({}, DEFAULT_ANIMATE_CFG), {\n  appear: null\n});\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nvar Axis = /** @class */function (_super) {\n  __extends(Axis, _super);\n  function Axis(view) {\n    var _this = _super.call(this, view) || this;\n    /** 使用 object 存储组件 */\n    _this.cache = new Map();\n    // 先创建 gridContainer，将 grid 放到 axis 底层\n    _this.gridContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.gridForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.axisContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.axisForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    return _this;\n  }\n  Object.defineProperty(Axis.prototype, \"name\", {\n    get: function () {\n      return 'axis';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Axis.prototype.init = function () {};\n  Axis.prototype.render = function () {\n    this.update();\n  };\n  /**\n   * 更新组件布局，位置大小\n   */\n  Axis.prototype.layout = function () {\n    var _this = this;\n    var coordinate = this.view.getCoordinate();\n    each(this.getComponents(), function (co) {\n      var component = co.component,\n        direction = co.direction,\n        type = co.type,\n        extra = co.extra;\n      var dim = extra.dim,\n        scale = extra.scale,\n        alignTick = extra.alignTick;\n      var updated;\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed ? getAxisRegion(coordinate, direction) : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed ? getCircleAxisCenterRadius(coordinate) : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          var items = void 0;\n          if (coordinate.isTransposed) {\n            items = dim === 'x' ? getCircleGridItems(coordinate, _this.view.getYScales()[0], scale, alignTick, dim) : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items = dim === 'x' ? getLineGridItems(coordinate, scale, dim, alignTick) : getCircleGridItems(coordinate, _this.view.getXScale(), scale, alignTick, dim);\n          }\n          updated = {\n            items: items,\n            // coordinate 更新之后，center 也变化了\n            center: _this.view.getCoordinate().getCenter()\n          };\n        } else {\n          updated = {\n            items: getLineGridItems(coordinate, scale, dim, alignTick)\n          };\n        }\n      }\n      component.update(updated);\n    });\n  };\n  /**\n   * 更新 axis 组件\n   */\n  Axis.prototype.update = function () {\n    this.option = this.view.getOptions().axes;\n    var updatedCache = new Map();\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache);\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    var newCache = new Map();\n    this.cache.forEach(function (co, key) {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    });\n    // 更新缓存\n    this.cache = newCache;\n  };\n  Axis.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.gridForeContainer.clear();\n    this.axisContainer.clear();\n    this.axisForeContainer.clear();\n  };\n  Axis.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.gridContainer.remove(true);\n    this.gridForeContainer.remove(true);\n    this.axisContainer.remove(true);\n    this.axisForeContainer.remove(true);\n  };\n  /**\n   * @override\n   */\n  Axis.prototype.getComponents = function () {\n    var co = [];\n    this.cache.forEach(function (value) {\n      co.push(value);\n    });\n    return co;\n  };\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n  Axis.prototype.updateXAxes = function (updatedCache) {\n    // x axis\n    var scale = this.view.getXScale();\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n    var xAxisOption = getAxisOption(this.option, scale.field);\n    if (xAxisOption === false) {\n      return;\n    }\n    var direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    var layer = LAYER.BG;\n    var dim = 'x';\n    var coordinate = this.view.getCoordinate();\n    var axisId = this.getId('axis', scale.field);\n    var gridId = this.getId('grid', scale.field);\n    if (coordinate.isRect) {\n      // 1. do axis update\n      var axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        var cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n      // 2. do grid update\n      var grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        var cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      var axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        var cfg = coordinate.isTransposed ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS) : this.getCircleAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n      // 2. do grid update\n      var grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        var cfg = coordinate.isTransposed ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim) : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {\n      // helix and other, do not draw axis\n    }\n  };\n  Axis.prototype.updateYAxes = function (updatedCache) {\n    var _this = this;\n    // y axes\n    var yScales = this.view.getYScales();\n    each(yScales, function (scale, idx) {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n      var field = scale.field;\n      var yAxisOption = getAxisOption(_this.option, field);\n      if (yAxisOption !== false) {\n        var layer = LAYER.BG;\n        var dim = 'y';\n        var axisId = _this.getId('axis', field);\n        var gridId = _this.getId('grid', field);\n        var coordinate = _this.view.getCoordinate();\n        if (coordinate.isRect) {\n          var direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n          // 1. do axis update\n          var axis = _this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            var cfg = _this.getLineAxisCfg(scale, yAxisOption, direction);\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = _this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n            _this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n          // 2. do grid update\n          var grid = _this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            var cfg = _this.getLineGridCfg(scale, yAxisOption, direction, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = _this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n            if (grid) {\n              _this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          var axis = _this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            var cfg = coordinate.isTransposed ? _this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE) : _this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n            // @ts-ignore\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = _this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = _this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n            _this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n          // 2. do grid update\n          var grid = _this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            var cfg = coordinate.isTransposed ? _this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim) : _this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = _this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = _this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n            if (grid) {\n              _this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {\n          // helix and other, do not draw axis\n        }\n      }\n    });\n  };\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n  Axis.prototype.createLineAxis = function (scale, option, layer, direction, dim) {\n    // axis\n    var axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer: layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: {\n        dim: dim,\n        scale: scale\n      }\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n    return axis;\n  };\n  Axis.prototype.createLineGrid = function (scale, option, layer, direction, dim) {\n    var cfg = this.getLineGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      var grid = {\n        component: new LineGrid(cfg),\n        layer: layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim: dim,\n          scale: scale,\n          alignTick: get(cfg, 'alignTick', true)\n        }\n      };\n      grid.component.init();\n      return grid;\n    }\n  };\n  Axis.prototype.createCircleAxis = function (scale, option, layer, direction, dim) {\n    var axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer: layer,\n      direction: direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: {\n        dim: dim,\n        scale: scale\n      }\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n    return axis;\n  };\n  Axis.prototype.createCircleGrid = function (scale, option, layer, direction, dim) {\n    var cfg = this.getCircleGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      var grid = {\n        component: new CircleGrid(cfg),\n        layer: layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim: dim,\n          scale: scale,\n          alignTick: get(cfg, 'alignTick', true)\n        }\n      };\n      grid.component.init();\n      return grid;\n    }\n  };\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n  Axis.prototype.getLineAxisCfg = function (scale, axisOption, direction) {\n    var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    var coordinate = this.view.getCoordinate();\n    var region = getAxisRegion(coordinate, direction);\n    var titleText = getAxisTitleText(scale, axisOption);\n    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    var optionWithTitle = get(axisOption, ['title']) ? deepMix({\n      title: {\n        style: {\n          text: titleText\n        }\n      }\n    }, {\n      title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title)\n    }, axisOption) : axisOption;\n    var cfg = deepMix(__assign(__assign({\n      container: container\n    }, region), {\n      ticks: scale.getTicks().map(function (tick) {\n        return {\n          id: \"\".concat(tick.tickValue),\n          name: tick.text,\n          value: tick.value\n        };\n      }),\n      verticalFactor: coordinate.isPolar ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1 : getAxisFactorByRegion(region, coordinate.getCenter()),\n      theme: axisThemeCfg\n    }), axisThemeCfg, optionWithTitle);\n    var _a = this.getAnimateCfg(cfg),\n      animate = _a.animate,\n      animateOption = _a.animateOption;\n    cfg.animateOption = animateOption;\n    cfg.animate = animate;\n    // 计算 verticalLimitLength\n    var isAxisVertical = isVertical(region);\n    // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n    var verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      var canvasWidth = this.view.getCanvas().get('width');\n      var canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n    return cfg;\n  };\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n  Axis.prototype.getLineGridCfg = function (scale, axisOption, direction, dim) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    var gridCfg = deepMix({\n      container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer\n    }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n    return gridCfg;\n  };\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n  Axis.prototype.getCircleAxisCfg = function (scale, axisOption, direction) {\n    var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    var coordinate = this.view.getCoordinate();\n    var ticks = scale.getTicks().map(function (tick) {\n      return {\n        id: \"\".concat(tick.tickValue),\n        name: tick.text,\n        value: tick.value\n      };\n    });\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      if (ticks.length) ticks[ticks.length - 1].name = '';\n    }\n    var titleText = getAxisTitleText(scale, axisOption);\n    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n    // the cfg order should be ensure\n    var optionWithTitle = get(axisOption, ['title']) ? deepMix({\n      title: {\n        style: {\n          text: titleText\n        }\n      }\n    }, {\n      title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title)\n    }, axisOption) : axisOption;\n    var cfg = deepMix(__assign(__assign({\n      container: container\n    }, getCircleAxisCenterRadius(this.view.getCoordinate())), {\n      ticks: ticks,\n      verticalFactor: 1,\n      theme: axisThemeCfg\n    }), axisThemeCfg, optionWithTitle);\n    var _a = this.getAnimateCfg(cfg),\n      animate = _a.animate,\n      animateOption = _a.animateOption;\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n    return cfg;\n  };\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n  Axis.prototype.getCircleGridCfg = function (scale, axisOption, direction, dim) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    var gridCfg = deepMix({\n      container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n      center: this.view.getCoordinate().getCenter()\n    }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n    var alignTick = get(gridCfg, 'alignTick', true);\n    var verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    return gridCfg;\n  };\n  Axis.prototype.getId = function (name, key) {\n    var coordinate = this.view.getCoordinate();\n    // 坐标系类型也作为组件的 key\n    return \"\".concat(name, \"-\").concat(key, \"-\").concat(coordinate.type);\n  };\n  Axis.prototype.getAnimateCfg = function (cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'),\n      animateOption: cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG\n    };\n  };\n  return Axis;\n}(Controller);\nexport default Axis;","map":{"version":3,"names":["deepMix","each","get","isUndefined","DIRECTION","COMPONENT_TYPE","LAYER","CircleAxis","CircleGrid","LineAxis","LineGrid","DEFAULT_ANIMATE_CFG","getAxisDirection","getAxisFactorByRegion","getAxisRegion","getAxisThemeCfg","getAxisTitleOptions","getAxisTitleText","getCircleAxisCenterRadius","isVertical","getAxisOption","getCircleGridItems","getGridThemeCfg","getLineGridItems","showGrid","omit","Controller","OMIT_CFG","AXIS_DEFAULT_ANIMATE_CFG","__assign","appear","Axis","_super","__extends","view","_this","call","cache","Map","gridContainer","getLayer","BG","addGroup","gridForeContainer","FORE","axisContainer","axisForeContainer","Object","defineProperty","prototype","init","render","update","layout","coordinate","getCoordinate","getComponents","co","component","direction","type","extra","dim","scale","alignTick","updated","AXIS","isPolar","isTransposed","GRID","items","getYScales","getXScale","center","getCenter","option","getOptions","axes","updatedCache","updateXAxes","updateYAxes","newCache","forEach","key","has","set","destroy","clear","remove","value","push","isIdentity","xAxisOption","field","BOTTOM","layer","axisId","getId","gridId","isRect","axis","cfg","getLineAxisCfg","createLineAxis","grid","getLineGridCfg","createLineGrid","RADIUS","getCircleAxisCfg","createCircleAxis","getCircleGridCfg","CIRCLE","createCircleGrid","yScales","idx","yAxisOption","LEFT","RIGHT","NONE","axisOption","container","region","titleText","axisThemeCfg","getTheme","optionWithTitle","title","style","text","ticks","getTicks","map","tick","id","concat","tickValue","name","verticalFactor","theme","_a","getAnimateCfg","animate","animateOption","isAxisVertical","verticalLimitLength","canvasWidth","getCanvas","canvasHeight","undefined","gridThemeCfg","gridCfg","isCategory","Math","abs","endAngle","startAngle","PI","length","verticalScale"],"sources":["../../../src/chart/controller/axis.ts"],"sourcesContent":["import { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, IGroup, LineAxis, LineGrid, Scale } from '../../dependents';\nimport { AxisCfg, AxisOption, ComponentOption } from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\n\nimport {\n  getAxisDirection,\n  getAxisFactorByRegion,\n  getAxisRegion,\n  getAxisThemeCfg,\n  getAxisTitleOptions,\n  getAxisTitleText,\n  getCircleAxisCenterRadius,\n  isVertical,\n} from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport View from '../view';\nimport { Controller } from './base';\n\ntype Option = Record<string, AxisOption> | boolean;\n\ntype Cache = Map<string, ComponentOption>;\n\n// update 组件的时候，忽略的数据更新\nconst OMIT_CFG = ['container'];\n\n// 坐标轴默认动画配置\nconst AXIS_DEFAULT_ANIMATE_CFG = {\n  ...DEFAULT_ANIMATE_CFG,\n  appear: null,\n};\n\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nexport default class Axis extends Controller<Option> {\n  /** the draw group of axis */\n  private axisContainer: IGroup;\n  private axisForeContainer: IGroup;\n  private gridContainer: IGroup;\n  private gridForeContainer: IGroup;\n\n  /** 使用 object 存储组件 */\n  private cache: Cache = new Map<string, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    // 先创建 gridContainer，将 grid 放到 axis 底层\n    this.gridContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.gridForeContainer = this.view.getLayer(LAYER.FORE).addGroup();\n    this.axisContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.axisForeContainer = this.view.getLayer(LAYER.FORE).addGroup();\n  }\n\n  public get name(): string {\n    return 'axis';\n  }\n\n  public init() {}\n\n  public render() {\n    this.update();\n  }\n\n  /**\n   * 更新组件布局，位置大小\n   */\n  public layout() {\n    const coordinate = this.view.getCoordinate();\n\n    each(this.getComponents(), (co: ComponentOption) => {\n      const { component, direction, type, extra } = co;\n      const { dim, scale, alignTick } = extra;\n\n      let updated;\n\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed\n              ? getAxisRegion(coordinate, direction)\n              : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed\n              ? getCircleAxisCenterRadius(coordinate)\n              : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          let items;\n          if (coordinate.isTransposed) {\n            items =\n              dim === 'x'\n                ? getCircleGridItems(coordinate, this.view.getYScales()[0], scale, alignTick, dim)\n                : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items =\n              dim === 'x'\n                ? getLineGridItems(coordinate, scale, dim, alignTick)\n                : getCircleGridItems(coordinate, this.view.getXScale(), scale, alignTick, dim);\n          }\n          updated = {\n            items,\n            // coordinate 更新之后，center 也变化了\n            center: this.view.getCoordinate().getCenter(),\n          };\n        } else {\n          updated = { items: getLineGridItems(coordinate, scale, dim, alignTick) };\n        }\n      }\n      component.update(updated);\n    });\n  }\n\n  /**\n   * 更新 axis 组件\n   */\n  public update() {\n    this.option = this.view.getOptions().axes;\n\n    const updatedCache = new Map<string, ComponentOption>();\n\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache);\n\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    const newCache = new Map<string, ComponentOption>();\n\n    this.cache.forEach((co: ComponentOption, key: string) => {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    });\n\n    // 更新缓存\n    this.cache = newCache;\n  }\n\n  public clear() {\n    super.clear();\n\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.gridForeContainer.clear();\n    this.axisContainer.clear();\n    this.axisForeContainer.clear();\n  }\n\n  public destroy() {\n    super.destroy();\n\n    this.gridContainer.remove(true);\n    this.gridForeContainer.remove(true);\n    this.axisContainer.remove(true);\n    this.axisForeContainer.remove(true);\n  }\n\n  /**\n   * @override\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n  private updateXAxes(updatedCache: Cache) {\n    // x axis\n    const scale = this.view.getXScale();\n\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n\n    const xAxisOption = getAxisOption(this.option, scale.field);\n    if (xAxisOption === false) {\n      return;\n    }\n\n    const direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    const layer = LAYER.BG;\n    const dim = 'x';\n\n    const coordinate = this.view.getCoordinate();\n\n    const axisId = this.getId('axis', scale.field);\n    const gridId = this.getId('grid', scale.field);\n\n    if (coordinate.isRect) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = coordinate.isTransposed\n          ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS)\n          : this.getCircleAxisCfg(scale, xAxisOption, direction);\n\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = coordinate.isTransposed\n          ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim)\n          : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {\n      // helix and other, do not draw axis\n    }\n  }\n\n  private updateYAxes(updatedCache: Cache) {\n    // y axes\n    const yScales = this.view.getYScales();\n\n    each(yScales, (scale: Scale, idx: number) => {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n      const { field } = scale;\n      const yAxisOption = getAxisOption(this.option, field);\n\n      if (yAxisOption !== false) {\n        const layer = LAYER.BG;\n        const dim = 'y';\n        const axisId = this.getId('axis', field);\n        const gridId = this.getId('grid', field);\n\n        const coordinate = this.view.getCoordinate();\n\n        if (coordinate.isRect) {\n          const direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = this.getLineAxisCfg(scale, yAxisOption, direction);\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = this.getLineGridCfg(scale, yAxisOption, direction, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = coordinate.isTransposed\n              ? this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE)\n              : this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n\n            // @ts-ignore\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = coordinate.isTransposed\n              ? this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim)\n              : this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {\n          // helix and other, do not draw axis\n        }\n      }\n    });\n  }\n\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n  private createLineAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    // axis\n    const axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createLineGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getLineGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new LineGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n      grid.component.init();\n\n      return grid;\n    }\n  }\n\n  private createCircleAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer,\n      direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createCircleGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getCircleGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new CircleGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n\n      grid.component.init();\n      return grid;\n    }\n  }\n\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n  private getLineAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION) {\n    const container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n    const region = getAxisRegion(coordinate, direction);\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix(\n          { title: { style: { text: titleText } } },\n          { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) },\n          axisOption\n        )\n      : axisOption;\n\n    const cfg = deepMix(\n      {\n        container,\n        ...region,\n        ticks: scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value })),\n        verticalFactor: coordinate.isPolar\n          ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1\n          : getAxisFactorByRegion(region, coordinate.getCenter()),\n        theme: axisThemeCfg,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animateOption = animateOption;\n    cfg.animate = animate;\n\n    // 计算 verticalLimitLength\n    const isAxisVertical = isVertical(region);\n    // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n    const verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      const canvasWidth = this.view.getCanvas().get('width');\n      const canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n\n    return cfg;\n  }\n\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n  private getLineGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridCfg = deepMix(\n      {\n        container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n\n    return gridCfg;\n  }\n\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n  private getCircleAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION) {\n    const container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n\n    const ticks = scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value }));\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      if (ticks.length) ticks[ticks.length - 1].name = '';\n    }\n\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix(\n          { title: { style: { text: titleText } } },\n          { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) },\n          axisOption\n        )\n      : axisOption;\n    const cfg = deepMix(\n      {\n        container,\n        ...getCircleAxisCenterRadius(this.view.getCoordinate()),\n        ticks,\n        verticalFactor: 1,\n        theme: axisThemeCfg,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n\n    return cfg;\n  }\n\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n  private getCircleGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    const gridCfg = deepMix(\n      {\n        container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n        center: this.view.getCoordinate().getCenter(),\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    const alignTick = get(gridCfg, 'alignTick', true);\n    const verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    return gridCfg;\n  }\n\n  private getId(name: string, key: string): string {\n    const coordinate = this.view.getCoordinate();\n    // 坐标系类型也作为组件的 key\n    return `${name}-${key}-${coordinate.type}`;\n  }\n\n  private getAnimateCfg(cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'), // 如果 view 关闭动画，则不执行动画\n      animateOption:\n        cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG,\n    };\n  }\n}\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAEC,WAAW,QAAQ,YAAY;AAC5D,SAASC,SAAS,EAAEC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACjE,SAASC,UAAU,EAAEC,UAAU,EAAUC,QAAQ,EAAEC,QAAQ,QAAe,kBAAkB;AAG5F,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,SACEC,gBAAgB,EAChBC,qBAAqB,EACrBC,aAAa,EACbC,eAAe,EACfC,mBAAmB,EACnBC,gBAAgB,EAChBC,yBAAyB,EACzBC,UAAU,QACL,iBAAiB;AACxB,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,kBAAkB,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,QAAQ,QAAQ,iBAAiB;AACjG,SAASC,IAAI,QAAQ,mBAAmB;AAExC,SAASC,UAAU,QAAQ,QAAQ;AAMnC;AACA,IAAMC,QAAQ,GAAG,CAAC,WAAW,CAAC;AAE9B;AACA,IAAMC,wBAAwB,GAAAC,QAAA,CAAAA,QAAA,KACzBlB,mBAAmB;EACtBmB,MAAM,EAAE;AAAI,EACb;AAED;;;;;;;;AAQA,IAAAC,IAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAUhC,SAAAD,KAAYG,IAAU;IAAtB,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,OAAMF,IAAI,CAAC;IAJb;IACQC,KAAA,CAAAE,KAAK,GAAU,IAAIC,GAAG,EAA2B;IAKvD;IACAH,KAAI,CAACI,aAAa,GAAGJ,KAAI,CAACD,IAAI,CAACM,QAAQ,CAAClC,KAAK,CAACmC,EAAE,CAAC,CAACC,QAAQ,EAAE;IAC5DP,KAAI,CAACQ,iBAAiB,GAAGR,KAAI,CAACD,IAAI,CAACM,QAAQ,CAAClC,KAAK,CAACsC,IAAI,CAAC,CAACF,QAAQ,EAAE;IAClEP,KAAI,CAACU,aAAa,GAAGV,KAAI,CAACD,IAAI,CAACM,QAAQ,CAAClC,KAAK,CAACmC,EAAE,CAAC,CAACC,QAAQ,EAAE;IAC5DP,KAAI,CAACW,iBAAiB,GAAGX,KAAI,CAACD,IAAI,CAACM,QAAQ,CAAClC,KAAK,CAACsC,IAAI,CAAC,CAACF,QAAQ,EAAE;;EACpE;EAEAK,MAAA,CAAAC,cAAA,CAAWjB,IAAA,CAAAkB,SAAA,QAAI;SAAf,SAAA/C,CAAA;MACE,OAAO,MAAM;IACf,CAAC;;;;EAEM6B,IAAA,CAAAkB,SAAA,CAAAC,IAAI,GAAX,aAAe,CAAC;EAETnB,IAAA,CAAAkB,SAAA,CAAAE,MAAM,GAAb;IACE,IAAI,CAACC,MAAM,EAAE;EACf,CAAC;EAED;;;EAGOrB,IAAA,CAAAkB,SAAA,CAAAI,MAAM,GAAb;IAAA,IAAAlB,KAAA;IACE,IAAMmB,UAAU,GAAG,IAAI,CAACpB,IAAI,CAACqB,aAAa,EAAE;IAE5CtD,IAAI,CAAC,IAAI,CAACuD,aAAa,EAAE,EAAE,UAACC,EAAmB;MACrC,IAAAC,SAAS,GAA6BD,EAAE,CAAAC,SAA/B;QAAEC,SAAS,GAAkBF,EAAE,CAAAE,SAApB;QAAEC,IAAI,GAAYH,EAAE,CAAAG,IAAd;QAAEC,KAAK,GAAKJ,EAAE,CAAAI,KAAP;MACjC,IAAAC,GAAG,GAAuBD,KAAK,CAAAC,GAA5B;QAAEC,KAAK,GAAgBF,KAAK,CAAAE,KAArB;QAAEC,SAAS,GAAKH,KAAK,CAAAG,SAAV;MAE7B,IAAIC,OAAO;MAEX,IAAIL,IAAI,KAAKvD,cAAc,CAAC6D,IAAI,EAAE;QAChC,IAAIZ,UAAU,CAACa,OAAO,EAAE;UACtB,IAAIL,GAAG,KAAK,GAAG,EAAE;YACfG,OAAO,GAAGX,UAAU,CAACc,YAAY,GAC7BtD,aAAa,CAACwC,UAAU,EAAEK,SAAS,CAAC,GACpCzC,yBAAyB,CAACoC,UAAU,CAAC;WAC1C,MAAM,IAAIQ,GAAG,KAAK,GAAG,EAAE;YACtBG,OAAO,GAAGX,UAAU,CAACc,YAAY,GAC7BlD,yBAAyB,CAACoC,UAAU,CAAC,GACrCxC,aAAa,CAACwC,UAAU,EAAEK,SAAS,CAAC;;SAE3C,MAAM;UACLM,OAAO,GAAGnD,aAAa,CAACwC,UAAU,EAAEK,SAAS,CAAC;;OAEjD,MAAM,IAAIC,IAAI,KAAKvD,cAAc,CAACgE,IAAI,EAAE;QACvC,IAAIf,UAAU,CAACa,OAAO,EAAE;UACtB,IAAIG,KAAK;UACT,IAAIhB,UAAU,CAACc,YAAY,EAAE;YAC3BE,KAAK,GACHR,GAAG,KAAK,GAAG,GACPzC,kBAAkB,CAACiC,UAAU,EAAEnB,KAAI,CAACD,IAAI,CAACqC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAER,KAAK,EAAEC,SAAS,EAAEF,GAAG,CAAC,GAChFvC,gBAAgB,CAAC+B,UAAU,EAAES,KAAK,EAAED,GAAG,EAAEE,SAAS,CAAC;WAC1D,MAAM;YACLM,KAAK,GACHR,GAAG,KAAK,GAAG,GACPvC,gBAAgB,CAAC+B,UAAU,EAAES,KAAK,EAAED,GAAG,EAAEE,SAAS,CAAC,GACnD3C,kBAAkB,CAACiC,UAAU,EAAEnB,KAAI,CAACD,IAAI,CAACsC,SAAS,EAAE,EAAET,KAAK,EAAEC,SAAS,EAAEF,GAAG,CAAC;;UAEpFG,OAAO,GAAG;YACRK,KAAK,EAAAA,KAAA;YACL;YACAG,MAAM,EAAEtC,KAAI,CAACD,IAAI,CAACqB,aAAa,EAAE,CAACmB,SAAS;WAC5C;SACF,MAAM;UACLT,OAAO,GAAG;YAAEK,KAAK,EAAE/C,gBAAgB,CAAC+B,UAAU,EAAES,KAAK,EAAED,GAAG,EAAEE,SAAS;UAAC,CAAE;;;MAG5EN,SAAS,CAACN,MAAM,CAACa,OAAO,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC;EAED;;;EAGOlC,IAAA,CAAAkB,SAAA,CAAAG,MAAM,GAAb;IACE,IAAI,CAACuB,MAAM,GAAG,IAAI,CAACzC,IAAI,CAAC0C,UAAU,EAAE,CAACC,IAAI;IAEzC,IAAMC,YAAY,GAAG,IAAIxC,GAAG,EAA2B;IAEvD,IAAI,CAACyC,WAAW,CAACD,YAAY,CAAC;IAC9B,IAAI,CAACE,WAAW,CAACF,YAAY,CAAC;IAE9B;IACA;IACA,IAAMG,QAAQ,GAAG,IAAI3C,GAAG,EAA2B;IAEnD,IAAI,CAACD,KAAK,CAAC6C,OAAO,CAAC,UAACzB,EAAmB,EAAE0B,GAAW;MAClD,IAAIL,YAAY,CAACM,GAAG,CAACD,GAAG,CAAC,EAAE;QACzBF,QAAQ,CAACI,GAAG,CAACF,GAAG,EAAE1B,EAAE,CAAC;OACtB,MAAM;QACL;QACAA,EAAE,CAACC,SAAS,CAAC4B,OAAO,EAAE;;IAE1B,CAAC,CAAC;IAEF;IACA,IAAI,CAACjD,KAAK,GAAG4C,QAAQ;EACvB,CAAC;EAEMlD,IAAA,CAAAkB,SAAA,CAAAsC,KAAK,GAAZ;IACEvD,MAAA,CAAAiB,SAAA,CAAMsC,KAAK,CAAAnD,IAAA,MAAE;IAEb,IAAI,CAACC,KAAK,CAACkD,KAAK,EAAE;IAClB,IAAI,CAAChD,aAAa,CAACgD,KAAK,EAAE;IAC1B,IAAI,CAAC5C,iBAAiB,CAAC4C,KAAK,EAAE;IAC9B,IAAI,CAAC1C,aAAa,CAAC0C,KAAK,EAAE;IAC1B,IAAI,CAACzC,iBAAiB,CAACyC,KAAK,EAAE;EAChC,CAAC;EAEMxD,IAAA,CAAAkB,SAAA,CAAAqC,OAAO,GAAd;IACEtD,MAAA,CAAAiB,SAAA,CAAMqC,OAAO,CAAAlD,IAAA,MAAE;IAEf,IAAI,CAACG,aAAa,CAACiD,MAAM,CAAC,IAAI,CAAC;IAC/B,IAAI,CAAC7C,iBAAiB,CAAC6C,MAAM,CAAC,IAAI,CAAC;IACnC,IAAI,CAAC3C,aAAa,CAAC2C,MAAM,CAAC,IAAI,CAAC;IAC/B,IAAI,CAAC1C,iBAAiB,CAAC0C,MAAM,CAAC,IAAI,CAAC;EACrC,CAAC;EAED;;;EAGOzD,IAAA,CAAAkB,SAAA,CAAAO,aAAa,GAApB;IACE,IAAMC,EAAE,GAAG,EAAE;IAEb,IAAI,CAACpB,KAAK,CAAC6C,OAAO,CAAC,UAACO,KAAsB;MACxChC,EAAE,CAACiC,IAAI,CAACD,KAAK,CAAC;IAChB,CAAC,CAAC;IAEF,OAAOhC,EAAE;EACX,CAAC;EAED;;;;EAIQ1B,IAAA,CAAAkB,SAAA,CAAA8B,WAAW,GAAnB,UAAoBD,YAAmB;IACrC;IACA,IAAMf,KAAK,GAAG,IAAI,CAAC7B,IAAI,CAACsC,SAAS,EAAE;IAEnC,IAAI,CAACT,KAAK,IAAIA,KAAK,CAAC4B,UAAU,EAAE;MAC9B;;IAGF,IAAMC,WAAW,GAAGxE,aAAa,CAAC,IAAI,CAACuD,MAAM,EAAEZ,KAAK,CAAC8B,KAAK,CAAC;IAC3D,IAAID,WAAW,KAAK,KAAK,EAAE;MACzB;;IAGF,IAAMjC,SAAS,GAAG/C,gBAAgB,CAACgF,WAAW,EAAExF,SAAS,CAAC0F,MAAM,CAAC;IACjE,IAAMC,KAAK,GAAGzF,KAAK,CAACmC,EAAE;IACtB,IAAMqB,GAAG,GAAG,GAAG;IAEf,IAAMR,UAAU,GAAG,IAAI,CAACpB,IAAI,CAACqB,aAAa,EAAE;IAE5C,IAAMyC,MAAM,GAAG,IAAI,CAACC,KAAK,CAAC,MAAM,EAAElC,KAAK,CAAC8B,KAAK,CAAC;IAC9C,IAAMK,MAAM,GAAG,IAAI,CAACD,KAAK,CAAC,MAAM,EAAElC,KAAK,CAAC8B,KAAK,CAAC;IAE9C,IAAIvC,UAAU,CAAC6C,MAAM,EAAE;MACrB;MACA,IAAIC,IAAI,GAAG,IAAI,CAAC/D,KAAK,CAACnC,GAAG,CAAC8F,MAAM,CAAC;MACjC;MACA,IAAII,IAAI,EAAE;QACR,IAAMC,GAAG,GAAG,IAAI,CAACC,cAAc,CAACvC,KAAK,EAAE6B,WAAW,EAAEjC,SAAS,CAAC;QAC9DlC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;QACnByE,IAAI,CAAC1C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;QAC1BvB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;OAC/B,MAAM;QACL;QACAA,IAAI,GAAG,IAAI,CAACG,cAAc,CAACxC,KAAK,EAAE6B,WAAW,EAAEG,KAAK,EAAEpC,SAAS,EAAEG,GAAG,CAAC;QACrE,IAAI,CAACzB,KAAK,CAACgD,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;QAC5BtB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;;MAGhC;MACA,IAAII,IAAI,GAAG,IAAI,CAACnE,KAAK,CAACnC,GAAG,CAACgG,MAAM,CAAC;MACjC;MACA,IAAIM,IAAI,EAAE;QACR,IAAMH,GAAG,GAAG,IAAI,CAACI,cAAc,CAAC1C,KAAK,EAAE6B,WAAW,EAAEjC,SAAS,EAAEG,GAAG,CAAC;QACnErC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;QACnB6E,IAAI,CAAC9C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;QAC1BvB,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;OAC/B,MAAM;QACL;QACAA,IAAI,GAAG,IAAI,CAACE,cAAc,CAAC3C,KAAK,EAAE6B,WAAW,EAAEG,KAAK,EAAEpC,SAAS,EAAEG,GAAG,CAAC;QACrE,IAAI0C,IAAI,EAAE;UACR,IAAI,CAACnE,KAAK,CAACgD,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;UAC5B1B,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;;;KAGnC,MAAM,IAAIlD,UAAU,CAACa,OAAO,EAAE;MAC7B;MACA,IAAIiC,IAAI,GAAG,IAAI,CAAC/D,KAAK,CAACnC,GAAG,CAAC8F,MAAM,CAAC;MACjC;MACA,IAAII,IAAI,EAAE;QACR,IAAMC,GAAG,GAAG/C,UAAU,CAACc,YAAY,GAC/B,IAAI,CAACkC,cAAc,CAACvC,KAAK,EAAE6B,WAAW,EAAExF,SAAS,CAACuG,MAAM,CAAC,GACzD,IAAI,CAACC,gBAAgB,CAAC7C,KAAK,EAAE6B,WAAW,EAAEjC,SAAS,CAAC;QAExDlC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;QACnByE,IAAI,CAAC1C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;QAC1BvB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;OAC/B,MAAM;QACL;QACA,IAAI9C,UAAU,CAACc,YAAY,EAAE;UAC3B,IAAIjE,WAAW,CAACyF,WAAW,CAAC,EAAE;YAC5B;YACA;WACD,MAAM;YACL;YACA;YACAQ,IAAI,GAAG,IAAI,CAACG,cAAc,CAACxC,KAAK,EAAE6B,WAAW,EAAEG,KAAK,EAAE3F,SAAS,CAACuG,MAAM,EAAE7C,GAAG,CAAC;;SAE/E,MAAM;UACLsC,IAAI,GAAG,IAAI,CAACS,gBAAgB,CAAC9C,KAAK,EAAE6B,WAAW,EAAEG,KAAK,EAAEpC,SAAS,EAAEG,GAAG,CAAC;;QAEzE,IAAI,CAACzB,KAAK,CAACgD,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;QAC5BtB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;;MAGhC;MACA,IAAII,IAAI,GAAG,IAAI,CAACnE,KAAK,CAACnC,GAAG,CAACgG,MAAM,CAAC;MACjC;MACA,IAAIM,IAAI,EAAE;QACR,IAAMH,GAAG,GAAG/C,UAAU,CAACc,YAAY,GAC/B,IAAI,CAAC0C,gBAAgB,CAAC/C,KAAK,EAAE6B,WAAW,EAAExF,SAAS,CAACuG,MAAM,EAAE7C,GAAG,CAAC,GAChE,IAAI,CAAC2C,cAAc,CAAC1C,KAAK,EAAE6B,WAAW,EAAExF,SAAS,CAAC2G,MAAM,EAAEjD,GAAG,CAAC;QAClErC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;QACnB6E,IAAI,CAAC9C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;QAC1BvB,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;OAC/B,MAAM;QACL;QACA,IAAIlD,UAAU,CAACc,YAAY,EAAE;UAC3B,IAAIjE,WAAW,CAACyF,WAAW,CAAC,EAAE;YAC5B;WACD,MAAM;YACLY,IAAI,GAAG,IAAI,CAACQ,gBAAgB,CAACjD,KAAK,EAAE6B,WAAW,EAAEG,KAAK,EAAE3F,SAAS,CAACuG,MAAM,EAAE7C,GAAG,CAAC;;SAEjF,MAAM;UACL;UACA0C,IAAI,GAAG,IAAI,CAACE,cAAc,CAAC3C,KAAK,EAAE6B,WAAW,EAAEG,KAAK,EAAE3F,SAAS,CAAC2G,MAAM,EAAEjD,GAAG,CAAC;;QAG9E,IAAI0C,IAAI,EAAE;UACR,IAAI,CAACnE,KAAK,CAACgD,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;UAC5B1B,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;;;KAGnC,MAAM;MACL;IAAA;EAEJ,CAAC;EAEOzE,IAAA,CAAAkB,SAAA,CAAA+B,WAAW,GAAnB,UAAoBF,YAAmB;IAAvC,IAAA3C,KAAA;IACE;IACA,IAAM8E,OAAO,GAAG,IAAI,CAAC/E,IAAI,CAACqC,UAAU,EAAE;IAEtCtE,IAAI,CAACgH,OAAO,EAAE,UAAClD,KAAY,EAAEmD,GAAW;MACtC;MACA,IAAI,CAACnD,KAAK,IAAIA,KAAK,CAAC4B,UAAU,EAAE;QAC9B;;MAEM,IAAAE,KAAK,GAAK9B,KAAK,CAAA8B,KAAV;MACb,IAAMsB,WAAW,GAAG/F,aAAa,CAACe,KAAI,CAACwC,MAAM,EAAEkB,KAAK,CAAC;MAErD,IAAIsB,WAAW,KAAK,KAAK,EAAE;QACzB,IAAMpB,KAAK,GAAGzF,KAAK,CAACmC,EAAE;QACtB,IAAMqB,GAAG,GAAG,GAAG;QACf,IAAMkC,MAAM,GAAG7D,KAAI,CAAC8D,KAAK,CAAC,MAAM,EAAEJ,KAAK,CAAC;QACxC,IAAMK,MAAM,GAAG/D,KAAI,CAAC8D,KAAK,CAAC,MAAM,EAAEJ,KAAK,CAAC;QAExC,IAAMvC,UAAU,GAAGnB,KAAI,CAACD,IAAI,CAACqB,aAAa,EAAE;QAE5C,IAAID,UAAU,CAAC6C,MAAM,EAAE;UACrB,IAAMxC,SAAS,GAAG/C,gBAAgB,CAACuG,WAAW,EAAED,GAAG,KAAK,CAAC,GAAG9G,SAAS,CAACgH,IAAI,GAAGhH,SAAS,CAACiH,KAAK,CAAC;UAE7F;UACA,IAAIjB,IAAI,GAAGjE,KAAI,CAACE,KAAK,CAACnC,GAAG,CAAC8F,MAAM,CAAC;UACjC;UACA,IAAII,IAAI,EAAE;YACR,IAAMC,GAAG,GAAGlE,KAAI,CAACmE,cAAc,CAACvC,KAAK,EAAEoD,WAAW,EAAExD,SAAS,CAAC;YAC9DlC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;YACnByE,IAAI,CAAC1C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;YAC1BvB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;WAC/B,MAAM;YACL;YACAA,IAAI,GAAGjE,KAAI,CAACoE,cAAc,CAACxC,KAAK,EAAEoD,WAAW,EAAEpB,KAAK,EAAEpC,SAAS,EAAEG,GAAG,CAAC;YACrE3B,KAAI,CAACE,KAAK,CAACgD,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;YAC5BtB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;;UAGhC;UACA,IAAII,IAAI,GAAGrE,KAAI,CAACE,KAAK,CAACnC,GAAG,CAACgG,MAAM,CAAC;UACjC;UACA,IAAIM,IAAI,EAAE;YACR,IAAMH,GAAG,GAAGlE,KAAI,CAACsE,cAAc,CAAC1C,KAAK,EAAEoD,WAAW,EAAExD,SAAS,EAAEG,GAAG,CAAC;YACnErC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;YACnB6E,IAAI,CAAC9C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;YAC1BvB,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;WAC/B,MAAM;YACL;YACAA,IAAI,GAAGrE,KAAI,CAACuE,cAAc,CAAC3C,KAAK,EAAEoD,WAAW,EAAEpB,KAAK,EAAEpC,SAAS,EAAEG,GAAG,CAAC;YACrE,IAAI0C,IAAI,EAAE;cACRrE,KAAI,CAACE,KAAK,CAACgD,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;cAC5B1B,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;;;SAGnC,MAAM,IAAIlD,UAAU,CAACa,OAAO,EAAE;UAC7B;UACA,IAAIiC,IAAI,GAAGjE,KAAI,CAACE,KAAK,CAACnC,GAAG,CAAC8F,MAAM,CAAC;UACjC;UACA,IAAII,IAAI,EAAE;YACR,IAAMC,GAAG,GAAG/C,UAAU,CAACc,YAAY,GAC/BjC,KAAI,CAACyE,gBAAgB,CAAC7C,KAAK,EAAEoD,WAAW,EAAE/G,SAAS,CAAC2G,MAAM,CAAC,GAC3D5E,KAAI,CAACmE,cAAc,CAACvC,KAAK,EAAEoD,WAAW,EAAE/G,SAAS,CAACuG,MAAM,CAAC;YAE7D;YACAlF,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;YACnByE,IAAI,CAAC1C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;YAC1BvB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;WAC/B,MAAM;YACL;YACA,IAAI9C,UAAU,CAACc,YAAY,EAAE;cAC3B,IAAIjE,WAAW,CAACgH,WAAW,CAAC,EAAE;gBAC5B;eACD,MAAM;gBACLf,IAAI,GAAGjE,KAAI,CAAC0E,gBAAgB,CAAC9C,KAAK,EAAEoD,WAAW,EAAEpB,KAAK,EAAE3F,SAAS,CAAC2G,MAAM,EAAEjD,GAAG,CAAC;;aAEjF,MAAM;cACLsC,IAAI,GAAGjE,KAAI,CAACoE,cAAc,CAACxC,KAAK,EAAEoD,WAAW,EAAEpB,KAAK,EAAE3F,SAAS,CAACuG,MAAM,EAAE7C,GAAG,CAAC;;YAG9E3B,KAAI,CAACE,KAAK,CAACgD,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;YAC5BtB,YAAY,CAACO,GAAG,CAACW,MAAM,EAAEI,IAAI,CAAC;;UAGhC;UACA,IAAII,IAAI,GAAGrE,KAAI,CAACE,KAAK,CAACnC,GAAG,CAACgG,MAAM,CAAC;UACjC;UACA,IAAIM,IAAI,EAAE;YACR,IAAMH,GAAG,GAAG/C,UAAU,CAACc,YAAY,GAC/BjC,KAAI,CAACsE,cAAc,CAAC1C,KAAK,EAAEoD,WAAW,EAAE/G,SAAS,CAAC2G,MAAM,EAAEjD,GAAG,CAAC,GAC9D3B,KAAI,CAAC2E,gBAAgB,CAAC/C,KAAK,EAAEoD,WAAW,EAAE/G,SAAS,CAACuG,MAAM,EAAE7C,GAAG,CAAC;YACpErC,IAAI,CAAC4E,GAAG,EAAE1E,QAAQ,CAAC;YACnB6E,IAAI,CAAC9C,SAAS,CAACN,MAAM,CAACiD,GAAG,CAAC;YAC1BvB,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;WAC/B,MAAM;YACL;YACA,IAAIlD,UAAU,CAACc,YAAY,EAAE;cAC3B,IAAIjE,WAAW,CAACgH,WAAW,CAAC,EAAE;gBAC5B;eACD,MAAM;gBACLX,IAAI,GAAGrE,KAAI,CAACuE,cAAc,CAAC3C,KAAK,EAAEoD,WAAW,EAAEpB,KAAK,EAAE3F,SAAS,CAAC2G,MAAM,EAAEjD,GAAG,CAAC;;aAE/E,MAAM;cACL0C,IAAI,GAAGrE,KAAI,CAAC6E,gBAAgB,CAACjD,KAAK,EAAEoD,WAAW,EAAEpB,KAAK,EAAE3F,SAAS,CAACuG,MAAM,EAAE7C,GAAG,CAAC;;YAGhF,IAAI0C,IAAI,EAAE;cACRrE,KAAI,CAACE,KAAK,CAACgD,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;cAC5B1B,YAAY,CAACO,GAAG,CAACa,MAAM,EAAEM,IAAI,CAAC;;;SAGnC,MAAM;UACL;QAAA;;IAGN,CAAC,CAAC;EACJ,CAAC;EAED;;;;;;;;EAQQzE,IAAA,CAAAkB,SAAA,CAAAsD,cAAc,GAAtB,UACExC,KAAY,EACZY,MAAe,EACfoB,KAAY,EACZpC,SAAoB,EACpBG,GAAW;IAEX;IACA,IAAMsC,IAAI,GAAG;MACX1C,SAAS,EAAE,IAAIjD,QAAQ,CAAC,IAAI,CAAC6F,cAAc,CAACvC,KAAK,EAAEY,MAAM,EAAEhB,SAAS,CAAC,CAAC;MACtEoC,KAAK,EAAAA,KAAA;MACLpC,SAAS,EAAEA,SAAS,KAAKvD,SAAS,CAACuG,MAAM,GAAGvG,SAAS,CAACkH,IAAI,GAAG3D,SAAS;MACtEC,IAAI,EAAEvD,cAAc,CAAC6D,IAAI;MACzBL,KAAK,EAAE;QAAEC,GAAG,EAAAA,GAAA;QAAEC,KAAK,EAAAA;MAAA;KACpB;IACDqC,IAAI,CAAC1C,SAAS,CAAC2B,GAAG,CAAC,OAAO,EAAEtB,KAAK,CAAC8B,KAAK,CAAC;IACxCO,IAAI,CAAC1C,SAAS,CAACR,IAAI,EAAE;IAErB,OAAOkD,IAAI;EACb,CAAC;EAEOrE,IAAA,CAAAkB,SAAA,CAAAyD,cAAc,GAAtB,UACE3C,KAAY,EACZY,MAAe,EACfoB,KAAY,EACZpC,SAAoB,EACpBG,GAAW;IAEX,IAAMuC,GAAG,GAAG,IAAI,CAACI,cAAc,CAAC1C,KAAK,EAAEY,MAAM,EAAEhB,SAAS,EAAEG,GAAG,CAAC;IAC9D,IAAIuC,GAAG,EAAE;MACP,IAAMG,IAAI,GAAG;QACX9C,SAAS,EAAE,IAAIhD,QAAQ,CAAC2F,GAAG,CAAC;QAC5BN,KAAK,EAAAA,KAAA;QACLpC,SAAS,EAAEvD,SAAS,CAACkH,IAAI;QACzB1D,IAAI,EAAEvD,cAAc,CAACgE,IAAI;QACzBR,KAAK,EAAE;UACLC,GAAG,EAAAA,GAAA;UACHC,KAAK,EAAAA,KAAA;UACLC,SAAS,EAAE9D,GAAG,CAACmG,GAAG,EAAE,WAAW,EAAE,IAAI;;OAExC;MACDG,IAAI,CAAC9C,SAAS,CAACR,IAAI,EAAE;MAErB,OAAOsD,IAAI;;EAEf,CAAC;EAEOzE,IAAA,CAAAkB,SAAA,CAAA4D,gBAAgB,GAAxB,UACE9C,KAAY,EACZY,MAAe,EACfoB,KAAY,EACZpC,SAAoB,EACpBG,GAAW;IAEX,IAAMsC,IAAI,GAAG;MACX1C,SAAS,EAAE,IAAInD,UAAU,CAAC,IAAI,CAACqG,gBAAgB,CAAC7C,KAAK,EAAEY,MAAM,EAAEhB,SAAS,CAAC,CAAC;MAC1EoC,KAAK,EAAAA,KAAA;MACLpC,SAAS,EAAAA,SAAA;MACTC,IAAI,EAAEvD,cAAc,CAAC6D,IAAI;MACzBL,KAAK,EAAE;QAAEC,GAAG,EAAAA,GAAA;QAAEC,KAAK,EAAAA;MAAA;KACpB;IACDqC,IAAI,CAAC1C,SAAS,CAAC2B,GAAG,CAAC,OAAO,EAAEtB,KAAK,CAAC8B,KAAK,CAAC;IAExCO,IAAI,CAAC1C,SAAS,CAACR,IAAI,EAAE;IAErB,OAAOkD,IAAI;EACb,CAAC;EAEOrE,IAAA,CAAAkB,SAAA,CAAA+D,gBAAgB,GAAxB,UACEjD,KAAY,EACZY,MAAe,EACfoB,KAAY,EACZpC,SAAoB,EACpBG,GAAW;IAEX,IAAMuC,GAAG,GAAG,IAAI,CAACS,gBAAgB,CAAC/C,KAAK,EAAEY,MAAM,EAAEhB,SAAS,EAAEG,GAAG,CAAC;IAChE,IAAIuC,GAAG,EAAE;MACP,IAAMG,IAAI,GAAG;QACX9C,SAAS,EAAE,IAAIlD,UAAU,CAAC6F,GAAG,CAAC;QAC9BN,KAAK,EAAAA,KAAA;QACLpC,SAAS,EAAEvD,SAAS,CAACkH,IAAI;QACzB1D,IAAI,EAAEvD,cAAc,CAACgE,IAAI;QACzBR,KAAK,EAAE;UACLC,GAAG,EAAAA,GAAA;UACHC,KAAK,EAAAA,KAAA;UACLC,SAAS,EAAE9D,GAAG,CAACmG,GAAG,EAAE,WAAW,EAAE,IAAI;;OAExC;MAEDG,IAAI,CAAC9C,SAAS,CAACR,IAAI,EAAE;MACrB,OAAOsD,IAAI;;EAEf,CAAC;EAED;;;;;;;EAOQzE,IAAA,CAAAkB,SAAA,CAAAqD,cAAc,GAAtB,UAAuBvC,KAAY,EAAEwD,UAAmB,EAAE5D,SAAoB;IAC5E,IAAM6D,SAAS,GAAGtH,GAAG,CAACqH,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAACzE,iBAAiB,GAAG,IAAI,CAACD,aAAa;IACxF,IAAMS,UAAU,GAAG,IAAI,CAACpB,IAAI,CAACqB,aAAa,EAAE;IAC5C,IAAMkE,MAAM,GAAG3G,aAAa,CAACwC,UAAU,EAAEK,SAAS,CAAC;IACnD,IAAM+D,SAAS,GAAGzG,gBAAgB,CAAC8C,KAAK,EAAEwD,UAAU,CAAC;IACrD,IAAMI,YAAY,GAAG5G,eAAe,CAAC,IAAI,CAACmB,IAAI,CAAC0F,QAAQ,EAAE,EAAEjE,SAAS,CAAC;IACrE;IACA,IAAMkE,eAAe,GAAG3H,GAAG,CAACqH,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC,GAC9CvH,OAAO,CACL;MAAE8H,KAAK,EAAE;QAAEC,KAAK,EAAE;UAAEC,IAAI,EAAEN;QAAS;MAAE;IAAE,CAAE,EACzC;MAAEI,KAAK,EAAE9G,mBAAmB,CAAC,IAAI,CAACkB,IAAI,CAAC0F,QAAQ,EAAE,EAAEjE,SAAS,EAAE4D,UAAU,CAACO,KAAK;IAAC,CAAE,EACjFP,UAAU,CACX,GACDA,UAAU;IAEd,IAAMlB,GAAG,GAAGrG,OAAO,CAAA6B,QAAA,CAAAA,QAAA;MAEf2F,SAAS,EAAAA;IAAA,GACNC,MAAM;MACTQ,KAAK,EAAElE,KAAK,CAACmE,QAAQ,EAAE,CAACC,GAAG,CAAC,UAACC,IAAI;QAAK,OAAC;UAAEC,EAAE,EAAE,GAAAC,MAAA,CAAGF,IAAI,CAACG,SAAS,CAAE;UAAEC,IAAI,EAAEJ,IAAI,CAACJ,IAAI;UAAEvC,KAAK,EAAE2C,IAAI,CAAC3C;QAAK,CAAE;MAAhE,CAAiE,CAAC;MACxGgD,cAAc,EAAEnF,UAAU,CAACa,OAAO,GAC9BtD,qBAAqB,CAAC4G,MAAM,EAAEnE,UAAU,CAACoB,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,GAC1D7D,qBAAqB,CAAC4G,MAAM,EAAEnE,UAAU,CAACoB,SAAS,EAAE,CAAC;MACzDgE,KAAK,EAAEf;IAAY,IAErBA,YAAY,EACZE,eAAe,CAChB;IACK,IAAAc,EAAA,GAA6B,IAAI,CAACC,aAAa,CAACvC,GAAG,CAAC;MAAlDwC,OAAO,GAAAF,EAAA,CAAAE,OAAA;MAAEC,aAAa,GAAAH,EAAA,CAAAG,aAA4B;IAC1DzC,GAAG,CAACyC,aAAa,GAAGA,aAAa;IACjCzC,GAAG,CAACwC,OAAO,GAAGA,OAAO;IAErB;IACA,IAAME,cAAc,GAAG5H,UAAU,CAACsG,MAAM,CAAC;IACzC;IACA,IAAMuB,mBAAmB,GAAG9I,GAAG,CAACmG,GAAG,EAAE,qBAAqB,EAAE0C,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3F,IAAIC,mBAAmB,IAAI,CAAC,EAAE;MAC5B;MACA,IAAMC,WAAW,GAAG,IAAI,CAAC/G,IAAI,CAACgH,SAAS,EAAE,CAAChJ,GAAG,CAAC,OAAO,CAAC;MACtD,IAAMiJ,YAAY,GAAG,IAAI,CAACjH,IAAI,CAACgH,SAAS,EAAE,CAAChJ,GAAG,CAAC,QAAQ,CAAC;MACxDmG,GAAG,CAAC2C,mBAAmB,GAAGA,mBAAmB,IAAID,cAAc,GAAGE,WAAW,GAAGE,YAAY,CAAC;;IAG/F,OAAO9C,GAAG;EACZ,CAAC;EAED;;;;;;;;EAQQtE,IAAA,CAAAkB,SAAA,CAAAwD,cAAc,GAAtB,UAAuB1C,KAAY,EAAEwD,UAAmB,EAAE5D,SAAoB,EAAEG,GAAW;IACzF,IAAI,CAACtC,QAAQ,CAACT,eAAe,CAAC,IAAI,CAACmB,IAAI,CAAC0F,QAAQ,EAAE,EAAEjE,SAAS,CAAC,EAAE4D,UAAU,CAAC,EAAE;MAC3E,OAAO6B,SAAS;;IAElB,IAAMC,YAAY,GAAG/H,eAAe,CAAC,IAAI,CAACY,IAAI,CAAC0F,QAAQ,EAAE,EAAEjE,SAAS,CAAC;IACrE;IACA;IACA,IAAM2F,OAAO,GAAGtJ,OAAO,CACrB;MACEwH,SAAS,EAAEtH,GAAG,CAACqH,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC5E,iBAAiB,GAAG,IAAI,CAACJ;KACrE,EACD8G,YAAY,EACZnJ,GAAG,CAACqH,UAAU,EAAE,MAAM,CAAC,EACvB,IAAI,CAACqB,aAAa,CAACrB,UAAU,CAAC,CAC/B;IACD+B,OAAO,CAAChF,KAAK,GAAG/C,gBAAgB,CAAC,IAAI,CAACW,IAAI,CAACqB,aAAa,EAAE,EAAEQ,KAAK,EAAED,GAAG,EAAE5D,GAAG,CAACoJ,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAExG,OAAOA,OAAO;EAChB,CAAC;EAED;;;;;;;EAOQvH,IAAA,CAAAkB,SAAA,CAAA2D,gBAAgB,GAAxB,UAAyB7C,KAAY,EAAEwD,UAAmB,EAAE5D,SAAoB;IAC9E,IAAM6D,SAAS,GAAGtH,GAAG,CAACqH,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAACzE,iBAAiB,GAAG,IAAI,CAACD,aAAa;IACxF,IAAMS,UAAU,GAAG,IAAI,CAACpB,IAAI,CAACqB,aAAa,EAAE;IAE5C,IAAM0E,KAAK,GAAGlE,KAAK,CAACmE,QAAQ,EAAE,CAACC,GAAG,CAAC,UAACC,IAAI;MAAK,OAAC;QAAEC,EAAE,EAAE,GAAAC,MAAA,CAAGF,IAAI,CAACG,SAAS,CAAE;QAAEC,IAAI,EAAEJ,IAAI,CAACJ,IAAI;QAAEvC,KAAK,EAAE2C,IAAI,CAAC3C;MAAK,CAAE;IAAhE,CAAiE,CAAC;IAC/G,IAAI,CAAC1B,KAAK,CAACwF,UAAU,IAAIC,IAAI,CAACC,GAAG,CAACnG,UAAU,CAACoG,QAAQ,GAAGpG,UAAU,CAACqG,UAAU,CAAC,KAAKH,IAAI,CAACI,EAAE,GAAG,CAAC,EAAE;MAC9F;MACA,IAAI3B,KAAK,CAAC4B,MAAM,EAAE5B,KAAK,CAACA,KAAK,CAAC4B,MAAM,GAAG,CAAC,CAAC,CAACrB,IAAI,GAAG,EAAE;;IAGrD,IAAMd,SAAS,GAAGzG,gBAAgB,CAAC8C,KAAK,EAAEwD,UAAU,CAAC;IACrD,IAAMI,YAAY,GAAG5G,eAAe,CAAC,IAAI,CAACmB,IAAI,CAAC0F,QAAQ,EAAE,EAAExH,SAAS,CAAC2G,MAAM,CAAC;IAC5E;IACA,IAAMc,eAAe,GAAG3H,GAAG,CAACqH,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC,GAC9CvH,OAAO,CACL;MAAE8H,KAAK,EAAE;QAAEC,KAAK,EAAE;UAAEC,IAAI,EAAEN;QAAS;MAAE;IAAE,CAAE,EACzC;MAAEI,KAAK,EAAE9G,mBAAmB,CAAC,IAAI,CAACkB,IAAI,CAAC0F,QAAQ,EAAE,EAAEjE,SAAS,EAAE4D,UAAU,CAACO,KAAK;IAAC,CAAE,EACjFP,UAAU,CACX,GACDA,UAAU;IACd,IAAMlB,GAAG,GAAGrG,OAAO,CAAA6B,QAAA,CAAAA,QAAA;MAEf2F,SAAS,EAAAA;IAAA,GACNtG,yBAAyB,CAAC,IAAI,CAACgB,IAAI,CAACqB,aAAa,EAAE,CAAC;MACvD0E,KAAK,EAAAA,KAAA;MACLQ,cAAc,EAAE,CAAC;MACjBC,KAAK,EAAEf;IAAY,IAErBA,YAAY,EACZE,eAAe,CAChB;IACK,IAAAc,EAAA,GAA6B,IAAI,CAACC,aAAa,CAACvC,GAAG,CAAC;MAAlDwC,OAAO,GAAAF,EAAA,CAAAE,OAAA;MAAEC,aAAa,GAAAH,EAAA,CAAAG,aAA4B;IAC1DzC,GAAG,CAACwC,OAAO,GAAGA,OAAO;IACrBxC,GAAG,CAACyC,aAAa,GAAGA,aAAa;IAEjC,OAAOzC,GAAG;EACZ,CAAC;EAED;;;;;;;EAOQtE,IAAA,CAAAkB,SAAA,CAAA6D,gBAAgB,GAAxB,UAAyB/C,KAAY,EAAEwD,UAAmB,EAAE5D,SAAoB,EAAEG,GAAW;IAC3F,IAAI,CAACtC,QAAQ,CAACT,eAAe,CAAC,IAAI,CAACmB,IAAI,CAAC0F,QAAQ,EAAE,EAAEjE,SAAS,CAAC,EAAE4D,UAAU,CAAC,EAAE;MAC3E,OAAO6B,SAAS;;IAGlB;IACA;IACA,IAAMC,YAAY,GAAG/H,eAAe,CAAC,IAAI,CAACY,IAAI,CAAC0F,QAAQ,EAAE,EAAExH,SAAS,CAACuG,MAAM,CAAC;IAC5E,IAAM2C,OAAO,GAAGtJ,OAAO,CACrB;MACEwH,SAAS,EAAEtH,GAAG,CAACqH,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC5E,iBAAiB,GAAG,IAAI,CAACJ,aAAa;MACjFkC,MAAM,EAAE,IAAI,CAACvC,IAAI,CAACqB,aAAa,EAAE,CAACmB,SAAS;KAC5C,EACD2E,YAAY,EACZnJ,GAAG,CAACqH,UAAU,EAAE,MAAM,CAAC,EACvB,IAAI,CAACqB,aAAa,CAACrB,UAAU,CAAC,CAC/B;IACD,IAAMvD,SAAS,GAAG9D,GAAG,CAACoJ,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC;IACjD,IAAMQ,aAAa,GAAGhG,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC5B,IAAI,CAACqC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACrC,IAAI,CAACsC,SAAS,EAAE;IACrF8E,OAAO,CAAChF,KAAK,GAAGjD,kBAAkB,CAAC,IAAI,CAACa,IAAI,CAACqB,aAAa,EAAE,EAAEuG,aAAa,EAAE/F,KAAK,EAAEC,SAAS,EAAEF,GAAG,CAAC;IACnG;IACA;IACA,OAAOwF,OAAO;EAChB,CAAC;EAEOvH,IAAA,CAAAkB,SAAA,CAAAgD,KAAK,GAAb,UAAcuC,IAAY,EAAErD,GAAW;IACrC,IAAM7B,UAAU,GAAG,IAAI,CAACpB,IAAI,CAACqB,aAAa,EAAE;IAC5C;IACA,OAAO,GAAA+E,MAAA,CAAGE,IAAI,OAAAF,MAAA,CAAInD,GAAG,OAAAmD,MAAA,CAAIhF,UAAU,CAACM,IAAI,CAAE;EAC5C,CAAC;EAEO7B,IAAA,CAAAkB,SAAA,CAAA2F,aAAa,GAArB,UAAsBvC,GAAG;IACvB,OAAO;MACLwC,OAAO,EAAE,IAAI,CAAC3G,IAAI,CAAC0C,UAAU,EAAE,CAACiE,OAAO,IAAI3I,GAAG,CAACmG,GAAG,EAAE,SAAS,CAAC;MAC9DyC,aAAa,EACXzC,GAAG,IAAIA,GAAG,CAACyC,aAAa,GAAG9I,OAAO,CAAC,EAAE,EAAE4B,wBAAwB,EAAEyE,GAAG,CAACyC,aAAa,CAAC,GAAGlH;KACzF;EACH,CAAC;EACH,OAAAG,IAAC;AAAD,CAAC,CA9oBiCL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}