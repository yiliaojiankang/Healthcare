{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { clamp, head, last } from '@antv/util';\nimport RectMask from './rect';\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\nexport function getRegion(points, dim, inPlot, coord) {\n  var start = null;\n  var end = null;\n  var normalStart = coord.invert(head(points));\n  var normalEnd = coord.invert(last(points));\n  if (inPlot) {\n    // 约束到 0 - 1 范围内\n    clampPoint(normalStart);\n    clampPoint(normalEnd);\n  }\n  if (dim === 'x') {\n    // x 轴方向扩展, y 轴方向占满全部\n    start = coord.convert({\n      x: normalStart.x,\n      y: 0\n    });\n    end = coord.convert({\n      x: normalEnd.x,\n      y: 1\n    });\n  } else {\n    // y 轴方向扩展, x 轴方向占满全部\n    start = coord.convert({\n      x: 0,\n      y: normalStart.y\n    });\n    end = coord.convert({\n      x: 1,\n      y: normalEnd.y\n    });\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * @ignore\n */\nvar DimRect = /** @class */function (_super) {\n  __extends(DimRect, _super);\n  function DimRect() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dim = 'x';\n    _this.inPlot = true;\n    return _this;\n  }\n  DimRect.prototype.getRegion = function () {\n    var coord = this.context.view.getCoordinate();\n    return getRegion(this.points, this.dim, this.inPlot, coord);\n  };\n  return DimRect;\n}(RectMask);\nexport default DimRect;","map":{"version":3,"names":["clamp","head","last","RectMask","clampPoint","point","x","y","getRegion","points","dim","inPlot","coord","start","end","normalStart","invert","normalEnd","convert","DimRect","_super","__extends","_this","apply","arguments","prototype","context","view","getCoordinate"],"sources":["../../../../src/interaction/action/mask/dim-rect.ts"],"sourcesContent":["import { clamp, head, last } from '@antv/util';\nimport { Region } from '../../../interface';\nimport RectMask from './rect';\n\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\n\nexport function getRegion(points, dim, inPlot, coord): Region {\n  let start = null;\n  let end = null;\n  const normalStart = coord.invert(head(points));\n  const normalEnd = coord.invert(last(points));\n  if (inPlot) {\n    // 约束到 0 - 1 范围内\n    clampPoint(normalStart);\n    clampPoint(normalEnd);\n  }\n  if (dim === 'x') {\n    // x 轴方向扩展, y 轴方向占满全部\n    start = coord.convert({\n      x: normalStart.x,\n      y: 0,\n    });\n    end = coord.convert({\n      x: normalEnd.x,\n      y: 1,\n    });\n  } else {\n    // y 轴方向扩展, x 轴方向占满全部\n    start = coord.convert({\n      x: 0,\n      y: normalStart.y,\n    });\n    end = coord.convert({\n      x: 1,\n      y: normalEnd.y,\n    });\n  }\n  return {\n    start,\n    end,\n  };\n}\n\n/**\n * @ignore\n */\nclass DimRect extends RectMask {\n  protected dim = 'x';\n  protected inPlot = true;\n  protected getRegion() {\n    const coord = this.context.view.getCoordinate();\n    return getRegion(this.points, this.dim, this.inPlot, coord);\n  }\n}\n\nexport default DimRect;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,IAAI,QAAQ,YAAY;AAE9C,OAAOC,QAAQ,MAAM,QAAQ;AAE7B,SAASC,UAAUA,CAACC,KAAK;EACvBA,KAAK,CAACC,CAAC,GAAGN,KAAK,CAACK,KAAK,CAACC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9BD,KAAK,CAACE,CAAC,GAAGP,KAAK,CAACK,KAAK,CAACE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAChC;AAEA,OAAM,SAAUC,SAASA,CAACC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK;EAClD,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,GAAG,GAAG,IAAI;EACd,IAAMC,WAAW,GAAGH,KAAK,CAACI,MAAM,CAACf,IAAI,CAACQ,MAAM,CAAC,CAAC;EAC9C,IAAMQ,SAAS,GAAGL,KAAK,CAACI,MAAM,CAACd,IAAI,CAACO,MAAM,CAAC,CAAC;EAC5C,IAAIE,MAAM,EAAE;IACV;IACAP,UAAU,CAACW,WAAW,CAAC;IACvBX,UAAU,CAACa,SAAS,CAAC;;EAEvB,IAAIP,GAAG,KAAK,GAAG,EAAE;IACf;IACAG,KAAK,GAAGD,KAAK,CAACM,OAAO,CAAC;MACpBZ,CAAC,EAAES,WAAW,CAACT,CAAC;MAChBC,CAAC,EAAE;KACJ,CAAC;IACFO,GAAG,GAAGF,KAAK,CAACM,OAAO,CAAC;MAClBZ,CAAC,EAAEW,SAAS,CAACX,CAAC;MACdC,CAAC,EAAE;KACJ,CAAC;GACH,MAAM;IACL;IACAM,KAAK,GAAGD,KAAK,CAACM,OAAO,CAAC;MACpBZ,CAAC,EAAE,CAAC;MACJC,CAAC,EAAEQ,WAAW,CAACR;KAChB,CAAC;IACFO,GAAG,GAAGF,KAAK,CAACM,OAAO,CAAC;MAClBZ,CAAC,EAAE,CAAC;MACJC,CAAC,EAAEU,SAAS,CAACV;KACd,CAAC;;EAEJ,OAAO;IACLM,KAAK,EAAAA,KAAA;IACLC,GAAG,EAAAA;GACJ;AACH;AAEA;;;AAGA,IAAAK,OAAA,0BAAAC,MAAA;EAAsBC,SAAA,CAAAF,OAAA,EAAAC,MAAA;EAAtB,SAAAD,QAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACYF,KAAA,CAAAZ,GAAG,GAAG,GAAG;IACTY,KAAA,CAAAX,MAAM,GAAG,IAAI;;EAKzB;EAJYQ,OAAA,CAAAM,SAAA,CAAAjB,SAAS,GAAnB;IACE,IAAMI,KAAK,GAAG,IAAI,CAACc,OAAO,CAACC,IAAI,CAACC,aAAa,EAAE;IAC/C,OAAOpB,SAAS,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,MAAM,EAAEC,KAAK,CAAC;EAC7D,CAAC;EACH,OAAAO,OAAC;AAAD,CAAC,CAPqBhB,QAAQ;AAS9B,eAAegB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}