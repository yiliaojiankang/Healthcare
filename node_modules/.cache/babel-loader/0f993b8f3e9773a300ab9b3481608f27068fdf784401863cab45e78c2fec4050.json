{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { uniq } from '@antv/util';\nimport { theme } from '../../adaptor/common';\nimport { edge, polygon } from '../../adaptor/geometries';\nimport { deepAssign, findViewById, flow } from '../../utils';\nimport { addViewAnimation } from '../../utils/view';\nimport { COLOR_FIELD, EDGES_VIEW_ID, NODES_VIEW_ID, X_FIELD, Y_FIELD } from './constant';\nimport { transformToViewsData } from './helper';\n/**\n * 默认配置项 处理\n * @param params\n */\nfunction defaultOptions(params) {\n  var options = params.options;\n  var _a = options.rawFields,\n    rawFields = _a === void 0 ? [] : _a;\n  return deepAssign({}, {\n    options: {\n      tooltip: {\n        fields: uniq(__spreadArray(['name', 'source', 'target', 'value', 'isNode'], rawFields, true))\n      },\n      label: {\n        fields: uniq(__spreadArray(['x', 'name'], rawFields, true))\n      }\n    }\n  }, params);\n}\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var color = options.color,\n    nodeStyle = options.nodeStyle,\n    edgeStyle = options.edgeStyle,\n    label = options.label,\n    tooltip = options.tooltip,\n    nodeState = options.nodeState,\n    edgeState = options.edgeState,\n    _a = options.rawFields,\n    rawFields = _a === void 0 ? [] : _a;\n  // 1. 组件，优先设置，因为子 view 会继承配置\n  chart.legend(false);\n  chart.tooltip(tooltip);\n  chart.axis(false);\n  // y 镜像一下，防止图形顺序和数据顺序反了\n  chart.coordinate().reflect('y');\n  // 2. node edge views\n  // @ts-ignore\n  var _b = transformToViewsData(options, chart.width, chart.height),\n    nodes = _b.nodes,\n    edges = _b.edges;\n  // edge view\n  var edgeView = chart.createView({\n    id: EDGES_VIEW_ID\n  });\n  edgeView.data(edges);\n  edge({\n    chart: edgeView,\n    // @ts-ignore\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      seriesField: COLOR_FIELD,\n      rawFields: __spreadArray(['source', 'target'], rawFields, true),\n      edge: {\n        color: color,\n        style: edgeStyle,\n        shape: 'arc'\n      },\n      tooltip: tooltip,\n      state: edgeState\n    }\n  });\n  var nodeView = chart.createView({\n    id: NODES_VIEW_ID\n  });\n  nodeView.data(nodes);\n  polygon({\n    chart: nodeView,\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      seriesField: COLOR_FIELD,\n      polygon: {\n        color: color,\n        style: nodeStyle\n      },\n      label: label,\n      tooltip: tooltip,\n      state: nodeState\n    }\n  });\n  chart.interaction('element-active');\n  // scale\n  chart.scale({\n    x: {\n      sync: true,\n      nice: true,\n      min: 0,\n      max: 1,\n      minLimit: 0,\n      maxLimit: 1\n    },\n    y: {\n      sync: true,\n      nice: true,\n      min: 0,\n      max: 1,\n      minLimit: 0,\n      maxLimit: 1\n    },\n    name: {\n      sync: 'color',\n      type: 'cat'\n    }\n  });\n  return params;\n}\n/**\n * 动画\n * @param params\n */\nexport function animation(params) {\n  var chart = params.chart,\n    options = params.options;\n  var animation = options.animation;\n  var geometries = __spreadArray(__spreadArray([], chart.views[0].geometries, true), chart.views[1].geometries, true);\n  addViewAnimation(chart, animation, geometries);\n  return params;\n}\n/**\n * 节点拖动\n * @param params\n */\nexport function nodeDraggable(params) {\n  var chart = params.chart,\n    options = params.options;\n  var nodeDraggable = options.nodeDraggable;\n  var DRAG_INTERACTION = 'sankey-node-draggable';\n  if (nodeDraggable) {\n    chart.interaction(DRAG_INTERACTION);\n  } else {\n    chart.removeInteraction(DRAG_INTERACTION);\n  }\n  return params;\n}\n/**\n * Interaction 配置\n * @param params\n */\nfunction interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = options.interactions,\n    interactions = _a === void 0 ? [] : _a;\n  var nodeInteractions = [].concat(interactions, options.nodeInteractions || []);\n  var edgeInteractions = [].concat(interactions, options.edgeInteractions || []);\n  var nodeView = findViewById(chart, NODES_VIEW_ID);\n  var edgeView = findViewById(chart, EDGES_VIEW_ID);\n  nodeInteractions.forEach(function (i) {\n    if ((i === null || i === void 0 ? void 0 : i.enable) === false) {\n      nodeView.removeInteraction(i.type);\n    } else {\n      nodeView.interaction(i.type, i.cfg || {});\n    }\n  });\n  edgeInteractions.forEach(function (i) {\n    if ((i === null || i === void 0 ? void 0 : i.enable) === false) {\n      edgeView.removeInteraction(i.type);\n    } else {\n      edgeView.interaction(i.type, i.cfg || {});\n    }\n  });\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(defaultOptions, geometry, interaction, nodeDraggable, animation, theme\n  // ... 其他的 adaptor flow\n  )(params);\n}","map":{"version":3,"names":["uniq","theme","edge","polygon","deepAssign","findViewById","flow","addViewAnimation","COLOR_FIELD","EDGES_VIEW_ID","NODES_VIEW_ID","X_FIELD","Y_FIELD","transformToViewsData","defaultOptions","params","options","_a","rawFields","tooltip","fields","__spreadArray","label","geometry","chart","color","nodeStyle","edgeStyle","nodeState","edgeState","legend","axis","coordinate","reflect","_b","width","height","nodes","edges","edgeView","createView","id","data","xField","yField","seriesField","style","shape","state","nodeView","interaction","scale","x","sync","nice","min","max","minLimit","maxLimit","y","name","type","animation","geometries","views","nodeDraggable","DRAG_INTERACTION","removeInteraction","interactions","nodeInteractions","concat","edgeInteractions","forEach","i","enable","cfg","adaptor"],"sources":["../../../src/plots/sankey/adaptor.ts"],"sourcesContent":["import { uniq } from '@antv/util';\nimport { theme } from '../../adaptor/common';\nimport { edge, polygon } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findViewById, flow } from '../../utils';\nimport { addViewAnimation } from '../../utils/view';\nimport { COLOR_FIELD, EDGES_VIEW_ID, NODES_VIEW_ID, X_FIELD, Y_FIELD } from './constant';\nimport { transformToViewsData } from './helper';\nimport { SankeyOptions } from './types';\n\n/**\n * 默认配置项 处理\n * @param params\n */\nfunction defaultOptions(params: Params<SankeyOptions>): Params<SankeyOptions> {\n  const { options } = params;\n  const { rawFields = [] } = options;\n\n  return deepAssign(\n    {},\n    {\n      options: {\n        tooltip: {\n          fields: uniq(['name', 'source', 'target', 'value', 'isNode', ...rawFields]),\n        },\n        label: {\n          fields: uniq(['x', 'name', ...rawFields]),\n        },\n      },\n    },\n    params\n  );\n}\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<SankeyOptions>): Params<SankeyOptions> {\n  const { chart, options } = params;\n  const { color, nodeStyle, edgeStyle, label, tooltip, nodeState, edgeState, rawFields = [] } = options;\n\n  // 1. 组件，优先设置，因为子 view 会继承配置\n  chart.legend(false);\n  chart.tooltip(tooltip);\n  chart.axis(false);\n  // y 镜像一下，防止图形顺序和数据顺序反了\n  chart.coordinate().reflect('y');\n\n  // 2. node edge views\n  // @ts-ignore\n  const { nodes, edges } = transformToViewsData(options, chart.width, chart.height);\n\n  // edge view\n  const edgeView = chart.createView({ id: EDGES_VIEW_ID });\n  edgeView.data(edges);\n\n  edge({\n    chart: edgeView,\n    // @ts-ignore\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      seriesField: COLOR_FIELD,\n      rawFields: ['source', 'target', ...rawFields],\n      edge: {\n        color,\n        style: edgeStyle,\n        shape: 'arc',\n      },\n      tooltip,\n      state: edgeState,\n    },\n  });\n\n  const nodeView = chart.createView({ id: NODES_VIEW_ID });\n  nodeView.data(nodes);\n\n  polygon({\n    chart: nodeView,\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      seriesField: COLOR_FIELD,\n      polygon: {\n        color,\n        style: nodeStyle,\n      },\n      label,\n      tooltip,\n      state: nodeState,\n    },\n  });\n\n  chart.interaction('element-active');\n\n  // scale\n  chart.scale({\n    x: { sync: true, nice: true, min: 0, max: 1, minLimit: 0, maxLimit: 1 },\n    y: { sync: true, nice: true, min: 0, max: 1, minLimit: 0, maxLimit: 1 },\n    name: { sync: 'color', type: 'cat' },\n  });\n\n  return params;\n}\n\n/**\n * 动画\n * @param params\n */\nexport function animation(params: Params<SankeyOptions>): Params<SankeyOptions> {\n  const { chart, options } = params;\n  const { animation } = options;\n\n  const geometries = [...chart.views[0].geometries, ...chart.views[1].geometries];\n\n  addViewAnimation(chart, animation, geometries);\n\n  return params;\n}\n\n/**\n * 节点拖动\n * @param params\n */\nexport function nodeDraggable(params: Params<SankeyOptions>): Params<SankeyOptions> {\n  const { chart, options } = params;\n  const { nodeDraggable } = options;\n\n  const DRAG_INTERACTION = 'sankey-node-draggable';\n\n  if (nodeDraggable) {\n    chart.interaction(DRAG_INTERACTION);\n  } else {\n    chart.removeInteraction(DRAG_INTERACTION);\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置\n * @param params\n */\nfunction interaction(params: Params<SankeyOptions>): Params<SankeyOptions> {\n  const { chart, options } = params;\n  const { interactions = [] } = options;\n\n  const nodeInteractions = [].concat(interactions, options.nodeInteractions || []);\n  const edgeInteractions = [].concat(interactions, options.edgeInteractions || []);\n\n  const nodeView = findViewById(chart, NODES_VIEW_ID);\n  const edgeView = findViewById(chart, EDGES_VIEW_ID);\n\n  nodeInteractions.forEach((i) => {\n    if (i?.enable === false) {\n      nodeView.removeInteraction(i.type);\n    } else {\n      nodeView.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  edgeInteractions.forEach((i) => {\n    if (i?.enable === false) {\n      edgeView.removeInteraction(i.type);\n    } else {\n      edgeView.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<SankeyOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    defaultOptions,\n    geometry,\n    interaction,\n    nodeDraggable,\n    animation,\n    theme\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}