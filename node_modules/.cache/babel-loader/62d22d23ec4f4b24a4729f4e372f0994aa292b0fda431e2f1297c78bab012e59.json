{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = Pbf;\nvar ieee754 = require('ieee754');\nfunction Pbf(buf) {\n  this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n  this.pos = 0;\n  this.type = 0;\n  this.length = this.buf.length;\n}\nPbf.Varint = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n  SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\nPbf.prototype = {\n  destroy: function () {\n    this.buf = null;\n  },\n  // === READING =================================================================\n\n  readFields: function (readField, result, end) {\n    end = end || this.length;\n    while (this.pos < end) {\n      var val = this.readVarint(),\n        tag = val >> 3,\n        startPos = this.pos;\n      this.type = val & 0x7;\n      readField(tag, result, this);\n      if (this.pos === startPos) this.skip(val);\n    }\n    return result;\n  },\n  readMessage: function (readField, result) {\n    return this.readFields(readField, result, this.readVarint() + this.pos);\n  },\n  readFixed32: function () {\n    var val = readUInt32(this.buf, this.pos);\n    this.pos += 4;\n    return val;\n  },\n  readSFixed32: function () {\n    var val = readInt32(this.buf, this.pos);\n    this.pos += 4;\n    return val;\n  },\n  // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n  readFixed64: function () {\n    var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n    this.pos += 8;\n    return val;\n  },\n  readSFixed64: function () {\n    var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n    this.pos += 8;\n    return val;\n  },\n  readFloat: function () {\n    var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n    this.pos += 4;\n    return val;\n  },\n  readDouble: function () {\n    var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n    this.pos += 8;\n    return val;\n  },\n  readVarint: function (isSigned) {\n    var buf = this.buf,\n      val,\n      b;\n    b = buf[this.pos++];\n    val = b & 0x7f;\n    if (b < 0x80) return val;\n    b = buf[this.pos++];\n    val |= (b & 0x7f) << 7;\n    if (b < 0x80) return val;\n    b = buf[this.pos++];\n    val |= (b & 0x7f) << 14;\n    if (b < 0x80) return val;\n    b = buf[this.pos++];\n    val |= (b & 0x7f) << 21;\n    if (b < 0x80) return val;\n    b = buf[this.pos];\n    val |= (b & 0x0f) << 28;\n    return readVarintRemainder(val, isSigned, this);\n  },\n  readVarint64: function () {\n    // for compatibility with v2.0.1\n    return this.readVarint(true);\n  },\n  readSVarint: function () {\n    var num = this.readVarint();\n    return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n  },\n\n  readBoolean: function () {\n    return Boolean(this.readVarint());\n  },\n  readString: function () {\n    var end = this.readVarint() + this.pos;\n    var pos = this.pos;\n    this.pos = end;\n    if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n      // longer strings are fast with the built-in browser TextDecoder API\n      return readUtf8TextDecoder(this.buf, pos, end);\n    }\n    // short strings are fast with our custom implementation\n    return readUtf8(this.buf, pos, end);\n  },\n  readBytes: function () {\n    var end = this.readVarint() + this.pos,\n      buffer = this.buf.subarray(this.pos, end);\n    this.pos = end;\n    return buffer;\n  },\n  // verbose for performance reasons; doesn't affect gzipped size\n\n  readPackedVarint: function (arr, isSigned) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readVarint(isSigned));\n    return arr;\n  },\n  readPackedSVarint: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readSVarint());\n    return arr;\n  },\n  readPackedBoolean: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readBoolean());\n    return arr;\n  },\n  readPackedFloat: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readFloat());\n    return arr;\n  },\n  readPackedDouble: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readDouble());\n    return arr;\n  },\n  readPackedFixed32: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readFixed32());\n    return arr;\n  },\n  readPackedSFixed32: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readSFixed32());\n    return arr;\n  },\n  readPackedFixed64: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readFixed64());\n    return arr;\n  },\n  readPackedSFixed64: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n    while (this.pos < end) arr.push(this.readSFixed64());\n    return arr;\n  },\n  skip: function (val) {\n    var type = val & 0x7;\n    if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {} else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;else if (type === Pbf.Fixed32) this.pos += 4;else if (type === Pbf.Fixed64) this.pos += 8;else throw new Error('Unimplemented type: ' + type);\n  },\n  // === WRITING =================================================================\n\n  writeTag: function (tag, type) {\n    this.writeVarint(tag << 3 | type);\n  },\n  realloc: function (min) {\n    var length = this.length || 16;\n    while (length < this.pos + min) length *= 2;\n    if (length !== this.length) {\n      var buf = new Uint8Array(length);\n      buf.set(this.buf);\n      this.buf = buf;\n      this.length = length;\n    }\n  },\n  finish: function () {\n    this.length = this.pos;\n    this.pos = 0;\n    return this.buf.subarray(0, this.length);\n  },\n  writeFixed32: function (val) {\n    this.realloc(4);\n    writeInt32(this.buf, val, this.pos);\n    this.pos += 4;\n  },\n  writeSFixed32: function (val) {\n    this.realloc(4);\n    writeInt32(this.buf, val, this.pos);\n    this.pos += 4;\n  },\n  writeFixed64: function (val) {\n    this.realloc(8);\n    writeInt32(this.buf, val & -1, this.pos);\n    writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n    this.pos += 8;\n  },\n  writeSFixed64: function (val) {\n    this.realloc(8);\n    writeInt32(this.buf, val & -1, this.pos);\n    writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n    this.pos += 8;\n  },\n  writeVarint: function (val) {\n    val = +val || 0;\n    if (val > 0xfffffff || val < 0) {\n      writeBigVarint(val, this);\n      return;\n    }\n    this.realloc(4);\n    this.buf[this.pos++] = val & 0x7f | (val > 0x7f ? 0x80 : 0);\n    if (val <= 0x7f) return;\n    this.buf[this.pos++] = (val >>>= 7) & 0x7f | (val > 0x7f ? 0x80 : 0);\n    if (val <= 0x7f) return;\n    this.buf[this.pos++] = (val >>>= 7) & 0x7f | (val > 0x7f ? 0x80 : 0);\n    if (val <= 0x7f) return;\n    this.buf[this.pos++] = val >>> 7 & 0x7f;\n  },\n  writeSVarint: function (val) {\n    this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n  },\n  writeBoolean: function (val) {\n    this.writeVarint(Boolean(val));\n  },\n  writeString: function (str) {\n    str = String(str);\n    this.realloc(str.length * 4);\n    this.pos++; // reserve 1 byte for short string length\n\n    var startPos = this.pos;\n    // write the string directly to the buffer and see how much was written\n    this.pos = writeUtf8(this.buf, str, this.pos);\n    var len = this.pos - startPos;\n    if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n    // finally, write the message length in the reserved place and restore the position\n    this.pos = startPos - 1;\n    this.writeVarint(len);\n    this.pos += len;\n  },\n  writeFloat: function (val) {\n    this.realloc(4);\n    ieee754.write(this.buf, val, this.pos, true, 23, 4);\n    this.pos += 4;\n  },\n  writeDouble: function (val) {\n    this.realloc(8);\n    ieee754.write(this.buf, val, this.pos, true, 52, 8);\n    this.pos += 8;\n  },\n  writeBytes: function (buffer) {\n    var len = buffer.length;\n    this.writeVarint(len);\n    this.realloc(len);\n    for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n  },\n  writeRawMessage: function (fn, obj) {\n    this.pos++; // reserve 1 byte for short message length\n\n    // write the message directly to the buffer and see how much was written\n    var startPos = this.pos;\n    fn(obj, this);\n    var len = this.pos - startPos;\n    if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n    // finally, write the message length in the reserved place and restore the position\n    this.pos = startPos - 1;\n    this.writeVarint(len);\n    this.pos += len;\n  },\n  writeMessage: function (tag, fn, obj) {\n    this.writeTag(tag, Pbf.Bytes);\n    this.writeRawMessage(fn, obj);\n  },\n  writePackedVarint: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n  },\n  writePackedSVarint: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n  },\n  writePackedBoolean: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n  },\n  writePackedFloat: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n  },\n  writePackedDouble: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n  },\n  writePackedFixed32: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n  },\n  writePackedSFixed32: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n  },\n  writePackedFixed64: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n  },\n  writePackedSFixed64: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n  },\n  writeBytesField: function (tag, buffer) {\n    this.writeTag(tag, Pbf.Bytes);\n    this.writeBytes(buffer);\n  },\n  writeFixed32Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed32);\n    this.writeFixed32(val);\n  },\n  writeSFixed32Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed32);\n    this.writeSFixed32(val);\n  },\n  writeFixed64Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed64);\n    this.writeFixed64(val);\n  },\n  writeSFixed64Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed64);\n    this.writeSFixed64(val);\n  },\n  writeVarintField: function (tag, val) {\n    this.writeTag(tag, Pbf.Varint);\n    this.writeVarint(val);\n  },\n  writeSVarintField: function (tag, val) {\n    this.writeTag(tag, Pbf.Varint);\n    this.writeSVarint(val);\n  },\n  writeStringField: function (tag, str) {\n    this.writeTag(tag, Pbf.Bytes);\n    this.writeString(str);\n  },\n  writeFloatField: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed32);\n    this.writeFloat(val);\n  },\n  writeDoubleField: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed64);\n    this.writeDouble(val);\n  },\n  writeBooleanField: function (tag, val) {\n    this.writeVarintField(tag, Boolean(val));\n  }\n};\nfunction readVarintRemainder(l, s, p) {\n  var buf = p.buf,\n    h,\n    b;\n  b = buf[p.pos++];\n  h = (b & 0x70) >> 4;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 3;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 10;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 17;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 24;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x01) << 31;\n  if (b < 0x80) return toNum(l, h, s);\n  throw new Error('Expected varint not more than 10 bytes');\n}\nfunction readPackedEnd(pbf) {\n  return pbf.type === Pbf.Bytes ? pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\nfunction toNum(low, high, isSigned) {\n  if (isSigned) {\n    return high * 0x100000000 + (low >>> 0);\n  }\n  return (high >>> 0) * 0x100000000 + (low >>> 0);\n}\nfunction writeBigVarint(val, pbf) {\n  var low, high;\n  if (val >= 0) {\n    low = val % 0x100000000 | 0;\n    high = val / 0x100000000 | 0;\n  } else {\n    low = ~(-val % 0x100000000);\n    high = ~(-val / 0x100000000);\n    if (low ^ 0xffffffff) {\n      low = low + 1 | 0;\n    } else {\n      low = 0;\n      high = high + 1 | 0;\n    }\n  }\n  if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n    throw new Error('Given varint doesn\\'t fit into 10 bytes');\n  }\n  pbf.realloc(10);\n  writeBigVarintLow(low, high, pbf);\n  writeBigVarintHigh(high, pbf);\n}\nfunction writeBigVarintLow(low, high, pbf) {\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos] = low & 0x7f;\n}\nfunction writeBigVarintHigh(high, pbf) {\n  var lsb = (high & 0x07) << 4;\n  pbf.buf[pbf.pos++] |= lsb | ((high >>>= 3) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f;\n}\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n  var extraLen = len <= 0x3fff ? 1 : len <= 0x1fffff ? 2 : len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n  // if 1 byte isn't enough for encoding message length, shift the data to the right\n  pbf.realloc(extraLen);\n  for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\nfunction writePackedVarint(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\nfunction writePackedSVarint(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\nfunction writePackedFloat(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\nfunction writePackedDouble(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\nfunction writePackedBoolean(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\nfunction writePackedFixed32(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\nfunction writePackedSFixed32(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\nfunction writePackedFixed64(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\nfunction writePackedSFixed64(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16) + buf[pos + 3] * 0x1000000;\n}\nfunction writeInt32(buf, val, pos) {\n  buf[pos] = val;\n  buf[pos + 1] = val >>> 8;\n  buf[pos + 2] = val >>> 16;\n  buf[pos + 3] = val >>> 24;\n}\nfunction readInt32(buf, pos) {\n  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16) + (buf[pos + 3] << 24);\n}\nfunction readUtf8(buf, pos, end) {\n  var str = '';\n  var i = pos;\n  while (i < end) {\n    var b0 = buf[i];\n    var c = null; // codepoint\n    var bytesPerSequence = b0 > 0xEF ? 4 : b0 > 0xDF ? 3 : b0 > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence > end) break;\n    var b1, b2, b3;\n    if (bytesPerSequence === 1) {\n      if (b0 < 0x80) {\n        c = b0;\n      }\n    } else if (bytesPerSequence === 2) {\n      b1 = buf[i + 1];\n      if ((b1 & 0xC0) === 0x80) {\n        c = (b0 & 0x1F) << 0x6 | b1 & 0x3F;\n        if (c <= 0x7F) {\n          c = null;\n        }\n      }\n    } else if (bytesPerSequence === 3) {\n      b1 = buf[i + 1];\n      b2 = buf[i + 2];\n      if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n        c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | b2 & 0x3F;\n        if (c <= 0x7FF || c >= 0xD800 && c <= 0xDFFF) {\n          c = null;\n        }\n      }\n    } else if (bytesPerSequence === 4) {\n      b1 = buf[i + 1];\n      b2 = buf[i + 2];\n      b3 = buf[i + 3];\n      if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n        c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | b3 & 0x3F;\n        if (c <= 0xFFFF || c >= 0x110000) {\n          c = null;\n        }\n      }\n    }\n    if (c === null) {\n      c = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (c > 0xFFFF) {\n      c -= 0x10000;\n      str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n      c = 0xDC00 | c & 0x3FF;\n    }\n    str += String.fromCharCode(c);\n    i += bytesPerSequence;\n  }\n  return str;\n}\nfunction readUtf8TextDecoder(buf, pos, end) {\n  return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\nfunction writeUtf8(buf, str, pos) {\n  for (var i = 0, c, lead; i < str.length; i++) {\n    c = str.charCodeAt(i); // code point\n\n    if (c > 0xD7FF && c < 0xE000) {\n      if (lead) {\n        if (c < 0xDC00) {\n          buf[pos++] = 0xEF;\n          buf[pos++] = 0xBF;\n          buf[pos++] = 0xBD;\n          lead = c;\n          continue;\n        } else {\n          c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n          lead = null;\n        }\n      } else {\n        if (c > 0xDBFF || i + 1 === str.length) {\n          buf[pos++] = 0xEF;\n          buf[pos++] = 0xBF;\n          buf[pos++] = 0xBD;\n        } else {\n          lead = c;\n        }\n        continue;\n      }\n    } else if (lead) {\n      buf[pos++] = 0xEF;\n      buf[pos++] = 0xBF;\n      buf[pos++] = 0xBD;\n      lead = null;\n    }\n    if (c < 0x80) {\n      buf[pos++] = c;\n    } else {\n      if (c < 0x800) {\n        buf[pos++] = c >> 0x6 | 0xC0;\n      } else {\n        if (c < 0x10000) {\n          buf[pos++] = c >> 0xC | 0xE0;\n        } else {\n          buf[pos++] = c >> 0x12 | 0xF0;\n          buf[pos++] = c >> 0xC & 0x3F | 0x80;\n        }\n        buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n      }\n      buf[pos++] = c & 0x3F | 0x80;\n    }\n  }\n  return pos;\n}","map":{"version":3,"names":["require","module","exports","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","length","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","TextDecoder","prototype","destroy","readFields","readField","result","end","val","readVarint","tag","startPos","skip","readMessage","readFixed32","readUInt32","readSFixed32","readInt32","readFixed64","readSFixed64","readFloat","read","readDouble","isSigned","b","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","readUtf8TextDecoder","readUtf8","readBytes","buffer","subarray","readPackedVarint","arr","push","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","Error","writeTag","writeVarint","realloc","min","set","finish","writeFixed32","writeInt32","writeSFixed32","writeFixed64","Math","floor","writeSFixed64","writeBigVarint","writeSVarint","writeBoolean","writeString","str","String","writeUtf8","len","makeRoomForExtraLength","writeFloat","write","writeDouble","writeBytes","i","writeRawMessage","fn","obj","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","l","s","p","h","toNum","pbf","low","high","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","log","LN2","b0","c","bytesPerSequence","b1","b2","b3","fromCharCode","decode","lead","charCodeAt"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/pbf/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}