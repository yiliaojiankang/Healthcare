{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFunctionName = exports.getBaseClassDependencyCount = exports.getDependencies = void 0;\nvar inject_1 = require(\"../annotation/inject\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar serialization_1 = require(\"../utils/serialization\");\nObject.defineProperty(exports, \"getFunctionName\", {\n  enumerable: true,\n  get: function () {\n    return serialization_1.getFunctionName;\n  }\n});\nvar target_1 = require(\"./target\");\nfunction getDependencies(metadataReader, func) {\n  var constructorName = serialization_1.getFunctionName(func);\n  var targets = getTargets(metadataReader, constructorName, func, false);\n  return targets;\n}\nexports.getDependencies = getDependencies;\nfunction getTargets(metadataReader, constructorName, func, isBaseClass) {\n  var metadata = metadataReader.getConstructorMetadata(func);\n  var serviceIdentifiers = metadata.compilerGeneratedMetadata;\n  if (serviceIdentifiers === undefined) {\n    var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" \" + constructorName + \".\";\n    throw new Error(msg);\n  }\n  var constructorArgsMetadata = metadata.userGeneratedMetadata;\n  var keys = Object.keys(constructorArgsMetadata);\n  var hasUserDeclaredUnknownInjections = func.length === 0 && keys.length > 0;\n  var hasOptionalParameters = keys.length > func.length;\n  var iterations = hasUserDeclaredUnknownInjections || hasOptionalParameters ? keys.length : func.length;\n  var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);\n  var propertyTargets = getClassPropsAsTargets(metadataReader, func);\n  var targets = __spreadArray(__spreadArray([], constructorTargets), propertyTargets);\n  return targets;\n}\nfunction getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {\n  var targetMetadata = constructorArgsMetadata[index.toString()] || [];\n  var metadata = formatTargetMetadata(targetMetadata);\n  var isManaged = metadata.unmanaged !== true;\n  var serviceIdentifier = serviceIdentifiers[index];\n  var injectIdentifier = metadata.inject || metadata.multiInject;\n  serviceIdentifier = injectIdentifier ? injectIdentifier : serviceIdentifier;\n  if (serviceIdentifier instanceof inject_1.LazyServiceIdentifer) {\n    serviceIdentifier = serviceIdentifier.unwrap();\n  }\n  if (isManaged) {\n    var isObject = serviceIdentifier === Object;\n    var isFunction = serviceIdentifier === Function;\n    var isUndefined = serviceIdentifier === undefined;\n    var isUnknownType = isObject || isFunction || isUndefined;\n    if (!isBaseClass && isUnknownType) {\n      var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + \" argument \" + index + \" in class \" + constructorName + \".\";\n      throw new Error(msg);\n    }\n    var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);\n    target.metadata = targetMetadata;\n    return target;\n  }\n  return null;\n}\nfunction getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {\n  var targets = [];\n  for (var i = 0; i < iterations; i++) {\n    var index = i;\n    var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);\n    if (target !== null) {\n      targets.push(target);\n    }\n  }\n  return targets;\n}\nfunction getClassPropsAsTargets(metadataReader, constructorFunc) {\n  var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);\n  var targets = [];\n  var keys = Object.keys(classPropsMetadata);\n  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n    var key = keys_1[_i];\n    var targetMetadata = classPropsMetadata[key];\n    var metadata = formatTargetMetadata(classPropsMetadata[key]);\n    var targetName = metadata.targetName || key;\n    var serviceIdentifier = metadata.inject || metadata.multiInject;\n    var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIdentifier);\n    target.metadata = targetMetadata;\n    targets.push(target);\n  }\n  var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;\n  if (baseConstructor !== Object) {\n    var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);\n    targets = __spreadArray(__spreadArray([], targets), baseTargets);\n  }\n  return targets;\n}\nfunction getBaseClassDependencyCount(metadataReader, func) {\n  var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;\n  if (baseConstructor !== Object) {\n    var baseConstructorName = serialization_1.getFunctionName(baseConstructor);\n    var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);\n    var metadata = targets.map(function (t) {\n      return t.metadata.filter(function (m) {\n        return m.key === METADATA_KEY.UNMANAGED_TAG;\n      });\n    });\n    var unmanagedCount = [].concat.apply([], metadata).length;\n    var dependencyCount = targets.length - unmanagedCount;\n    if (dependencyCount > 0) {\n      return dependencyCount;\n    } else {\n      return getBaseClassDependencyCount(metadataReader, baseConstructor);\n    }\n  } else {\n    return 0;\n  }\n}\nexports.getBaseClassDependencyCount = getBaseClassDependencyCount;\nfunction formatTargetMetadata(targetMetadata) {\n  var targetMetadataMap = {};\n  targetMetadata.forEach(function (m) {\n    targetMetadataMap[m.key.toString()] = m.value;\n  });\n  return {\n    inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],\n    multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],\n    targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],\n    unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]\n  };\n}","map":{"version":3,"names":["inject_1","require","ERROR_MSGS","literal_types_1","METADATA_KEY","serialization_1","Object","defineProperty","exports","enumerable","get","getFunctionName","target_1","getDependencies","metadataReader","func","constructorName","targets","getTargets","isBaseClass","metadata","getConstructorMetadata","serviceIdentifiers","compilerGeneratedMetadata","undefined","msg","MISSING_INJECTABLE_ANNOTATION","Error","constructorArgsMetadata","userGeneratedMetadata","keys","hasUserDeclaredUnknownInjections","length","hasOptionalParameters","iterations","constructorTargets","getConstructorArgsAsTargets","propertyTargets","getClassPropsAsTargets","__spreadArray","getConstructorArgsAsTarget","index","targetMetadata","toString","formatTargetMetadata","isManaged","unmanaged","serviceIdentifier","injectIdentifier","inject","multiInject","LazyServiceIdentifer","unwrap","isObject","isFunction","Function","isUndefined","isUnknownType","MISSING_INJECT_ANNOTATION","target","Target","TargetTypeEnum","ConstructorArgument","targetName","i","push","constructorFunc","classPropsMetadata","getPropertiesMetadata","_i","keys_1","key","ClassProperty","baseConstructor","getPrototypeOf","prototype","constructor","baseTargets","getBaseClassDependencyCount","baseConstructorName","map","t","filter","m","UNMANAGED_TAG","unmanagedCount","concat","apply","dependencyCount","targetMetadataMap","forEach","value","INJECT_TAG","MULTI_INJECT_TAG","NAME_TAG"],"sources":["../../src/planning/reflection_utils.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAEA,IAAAI,eAAA,GAAAJ,OAAA;AA6NuDK,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OA7N9CL,eAAA,CAAAM,eAAe;EAAA;AAAA;AACxB,IAAAC,QAAA,GAAAX,OAAA;AAEA,SAASY,eAAeA,CACpBC,cAAyC,EAAEC,IAAc;EAEzD,IAAMC,eAAe,GAAGX,eAAA,CAAAM,eAAe,CAACI,IAAI,CAAC;EAC7C,IAAME,OAAO,GAAwBC,UAAU,CAACJ,cAAc,EAAEE,eAAe,EAAED,IAAI,EAAE,KAAK,CAAC;EAC7F,OAAOE,OAAO;AAClB;AAoNST,OAAA,CAAAK,eAAA,GAAAA,eAAA;AAlNT,SAASK,UAAUA,CACfJ,cAAyC,EAAEE,eAAuB,EAAED,IAAc,EAAEI,WAAoB;EAGxG,IAAMC,QAAQ,GAAGN,cAAc,CAACO,sBAAsB,CAACN,IAAI,CAAC;EAG5D,IAAMO,kBAAkB,GAAGF,QAAQ,CAACG,yBAAyB;EAG7D,IAAID,kBAAkB,KAAKE,SAAS,EAAE;IAClC,IAAMC,GAAG,GAAMvB,UAAU,CAACwB,6BAA6B,SAAIV,eAAe,MAAG;IAC7E,MAAM,IAAIW,KAAK,CAACF,GAAG,CAAC;;EAIxB,IAAMG,uBAAuB,GAAGR,QAAQ,CAACS,qBAAqB;EAE9D,IAAMC,IAAI,GAAGxB,MAAM,CAACwB,IAAI,CAACF,uBAAuB,CAAC;EACjD,IAAMG,gCAAgC,GAAIhB,IAAI,CAACiB,MAAM,KAAK,CAAC,IAAIF,IAAI,CAACE,MAAM,GAAG,CAAE;EAC/E,IAAMC,qBAAqB,GAAGH,IAAI,CAACE,MAAM,GAAGjB,IAAI,CAACiB,MAAM;EAEvD,IAAME,UAAU,GAAIH,gCAAgC,IAAIE,qBAAqB,GAAIH,IAAI,CAACE,MAAM,GAAGjB,IAAI,CAACiB,MAAM;EAG1G,IAAMG,kBAAkB,GAAGC,2BAA2B,CAClDjB,WAAW,EACXH,eAAe,EACfM,kBAAkB,EAClBM,uBAAuB,EACvBM,UAAU,CACb;EAGD,IAAMG,eAAe,GAAGC,sBAAsB,CAACxB,cAAc,EAAEC,IAAI,CAAC;EAEpE,IAAME,OAAO,GAAAsB,aAAA,CAAAA,aAAA,KACNJ,kBAAkB,GAClBE,eAAe,CACrB;EAED,OAAOpB,OAAO;AAElB;AACA,SAASuB,0BAA0BA,CAC/BC,KAAa,EACbtB,WAAoB,EACpBH,eAAuB,EACvBM,kBAAuB,EACvBM,uBAA4B;EAG5B,IAAMc,cAAc,GAAGd,uBAAuB,CAACa,KAAK,CAACE,QAAQ,EAAE,CAAC,IAAI,EAAE;EACtE,IAAMvB,QAAQ,GAAGwB,oBAAoB,CAACF,cAAc,CAAC;EACrD,IAAMG,SAAS,GAAGzB,QAAQ,CAAC0B,SAAS,KAAK,IAAI;EAI7C,IAAIC,iBAAiB,GAAGzB,kBAAkB,CAACmB,KAAK,CAAC;EACjD,IAAMO,gBAAgB,GAAK5B,QAAQ,CAAC6B,MAAM,IAAI7B,QAAQ,CAAC8B,WAAY;EACnEH,iBAAiB,GAAIC,gBAAgB,GAAKA,gBAAgB,GAAID,iBAAiB;EAG/E,IAAIA,iBAAiB,YAAY/C,QAAA,CAAAmD,oBAAoB,EAAE;IACnDJ,iBAAiB,GAAGA,iBAAiB,CAACK,MAAM,EAAE;;EAKlD,IAAIP,SAAS,EAAE;IAEX,IAAMQ,QAAQ,GAAGN,iBAAiB,KAAKzC,MAAM;IAC7C,IAAMgD,UAAU,GAAGP,iBAAiB,KAAKQ,QAAQ;IACjD,IAAMC,WAAW,GAAGT,iBAAiB,KAAKvB,SAAS;IACnD,IAAMiC,aAAa,GAAIJ,QAAQ,IAAIC,UAAU,IAAIE,WAAY;IAE7D,IAAI,CAACrC,WAAW,IAAIsC,aAAa,EAAE;MAC/B,IAAMhC,GAAG,GAAMvB,UAAU,CAACwD,yBAAyB,kBAAajB,KAAK,kBAAazB,eAAe,MAAG;MACpG,MAAM,IAAIW,KAAK,CAACF,GAAG,CAAC;;IAGxB,IAAMkC,MAAM,GAAG,IAAI/C,QAAA,CAAAgD,MAAM,CAACzD,eAAA,CAAA0D,cAAc,CAACC,mBAAmB,EAAE1C,QAAQ,CAAC2C,UAAU,EAAEhB,iBAAiB,CAAC;IACrGY,MAAM,CAACvC,QAAQ,GAAGsB,cAAc;IAChC,OAAOiB,MAAM;;EAGjB,OAAO,IAAI;AAEf;AAEA,SAASvB,2BAA2BA,CAChCjB,WAAoB,EACpBH,eAAuB,EACvBM,kBAAuB,EACvBM,uBAA4B,EAC5BM,UAAkB;EAGlB,IAAMjB,OAAO,GAAwB,EAAE;EACvC,KAAK,IAAI+C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9B,UAAU,EAAE8B,CAAC,EAAE,EAAE;IACjC,IAAMvB,KAAK,GAAGuB,CAAC;IACf,IAAML,MAAM,GAAGnB,0BAA0B,CACrCC,KAAK,EACLtB,WAAW,EACXH,eAAe,EACfM,kBAAkB,EAClBM,uBAAuB,CAC1B;IACD,IAAI+B,MAAM,KAAK,IAAI,EAAE;MACjB1C,OAAO,CAACgD,IAAI,CAACN,MAAM,CAAC;;;EAI5B,OAAO1C,OAAO;AAClB;AAEA,SAASqB,sBAAsBA,CAACxB,cAAyC,EAAEoD,eAAyB;EAEhG,IAAMC,kBAAkB,GAAGrD,cAAc,CAACsD,qBAAqB,CAACF,eAAe,CAAC;EAChF,IAAIjD,OAAO,GAAwB,EAAE;EACrC,IAAMa,IAAI,GAAGxB,MAAM,CAACwB,IAAI,CAACqC,kBAAkB,CAAC;EAE5C,KAAkB,IAAAE,EAAA,IAAI,EAAJC,MAAA,GAAAxC,IAAI,EAAJuC,EAAA,GAAAC,MAAA,CAAAtC,MAAI,EAAJqC,EAAA,EAAI,EAAE;IAAnB,IAAME,GAAG,GAAAD,MAAA,CAAAD,EAAA;IAGV,IAAM3B,cAAc,GAAGyB,kBAAkB,CAACI,GAAG,CAAC;IAG9C,IAAMnD,QAAQ,GAAGwB,oBAAoB,CAACuB,kBAAkB,CAACI,GAAG,CAAC,CAAC;IAG9D,IAAMR,UAAU,GAAG3C,QAAQ,CAAC2C,UAAU,IAAIQ,GAAG;IAG7C,IAAMxB,iBAAiB,GAAI3B,QAAQ,CAAC6B,MAAM,IAAI7B,QAAQ,CAAC8B,WAAY;IAGnE,IAAMS,MAAM,GAAG,IAAI/C,QAAA,CAAAgD,MAAM,CAACzD,eAAA,CAAA0D,cAAc,CAACW,aAAa,EAAET,UAAU,EAAEhB,iBAAiB,CAAC;IACtFY,MAAM,CAACvC,QAAQ,GAAGsB,cAAc;IAChCzB,OAAO,CAACgD,IAAI,CAACN,MAAM,CAAC;;EAIxB,IAAMc,eAAe,GAAGnE,MAAM,CAACoE,cAAc,CAACR,eAAe,CAACS,SAAS,CAAC,CAACC,WAAW;EAEpF,IAAIH,eAAe,KAAKnE,MAAM,EAAE;IAE5B,IAAMuE,WAAW,GAAGvC,sBAAsB,CAACxB,cAAc,EAAE2D,eAAe,CAAC;IAE3ExD,OAAO,GAAAsB,aAAA,CAAAA,aAAA,KACAtB,OAAO,GACP4D,WAAW,CACjB;;EAIL,OAAO5D,OAAO;AAClB;AAEA,SAAS6D,2BAA2BA,CAAChE,cAAyC,EAAEC,IAAc;EAE1F,IAAM0D,eAAe,GAAGnE,MAAM,CAACoE,cAAc,CAAC3D,IAAI,CAAC4D,SAAS,CAAC,CAACC,WAAW;EAEzE,IAAIH,eAAe,KAAKnE,MAAM,EAAE;IAG5B,IAAMyE,mBAAmB,GAAG1E,eAAA,CAAAM,eAAe,CAAC8D,eAAe,CAAC;IAE5D,IAAMxD,OAAO,GAAGC,UAAU,CAACJ,cAAc,EAAEiE,mBAAmB,EAAEN,eAAe,EAAE,IAAI,CAAC;IAGtF,IAAMrD,QAAQ,GAAUH,OAAO,CAAC+D,GAAG,CAAC,UAACC,CAAoB;MACrD,OAAAA,CAAC,CAAC7D,QAAQ,CAAC8D,MAAM,CAAC,UAACC,CAAsB;QACrC,OAAAA,CAAC,CAACZ,GAAG,KAAKnE,YAAY,CAACgF,aAAa;MAApC,CAAoC,CAAC;IADzC,CACyC,CAAC;IAI9C,IAAMC,cAAc,GAAG,EAAE,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE,EAAEnE,QAAQ,CAAC,CAACY,MAAM;IAC3D,IAAMwD,eAAe,GAAGvE,OAAO,CAACe,MAAM,GAAGqD,cAAc;IAEvD,IAAIG,eAAe,GAAG,CAAC,EAAE;MACrB,OAAOA,eAAe;KACzB,MAAM;MACH,OAAOV,2BAA2B,CAAChE,cAAc,EAAE2D,eAAe,CAAC;;GAG1E,MAAM;IACH,OAAO,CAAC;;AAGhB;AAoB0BjE,OAAA,CAAAsE,2BAAA,GAAAA,2BAAA;AAlB1B,SAASlC,oBAAoBA,CAACF,cAAqB;EAG/C,IAAM+C,iBAAiB,GAAQ,EAAE;EACjC/C,cAAc,CAACgD,OAAO,CAAC,UAACP,CAAsB;IAC1CM,iBAAiB,CAACN,CAAC,CAACZ,GAAG,CAAC5B,QAAQ,EAAE,CAAC,GAAGwC,CAAC,CAACQ,KAAK;EACjD,CAAC,CAAC;EAGF,OAAO;IACH1C,MAAM,EAAGwC,iBAAiB,CAACrF,YAAY,CAACwF,UAAU,CAAC;IACnD1C,WAAW,EAAEuC,iBAAiB,CAACrF,YAAY,CAACyF,gBAAgB,CAAC;IAC7D9B,UAAU,EAAE0B,iBAAiB,CAACrF,YAAY,CAAC0F,QAAQ,CAAC;IACpDhD,SAAS,EAAE2C,iBAAiB,CAACrF,YAAY,CAACgF,aAAa;GAC1D;AAEL"},"metadata":{},"sourceType":"script","externalDependencies":[]}