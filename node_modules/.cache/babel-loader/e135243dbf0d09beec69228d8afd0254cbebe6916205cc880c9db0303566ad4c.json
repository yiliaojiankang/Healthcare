{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n/**\n * The `DragPanHandler` allows the user to pan the map by clicking and dragging\n * the cursor.\n */\nvar DragPanHandler = /*#__PURE__*/function () {\n  /**\n   * @private\n   */\n  function DragPanHandler(el, mousePan, touchPan) {\n    _classCallCheck(this, DragPanHandler);\n    this.el = el;\n    this.mousePan = mousePan;\n    this.touchPan = touchPan;\n  }\n\n  /**\n   * Enables the \"drag to pan\" interaction.\n   *\n   * @param {Object} [options] Options object\n   * @param {number} [options.linearity=0] factor used to scale the drag velocity\n   * @param {Function} [options.easing=bezier(0, 0, 0.3, 1)] easing function applled to `map.panTo` when applying the drag.\n   * @param {number} [options.maxSpeed=1400] the maximum value of the drag velocity.\n   * @param {number} [options.deceleration=2500] the rate at which the speed reduces after the pan ends.\n   *\n   * @example\n   *   map.dragPan.enable();\n   * @example\n   *   map.dragPan.enable({\n   *      linearity: 0.3,\n   *      easing: bezier(0, 0, 0.3, 1),\n   *      maxSpeed: 1400,\n   *      deceleration: 2500,\n   *   });\n   */\n  _createClass(DragPanHandler, [{\n    key: \"enable\",\n    value: function enable(options) {\n      this.inertiaOptions = options || {};\n      this.mousePan.enable();\n      this.touchPan.enable();\n      this.el.classList.add('l7-touch-drag-pan');\n    }\n\n    /**\n     * Disables the \"drag to pan\" interaction.\n     *\n     * @example\n     * map.dragPan.disable();\n     */\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.mousePan.disable();\n      this.touchPan.disable();\n      this.el.classList.remove('l7-touch-drag-pan');\n    }\n\n    /**\n     * Returns a Boolean indicating whether the \"drag to pan\" interaction is enabled.\n     *\n     * @returns {boolean} `true` if the \"drag to pan\" interaction is enabled.\n     */\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.mousePan.isEnabled() && this.touchPan.isEnabled();\n    }\n\n    /**\n     * Returns a Boolean indicating whether the \"drag to pan\" interaction is active, i.e. currently being used.\n     *\n     * @returns {boolean} `true` if the \"drag to pan\" interaction is active.\n     */\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.mousePan.isActive() || this.touchPan.isActive();\n    }\n  }]);\n  return DragPanHandler;\n}();\nexport { DragPanHandler as default };","map":{"version":3,"names":["_classCallCheck","_createClass","DragPanHandler","el","mousePan","touchPan","key","value","enable","options","inertiaOptions","classList","add","disable","remove","isEnabled","isActive","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-map/es/handler/shim/drag_pan.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n/**\n * The `DragPanHandler` allows the user to pan the map by clicking and dragging\n * the cursor.\n */\nvar DragPanHandler = /*#__PURE__*/function () {\n  /**\n   * @private\n   */\n  function DragPanHandler(el, mousePan, touchPan) {\n    _classCallCheck(this, DragPanHandler);\n    this.el = el;\n    this.mousePan = mousePan;\n    this.touchPan = touchPan;\n  }\n\n  /**\n   * Enables the \"drag to pan\" interaction.\n   *\n   * @param {Object} [options] Options object\n   * @param {number} [options.linearity=0] factor used to scale the drag velocity\n   * @param {Function} [options.easing=bezier(0, 0, 0.3, 1)] easing function applled to `map.panTo` when applying the drag.\n   * @param {number} [options.maxSpeed=1400] the maximum value of the drag velocity.\n   * @param {number} [options.deceleration=2500] the rate at which the speed reduces after the pan ends.\n   *\n   * @example\n   *   map.dragPan.enable();\n   * @example\n   *   map.dragPan.enable({\n   *      linearity: 0.3,\n   *      easing: bezier(0, 0, 0.3, 1),\n   *      maxSpeed: 1400,\n   *      deceleration: 2500,\n   *   });\n   */\n  _createClass(DragPanHandler, [{\n    key: \"enable\",\n    value: function enable(options) {\n      this.inertiaOptions = options || {};\n      this.mousePan.enable();\n      this.touchPan.enable();\n      this.el.classList.add('l7-touch-drag-pan');\n    }\n\n    /**\n     * Disables the \"drag to pan\" interaction.\n     *\n     * @example\n     * map.dragPan.disable();\n     */\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.mousePan.disable();\n      this.touchPan.disable();\n      this.el.classList.remove('l7-touch-drag-pan');\n    }\n\n    /**\n     * Returns a Boolean indicating whether the \"drag to pan\" interaction is enabled.\n     *\n     * @returns {boolean} `true` if the \"drag to pan\" interaction is enabled.\n     */\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.mousePan.isEnabled() && this.touchPan.isEnabled();\n    }\n\n    /**\n     * Returns a Boolean indicating whether the \"drag to pan\" interaction is active, i.e. currently being used.\n     *\n     * @returns {boolean} `true` if the \"drag to pan\" interaction is active.\n     */\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.mousePan.isActive() || this.touchPan.isActive();\n    }\n  }]);\n  return DragPanHandler;\n}();\nexport { DragPanHandler as default };"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,YAAY,MAAM,wCAAwC;AACjE;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAG,aAAa,YAAY;EAC5C;AACF;AACA;EACE,SAASA,cAAcA,CAACC,EAAE,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC9CL,eAAe,CAAC,IAAI,EAAEE,cAAc,CAAC;IACrC,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEJ,YAAY,CAACC,cAAc,EAAE,CAAC;IAC5BI,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE,SAASC,MAAMA,CAACC,OAAO,EAAE;MAC9B,IAAI,CAACC,cAAc,GAAGD,OAAO,IAAI,CAAC,CAAC;MACnC,IAAI,CAACL,QAAQ,CAACI,MAAM,CAAC,CAAC;MACtB,IAAI,CAACH,QAAQ,CAACG,MAAM,CAAC,CAAC;MACtB,IAAI,CAACL,EAAE,CAACQ,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAC5C;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDN,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAASM,OAAOA,CAAA,EAAG;MACxB,IAAI,CAACT,QAAQ,CAACS,OAAO,CAAC,CAAC;MACvB,IAAI,CAACR,QAAQ,CAACQ,OAAO,CAAC,CAAC;MACvB,IAAI,CAACV,EAAE,CAACQ,SAAS,CAACG,MAAM,CAAC,mBAAmB,CAAC;IAC/C;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDR,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE,SAASQ,SAASA,CAAA,EAAG;MAC1B,OAAO,IAAI,CAACX,QAAQ,CAACW,SAAS,CAAC,CAAC,IAAI,IAAI,CAACV,QAAQ,CAACU,SAAS,CAAC,CAAC;IAC/D;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDT,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE,SAASS,QAAQA,CAAA,EAAG;MACzB,OAAO,IAAI,CAACZ,QAAQ,CAACY,QAAQ,CAAC,CAAC,IAAI,IAAI,CAACX,QAAQ,CAACW,QAAQ,CAAC,CAAC;IAC7D;EACF,CAAC,CAAC,CAAC;EACH,OAAOd,cAAc;AACvB,CAAC,CAAC,CAAC;AACH,SAASA,cAAc,IAAIe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}