{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, omit } from '@antv/util';\nimport { theme } from '../../adaptor/common';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { execPlotAdaptor } from '../mix/utils';\nimport { execViewAdaptor } from './utils';\nfunction facetAdaptor(params) {\n  var chart = params.chart,\n    options = params.options;\n  var facetType = options.type,\n    data = options.data,\n    fields = options.fields,\n    eachView = options.eachView;\n  var restFacetCfg = omit(options, ['type', 'data', 'fields', 'eachView', 'axes', 'meta', 'tooltip', 'coordinate', 'theme', 'legend', 'interactions', 'annotations']);\n  // 1. data\n  chart.data(data);\n  // 2. facet\n  chart.facet(facetType, __assign(__assign({}, restFacetCfg), {\n    fields: fields,\n    eachView: function (viewOfG2, facet) {\n      var viewOptions = eachView(viewOfG2, facet);\n      if (viewOptions.geometries) {\n        execViewAdaptor(viewOfG2, viewOptions);\n      } else {\n        var plot = viewOptions;\n        var plotOptions = plot.options;\n        // @ts-ignore 仪表盘没 tooltip\n        if (plotOptions.tooltip) {\n          // 配置 tooltip 交互\n          viewOfG2.interaction('tooltip');\n        }\n        execPlotAdaptor(plot.type, viewOfG2, plotOptions);\n      }\n    }\n  }));\n  return params;\n}\nfunction component(params) {\n  var chart = params.chart,\n    options = params.options;\n  var axes = options.axes,\n    meta = options.meta,\n    tooltip = options.tooltip,\n    coordinate = options.coordinate,\n    theme = options.theme,\n    legend = options.legend,\n    interactions = options.interactions,\n    annotations = options.annotations;\n  // 3. meta 配置\n  var scales = {};\n  if (axes) {\n    each(axes, function (axis, field) {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n  }\n  scales = deepAssign({}, meta, scales);\n  chart.scale(scales);\n  // 4. coordinate 配置\n  chart.coordinate(coordinate);\n  // 5. axis 轴配置 (默认不展示)\n  if (!axes) {\n    chart.axis(false);\n  } else {\n    each(axes, function (axis, field) {\n      chart.axis(field, axis);\n    });\n  }\n  // 6. tooltip 配置\n  if (tooltip) {\n    chart.interaction('tooltip');\n    chart.tooltip(tooltip);\n  } else if (tooltip === false) {\n    chart.removeInteraction('tooltip');\n  }\n  // 7. legend 配置（默认展示）\n  chart.legend(legend);\n  // theme 配置\n  if (theme) {\n    chart.theme(theme);\n  }\n  // 8. interactions\n  each(interactions, function (interaction) {\n    if (interaction.enable === false) {\n      chart.removeInteraction(interaction.type);\n    } else {\n      chart.interaction(interaction.type, interaction.cfg);\n    }\n  });\n  // 9. annotations\n  each(annotations, function (annotation) {\n    chart.annotation()[annotation.type](__assign({}, annotation));\n  });\n  return params;\n}\n/**\n * 分面图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, facetAdaptor, component)(params);\n}","map":{"version":3,"names":["each","omit","theme","AXIS_META_CONFIG_KEYS","deepAssign","flow","pick","execPlotAdaptor","execViewAdaptor","facetAdaptor","params","chart","options","facetType","type","data","fields","eachView","restFacetCfg","facet","__assign","viewOfG2","viewOptions","geometries","plot","plotOptions","tooltip","interaction","component","axes","meta","coordinate","legend","interactions","annotations","scales","axis","field","scale","removeInteraction","enable","cfg","annotation","adaptor"],"sources":["../../../src/plots/facet/adaptor.ts"],"sourcesContent":["import { each, omit } from '@antv/util';\nimport { theme } from '../../adaptor/common';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { Params } from '../../core/adaptor';\nimport { Axis, Interaction } from '../../types';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { execPlotAdaptor } from '../mix/utils';\nimport { FacetOptions, IPlot, IView } from './types';\nimport { execViewAdaptor } from './utils';\n\nfunction facetAdaptor(params: Params<FacetOptions>): Params<FacetOptions> {\n  const { chart, options } = params;\n  const { type: facetType, data, fields, eachView } = options;\n\n  const restFacetCfg = omit(options as any, [\n    'type',\n    'data',\n    'fields',\n    'eachView',\n    'axes',\n    'meta',\n    'tooltip',\n    'coordinate',\n    'theme',\n    'legend',\n    'interactions',\n    'annotations',\n  ]);\n\n  // 1. data\n  chart.data(data);\n\n  // 2. facet\n  chart.facet(facetType, {\n    ...restFacetCfg,\n    fields,\n    eachView: (viewOfG2, facet) => {\n      const viewOptions = eachView(viewOfG2, facet);\n      if ((viewOptions as IView).geometries) {\n        execViewAdaptor(viewOfG2, viewOptions as IView);\n      } else {\n        const plot = viewOptions as IPlot;\n        const plotOptions = plot.options;\n        // @ts-ignore 仪表盘没 tooltip\n        if (plotOptions.tooltip) {\n          // 配置 tooltip 交互\n          viewOfG2.interaction('tooltip');\n        }\n        execPlotAdaptor(plot.type, viewOfG2, plotOptions);\n      }\n    },\n  });\n\n  return params;\n}\n\nfunction component(params: Params<FacetOptions>): Params<FacetOptions> {\n  const { chart, options } = params;\n  const { axes, meta, tooltip, coordinate, theme, legend, interactions, annotations } = options;\n\n  // 3. meta 配置\n  let scales: Record<string, any> = {};\n  if (axes) {\n    each(axes, (axis: Axis, field: string) => {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n  }\n\n  scales = deepAssign({}, meta, scales);\n  chart.scale(scales);\n\n  // 4. coordinate 配置\n  chart.coordinate(coordinate);\n\n  // 5. axis 轴配置 (默认不展示)\n  if (!axes) {\n    chart.axis(false);\n  } else {\n    each(axes, (axis: Axis, field: string) => {\n      chart.axis(field, axis);\n    });\n  }\n\n  // 6. tooltip 配置\n  if (tooltip) {\n    chart.interaction('tooltip');\n    chart.tooltip(tooltip);\n  } else if (tooltip === false) {\n    chart.removeInteraction('tooltip');\n  }\n\n  // 7. legend 配置（默认展示）\n  chart.legend(legend);\n\n  // theme 配置\n  if (theme) {\n    chart.theme(theme);\n  }\n\n  // 8. interactions\n  each(interactions, (interaction: Interaction) => {\n    if (interaction.enable === false) {\n      chart.removeInteraction(interaction.type);\n    } else {\n      chart.interaction(interaction.type, interaction.cfg);\n    }\n  });\n\n  // 9. annotations\n  each(annotations, (annotation) => {\n    chart.annotation()[annotation.type]({\n      ...annotation,\n    });\n  });\n\n  return params;\n}\n\n/**\n * 分面图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<FacetOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, facetAdaptor, component)(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}