{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getImage, getURLFromTemplate, getWMTSURLFromTemplate } from '@antv/l7-utils';\nimport { getRasterFile } from \"./getRasterData\";\nimport { getTileUrl } from \"./request\";\n\n/**\n * 用于获取 raster data 的瓦片，如 tiff、lerc、dem 等\n * 支持多文件模式\n * @param url\n * @param tileParams\n * @param tile\n * @param rasterFormat\n * @returns\n */\nexport var getTileBuffer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, tileParams, tile, rasterFormat, operation) {\n    var requestParameters;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          requestParameters = {\n            // getTileUrl 将原始的 url 路径进行转化（多服务器）\n            url: getTileUrl(url, tileParams)\n          };\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            getRasterFile(tile, requestParameters, function (err, img) {\n              if (err) {\n                reject(err);\n              } else if (img) {\n                resolve(img);\n              }\n            }, rasterFormat, operation);\n          }));\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getTileBuffer(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * 获取图片格式的文件 jpg、png 等\n * @param url\n * @param tileParams\n * @param tile\n * @returns\n */\nexport var getTileImage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, tileParams, tile, cfg) {\n    var imageUrl, templateUrl, getWMTSURLFromTemplateNew, getURLFromTemplateNew;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          // TODO: 后续考虑支持加载多服务\n          templateUrl = Array.isArray(url) ? url[0] : url;\n          if (cfg.wmtsOptions) {\n            getWMTSURLFromTemplateNew = (cfg === null || cfg === void 0 ? void 0 : cfg.getURLFromTemplate) || getWMTSURLFromTemplate;\n            imageUrl = getWMTSURLFromTemplateNew(templateUrl, _objectSpread(_objectSpread({}, tileParams), cfg.wmtsOptions));\n          } else {\n            getURLFromTemplateNew = (cfg === null || cfg === void 0 ? void 0 : cfg.getURLFromTemplate) || getURLFromTemplate;\n            imageUrl = getURLFromTemplateNew(templateUrl, tileParams);\n          }\n          return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var _cfg$requestParameter;\n            var xhr = getImage({\n              url: imageUrl,\n              type: (cfg === null || cfg === void 0 || (_cfg$requestParameter = cfg.requestParameters) === null || _cfg$requestParameter === void 0 ? void 0 : _cfg$requestParameter.type) || 'arrayBuffer'\n            }, function (err, img) {\n              if (err) {\n                reject(err);\n              } else if (img) {\n                resolve(img);\n              }\n            }, cfg.transformResponse);\n            tile.xhrCancel = function () {\n              return xhr.cancel();\n            };\n          }));\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function getTileImage(_x6, _x7, _x8, _x9) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var defaultFormat = function defaultFormat() {\n  return {\n    rasterData: new Uint8Array([0]),\n    width: 1,\n    height: 1\n  };\n};","map":{"version":3,"names":["_objectSpread","_asyncToGenerator","_regeneratorRuntime","getImage","getURLFromTemplate","getWMTSURLFromTemplate","getRasterFile","getTileUrl","getTileBuffer","_ref","mark","_callee","url","tileParams","tile","rasterFormat","operation","requestParameters","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","reject","err","img","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","getTileImage","_ref2","_callee2","cfg","imageUrl","templateUrl","getWMTSURLFromTemplateNew","getURLFromTemplateNew","_callee2$","_context2","Array","isArray","wmtsOptions","_cfg$requestParameter","xhr","type","transformResponse","xhrCancel","cancel","_x6","_x7","_x8","_x9","defaultFormat","rasterData","Uint8Array","width","height"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/utils/tile/getRasterTile.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getImage, getURLFromTemplate, getWMTSURLFromTemplate } from '@antv/l7-utils';\nimport { getRasterFile } from \"./getRasterData\";\nimport { getTileUrl } from \"./request\";\n\n/**\n * 用于获取 raster data 的瓦片，如 tiff、lerc、dem 等\n * 支持多文件模式\n * @param url\n * @param tileParams\n * @param tile\n * @param rasterFormat\n * @returns\n */\nexport var getTileBuffer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, tileParams, tile, rasterFormat, operation) {\n    var requestParameters;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          requestParameters = {\n            // getTileUrl 将原始的 url 路径进行转化（多服务器）\n            url: getTileUrl(url, tileParams)\n          };\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            getRasterFile(tile, requestParameters, function (err, img) {\n              if (err) {\n                reject(err);\n              } else if (img) {\n                resolve(img);\n              }\n            }, rasterFormat, operation);\n          }));\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getTileBuffer(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * 获取图片格式的文件 jpg、png 等\n * @param url\n * @param tileParams\n * @param tile\n * @returns\n */\nexport var getTileImage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, tileParams, tile, cfg) {\n    var imageUrl, templateUrl, getWMTSURLFromTemplateNew, getURLFromTemplateNew;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          // TODO: 后续考虑支持加载多服务\n          templateUrl = Array.isArray(url) ? url[0] : url;\n          if (cfg.wmtsOptions) {\n            getWMTSURLFromTemplateNew = (cfg === null || cfg === void 0 ? void 0 : cfg.getURLFromTemplate) || getWMTSURLFromTemplate;\n            imageUrl = getWMTSURLFromTemplateNew(templateUrl, _objectSpread(_objectSpread({}, tileParams), cfg.wmtsOptions));\n          } else {\n            getURLFromTemplateNew = (cfg === null || cfg === void 0 ? void 0 : cfg.getURLFromTemplate) || getURLFromTemplate;\n            imageUrl = getURLFromTemplateNew(templateUrl, tileParams);\n          }\n          return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var _cfg$requestParameter;\n            var xhr = getImage({\n              url: imageUrl,\n              type: (cfg === null || cfg === void 0 || (_cfg$requestParameter = cfg.requestParameters) === null || _cfg$requestParameter === void 0 ? void 0 : _cfg$requestParameter.type) || 'arrayBuffer'\n            }, function (err, img) {\n              if (err) {\n                reject(err);\n              } else if (img) {\n                resolve(img);\n              }\n            }, cfg.transformResponse);\n            tile.xhrCancel = function () {\n              return xhr.cancel();\n            };\n          }));\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function getTileImage(_x6, _x7, _x8, _x9) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var defaultFormat = function defaultFormat() {\n  return {\n    rasterData: new Uint8Array([0]),\n    width: 1,\n    height: 1\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}