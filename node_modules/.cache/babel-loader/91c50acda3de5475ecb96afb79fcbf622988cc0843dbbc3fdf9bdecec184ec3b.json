{"ast":null,"code":"import { AttributeType, gl } from '@antv/l7-core';\nexport var ShaderLocation = /*#__PURE__*/function (ShaderLocation) {\n  ShaderLocation[ShaderLocation[\"POSITION\"] = 0] = \"POSITION\";\n  ShaderLocation[ShaderLocation[\"COLOR\"] = 1] = \"COLOR\";\n  ShaderLocation[ShaderLocation[\"VERTEX_ID\"] = 2] = \"VERTEX_ID\";\n  ShaderLocation[ShaderLocation[\"PICKING_COLOR\"] = 3] = \"PICKING_COLOR\";\n  ShaderLocation[ShaderLocation[\"STROKE\"] = 4] = \"STROKE\";\n  ShaderLocation[ShaderLocation[\"OPACITY\"] = 5] = \"OPACITY\";\n  ShaderLocation[ShaderLocation[\"OFFSETS\"] = 6] = \"OFFSETS\";\n  ShaderLocation[ShaderLocation[\"ROTATION\"] = 7] = \"ROTATION\";\n  ShaderLocation[ShaderLocation[\"EXTRUSION_BASE\"] = 8] = \"EXTRUSION_BASE\";\n  ShaderLocation[ShaderLocation[\"SIZE\"] = 9] = \"SIZE\";\n  ShaderLocation[ShaderLocation[\"SHAPE\"] = 10] = \"SHAPE\";\n  ShaderLocation[ShaderLocation[\"EXTRUDE\"] = 11] = \"EXTRUDE\";\n  ShaderLocation[ShaderLocation[\"MAX\"] = 12] = \"MAX\";\n  ShaderLocation[ShaderLocation[\"NORMAL\"] = 13] = \"NORMAL\";\n  ShaderLocation[ShaderLocation[\"UV\"] = 14] = \"UV\";\n  ShaderLocation[ShaderLocation[\"LINEAR\"] = 15] = \"LINEAR\";\n  return ShaderLocation;\n}({});\nexport function getCommonStyleAttributeOptions(name) {\n  switch (name) {\n    // // roate\n    case 'rotation':\n      return {\n        name: 'Rotation',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Rotation',\n          shaderLocation: ShaderLocation.ROTATION,\n          buffer: {\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$rotation = feature.rotation,\n              rotation = _feature$rotation === void 0 ? 0 : _feature$rotation;\n            return Array.isArray(rotation) ? [rotation[0]] : [rotation];\n          }\n        }\n      };\n    case 'stroke':\n      return {\n        name: 'stroke',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Stroke',\n          shaderLocation: ShaderLocation.STROKE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature) {\n            var _feature$stroke = feature.stroke,\n              stroke = _feature$stroke === void 0 ? [1, 1, 1, 1] : _feature$stroke;\n            return stroke;\n          }\n        }\n      };\n    case 'opacity':\n      return {\n        name: 'opacity',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Opacity',\n          shaderLocation: ShaderLocation.OPACITY,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$opacity = feature.opacity,\n              op = _feature$opacity === void 0 ? 1 : _feature$opacity;\n            return [op];\n          }\n        }\n      };\n    case 'extrusionBase':\n      return {\n        name: 'extrusionBase',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_ExtrusionBase',\n          shaderLocation: ShaderLocation.EXTRUSION_BASE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$extrusionBas = feature.extrusionBase,\n              op = _feature$extrusionBas === void 0 ? 0 : _feature$extrusionBas;\n            return [op];\n          }\n        }\n      };\n    case 'offsets':\n      return {\n        name: 'offsets',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Offsets',\n          shaderLocation: ShaderLocation.OFFSETS,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var epo = feature.offsets;\n            return epo;\n          }\n        }\n      };\n    case 'thetaOffset':\n      return {\n        name: 'thetaOffset',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_ThetaOffset',\n          shaderLocation: 15,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$thetaOffset = feature.thetaOffset,\n              op = _feature$thetaOffset === void 0 ? 1 : _feature$thetaOffset;\n            return [op];\n          }\n        }\n      };\n    default:\n      return undefined;\n  }\n}","map":{"version":3,"names":["AttributeType","gl","ShaderLocation","getCommonStyleAttributeOptions","name","type","Attribute","descriptor","shaderLocation","ROTATION","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","_feature$rotation","rotation","Array","isArray","STROKE","_feature$stroke","stroke","OPACITY","STATIC_DRAW","_feature$opacity","opacity","op","EXTRUSION_BASE","_feature$extrusionBas","extrusionBase","OFFSETS","epo","offsets","_feature$thetaOffset","thetaOffset","undefined"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/core/CommonStyleAttribute.js"],"sourcesContent":["import { AttributeType, gl } from '@antv/l7-core';\nexport var ShaderLocation = /*#__PURE__*/function (ShaderLocation) {\n  ShaderLocation[ShaderLocation[\"POSITION\"] = 0] = \"POSITION\";\n  ShaderLocation[ShaderLocation[\"COLOR\"] = 1] = \"COLOR\";\n  ShaderLocation[ShaderLocation[\"VERTEX_ID\"] = 2] = \"VERTEX_ID\";\n  ShaderLocation[ShaderLocation[\"PICKING_COLOR\"] = 3] = \"PICKING_COLOR\";\n  ShaderLocation[ShaderLocation[\"STROKE\"] = 4] = \"STROKE\";\n  ShaderLocation[ShaderLocation[\"OPACITY\"] = 5] = \"OPACITY\";\n  ShaderLocation[ShaderLocation[\"OFFSETS\"] = 6] = \"OFFSETS\";\n  ShaderLocation[ShaderLocation[\"ROTATION\"] = 7] = \"ROTATION\";\n  ShaderLocation[ShaderLocation[\"EXTRUSION_BASE\"] = 8] = \"EXTRUSION_BASE\";\n  ShaderLocation[ShaderLocation[\"SIZE\"] = 9] = \"SIZE\";\n  ShaderLocation[ShaderLocation[\"SHAPE\"] = 10] = \"SHAPE\";\n  ShaderLocation[ShaderLocation[\"EXTRUDE\"] = 11] = \"EXTRUDE\";\n  ShaderLocation[ShaderLocation[\"MAX\"] = 12] = \"MAX\";\n  ShaderLocation[ShaderLocation[\"NORMAL\"] = 13] = \"NORMAL\";\n  ShaderLocation[ShaderLocation[\"UV\"] = 14] = \"UV\";\n  ShaderLocation[ShaderLocation[\"LINEAR\"] = 15] = \"LINEAR\";\n  return ShaderLocation;\n}({});\nexport function getCommonStyleAttributeOptions(name) {\n  switch (name) {\n    // // roate\n    case 'rotation':\n      return {\n        name: 'Rotation',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Rotation',\n          shaderLocation: ShaderLocation.ROTATION,\n          buffer: {\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$rotation = feature.rotation,\n              rotation = _feature$rotation === void 0 ? 0 : _feature$rotation;\n            return Array.isArray(rotation) ? [rotation[0]] : [rotation];\n          }\n        }\n      };\n    case 'stroke':\n      return {\n        name: 'stroke',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Stroke',\n          shaderLocation: ShaderLocation.STROKE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature) {\n            var _feature$stroke = feature.stroke,\n              stroke = _feature$stroke === void 0 ? [1, 1, 1, 1] : _feature$stroke;\n            return stroke;\n          }\n        }\n      };\n    case 'opacity':\n      return {\n        name: 'opacity',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Opacity',\n          shaderLocation: ShaderLocation.OPACITY,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$opacity = feature.opacity,\n              op = _feature$opacity === void 0 ? 1 : _feature$opacity;\n            return [op];\n          }\n        }\n      };\n    case 'extrusionBase':\n      return {\n        name: 'extrusionBase',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_ExtrusionBase',\n          shaderLocation: ShaderLocation.EXTRUSION_BASE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$extrusionBas = feature.extrusionBase,\n              op = _feature$extrusionBas === void 0 ? 0 : _feature$extrusionBas;\n            return [op];\n          }\n        }\n      };\n    case 'offsets':\n      return {\n        name: 'offsets',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Offsets',\n          shaderLocation: ShaderLocation.OFFSETS,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var epo = feature.offsets;\n            return epo;\n          }\n        }\n      };\n    case 'thetaOffset':\n      return {\n        name: 'thetaOffset',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_ThetaOffset',\n          shaderLocation: 15,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$thetaOffset = feature.thetaOffset,\n              op = _feature$thetaOffset === void 0 ? 1 : _feature$thetaOffset;\n            return [op];\n          }\n        }\n      };\n    default:\n      return undefined;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}