{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    lineStyle = options.lineStyle,\n    color = options.color,\n    pointOptions = options.point,\n    areaOptions = options.area;\n  chart.data(data);\n  // 雷达图 主 geometry\n  var primary = deepAssign({}, params, {\n    options: {\n      line: {\n        style: lineStyle,\n        color: color\n      },\n      point: pointOptions ? __assign({\n        color: color\n      }, pointOptions) : pointOptions,\n      area: areaOptions ? __assign({\n        color: color\n      }, areaOptions) : areaOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined\n    }\n  });\n  // 副 Geometry\n  var second = deepAssign({}, primary, {\n    options: {\n      tooltip: false\n    }\n  });\n  // 优先使用 point.state, 其次取主元素的 state 状态样式配置\n  var pointState = (pointOptions === null || pointOptions === void 0 ? void 0 : pointOptions.state) || options.state;\n  var pointParams = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: pointState\n    }\n  });\n  line(primary);\n  point(pointParams);\n  area(second);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  var _a;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * coord 配置\n * @param params\n */\nfunction coord(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate('polar', {\n    radius: radius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  });\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    xAxis = options.xAxis,\n    yField = options.yField,\n    yAxis = options.yAxis;\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    yField = options.yField;\n  var geometry = findGeometry(chart, 'line');\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    geometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n  return params;\n}\n/**\n * 雷达图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, theme, coord, axis, legend, tooltip, label, interaction, animation, annotation())(params);\n}","map":{"version":3,"names":["animation","annotation","interaction","legend","scale","theme","tooltip","area","line","point","deepAssign","findGeometry","flow","transformLabel","geometry","params","chart","options","data","lineStyle","color","pointOptions","areaOptions","primary","style","__assign","label","undefined","second","pointState","state","pointParams","meta","xAxis","yAxis","xField","yField","_a","coord","radius","startAngle","endAngle","coordinate","axis","callback","cfg","__rest","fields","adaptor"],"sources":["../../../src/plots/radar/adaptor.ts"],"sourcesContent":["import { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\nimport { RadarOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { data, lineStyle, color, point: pointOptions, area: areaOptions } = options;\n\n  chart.data(data);\n\n  // 雷达图 主 geometry\n  const primary = deepAssign({}, params, {\n    options: {\n      line: {\n        style: lineStyle,\n        color,\n      },\n      point: pointOptions\n        ? {\n            color,\n            ...pointOptions,\n          }\n        : pointOptions,\n      area: areaOptions\n        ? {\n            color,\n            ...areaOptions,\n          }\n        : areaOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n    },\n  });\n  // 副 Geometry\n  const second = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n    },\n  });\n  // 优先使用 point.state, 其次取主元素的 state 状态样式配置\n  const pointState = pointOptions?.state || options.state;\n  const pointParams = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n\n  line(primary);\n  point(pointParams);\n  area(second);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coord(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { radius, startAngle, endAngle } = options;\n\n  chart.coordinate('polar', {\n    radius,\n    startAngle,\n    endAngle,\n  });\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { xField, xAxis, yField, yAxis } = options;\n\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const geometry = findGeometry(chart, 'line');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [yField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 雷达图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RadarOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, theme, coord, axis, legend, tooltip, label, interaction, animation, annotation())(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}