{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry } from './base';\n/**\n * violin 辅助点的配置处理\n * @param params\n */\nexport function violin(params) {\n  var options = params.options;\n  var violin = options.violin,\n    xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField,\n    sizeField = options.sizeField,\n    tooltip = options.tooltip;\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField]),\n    fields = _a.fields,\n    formatter = _a.formatter;\n  return violin ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'violin',\n      colorField: seriesField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, violin)\n    }\n  })) : params;\n}","map":{"version":3,"names":["deepAssign","getTooltipMapping","geometry","violin","params","options","xField","yField","seriesField","sizeField","tooltip","_a","fields","formatter","type","colorField","tooltipFields","mapping","__assign"],"sources":["../../../src/adaptor/geometries/violin.ts"],"sourcesContent":["import { Params } from '../../core/adaptor';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry, GeometryOptions, MappingOptions } from './base';\n\nexport interface ViolinGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段（指小提琴的Y轴，即概率密度） */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** size 映射字段 */\n  readonly sizeField?: string;\n  /** violin 图形映射规则 */\n  readonly violin?: MappingOptions;\n}\n\n/**\n * violin 辅助点的配置处理\n * @param params\n */\nexport function violin<O extends ViolinGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { violin, xField, yField, seriesField, sizeField, tooltip } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField]);\n\n  return violin\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'violin',\n            colorField: seriesField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...violin,\n            },\n          },\n        })\n      )\n    : params;\n}\n"],"mappings":";AACA,SAASA,UAAU,QAAQ,aAAa;AACxC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,QAAQ,QAAyC,QAAQ;AAelE;;;;AAIA,OAAM,SAAUC,MAAMA,CAAkCC,MAAiB;EAC/D,IAAAC,OAAO,GAAKD,MAAM,CAAAC,OAAX;EACP,IAAAF,MAAM,GAAsDE,OAAO,CAAAF,MAA7D;IAAEG,MAAM,GAA8CD,OAAO,CAAAC,MAArD;IAAEC,MAAM,GAAsCF,OAAO,CAAAE,MAA7C;IAAEC,WAAW,GAAyBH,OAAO,CAAAG,WAAhC;IAAEC,SAAS,GAAcJ,OAAO,CAAAI,SAArB;IAAEC,OAAO,GAAKL,OAAO,CAAAK,OAAZ;EAEzD,IAAAC,EAAA,GAAwBV,iBAAiB,CAACS,OAAO,EAAE,CAACJ,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,CAAC,CAAC;IAA1FG,MAAM,GAAAD,EAAA,CAAAC,MAAA;IAAEC,SAAS,GAAAF,EAAA,CAAAE,SAAyE;EAElG,OAAOV,MAAM,GACTD,QAAQ,CACNF,UAAU,CAAC,EAAE,EAAEI,MAAM,EAAE;IACrBC,OAAO,EAAE;MACPS,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAEP,WAAW;MACvBQ,aAAa,EAAEJ,MAAM;MACrBK,OAAO,EAAAC,QAAA;QACLR,OAAO,EAAEG;MAAS,GACfV,MAAM;;GAGd,CAAC,CACH,GACDC,MAAM;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}