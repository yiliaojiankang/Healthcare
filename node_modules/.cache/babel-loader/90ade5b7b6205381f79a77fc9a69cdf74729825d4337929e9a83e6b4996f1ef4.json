{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    let m = value.rows;\n    let n = value.columns;\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha = Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n      k++;\n      switch (kase) {\n        case 1:\n          {\n            let f = e[p - 2];\n            e[p - 2] = 0;\n            for (let j = p - 2; j >= k; j--) {\n              let t = hypotenuse(s[j], f);\n              let cs = s[j] / t;\n              let sn = f / t;\n              s[j] = t;\n              if (j !== k) {\n                f = -sn * e[j - 1];\n                e[j - 1] = cs * e[j - 1];\n              }\n              if (wantv) {\n                for (let i = 0; i < n; i++) {\n                  t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                  V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                  V.set(i, j, t);\n                }\n              }\n            }\n            break;\n          }\n        case 2:\n          {\n            let f = e[k - 1];\n            e[k - 1] = 0;\n            for (let j = k; j < p; j++) {\n              let t = hypotenuse(s[j], f);\n              let cs = s[j] / t;\n              let sn = f / t;\n              s[j] = t;\n              f = -sn * e[j];\n              e[j] = cs * e[j];\n              if (wantu) {\n                for (let i = 0; i < m; i++) {\n                  t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                  U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                  U.set(i, j, t);\n                }\n              }\n            }\n            break;\n          }\n        case 3:\n          {\n            const scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[k]), Math.abs(e[k]));\n            const sp = s[p - 1] / scale;\n            const spm1 = s[p - 2] / scale;\n            const epm1 = e[p - 2] / scale;\n            const sk = s[k] / scale;\n            const ek = e[k] / scale;\n            const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            const c = sp * epm1 * (sp * epm1);\n            let shift = 0;\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n              shift = c / (b + shift);\n            }\n            let f = (sk + sp) * (sk - sp) + shift;\n            let g = sk * ek;\n            for (let j = k; j < p - 1; j++) {\n              let t = hypotenuse(f, g);\n              if (t === 0) t = Number.MIN_VALUE;\n              let cs = f / t;\n              let sn = g / t;\n              if (j !== k) {\n                e[j - 1] = t;\n              }\n              f = cs * s[j] + sn * e[j];\n              e[j] = cs * e[j] - sn * s[j];\n              g = sn * s[j + 1];\n              s[j + 1] = cs * s[j + 1];\n              if (wantv) {\n                for (let i = 0; i < n; i++) {\n                  t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                  V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                  V.set(i, j, t);\n                }\n              }\n              t = hypotenuse(f, g);\n              if (t === 0) t = Number.MIN_VALUE;\n              cs = f / t;\n              sn = g / t;\n              s[j] = t;\n              f = cs * e[j] + sn * s[j + 1];\n              s[j + 1] = -sn * e[j] + cs * s[j + 1];\n              g = sn * e[j + 1];\n              e[j + 1] = cs * e[j + 1];\n              if (wantu && j < m - 1) {\n                for (let i = 0; i < m; i++) {\n                  t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                  U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                  U.set(i, j, t);\n                }\n              }\n            }\n            e[p - 2] = f;\n            iter = iter + 1;\n            break;\n          }\n        case 4:\n          {\n            if (s[k] <= 0) {\n              s[k] = s[k] < 0 ? -s[k] : 0;\n              if (wantv) {\n                for (let i = 0; i <= pp; i++) {\n                  V.set(i, k, -V.get(i, k));\n                }\n              }\n            }\n            while (k < pp) {\n              if (s[k] >= s[k + 1]) {\n                break;\n              }\n              let t = s[k];\n              s[k] = s[k + 1];\n              s[k + 1] = t;\n              if (wantv && k < n - 1) {\n                for (let i = 0; i < n; i++) {\n                  t = V.get(i, k + 1);\n                  V.set(i, k + 1, V.get(i, k));\n                  V.set(i, k, t);\n                }\n              }\n              if (wantu && k < m - 1) {\n                for (let i = 0; i < m; i++) {\n                  t = U.get(i, k + 1);\n                  U.set(i, k + 1, U.get(i, k));\n                  U.set(i, k, t);\n                }\n              }\n              k++;\n            }\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n    let U = this.U;\n    let V = this.rightSingularVectors;\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n    return VLU.mmul(Y);\n  }\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n    let U = this.U;\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n    return Y;\n  }\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n  get norm2() {\n    return this.s[0];\n  }\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n  get diagonal() {\n    return Array.from(this.s);\n  }\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n  get leftSingularVectors() {\n    return this.U;\n  }\n  get rightSingularVectors() {\n    return this.V;\n  }\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}","map":{"version":3,"names":["Matrix","WrapperMatrix2D","hypotenuse","SingularValueDecomposition","constructor","value","options","checkMatrix","m","rows","n","columns","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","a","clone","console","warn","transpose","aux","nu","Math","min","ni","s","Float64Array","U","V","e","work","si","i","nct","nrt","max","mrc","k","get","set","j","t","p","pp","iter","eps","Number","EPSILON","kase","alpha","MIN_VALUE","abs","isNaN","ks","f","cs","sn","scale","sp","spm1","epm1","sk","ek","b","c","shift","sqrt","g","tmp","solve","Y","threshold","scols","length","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solveForDiagonal","diag","inverse","vcols","X","ucols","condition","norm2","rank","tol","r","ii","diagonal","Array","from","leftSingularVectors","diagonalMatrix"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/layout/node_modules/ml-matrix/src/dc/svd.js"],"sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}