{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isArray, isNil, isString } from '@antv/util';\n// todo 这个到底目的是什么？\nvar toScaleString = function (scale, value) {\n  if (isString(value)) {\n    return value;\n  }\n  return scale.invert(scale.scale(value));\n};\n/**\n * 所有视觉通道属性的基类\n * @class Base\n */\nvar Attribute = /** @class */function () {\n  function Attribute(cfg) {\n    this.names = [];\n    this.scales = [];\n    this.linear = false;\n    this.values = [];\n    this.callback = function () {\n      return [];\n    };\n    // 解析配置\n    this._parseCfg(cfg);\n  }\n  /**\n   * 映射的值组成的数组\n   * @param params 对应 scale 顺序的值传入\n   */\n  Attribute.prototype.mapping = function () {\n    var _this = this;\n    var params = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      params[_i] = arguments[_i];\n    }\n    var values = params.map(function (param, idx) {\n      return _this._toOriginParam(param, _this.scales[idx]);\n    });\n    return this.callback.apply(this, values);\n  };\n  /**\n   * 如果进行线性映射，返回对应的映射值\n   * @param percent\n   */\n  Attribute.prototype.getLinearValue = function (percent) {\n    // 分段数量\n    var steps = this.values.length - 1;\n    var step = Math.floor(steps * percent);\n    var leftPercent = steps * percent - step;\n    // todo 不懂这个逻辑\n    var start = this.values[step];\n    var end = step === steps ? start : this.values[step + 1];\n    // 线性方程\n    return start + (end - start) * leftPercent;\n  };\n  /**\n   * 根据度量获取属性名\n   */\n  Attribute.prototype.getNames = function () {\n    var scales = this.scales;\n    var names = this.names;\n    var length = Math.min(scales.length, names.length);\n    var rst = [];\n    for (var i = 0; i < length; i += 1) {\n      rst.push(names[i]);\n    }\n    return rst;\n  };\n  /**\n   * 获取所有的维度名\n   */\n  Attribute.prototype.getFields = function () {\n    return this.scales.map(function (scale) {\n      return scale.field;\n    });\n  };\n  /**\n   * 根据名称获取度量\n   * @param name\n   */\n  Attribute.prototype.getScale = function (name) {\n    return this.scales[this.names.indexOf(name)];\n  };\n  /**\n   * 默认的回调函数（用户没有自定义 callback，或者用户自定义 callback 返回空的时候，使用 values 映射）\n   * @param params\n   */\n  Attribute.prototype.defaultCallback = function () {\n    var _this = this;\n    var params = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      params[_i] = arguments[_i];\n    }\n    // 没有 params 的情况，是指没有指定 fields，直接返回配置的 values 常量\n    if (params.length === 0) {\n      return this.values;\n    }\n    return params.map(function (param, idx) {\n      var scale = _this.scales[idx];\n      return scale.type === 'identity' ? scale.values[0] : _this._getAttributeValue(scale, param);\n    });\n  };\n  // 解析配置\n  Attribute.prototype._parseCfg = function (cfg) {\n    var _this = this;\n    var _a = cfg.type,\n      type = _a === void 0 ? 'base' : _a,\n      _b = cfg.names,\n      names = _b === void 0 ? [] : _b,\n      _c = cfg.scales,\n      scales = _c === void 0 ? [] : _c,\n      _d = cfg.values,\n      values = _d === void 0 ? [] : _d,\n      callback = cfg.callback;\n    this.type = type;\n    this.scales = scales;\n    this.values = values;\n    this.names = names;\n    // 构造 callback 方法\n    this.callback = function () {\n      var params = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n      }\n      /**\n       * 当用户设置的 callback 返回 null 时, 应该返回默认 callback 中的值\n       */\n      if (callback) {\n        // 使用用户返回的值处理\n        var ret = callback.apply(void 0, params);\n        if (!isNil(ret)) {\n          return [ret];\n        }\n      }\n      // 没有 callback 或者用户 callback 返回值为空，则使用默认的逻辑处理\n      return _this.defaultCallback.apply(_this, params);\n    };\n  };\n  // 获取属性值，将值映射到视觉通道\n  Attribute.prototype._getAttributeValue = function (scale, value) {\n    // 如果是非线性的字段，直接从 values 中取值即可\n    if (scale.isCategory && !this.linear) {\n      // 离散 scale 变换成索引\n      var idx = scale.translate(value);\n      return this.values[idx % this.values.length];\n    }\n    // 线性则使用线性值\n    var percent = scale.scale(value);\n    return this.getLinearValue(percent);\n  };\n  /**\n   * 通过 scale 拿到数据对应的原始的参数\n   * @param param\n   * @param scale\n   * @private\n   */\n  Attribute.prototype._toOriginParam = function (param, scale) {\n    // 是线性，直接返回\n    // 非线性，使用 scale 变换\n    return !scale.isLinear ? isArray(param) ? param.map(function (p) {\n      return toScaleString(scale, p);\n    }) : toScaleString(scale, param) : param;\n  };\n  return Attribute;\n}();\nexport default Attribute;","map":{"version":3,"names":["isArray","isNil","isString","toScaleString","scale","value","invert","Attribute","cfg","names","scales","linear","values","callback","_parseCfg","prototype","mapping","_this","params","_i","arguments","length","map","param","idx","_toOriginParam","apply","getLinearValue","percent","steps","step","Math","floor","leftPercent","start","end","getNames","min","rst","i","push","getFields","field","getScale","name","indexOf","defaultCallback","type","_getAttributeValue","_a","_b","_c","_d","ret","isCategory","translate","isLinear","p"],"sources":["../../src/attributes/base.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}