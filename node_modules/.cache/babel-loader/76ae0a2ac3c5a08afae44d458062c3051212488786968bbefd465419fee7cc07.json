{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { findViewById } from '../../utils';\nimport { adaptor } from './adaptor';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant';\nimport { transformToViewsData } from './helper';\n// 桑基图内置交互\nimport './interactions';\n/**\n *  桑基图 Sankey\n */\nvar Sankey = /** @class */function (_super) {\n  __extends(Sankey, _super);\n  function Sankey() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'sankey';\n    return _this;\n  }\n  Sankey.getDefaultOptions = function () {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0\n          }\n        }\n      },\n      label: {\n        formatter: function (_a) {\n          var name = _a.name;\n          return name;\n        },\n        callback: function (x) {\n          var isLast = x[1] === 1; // 最后一列靠边的节点\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start'\n            },\n            offsetX: isLast ? -8 : 8\n          };\n        },\n        layout: [{\n          type: 'hide-overlap'\n        }]\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: function (items) {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: function (datum) {\n          var source = datum.source,\n            target = datum.target,\n            value = datum.value;\n          return {\n            name: source + ' -> ' + target,\n            value: value\n          };\n        }\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in'\n        },\n        enter: {\n          animation: 'wave-in'\n        }\n      }\n    };\n  };\n  /**\n   * @override\n   * @param data\n   */\n  Sankey.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = transformToViewsData(this.options, this.chart.width, this.chart.height),\n      nodes = _a.nodes,\n      edges = _a.edges;\n    var nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    var edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  };\n  /**\n   * 获取适配器\n   */\n  Sankey.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n  Sankey.prototype.getDefaultOptions = function () {\n    return Sankey.getDefaultOptions();\n  };\n  return Sankey;\n}(Plot);\nexport { Sankey };","map":{"version":3,"names":["get","Plot","findViewById","adaptor","EDGES_VIEW_ID","NODES_VIEW_ID","transformToViewsData","Sankey","_super","__extends","_this","apply","arguments","type","getDefaultOptions","appendPadding","syncViewPadding","nodeStyle","opacity","fillOpacity","lineWidth","edgeStyle","edgeState","active","style","label","formatter","_a","name","callback","x","isLast","fill","textAlign","offsetX","layout","tooltip","showTitle","showMarkers","shared","showContent","items","datum","source","target","value","nodeWidthRatio","nodePaddingRatio","animation","appear","enter","prototype","changeData","data","updateOption","options","chart","width","height","nodes","edges","nodesView","edgesView","getSchemaAdaptor"],"sources":["../../../src/plots/sankey/index.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { Data, Datum } from '../../types';\nimport { findViewById } from '../../utils';\nimport { adaptor } from './adaptor';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant';\nimport { transformToViewsData } from './helper';\n// 桑基图内置交互\nimport './interactions';\nimport { SankeyOptions } from './types';\n\nexport type { SankeyOptions };\n\n/**\n *  桑基图 Sankey\n */\nexport class Sankey extends Plot<SankeyOptions> {\n  /** 图表类型 */\n  public type: string = 'sankey';\n\n  static getDefaultOptions(): Partial<SankeyOptions> {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1,\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0,\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0,\n          },\n        },\n      },\n      label: {\n        formatter: ({ name }) => name,\n        callback: (x: number[]) => {\n          const isLast = x[1] === 1; // 最后一列靠边的节点\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start',\n            },\n            offsetX: isLast ? -8 : 8,\n          };\n        },\n        layout: [\n          {\n            type: 'hide-overlap',\n          },\n        ],\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: (items) => {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: (datum: Datum) => {\n          const { source, target, value } = datum;\n          return {\n            name: source + ' -> ' + target,\n            value,\n          };\n        },\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in',\n        },\n        enter: {\n          animation: 'wave-in',\n        },\n      },\n    };\n  }\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: Data) {\n    this.updateOption({ data });\n\n    const { nodes, edges } = transformToViewsData(this.options, this.chart.width, this.chart.height);\n\n    const nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    const edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<SankeyOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Sankey.getDefaultOptions();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}