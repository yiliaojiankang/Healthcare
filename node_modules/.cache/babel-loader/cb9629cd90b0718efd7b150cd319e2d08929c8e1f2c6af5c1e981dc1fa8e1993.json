{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { tooltip } from '../../adaptor/common';\nimport { deepAssign, flow } from '../../utils';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nexport { meta } from '../column/adaptor';\n/**\n * 处理默认配置项\n * 1. switch xField、 yField\n * 2. switch xAxis、 yAxis and adjust axis.position configuration\n */\nfunction defaultOptions(params) {\n  var options = params.options;\n  var xField = options.xField,\n    yField = options.yField,\n    xAxis = options.xAxis,\n    yAxis = options.yAxis;\n  var position = {\n    left: 'bottom',\n    right: 'top',\n    top: 'left',\n    bottom: 'right'\n  };\n  var verticalAxis = yAxis !== false ? __assign({\n    position: position[(yAxis === null || yAxis === void 0 ? void 0 : yAxis.position) || 'left']\n  }, yAxis) : false;\n  var horizontalAxis = xAxis !== false ? __assign({\n    position: position[(xAxis === null || xAxis === void 0 ? void 0 : xAxis.position) || 'bottom']\n  }, xAxis) : false;\n  return __assign(__assign({}, params), {\n    options: __assign(__assign({}, options), {\n      xField: yField,\n      yField: xField,\n      // 条形图 xAxis，yAxis 不可以做 deepAssign\n      xAxis: verticalAxis,\n      yAxis: horizontalAxis\n    })\n  });\n}\n/**\n * label 适配器\n * @param params\n */\nfunction label(params) {\n  var options = params.options;\n  var label = options.label;\n  // label of bar charts default position is left, if plot has label\n  if (label && !label.position) {\n    label.position = 'left';\n    // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n    if (!label.layout) {\n      label.layout = [{\n        type: 'interval-adjust-position'\n      }, {\n        type: 'interval-hide-overlap'\n      }, {\n        type: 'adjust-color'\n      }, {\n        type: 'limit-in-plot',\n        cfg: {\n          action: 'hide'\n        }\n      }];\n    }\n  }\n  return deepAssign({}, params, {\n    options: {\n      label: label\n    }\n  });\n}\n/**\n * legend 适配器\n * @param params\n */\nfunction legend(params) {\n  var options = params.options;\n  // 默认 legend 位置\n  var seriesField = options.seriesField,\n    isStack = options.isStack;\n  var legend = options.legend;\n  if (seriesField) {\n    if (legend !== false) {\n      legend = __assign({\n        position: isStack ? 'top-left' : 'right-top'\n      }, legend || {});\n    }\n  } else {\n    legend = false;\n  }\n  return deepAssign({}, params, {\n    options: {\n      legend: legend\n    }\n  });\n}\n/**\n * coordinate 适配器\n * @param params\n */\nfunction coordinate(params) {\n  // transpose column to bar 对角变换 & y 方向镜像变换\n  var options = params.options;\n  var coordinateOptions = [{\n    type: 'transpose'\n  }, {\n    type: 'reflectY'\n  }].concat(options.coordinate || []);\n  return deepAssign({}, params, {\n    options: {\n      coordinate: coordinateOptions\n    }\n  });\n}\n/**\n * 柱形图适配器\n * @param params\n */\nexport function geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var barStyle = options.barStyle,\n    barWidthRatio = options.barWidthRatio,\n    minBarWidth = options.minBarWidth,\n    maxBarWidth = options.maxBarWidth,\n    barBackground = options.barBackground;\n  return columnAdaptor({\n    chart: chart,\n    options: __assign(__assign({}, options), {\n      // rename attrs as column\n      columnStyle: barStyle,\n      columnWidthRatio: barWidthRatio,\n      minColumnWidth: minBarWidth,\n      maxColumnWidth: maxBarWidth,\n      columnBackground: barBackground\n    })\n  }, true);\n}\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(defaultOptions, label, legend, tooltip, coordinate, geometry)(params);\n}","map":{"version":3,"names":["tooltip","deepAssign","flow","adaptor","columnAdaptor","meta","defaultOptions","params","options","xField","yField","xAxis","yAxis","position","left","right","top","bottom","verticalAxis","__assign","horizontalAxis","label","layout","type","cfg","action","legend","seriesField","isStack","coordinate","coordinateOptions","concat","geometry","chart","barStyle","barWidthRatio","minBarWidth","maxBarWidth","barBackground","columnStyle","columnWidthRatio","minColumnWidth","maxColumnWidth","columnBackground"],"sources":["../../../src/plots/bar/adaptor.ts"],"sourcesContent":["import { tooltip } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { Axis } from '../../types';\nimport { deepAssign, flow } from '../../utils';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nimport { BarOptions } from './types';\nexport { meta } from '../column/adaptor';\n\n/**\n * 处理默认配置项\n * 1. switch xField、 yField\n * 2. switch xAxis、 yAxis and adjust axis.position configuration\n */\nfunction defaultOptions(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n  const { xField, yField, xAxis, yAxis } = options;\n\n  const position = {\n    left: 'bottom',\n    right: 'top',\n    top: 'left',\n    bottom: 'right',\n  };\n\n  const verticalAxis =\n    yAxis !== false\n      ? {\n          position: position[yAxis?.position || 'left'],\n          ...yAxis,\n        }\n      : false;\n  const horizontalAxis =\n    xAxis !== false\n      ? {\n          position: position[xAxis?.position || 'bottom'],\n          ...xAxis,\n        }\n      : false;\n\n  return {\n    ...params,\n    options: {\n      ...options,\n      xField: yField,\n      yField: xField,\n      // 条形图 xAxis，yAxis 不可以做 deepAssign\n      xAxis: verticalAxis as Axis,\n      yAxis: horizontalAxis as Axis,\n    },\n  };\n}\n\n/**\n * label 适配器\n * @param params\n */\nfunction label(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n  const { label } = options;\n  // label of bar charts default position is left, if plot has label\n  if (label && !label.position) {\n    label.position = 'left';\n    // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n    if (!label.layout) {\n      label.layout = [\n        { type: 'interval-adjust-position' },\n        { type: 'interval-hide-overlap' },\n        { type: 'adjust-color' },\n        { type: 'limit-in-plot', cfg: { action: 'hide' } },\n      ];\n    }\n  }\n\n  return deepAssign({}, params, { options: { label } });\n}\n\n/**\n * legend 适配器\n * @param params\n */\nfunction legend(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n\n  // 默认 legend 位置\n  const { seriesField, isStack } = options;\n  let { legend } = options;\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'top-left' : 'right-top',\n        ...(legend || {}),\n      };\n    }\n  } else {\n    legend = false;\n  }\n\n  return deepAssign({}, params, { options: { legend } });\n}\n\n/**\n * coordinate 适配器\n * @param params\n */\nfunction coordinate(params: Params<BarOptions>): Params<BarOptions> {\n  // transpose column to bar 对角变换 & y 方向镜像变换\n  const { options } = params;\n  const coordinateOptions = [{ type: 'transpose' }, { type: 'reflectY' }].concat(options.coordinate || []);\n  return deepAssign({}, params, { options: { coordinate: coordinateOptions } });\n}\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function geometry(params: Params<BarOptions>) {\n  const { chart, options } = params;\n\n  const { barStyle, barWidthRatio, minBarWidth, maxBarWidth, barBackground } = options;\n\n  return columnAdaptor(\n    {\n      chart,\n      options: {\n        ...options,\n        // rename attrs as column\n        columnStyle: barStyle,\n        columnWidthRatio: barWidthRatio,\n        minColumnWidth: minBarWidth,\n        maxColumnWidth: maxBarWidth,\n        columnBackground: barBackground,\n      },\n    },\n    true\n  ) as Params<BarOptions>;\n}\n\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BarOptions>): Params<BarOptions> {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<BarOptions>>(defaultOptions, label, legend, tooltip, coordinate, geometry)(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}