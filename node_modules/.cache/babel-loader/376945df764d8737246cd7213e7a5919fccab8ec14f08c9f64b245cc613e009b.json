{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as _ from '@antv/util';\nimport Adjust from './adjust';\nvar Cache = _.Cache;\nvar Stack = /** @class */function (_super) {\n  __extends(Stack, _super);\n  function Stack(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    var _a = cfg.adjustNames,\n      adjustNames = _a === void 0 ? ['y'] : _a,\n      _b = cfg.height,\n      height = _b === void 0 ? NaN : _b,\n      _c = cfg.size,\n      size = _c === void 0 ? 10 : _c,\n      _d = cfg.reverseOrder,\n      reverseOrder = _d === void 0 ? false : _d;\n    _this.adjustNames = adjustNames;\n    _this.height = height;\n    _this.size = size;\n    _this.reverseOrder = reverseOrder;\n    return _this;\n  }\n  /**\n   * 方法入参是经过数据分组、数据数字化之后的二维数组\n   * @param groupDataArray 分组之后的数据\n   */\n  Stack.prototype.process = function (groupDataArray) {\n    var _a = this,\n      yField = _a.yField,\n      reverseOrder = _a.reverseOrder;\n    // 如果有指定 y 字段，那么按照 y 字段来 stack\n    // 否则，按照高度均分\n    var d = yField ? this.processStack(groupDataArray) : this.processOneDimStack(groupDataArray);\n    return reverseOrder ? this.reverse(d) : d;\n  };\n  Stack.prototype.reverse = function (groupedDataArray) {\n    return groupedDataArray.slice(0).reverse();\n  };\n  Stack.prototype.processStack = function (groupDataArray) {\n    var _a = this,\n      xField = _a.xField,\n      yField = _a.yField,\n      reverseOrder = _a.reverseOrder;\n    // 层叠顺序翻转\n    var groupedDataArray = reverseOrder ? this.reverse(groupDataArray) : groupDataArray;\n    // 用来缓存，正数和负数的堆叠问题\n    var positive = new Cache();\n    var negative = new Cache();\n    return groupedDataArray.map(function (dataArray) {\n      return dataArray.map(function (data) {\n        var _a;\n        var x = _.get(data, xField, 0);\n        var y = _.get(data, [yField]);\n        var xKey = x.toString();\n        // todo 是否应该取 _origin？因为 y 可能取到的值不正确，比如先 symmetric，再 stack！\n        y = _.isArray(y) ? y[1] : y;\n        if (!_.isNil(y)) {\n          var cache = y >= 0 ? positive : negative;\n          if (!cache.has(xKey)) {\n            cache.set(xKey, 0);\n          }\n          var xValue = cache.get(xKey);\n          var newXValue = y + xValue;\n          // 存起来\n          cache.set(xKey, newXValue);\n          return __assign(__assign({}, data), (_a = {}, _a[yField] = [xValue, newXValue], _a));\n        }\n        // 没有修改，则直接返回\n        return data;\n      });\n    });\n  };\n  Stack.prototype.processOneDimStack = function (groupDataArray) {\n    var _this = this;\n    var _a = this,\n      xField = _a.xField,\n      height = _a.height,\n      reverseOrder = _a.reverseOrder;\n    var yField = 'y';\n    // 如果层叠的顺序翻转\n    var groupedDataArray = reverseOrder ? this.reverse(groupDataArray) : groupDataArray;\n    // 缓存累加数据\n    var cache = new Cache();\n    return groupedDataArray.map(function (dataArray) {\n      return dataArray.map(function (data) {\n        var _a;\n        var size = _this.size;\n        var xValue = data[xField];\n        // todo 没有看到这个 stack 计算原理\n        var stackHeight = size * 2 / height;\n        if (!cache.has(xValue)) {\n          cache.set(xValue, stackHeight / 2); // 初始值大小\n        }\n\n        var stackValue = cache.get(xValue);\n        // 增加一层 stackHeight\n        cache.set(xValue, stackValue + stackHeight);\n        return __assign(__assign({}, data), (_a = {}, _a[yField] = stackValue, _a));\n      });\n    });\n  };\n  return Stack;\n}(Adjust);\nexport default Stack;","map":{"version":3,"names":["_","Adjust","Cache","Stack","_super","__extends","cfg","_this","call","_a","adjustNames","_b","height","NaN","_c","size","_d","reverseOrder","prototype","process","groupDataArray","yField","d","processStack","processOneDimStack","reverse","groupedDataArray","slice","xField","positive","negative","map","dataArray","data","x","get","y","xKey","toString","isArray","isNil","cache","has","set","xValue","newXValue","__assign","stackHeight","stackValue"],"sources":["../../src/adjusts/stack.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}