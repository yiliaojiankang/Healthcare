{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _dec, _class;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { decodePickingColor, DOM, encodePickingColor } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { InteractionEvent } from \"../../interaction/IInteractionService\";\nimport { gl } from \"../gl\";\nimport { PassType } from \"../IMultiPassRenderer\";\nimport BaseNormalPass from \"./BaseNormalPass\";\n\n/**\n * color-based PixelPickingPass\n * @see https://github.com/antvis/L7/blob/next/dev-docs/PixelPickingEngine.md\n */\nvar PixelPickingPass = (_dec = injectable(), _dec(_class = /*#__PURE__*/function (_BaseNormalPass) {\n  _inherits(PixelPickingPass, _BaseNormalPass);\n  var _super = _createSuper(PixelPickingPass);\n  function PixelPickingPass() {\n    var _this;\n    _classCallCheck(this, PixelPickingPass);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    /**\n     * picking framebuffer，供 attributes 颜色编码后输出\n     */\n    _defineProperty(_assertThisInitialized(_this), \"pickingFBO\", void 0);\n    /**\n     * 保存 layer 引用\n     */\n    _defineProperty(_assertThisInitialized(_this), \"layer\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"width\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"height\", 0);\n    /**\n     * 简单的 throttle，防止连续触发 hover 时导致频繁渲染到 picking framebuffer\n     */\n    _defineProperty(_assertThisInitialized(_this), \"alreadyInRendering\", false);\n    /**\n     * 拾取视口指定坐标属于的要素\n     * TODO：支持区域拾取\n     */\n    _defineProperty(_assertThisInitialized(_this), \"pickFromPickingFBO\", function (_ref) {\n      var x = _ref.x,\n        y = _ref.y,\n        lngLat = _ref.lngLat,\n        type = _ref.type;\n      if (!_this.layer.isVisible() || !_this.layer.needPick(type)) {\n        return;\n      }\n      var _this$rendererService = _this.rendererService,\n        getViewportSize = _this$rendererService.getViewportSize,\n        readPixelsAsync = _this$rendererService.readPixelsAsync,\n        useFramebuffer = _this$rendererService.useFramebuffer;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      var _this$layer$getLayerC = _this.layer.getLayerConfig(),\n        enableHighlight = _this$layer$getLayerC.enableHighlight,\n        enableSelect = _this$layer$getLayerC.enableSelect;\n      var xInDevicePixel = x * DOM.DPR;\n      var yInDevicePixel = y * DOM.DPR;\n      if (xInDevicePixel > width || xInDevicePixel < 0 || yInDevicePixel > height || yInDevicePixel < 0) {\n        return;\n      }\n      var pickedColors;\n      useFramebuffer(_this.pickingFBO, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _pickedColors;\n        var pickedFeatureIdx, rawFeature, target, _target;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return readPixelsAsync({\n                x: Math.round(xInDevicePixel),\n                // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n                y: Math.round(height - (y + 1) * DOM.DPR),\n                width: 1,\n                height: 1,\n                data: new Uint8Array(1 * 1 * 4),\n                framebuffer: _this.pickingFBO\n              });\n            case 2:\n              pickedColors = _context.sent;\n              if (pickedColors[0] !== 0 || pickedColors[1] !== 0 || pickedColors[2] !== 0) {\n                pickedFeatureIdx = decodePickingColor(pickedColors);\n                rawFeature = _this.layer.getSource().getFeatureById(pickedFeatureIdx);\n                target = {\n                  x: x,\n                  y: y,\n                  type: type,\n                  lngLat: lngLat,\n                  featureId: pickedFeatureIdx,\n                  feature: rawFeature\n                };\n                if (!rawFeature) {\n                  // this.logger.error(\n                  //   '未找到颜色编码解码后的原始 feature，请检查 fragment shader 中末尾是否添加了 `gl_FragColor = filterColor(gl_FragColor);`',\n                  // );\n                } else {\n                  // trigger onHover/Click callback on layer\n                  _this.layer.setCurrentPickId(pickedFeatureIdx);\n                  _this.triggerHoverOnLayer(target);\n                }\n              } else {\n                _target = {\n                  x: x,\n                  y: y,\n                  lngLat: lngLat,\n                  type: _this.layer.getCurrentPickId() === null ? 'un' + type : 'mouseout',\n                  featureId: null,\n                  feature: null\n                };\n                _this.triggerHoverOnLayer(_objectSpread(_objectSpread({}, _target), {}, {\n                  type: 'unpick'\n                }));\n                _this.triggerHoverOnLayer(_target);\n                _this.layer.setCurrentPickId(null);\n              }\n              if (enableHighlight) {\n                _this.highlightPickedFeature(pickedColors);\n              }\n              if (enableSelect && type === 'click' && ((_pickedColors = pickedColors) === null || _pickedColors === void 0 ? void 0 : _pickedColors.toString()) !== [0, 0, 0, 0].toString()) {\n                _this.selectFeature(pickedColors);\n              }\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })));\n    });\n    return _this;\n  }\n  _createClass(PixelPickingPass, [{\n    key: \"getType\",\n    value: function getType() {\n      return PassType.Normal;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'pixelPicking';\n    }\n  }, {\n    key: \"init\",\n    value: function init(layer, config) {\n      _get(_getPrototypeOf(PixelPickingPass.prototype), \"init\", this).call(this, layer, config);\n      this.layer = layer;\n      var _this$rendererService2 = this.rendererService,\n        createTexture2D = _this$rendererService2.createTexture2D,\n        createFramebuffer = _this$rendererService2.createFramebuffer,\n        getViewportSize = _this$rendererService2.getViewportSize;\n      var _getViewportSize2 = getViewportSize(),\n        width = _getViewportSize2.width,\n        height = _getViewportSize2.height;\n      // 创建 picking framebuffer，后续实时 resize\n      var pickingColorTexture = createTexture2D({\n        width: width,\n        height: height,\n        wrapS: gl.CLAMP_TO_EDGE,\n        wrapT: gl.CLAMP_TO_EDGE,\n        label: 'Picking Texture'\n      });\n      this.pickingFBO = createFramebuffer({\n        color: pickingColorTexture\n      });\n\n      // 监听 hover 事件\n      this.interactionService.on(InteractionEvent.Hover, this.pickFromPickingFBO);\n      this.interactionService.on(InteractionEvent.Select, this.selectFeatureHandle.bind(this));\n      this.interactionService.on(InteractionEvent.Active, this.highlightFeatureHandle.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render(layer) {\n      var _this2 = this;\n      if (this.alreadyInRendering) {\n        return;\n      }\n      var _this$rendererService3 = this.rendererService,\n        getViewportSize = _this$rendererService3.getViewportSize,\n        useFramebuffer = _this$rendererService3.useFramebuffer,\n        clear = _this$rendererService3.clear;\n      var _getViewportSize3 = getViewportSize(),\n        width = _getViewportSize3.width,\n        height = _getViewportSize3.height;\n\n      // throttled\n      this.alreadyInRendering = true;\n\n      // resize first, fbo can't be resized in use\n      if (this.width !== width || this.height !== height) {\n        this.pickingFBO.resize({\n          width: width,\n          height: height\n        });\n        this.width = width;\n        this.height = height;\n      }\n      useFramebuffer(this.pickingFBO, function () {\n        clear({\n          framebuffer: _this2.pickingFBO,\n          color: [0, 0, 0, 0],\n          stencil: 0,\n          depth: 1\n        });\n\n        /**\n         * picking pass 不需要 multipass，原因如下：\n         * 1. 已经 clear，无需 ClearPass\n         * 2. 只需要 RenderPass\n         * 3. 后处理 pass 需要跳过\n         */\n        var originRenderFlag = _this2.layer.multiPassRenderer.getRenderFlag();\n        _this2.layer.multiPassRenderer.setRenderFlag(false);\n        // trigger hooks\n        layer.hooks.beforePickingEncode.call();\n        layer.render();\n        layer.hooks.afterPickingEncode.call();\n        _this2.layer.multiPassRenderer.setRenderFlag(originRenderFlag);\n        _this2.alreadyInRendering = false;\n      });\n    }\n  }, {\n    key: \"triggerHoverOnLayer\",\n    value: function triggerHoverOnLayer(target) {\n      this.layer.emit(target.type, target);\n    }\n\n    /**\n     * highlight 如果直接修改选中 feature 的 buffer，存在两个问题：\n     * 1. 鼠标移走时无法恢复\n     * 2. 无法实现高亮颜色与原始原色的 alpha 混合\n     * 因此高亮还是放在 shader 中做比较好\n     * @example\n     * this.layer.color('name', ['#000000'], {\n     *  featureRange: {\n     *    startIndex: pickedFeatureIdx,\n     *    endIndex: pickedFeatureIdx + 1,\n     *  },\n     * });\n     */\n  }, {\n    key: \"highlightPickedFeature\",\n    value: function highlightPickedFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors2 = _slicedToArray(pickedColors, 3),\n        r = _pickedColors2[0],\n        g = _pickedColors2[1],\n        b = _pickedColors2[2];\n      this.layer.hooks.beforeHighlight.call([r, g, b]);\n      this.layerService.renderLayers();\n    }\n  }, {\n    key: \"selectFeature\",\n    value: function selectFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors3 = _slicedToArray(pickedColors, 3),\n        r = _pickedColors3[0],\n        g = _pickedColors3[1],\n        b = _pickedColors3[2];\n      this.layer.hooks.beforeSelect.call([r, g, b]);\n      this.layerService.renderLayers();\n    }\n  }, {\n    key: \"selectFeatureHandle\",\n    value: function selectFeatureHandle(_ref3) {\n      var featureId = _ref3.featureId;\n      var pickedColors = encodePickingColor(featureId);\n      this.selectFeature(new Uint8Array(pickedColors));\n    }\n  }, {\n    key: \"highlightFeatureHandle\",\n    value: function highlightFeatureHandle(_ref4) {\n      var featureId = _ref4.featureId;\n      var pickedColors = encodePickingColor(featureId);\n      this.highlightPickedFeature(new Uint8Array(pickedColors));\n    }\n  }]);\n  return PixelPickingPass;\n}(BaseNormalPass)) || _class);\nexport { PixelPickingPass as default };","map":{"version":3,"names":["_slicedToArray","_objectSpread","_asyncToGenerator","_classCallCheck","_createClass","_assertThisInitialized","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_dec","_class","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","decodePickingColor","DOM","encodePickingColor","injectable","InteractionEvent","gl","PassType","BaseNormalPass","PixelPickingPass","_BaseNormalPass","_super","_this","_len","length","args","Array","_key","concat","_ref","x","y","lngLat","type","layer","isVisible","needPick","_this$rendererService","rendererService","getViewportSize","readPixelsAsync","useFramebuffer","_getViewportSize","width","height","_this$layer$getLayerC","getLayerConfig","enableHighlight","enableSelect","xInDevicePixel","DPR","yInDevicePixel","pickedColors","pickingFBO","mark","_callee","_pickedColors","pickedFeatureIdx","rawFeature","target","_target","wrap","_callee$","_context","prev","next","Math","round","data","Uint8Array","framebuffer","sent","getSource","getFeatureById","featureId","feature","setCurrentPickId","triggerHoverOnLayer","getCurrentPickId","highlightPickedFeature","toString","selectFeature","stop","key","value","getType","Normal","getName","init","config","_this$rendererService2","createTexture2D","createFramebuffer","_getViewportSize2","pickingColorTexture","wrapS","CLAMP_TO_EDGE","wrapT","label","color","interactionService","on","Hover","pickFromPickingFBO","Select","selectFeatureHandle","bind","Active","highlightFeatureHandle","render","_this2","alreadyInRendering","_this$rendererService3","clear","_getViewportSize3","resize","stencil","depth","originRenderFlag","multiPassRenderer","getRenderFlag","setRenderFlag","hooks","beforePickingEncode","afterPickingEncode","emit","_pickedColors2","r","g","b","beforeHighlight","layerService","renderLayers","_pickedColors3","beforeSelect","_ref3","_ref4","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/renderer/passes/PixelPickingPass.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _dec, _class;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { decodePickingColor, DOM, encodePickingColor } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { InteractionEvent } from \"../../interaction/IInteractionService\";\nimport { gl } from \"../gl\";\nimport { PassType } from \"../IMultiPassRenderer\";\nimport BaseNormalPass from \"./BaseNormalPass\";\n\n/**\n * color-based PixelPickingPass\n * @see https://github.com/antvis/L7/blob/next/dev-docs/PixelPickingEngine.md\n */\nvar PixelPickingPass = (_dec = injectable(), _dec(_class = /*#__PURE__*/function (_BaseNormalPass) {\n  _inherits(PixelPickingPass, _BaseNormalPass);\n  var _super = _createSuper(PixelPickingPass);\n  function PixelPickingPass() {\n    var _this;\n    _classCallCheck(this, PixelPickingPass);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    /**\n     * picking framebuffer，供 attributes 颜色编码后输出\n     */\n    _defineProperty(_assertThisInitialized(_this), \"pickingFBO\", void 0);\n    /**\n     * 保存 layer 引用\n     */\n    _defineProperty(_assertThisInitialized(_this), \"layer\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"width\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"height\", 0);\n    /**\n     * 简单的 throttle，防止连续触发 hover 时导致频繁渲染到 picking framebuffer\n     */\n    _defineProperty(_assertThisInitialized(_this), \"alreadyInRendering\", false);\n    /**\n     * 拾取视口指定坐标属于的要素\n     * TODO：支持区域拾取\n     */\n    _defineProperty(_assertThisInitialized(_this), \"pickFromPickingFBO\", function (_ref) {\n      var x = _ref.x,\n        y = _ref.y,\n        lngLat = _ref.lngLat,\n        type = _ref.type;\n      if (!_this.layer.isVisible() || !_this.layer.needPick(type)) {\n        return;\n      }\n      var _this$rendererService = _this.rendererService,\n        getViewportSize = _this$rendererService.getViewportSize,\n        readPixelsAsync = _this$rendererService.readPixelsAsync,\n        useFramebuffer = _this$rendererService.useFramebuffer;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      var _this$layer$getLayerC = _this.layer.getLayerConfig(),\n        enableHighlight = _this$layer$getLayerC.enableHighlight,\n        enableSelect = _this$layer$getLayerC.enableSelect;\n      var xInDevicePixel = x * DOM.DPR;\n      var yInDevicePixel = y * DOM.DPR;\n      if (xInDevicePixel > width || xInDevicePixel < 0 || yInDevicePixel > height || yInDevicePixel < 0) {\n        return;\n      }\n      var pickedColors;\n      useFramebuffer(_this.pickingFBO, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _pickedColors;\n        var pickedFeatureIdx, rawFeature, target, _target;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return readPixelsAsync({\n                x: Math.round(xInDevicePixel),\n                // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n                y: Math.round(height - (y + 1) * DOM.DPR),\n                width: 1,\n                height: 1,\n                data: new Uint8Array(1 * 1 * 4),\n                framebuffer: _this.pickingFBO\n              });\n            case 2:\n              pickedColors = _context.sent;\n              if (pickedColors[0] !== 0 || pickedColors[1] !== 0 || pickedColors[2] !== 0) {\n                pickedFeatureIdx = decodePickingColor(pickedColors);\n                rawFeature = _this.layer.getSource().getFeatureById(pickedFeatureIdx);\n                target = {\n                  x: x,\n                  y: y,\n                  type: type,\n                  lngLat: lngLat,\n                  featureId: pickedFeatureIdx,\n                  feature: rawFeature\n                };\n                if (!rawFeature) {\n                  // this.logger.error(\n                  //   '未找到颜色编码解码后的原始 feature，请检查 fragment shader 中末尾是否添加了 `gl_FragColor = filterColor(gl_FragColor);`',\n                  // );\n                } else {\n                  // trigger onHover/Click callback on layer\n                  _this.layer.setCurrentPickId(pickedFeatureIdx);\n                  _this.triggerHoverOnLayer(target);\n                }\n              } else {\n                _target = {\n                  x: x,\n                  y: y,\n                  lngLat: lngLat,\n                  type: _this.layer.getCurrentPickId() === null ? 'un' + type : 'mouseout',\n                  featureId: null,\n                  feature: null\n                };\n                _this.triggerHoverOnLayer(_objectSpread(_objectSpread({}, _target), {}, {\n                  type: 'unpick'\n                }));\n                _this.triggerHoverOnLayer(_target);\n                _this.layer.setCurrentPickId(null);\n              }\n              if (enableHighlight) {\n                _this.highlightPickedFeature(pickedColors);\n              }\n              if (enableSelect && type === 'click' && ((_pickedColors = pickedColors) === null || _pickedColors === void 0 ? void 0 : _pickedColors.toString()) !== [0, 0, 0, 0].toString()) {\n                _this.selectFeature(pickedColors);\n              }\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })));\n    });\n    return _this;\n  }\n  _createClass(PixelPickingPass, [{\n    key: \"getType\",\n    value: function getType() {\n      return PassType.Normal;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'pixelPicking';\n    }\n  }, {\n    key: \"init\",\n    value: function init(layer, config) {\n      _get(_getPrototypeOf(PixelPickingPass.prototype), \"init\", this).call(this, layer, config);\n      this.layer = layer;\n      var _this$rendererService2 = this.rendererService,\n        createTexture2D = _this$rendererService2.createTexture2D,\n        createFramebuffer = _this$rendererService2.createFramebuffer,\n        getViewportSize = _this$rendererService2.getViewportSize;\n      var _getViewportSize2 = getViewportSize(),\n        width = _getViewportSize2.width,\n        height = _getViewportSize2.height;\n      // 创建 picking framebuffer，后续实时 resize\n      var pickingColorTexture = createTexture2D({\n        width: width,\n        height: height,\n        wrapS: gl.CLAMP_TO_EDGE,\n        wrapT: gl.CLAMP_TO_EDGE,\n        label: 'Picking Texture'\n      });\n      this.pickingFBO = createFramebuffer({\n        color: pickingColorTexture\n      });\n\n      // 监听 hover 事件\n      this.interactionService.on(InteractionEvent.Hover, this.pickFromPickingFBO);\n      this.interactionService.on(InteractionEvent.Select, this.selectFeatureHandle.bind(this));\n      this.interactionService.on(InteractionEvent.Active, this.highlightFeatureHandle.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render(layer) {\n      var _this2 = this;\n      if (this.alreadyInRendering) {\n        return;\n      }\n      var _this$rendererService3 = this.rendererService,\n        getViewportSize = _this$rendererService3.getViewportSize,\n        useFramebuffer = _this$rendererService3.useFramebuffer,\n        clear = _this$rendererService3.clear;\n      var _getViewportSize3 = getViewportSize(),\n        width = _getViewportSize3.width,\n        height = _getViewportSize3.height;\n\n      // throttled\n      this.alreadyInRendering = true;\n\n      // resize first, fbo can't be resized in use\n      if (this.width !== width || this.height !== height) {\n        this.pickingFBO.resize({\n          width: width,\n          height: height\n        });\n        this.width = width;\n        this.height = height;\n      }\n      useFramebuffer(this.pickingFBO, function () {\n        clear({\n          framebuffer: _this2.pickingFBO,\n          color: [0, 0, 0, 0],\n          stencil: 0,\n          depth: 1\n        });\n\n        /**\n         * picking pass 不需要 multipass，原因如下：\n         * 1. 已经 clear，无需 ClearPass\n         * 2. 只需要 RenderPass\n         * 3. 后处理 pass 需要跳过\n         */\n        var originRenderFlag = _this2.layer.multiPassRenderer.getRenderFlag();\n        _this2.layer.multiPassRenderer.setRenderFlag(false);\n        // trigger hooks\n        layer.hooks.beforePickingEncode.call();\n        layer.render();\n        layer.hooks.afterPickingEncode.call();\n        _this2.layer.multiPassRenderer.setRenderFlag(originRenderFlag);\n        _this2.alreadyInRendering = false;\n      });\n    }\n  }, {\n    key: \"triggerHoverOnLayer\",\n    value: function triggerHoverOnLayer(target) {\n      this.layer.emit(target.type, target);\n    }\n\n    /**\n     * highlight 如果直接修改选中 feature 的 buffer，存在两个问题：\n     * 1. 鼠标移走时无法恢复\n     * 2. 无法实现高亮颜色与原始原色的 alpha 混合\n     * 因此高亮还是放在 shader 中做比较好\n     * @example\n     * this.layer.color('name', ['#000000'], {\n     *  featureRange: {\n     *    startIndex: pickedFeatureIdx,\n     *    endIndex: pickedFeatureIdx + 1,\n     *  },\n     * });\n     */\n  }, {\n    key: \"highlightPickedFeature\",\n    value: function highlightPickedFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors2 = _slicedToArray(pickedColors, 3),\n        r = _pickedColors2[0],\n        g = _pickedColors2[1],\n        b = _pickedColors2[2];\n      this.layer.hooks.beforeHighlight.call([r, g, b]);\n      this.layerService.renderLayers();\n    }\n  }, {\n    key: \"selectFeature\",\n    value: function selectFeature(pickedColors) {\n      // @ts-ignore\n      var _pickedColors3 = _slicedToArray(pickedColors, 3),\n        r = _pickedColors3[0],\n        g = _pickedColors3[1],\n        b = _pickedColors3[2];\n      this.layer.hooks.beforeSelect.call([r, g, b]);\n      this.layerService.renderLayers();\n    }\n  }, {\n    key: \"selectFeatureHandle\",\n    value: function selectFeatureHandle(_ref3) {\n      var featureId = _ref3.featureId;\n      var pickedColors = encodePickingColor(featureId);\n      this.selectFeature(new Uint8Array(pickedColors));\n    }\n  }, {\n    key: \"highlightFeatureHandle\",\n    value: function highlightFeatureHandle(_ref4) {\n      var featureId = _ref4.featureId;\n      var pickedColors = encodePickingColor(featureId);\n      this.highlightPickedFeature(new Uint8Array(pickedColors));\n    }\n  }]);\n  return PixelPickingPass;\n}(BaseNormalPass)) || _class);\nexport { PixelPickingPass as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}