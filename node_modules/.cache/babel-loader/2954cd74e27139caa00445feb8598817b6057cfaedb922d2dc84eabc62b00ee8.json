{"ast":null,"code":"import CallbackAction from './callback';\nimport { get } from '@antv/util';\n// Action 类的缓存\nvar ActionCache = {};\n/**\n * 根据名称获取 Action 实例\n * @param actionName - action 的名称\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createAction(actionName, context) {\n  var actionOption = ActionCache[actionName];\n  var action = null;\n  if (actionOption) {\n    var ActionClass = actionOption.ActionClass,\n      cfg = actionOption.cfg;\n    action = new ActionClass(context, cfg);\n    action.name = actionName;\n    action.init();\n  }\n  return action;\n}\n/**\n * 根据 action 的 name 获取定义的类\n * @param actionName action 的 name\n */\nexport function getActionClass(actionName) {\n  var actionOption = ActionCache[actionName];\n  return get(actionOption, 'ActionClass');\n}\n/**\n * 注册 Action\n * @param actionName - action 的名称\n * @param ActionClass - 继承自 action 的类\n */\nexport function registerAction(actionName, ActionClass, cfg) {\n  ActionCache[actionName] = {\n    ActionClass: ActionClass,\n    cfg: cfg\n  };\n}\n/**\n * 取消注册 Action\n * @param actionName action 名称\n */\nexport function unregisterAction(actionName) {\n  delete ActionCache[actionName];\n}\n/**\n * 根据回调函数获取 Action 实例\n * @param callback - action 的回调函数\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createCallbackAction(callback, context) {\n  var action = new CallbackAction(context);\n  action.callback = callback;\n  action.name = 'callback';\n  return action;\n}","map":{"version":3,"names":["CallbackAction","get","ActionCache","createAction","actionName","context","actionOption","action","ActionClass","cfg","name","init","getActionClass","registerAction","unregisterAction","createCallbackAction","callback"],"sources":["../../../src/interaction/action/register.ts"],"sourcesContent":["import { ActionCallback, IInteractionContext, LooseObject } from '../../interface';\nimport Action from './base';\nimport CallbackAction from './callback';\nimport { get } from '@antv/util';\n\n/** Action 构造函数 */\ntype ActionConstructor = new (context: IInteractionContext, cfg?: LooseObject) => Action;\n\n/** @ignore */\ninterface ActionOption {\n  ActionClass: ActionConstructor;\n  cfg: LooseObject;\n}\n\n// Action 类的缓存\nconst ActionCache: Record<string, ActionOption> = {};\n\n/**\n * 根据名称获取 Action 实例\n * @param actionName - action 的名称\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createAction(actionName: string, context: IInteractionContext): Action {\n  const actionOption = ActionCache[actionName];\n  let action = null;\n  if (actionOption) {\n    const { ActionClass, cfg } = actionOption;\n    action = new ActionClass(context, cfg);\n    action.name = actionName;\n    action.init();\n  }\n  return action;\n}\n\n/**\n * 根据 action 的 name 获取定义的类\n * @param actionName action 的 name\n */\nexport function getActionClass(actionName: string): ActionConstructor {\n  const actionOption = ActionCache[actionName];\n  return get(actionOption, 'ActionClass');\n}\n\n/**\n * 注册 Action\n * @param actionName - action 的名称\n * @param ActionClass - 继承自 action 的类\n */\nexport function registerAction(actionName: string, ActionClass: ActionConstructor, cfg?: LooseObject) {\n  ActionCache[actionName] = {\n    ActionClass,\n    cfg,\n  };\n}\n\n/**\n * 取消注册 Action\n * @param actionName action 名称\n */\nexport function unregisterAction(actionName: string) {\n  delete ActionCache[actionName];\n}\n\n/**\n * 根据回调函数获取 Action 实例\n * @param callback - action 的回调函数\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createCallbackAction(callback: ActionCallback, context: IInteractionContext): CallbackAction {\n  const action = new CallbackAction(context);\n  action.callback = callback;\n  action.name = 'callback';\n  return action;\n}\n"],"mappings":"AAEA,OAAOA,cAAc,MAAM,YAAY;AACvC,SAASC,GAAG,QAAQ,YAAY;AAWhC;AACA,IAAMC,WAAW,GAAiC,EAAE;AAEpD;;;;;;AAMA,OAAM,SAAUC,YAAYA,CAACC,UAAkB,EAAEC,OAA4B;EAC3E,IAAMC,YAAY,GAAGJ,WAAW,CAACE,UAAU,CAAC;EAC5C,IAAIG,MAAM,GAAG,IAAI;EACjB,IAAID,YAAY,EAAE;IACR,IAAAE,WAAW,GAAUF,YAAY,CAAAE,WAAtB;MAAEC,GAAG,GAAKH,YAAY,CAAAG,GAAjB;IACxBF,MAAM,GAAG,IAAIC,WAAW,CAACH,OAAO,EAAEI,GAAG,CAAC;IACtCF,MAAM,CAACG,IAAI,GAAGN,UAAU;IACxBG,MAAM,CAACI,IAAI,EAAE;;EAEf,OAAOJ,MAAM;AACf;AAEA;;;;AAIA,OAAM,SAAUK,cAAcA,CAACR,UAAkB;EAC/C,IAAME,YAAY,GAAGJ,WAAW,CAACE,UAAU,CAAC;EAC5C,OAAOH,GAAG,CAACK,YAAY,EAAE,aAAa,CAAC;AACzC;AAEA;;;;;AAKA,OAAM,SAAUO,cAAcA,CAACT,UAAkB,EAAEI,WAA8B,EAAEC,GAAiB;EAClGP,WAAW,CAACE,UAAU,CAAC,GAAG;IACxBI,WAAW,EAAAA,WAAA;IACXC,GAAG,EAAAA;GACJ;AACH;AAEA;;;;AAIA,OAAM,SAAUK,gBAAgBA,CAACV,UAAkB;EACjD,OAAOF,WAAW,CAACE,UAAU,CAAC;AAChC;AAEA;;;;;;AAMA,OAAM,SAAUW,oBAAoBA,CAACC,QAAwB,EAAEX,OAA4B;EACzF,IAAME,MAAM,GAAG,IAAIP,cAAc,CAACK,OAAO,CAAC;EAC1CE,MAAM,CAACS,QAAQ,GAAGA,QAAQ;EAC1BT,MAAM,CAACG,IAAI,GAAG,UAAU;EACxB,OAAOH,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}