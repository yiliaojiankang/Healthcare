{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCoreNodeAndRelativeLeafNodes = exports.getAvgNodePosition = exports.getLayoutBBox = exports.traverseTreeUp = exports.scaleMatrix = exports.getAdjMatrix = exports.floydWarshall = exports.getDegreeMap = exports.getDegree = exports.getEdgeTerminal = void 0;\nvar array_1 = require(\"./array\");\nvar number_1 = require(\"./number\");\nvar object_1 = require(\"./object\");\nvar getEdgeTerminal = function (edge, type) {\n  var terminal = edge[type];\n  if ((0, object_1.isObject)(terminal)) {\n    return terminal.cell;\n  }\n  return terminal;\n};\nexports.getEdgeTerminal = getEdgeTerminal;\nvar getDegree = function (n, nodeIdxMap, edges) {\n  var degrees = [];\n  for (var i = 0; i < n; i++) {\n    degrees[i] = {\n      in: 0,\n      out: 0,\n      all: 0\n    };\n  }\n  if (!edges) return degrees;\n  edges.forEach(function (e) {\n    var source = (0, exports.getEdgeTerminal)(e, 'source');\n    var target = (0, exports.getEdgeTerminal)(e, 'target');\n    if (source && degrees[nodeIdxMap[source]]) {\n      degrees[nodeIdxMap[source]].out += 1;\n      degrees[nodeIdxMap[source]].all += 1;\n    }\n    if (target && degrees[nodeIdxMap[target]]) {\n      degrees[nodeIdxMap[target]].in += 1;\n      degrees[nodeIdxMap[target]].all += 1;\n    }\n  });\n  return degrees;\n};\nexports.getDegree = getDegree;\nvar getDegreeMap = function (nodes, edges) {\n  var degreesMap = {};\n  nodes.forEach(function (node) {\n    degreesMap[node.id] = {\n      in: 0,\n      out: 0,\n      all: 0\n    };\n  });\n  if (!edges) return degreesMap;\n  edges.forEach(function (e) {\n    var source = (0, exports.getEdgeTerminal)(e, 'source');\n    var target = (0, exports.getEdgeTerminal)(e, 'target');\n    if (source) {\n      degreesMap[source].out += 1;\n      degreesMap[source].all += 1;\n    }\n    if (target) {\n      degreesMap[target].in += 1;\n      degreesMap[target].all += 1;\n    }\n  });\n  return degreesMap;\n};\nexports.getDegreeMap = getDegreeMap;\nvar floydWarshall = function (adjMatrix) {\n  // initialize\n  var dist = [];\n  var size = adjMatrix.length;\n  for (var i = 0; i < size; i += 1) {\n    dist[i] = [];\n    for (var j = 0; j < size; j += 1) {\n      if (i === j) {\n        dist[i][j] = 0;\n      } else if (adjMatrix[i][j] === 0 || !adjMatrix[i][j]) {\n        dist[i][j] = Infinity;\n      } else {\n        dist[i][j] = adjMatrix[i][j];\n      }\n    }\n  }\n  // floyd\n  for (var k = 0; k < size; k += 1) {\n    for (var i = 0; i < size; i += 1) {\n      for (var j = 0; j < size; j += 1) {\n        if (dist[i][j] > dist[i][k] + dist[k][j]) {\n          dist[i][j] = dist[i][k] + dist[k][j];\n        }\n      }\n    }\n  }\n  return dist;\n};\nexports.floydWarshall = floydWarshall;\nvar getAdjMatrix = function (data, directed) {\n  var nodes = data.nodes,\n    edges = data.edges;\n  var matrix = [];\n  // map node with index in data.nodes\n  var nodeMap = {};\n  if (!nodes) {\n    throw new Error('invalid nodes data!');\n  }\n  if (nodes) {\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = i;\n      var row = [];\n      matrix.push(row);\n    });\n  }\n  edges === null || edges === void 0 ? void 0 : edges.forEach(function (e) {\n    var source = (0, exports.getEdgeTerminal)(e, 'source');\n    var target = (0, exports.getEdgeTerminal)(e, 'target');\n    var sIndex = nodeMap[source];\n    var tIndex = nodeMap[target];\n    if (sIndex === undefined || tIndex === undefined) return;\n    matrix[sIndex][tIndex] = 1;\n    if (!directed) {\n      matrix[tIndex][sIndex] = 1;\n    }\n  });\n  return matrix;\n};\nexports.getAdjMatrix = getAdjMatrix;\n/**\n * scale matrix\n * @param matrix [ [], [], [] ]\n * @param ratio\n */\nvar scaleMatrix = function (matrix, ratio) {\n  var result = [];\n  matrix.forEach(function (row) {\n    var newRow = [];\n    row.forEach(function (v) {\n      newRow.push(v * ratio);\n    });\n    result.push(newRow);\n  });\n  return result;\n};\nexports.scaleMatrix = scaleMatrix;\n/**\n * depth first traverse, from leaves to root, children in inverse order\n *  if the fn returns false, terminate the traverse\n */\nvar traverseUp = function (data, fn) {\n  if (data && data.children) {\n    for (var i = data.children.length - 1; i >= 0; i--) {\n      if (!traverseUp(data.children[i], fn)) return;\n    }\n  }\n  if (!fn(data)) {\n    return false;\n  }\n  return true;\n};\n/**\n * depth first traverse, from leaves to root, children in inverse order\n * if the fn returns false, terminate the traverse\n */\nvar traverseTreeUp = function (data, fn) {\n  if (typeof fn !== 'function') {\n    return;\n  }\n  traverseUp(data, fn);\n};\nexports.traverseTreeUp = traverseTreeUp;\n/**\n * calculate the bounding box for the nodes according to their x, y, and size\n * @param nodes nodes in the layout\n * @returns\n */\nvar getLayoutBBox = function (nodes) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n  nodes.forEach(function (node) {\n    var size = node.size;\n    if ((0, array_1.isArray)(size)) {\n      if (size.length === 1) size = [size[0], size[0]];\n    } else if ((0, number_1.isNumber)(size)) {\n      size = [size, size];\n    } else if (size === undefined || isNaN(size)) {\n      size = [30, 30];\n    }\n    var halfSize = [size[0] / 2, size[1] / 2];\n    var left = node.x - halfSize[0];\n    var right = node.x + halfSize[0];\n    var top = node.y - halfSize[1];\n    var bottom = node.y + halfSize[1];\n    if (minX > left) minX = left;\n    if (minY > top) minY = top;\n    if (maxX < right) maxX = right;\n    if (maxY < bottom) maxY = bottom;\n  });\n  return {\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n  };\n};\nexports.getLayoutBBox = getLayoutBBox;\n/**\n * 获取节点集合的平均位置信息\n * @param nodes 节点集合\n * @returns 平局内置\n */\nvar getAvgNodePosition = function (nodes) {\n  var totalNodes = {\n    x: 0,\n    y: 0\n  };\n  nodes.forEach(function (node) {\n    totalNodes.x += node.x || 0;\n    totalNodes.y += node.y || 0;\n  });\n  // 获取均值向量\n  var length = nodes.length || 1;\n  return {\n    x: totalNodes.x / length,\n    y: totalNodes.y / length\n  };\n};\nexports.getAvgNodePosition = getAvgNodePosition;\n// 找出指定节点关联的边的起点或终点\nvar getCoreNode = function (type, node, edges) {\n  var _a, _b;\n  if (type === 'source') {\n    return ((_a = edges === null || edges === void 0 ? void 0 : edges.find(function (edge) {\n      return edge.target === node.id;\n    })) === null || _a === void 0 ? void 0 : _a.source) || {};\n  }\n  return ((_b = edges === null || edges === void 0 ? void 0 : edges.find(function (edge) {\n    return edge.source === node.id;\n  })) === null || _b === void 0 ? void 0 : _b.target) || {};\n};\n// 找出指定节点为起点或终点的所有一度叶子节点\nvar getRelativeNodeIds = function (type, coreNode, edges) {\n  var relativeNodes = [];\n  switch (type) {\n    case 'source':\n      relativeNodes = edges === null || edges === void 0 ? void 0 : edges.filter(function (edge) {\n        return edge.source === coreNode.id;\n      }).map(function (edge) {\n        return edge.target;\n      });\n      break;\n    case 'target':\n      relativeNodes = edges === null || edges === void 0 ? void 0 : edges.filter(function (edge) {\n        return edge.target === coreNode.id;\n      }).map(function (edge) {\n        return edge.source;\n      });\n      break;\n    case 'both':\n      relativeNodes = edges === null || edges === void 0 ? void 0 : edges.filter(function (edge) {\n        return edge.source === coreNode.id;\n      }).map(function (edge) {\n        return edge.target;\n      }).concat(edges === null || edges === void 0 ? void 0 : edges.filter(function (edge) {\n        return edge.target === coreNode.id;\n      }).map(function (edge) {\n        return edge.source;\n      }));\n      break;\n    default:\n      break;\n  }\n  // 去重\n  var set = new Set(relativeNodes);\n  return Array.from(set);\n};\n// 找出同类型的节点\nvar getSameTypeNodes = function (type, nodeClusterBy, node, relativeNodes, degreesMap) {\n  // @ts-ignore\n  var typeName = node[nodeClusterBy] || '';\n  // @ts-ignore\n  var sameTypeNodes = (relativeNodes === null || relativeNodes === void 0 ? void 0 : relativeNodes.filter(function (item) {\n    return item[nodeClusterBy] === typeName;\n  })) || [];\n  if (type === 'leaf') {\n    sameTypeNodes = sameTypeNodes.filter(function (node) {\n      var _a, _b;\n      return ((_a = degreesMap[node.id]) === null || _a === void 0 ? void 0 : _a.in) === 0 || ((_b = degreesMap[node.id]) === null || _b === void 0 ? void 0 : _b.out) === 0;\n    });\n  }\n  return sameTypeNodes;\n};\n// 找出与指定节点关联的边的起点或终点出发的所有一度叶子节点\nvar getCoreNodeAndRelativeLeafNodes = function (type, node, edges, nodeClusterBy, degreesMap, nodeMap) {\n  var _a = degreesMap[node.id],\n    inDegree = _a.in,\n    outDegree = _a.out;\n  var coreNode = node;\n  var relativeLeafNodes = [];\n  if (inDegree === 0) {\n    // 如果为没有出边的叶子节点，则找出与它关联的边的起点出发的所有一度节点\n    coreNode = getCoreNode('source', node, edges);\n    relativeLeafNodes = getRelativeNodeIds('both', coreNode, edges).map(function (nodeId) {\n      return nodeMap[nodeId];\n    });\n  } else if (outDegree === 0) {\n    // 如果为没有入边边的叶子节点，则找出与它关联的边的起点出发的所有一度节点\n    coreNode = getCoreNode('target', node, edges);\n    relativeLeafNodes = getRelativeNodeIds('both', coreNode, edges).map(function (nodeId) {\n      return nodeMap[nodeId];\n    });\n  }\n  relativeLeafNodes = relativeLeafNodes.filter(function (node) {\n    return degreesMap[node.id] && (degreesMap[node.id].in === 0 || degreesMap[node.id].out === 0);\n  });\n  var sameTypeLeafNodes = getSameTypeNodes(type, nodeClusterBy, node, relativeLeafNodes, degreesMap);\n  return {\n    coreNode: coreNode,\n    relativeLeafNodes: relativeLeafNodes,\n    sameTypeLeafNodes: sameTypeLeafNodes\n  };\n};\nexports.getCoreNodeAndRelativeLeafNodes = getCoreNodeAndRelativeLeafNodes;","map":{"version":3,"names":["array_1","require","number_1","object_1","getEdgeTerminal","edge","type","terminal","isObject","cell","exports","getDegree","n","nodeIdxMap","edges","degrees","i","in","out","all","forEach","e","source","target","getDegreeMap","nodes","degreesMap","node","id","floydWarshall","adjMatrix","dist","size","length","j","Infinity","k","getAdjMatrix","data","directed","matrix","nodeMap","Error","row","push","sIndex","tIndex","undefined","scaleMatrix","ratio","result","newRow","v","traverseUp","fn","children","traverseTreeUp","getLayoutBBox","minX","minY","maxX","maxY","isArray","isNumber","isNaN","halfSize","left","x","right","top","y","bottom","getAvgNodePosition","totalNodes","getCoreNode","_a","find","_b","getRelativeNodeIds","coreNode","relativeNodes","filter","map","concat","set","Set","Array","from","getSameTypeNodes","nodeClusterBy","typeName","sameTypeNodes","item","getCoreNodeAndRelativeLeafNodes","inDegree","outDegree","relativeLeafNodes","nodeId","sameTypeLeafNodes"],"sources":["../../src/util/math.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}