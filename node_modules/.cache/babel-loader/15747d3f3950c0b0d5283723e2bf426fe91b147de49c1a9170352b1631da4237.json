{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { ext, mat3, vec3 } from '@antv/matrix-util';\nimport { assign } from '@antv/util';\n/**\n * Coordinate Base Class\n */\nvar Coordinate = /** @class */function () {\n  function Coordinate(cfg) {\n    // 自身属性\n    this.type = 'coordinate';\n    this.isRect = false;\n    this.isHelix = false;\n    this.isPolar = false;\n    this.isReflectX = false;\n    this.isReflectY = false;\n    var start = cfg.start,\n      end = cfg.end,\n      _a = cfg.matrix,\n      matrix = _a === void 0 ? [1, 0, 0, 0, 1, 0, 0, 0, 1] : _a,\n      _b = cfg.isTransposed,\n      isTransposed = _b === void 0 ? false : _b;\n    this.start = start;\n    this.end = end;\n    this.matrix = matrix;\n    this.originalMatrix = __spreadArray([], matrix); // 去除引用\n    this.isTransposed = isTransposed;\n  }\n  /**\n   * 初始化流程\n   */\n  Coordinate.prototype.initial = function () {\n    // center、width、height\n    this.center = {\n      x: (this.start.x + this.end.x) / 2,\n      y: (this.start.y + this.end.y) / 2\n    };\n    this.width = Math.abs(this.end.x - this.start.x);\n    this.height = Math.abs(this.end.y - this.start.y);\n  };\n  /**\n   * 更新配置\n   * @param cfg\n   */\n  Coordinate.prototype.update = function (cfg) {\n    assign(this, cfg);\n    this.initial();\n  };\n  Coordinate.prototype.convertDim = function (percent, dim) {\n    var _a;\n    var _b = this[dim],\n      start = _b.start,\n      end = _b.end;\n    // 交换\n    if (this.isReflect(dim)) {\n      _a = [end, start], start = _a[0], end = _a[1];\n    }\n    return start + percent * (end - start);\n  };\n  Coordinate.prototype.invertDim = function (value, dim) {\n    var _a;\n    var _b = this[dim],\n      start = _b.start,\n      end = _b.end;\n    // 交换\n    if (this.isReflect(dim)) {\n      _a = [end, start], start = _a[0], end = _a[1];\n    }\n    return (value - start) / (end - start);\n  };\n  /**\n   * 将坐标点进行矩阵变换\n   * @param x   对应 x 轴画布坐标\n   * @param y   对应 y 轴画布坐标\n   * @param tag 默认为 0，可取值 0, 1\n   * @return    返回变换后的三阶向量 [x, y, z]\n   */\n  Coordinate.prototype.applyMatrix = function (x, y, tag) {\n    if (tag === void 0) {\n      tag = 0;\n    }\n    var matrix = this.matrix;\n    var vector = [x, y, tag];\n    vec3.transformMat3(vector, vector, matrix);\n    return vector;\n  };\n  /**\n   * 将坐标点进行矩阵逆变换\n   * @param x   对应 x 轴画布坐标\n   * @param y   对应 y 轴画布坐标\n   * @param tag 默认为 0，可取值 0, 1\n   * @return    返回矩阵逆变换后的三阶向量 [x, y, z]\n   */\n  Coordinate.prototype.invertMatrix = function (x, y, tag) {\n    if (tag === void 0) {\n      tag = 0;\n    }\n    var matrix = this.matrix;\n    var inverted = mat3.invert([0, 0, 0, 0, 0, 0, 0, 0, 0], matrix);\n    var vector = [x, y, tag];\n    if (inverted) {\n      // 如果为空则不进行矩阵变化，防止报错\n      vec3.transformMat3(vector, vector, inverted);\n    }\n    return vector;\n  };\n  /**\n   * 将归一化的坐标点数据转换为画布坐标，并根据坐标系当前矩阵进行变换\n   * @param point 归一化的坐标点\n   * @return      返回进行矩阵变换后的画布坐标\n   */\n  Coordinate.prototype.convert = function (point) {\n    var _a = this.convertPoint(point),\n      x = _a.x,\n      y = _a.y;\n    var vector = this.applyMatrix(x, y, 1);\n    return {\n      x: vector[0],\n      y: vector[1]\n    };\n  };\n  /**\n   * 将进行过矩阵变换画布坐标转换为归一化坐标\n   * @param point 画布坐标\n   * @return      返回归一化的坐标点\n   */\n  Coordinate.prototype.invert = function (point) {\n    var vector = this.invertMatrix(point.x, point.y, 1);\n    return this.invertPoint({\n      x: vector[0],\n      y: vector[1]\n    });\n  };\n  /**\n   * 坐标系旋转变换\n   * @param  radian 旋转弧度\n   * @return        返回坐标系对象\n   */\n  Coordinate.prototype.rotate = function (radian) {\n    var matrix = this.matrix;\n    var center = this.center;\n    ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n    ext.leftRotate(matrix, matrix, radian);\n    ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n    return this;\n  };\n  /**\n   * 坐标系反射变换\n   * @param dim 反射维度\n   * @return    返回坐标系对象\n   */\n  Coordinate.prototype.reflect = function (dim) {\n    if (dim === 'x') {\n      this.isReflectX = !this.isReflectX;\n    } else {\n      this.isReflectY = !this.isReflectY;\n    }\n    return this;\n  };\n  /**\n   * 坐标系比例变换\n   * @param s1 x 方向缩放比例\n   * @param s2 y 方向缩放比例\n   * @return     返回坐标系对象\n   */\n  Coordinate.prototype.scale = function (s1, s2) {\n    var matrix = this.matrix;\n    var center = this.center;\n    ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n    ext.leftScale(matrix, matrix, [s1, s2]);\n    ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n    return this;\n  };\n  /**\n   * 坐标系平移变换\n   * @param x x 方向平移像素\n   * @param y y 方向平移像素\n   * @return    返回坐标系对象\n   */\n  Coordinate.prototype.translate = function (x, y) {\n    var matrix = this.matrix;\n    ext.leftTranslate(matrix, matrix, [x, y]);\n    return this;\n  };\n  /**\n   * 将坐标系 x y 两个轴进行转置\n   * @return 返回坐标系对象\n   */\n  Coordinate.prototype.transpose = function () {\n    this.isTransposed = !this.isTransposed;\n    return this;\n  };\n  Coordinate.prototype.getCenter = function () {\n    return this.center;\n  };\n  Coordinate.prototype.getWidth = function () {\n    return this.width;\n  };\n  Coordinate.prototype.getHeight = function () {\n    return this.height;\n  };\n  Coordinate.prototype.getRadius = function () {\n    return this.radius;\n  };\n  /**\n   * whether has reflect\n   * @param dim\n   */\n  Coordinate.prototype.isReflect = function (dim) {\n    return dim === 'x' ? this.isReflectX : this.isReflectY;\n  };\n  /**\n   * 重置 matrix\n   * @param matrix 如果传入，则使用，否则使用构造函数中传入的默认 matrix\n   */\n  Coordinate.prototype.resetMatrix = function (matrix) {\n    // 去除引用关系\n    this.matrix = matrix ? matrix : __spreadArray([], this.originalMatrix);\n  };\n  return Coordinate;\n}();\nexport default Coordinate;","map":{"version":3,"names":["ext","mat3","vec3","assign","Coordinate","cfg","type","isRect","isHelix","isPolar","isReflectX","isReflectY","start","end","_a","matrix","_b","isTransposed","originalMatrix","__spreadArray","prototype","initial","center","x","y","width","Math","abs","height","update","convertDim","percent","dim","isReflect","invertDim","value","applyMatrix","tag","vector","transformMat3","invertMatrix","inverted","invert","convert","point","convertPoint","invertPoint","rotate","radian","leftTranslate","leftRotate","reflect","scale","s1","s2","leftScale","translate","transpose","getCenter","getWidth","getHeight","getRadius","radius","resetMatrix"],"sources":["../../src/coord/base.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}