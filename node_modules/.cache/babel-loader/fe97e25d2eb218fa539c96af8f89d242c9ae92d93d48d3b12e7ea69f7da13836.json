{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { wrap as _wrap } from \"../util\";\nexport var earthRadius = 6371008.8;\nvar LngLat = /*#__PURE__*/function () {\n  function LngLat(lng, lat) {\n    _classCallCheck(this, LngLat);\n    if (isNaN(lng) || isNaN(lat)) {\n      throw new Error(\"Invalid LngLat object: (\".concat(lng, \", \").concat(lat, \")\"));\n    }\n    this.lng = +lng;\n    this.lat = +lat;\n    if (this.lat > 90 || this.lat < -90) {\n      throw new Error('Invalid LngLat latitude value: must be between -90 and 90');\n    }\n  }\n  _createClass(LngLat, [{\n    key: \"wrap\",\n    value: function wrap() {\n      return new LngLat(_wrap(this.lng, -180, 180), this.lat);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return [this.lng, this.lat];\n    }\n    // public toBounds(radius: number = 0) {\n    //   const earthCircumferenceInMetersAtEquator = 40075017;\n    //   const latAccuracy = (360 * radius) / earthCircumferenceInMetersAtEquator;\n    //   const lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n    //   return new LngLatBounds(\n    //     new LngLat(this.lng - lngAccuracy, this.lat - latAccuracy),\n    //     new LngLat(this.lng + lngAccuracy, this.lat + latAccuracy),\n    //   );\n    // }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"LngLat(\".concat(this.lng, \", \").concat(this.lat, \")\");\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(lngLat) {\n      var rad = Math.PI / 180;\n      var lat1 = this.lat * rad;\n      var lat2 = lngLat.lat * rad;\n      var a = Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos((lngLat.lng - this.lng) * rad);\n      var maxMeters = earthRadius * Math.acos(Math.min(a, 1));\n      return maxMeters;\n    }\n  }], [{\n    key: \"convert\",\n    value: function convert(input) {\n      if (input instanceof LngLat) {\n        return input;\n      }\n      if (Array.isArray(input) && (input.length === 2 || input.length === 3)) {\n        return new LngLat(Number(input[0]), Number(input[1]));\n      }\n      if (!Array.isArray(input) && _typeof(input) === 'object' && input !== null) {\n        var lng = 'lng' in input ? input.lng : input.lon;\n        return new LngLat(\n        // flow can't refine this to have one of lng or lat, so we have to cast to any\n        Number(lng), Number(input.lat));\n      }\n      throw new Error('`LngLatLike` argument must be specified as a LngLat instance, an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]');\n    }\n  }]);\n  return LngLat;\n}();\nexport { LngLat as default };","map":{"version":3,"names":["_typeof","_classCallCheck","_createClass","wrap","_wrap","earthRadius","LngLat","lng","lat","isNaN","Error","concat","key","value","toArray","toString","distanceTo","lngLat","rad","Math","PI","lat1","lat2","a","sin","cos","maxMeters","acos","min","convert","input","Array","isArray","length","Number","lon","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-map/es/geo/lng_lat.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { wrap as _wrap } from \"../util\";\nexport var earthRadius = 6371008.8;\nvar LngLat = /*#__PURE__*/function () {\n  function LngLat(lng, lat) {\n    _classCallCheck(this, LngLat);\n    if (isNaN(lng) || isNaN(lat)) {\n      throw new Error(\"Invalid LngLat object: (\".concat(lng, \", \").concat(lat, \")\"));\n    }\n    this.lng = +lng;\n    this.lat = +lat;\n    if (this.lat > 90 || this.lat < -90) {\n      throw new Error('Invalid LngLat latitude value: must be between -90 and 90');\n    }\n  }\n  _createClass(LngLat, [{\n    key: \"wrap\",\n    value: function wrap() {\n      return new LngLat(_wrap(this.lng, -180, 180), this.lat);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return [this.lng, this.lat];\n    }\n    // public toBounds(radius: number = 0) {\n    //   const earthCircumferenceInMetersAtEquator = 40075017;\n    //   const latAccuracy = (360 * radius) / earthCircumferenceInMetersAtEquator;\n    //   const lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n    //   return new LngLatBounds(\n    //     new LngLat(this.lng - lngAccuracy, this.lat - latAccuracy),\n    //     new LngLat(this.lng + lngAccuracy, this.lat + latAccuracy),\n    //   );\n    // }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"LngLat(\".concat(this.lng, \", \").concat(this.lat, \")\");\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(lngLat) {\n      var rad = Math.PI / 180;\n      var lat1 = this.lat * rad;\n      var lat2 = lngLat.lat * rad;\n      var a = Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos((lngLat.lng - this.lng) * rad);\n      var maxMeters = earthRadius * Math.acos(Math.min(a, 1));\n      return maxMeters;\n    }\n  }], [{\n    key: \"convert\",\n    value: function convert(input) {\n      if (input instanceof LngLat) {\n        return input;\n      }\n      if (Array.isArray(input) && (input.length === 2 || input.length === 3)) {\n        return new LngLat(Number(input[0]), Number(input[1]));\n      }\n      if (!Array.isArray(input) && _typeof(input) === 'object' && input !== null) {\n        var lng = 'lng' in input ? input.lng : input.lon;\n        return new LngLat(\n        // flow can't refine this to have one of lng or lat, so we have to cast to any\n        Number(lng), Number(input.lat));\n      }\n      throw new Error('`LngLatLike` argument must be specified as a LngLat instance, an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]');\n    }\n  }]);\n  return LngLat;\n}();\nexport { LngLat as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}