{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { Canvas as GCanvas } from '@antv/g-canvas';\nimport { Canvas as GSVGCanvas } from '@antv/g-svg';\nimport { isString, isNil, each, debounce } from '@antv/util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { ext } from '@antv/matrix-util';\nimport Base from '../base';\nvar max = Math.max;\nvar transform = ext.transform;\nvar DEFAULT_MODE = 'default';\nvar KEYSHAPE_MODE = 'keyShape';\nvar DELEGATE_MODE = 'delegate';\nvar SVG = 'svg';\nvar MiniMap = /** @class */function (_super) {\n  __extends(MiniMap, _super);\n  function MiniMap(config) {\n    var _this = _super.call(this, config) || this;\n    /**\n     * 主图更新的监听函数，使用 debounce 减少渲染频率\n     * e.g. 拖拽节点只会在松手后的 100ms 后执行 updateCanvas\n     * e.g. render 时大量 addItem 也只会执行一次 updateCanvas\n     */\n    _this.handleUpdateCanvas = debounce(function (event) {\n      var self = _this;\n      if (self.destroyed) return;\n      self.updateCanvas();\n    }, 100, false);\n    return _this;\n  }\n  MiniMap.prototype.getDefaultCfgs = function () {\n    return {\n      container: null,\n      className: 'g6-minimap',\n      viewportClassName: 'g6-minimap-viewport',\n      // Minimap 中默认展示和主图一样的内容，KeyShape 只展示节点和边的 key shape 部分，delegate表示展示自定义的rect，用户可自定义样式\n      type: 'default',\n      padding: 50,\n      size: [200, 120],\n      delegateStyle: {\n        fill: '#40a9ff',\n        stroke: '#096dd9'\n      },\n      refresh: true,\n      hideEdge: false\n    };\n  };\n  MiniMap.prototype.getEvents = function () {\n    return {\n      beforepaint: 'updateViewport',\n      beforeanimate: 'disableRefresh',\n      afteranimate: 'enableRefresh',\n      viewportchange: 'disableOneRefresh'\n    };\n  };\n  // 若是正在进行动画，不刷新缩略图\n  MiniMap.prototype.disableRefresh = function () {\n    this.set('refresh', false);\n  };\n  MiniMap.prototype.enableRefresh = function () {\n    this.set('refresh', true);\n    this.updateCanvas();\n  };\n  MiniMap.prototype.disableOneRefresh = function () {\n    this.set('viewportChange', true);\n  };\n  MiniMap.prototype.initViewport = function () {\n    var _this = this;\n    var cfgs = this._cfgs;\n    var size = cfgs.size,\n      graph = cfgs.graph;\n    if (this.destroyed) return;\n    var canvas = this.get('canvas');\n    var containerDOM = canvas.get('container');\n    var isFireFox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n    var isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1;\n    var viewport = createDom(\"\\n      <div\\n        class=\".concat(cfgs.viewportClassName, \"\\n        style='position:absolute;\\n          left:0;\\n          top:0;\\n          box-sizing:border-box;\\n          outline: 2px solid #1980ff;\\n          cursor:move'\\n        draggable=\").concat(isSafari || isFireFox ? false : true, \"\\n      </div>\"));\n    // 计算拖拽水平方向距离\n    var x = 0;\n    // 计算拖拽垂直方向距离\n    var y = 0;\n    // 是否在拖拽minimap的视口\n    var dragging = false;\n    // 缓存viewport当前对于画布的x\n    var left = 0;\n    // 缓存viewport当前对于画布的y\n    var top = 0;\n    // 缓存viewport当前宽度\n    var width = 0;\n    // 缓存viewport当前高度\n    var height = 0;\n    var ratio = 0;\n    var zoom = 0;\n    var dragstartevent = isSafari || isFireFox ? 'mousedown' : 'dragstart';\n    viewport.addEventListener(dragstartevent, function (e) {\n      var _a, _b;\n      if (e.dataTransfer) {\n        var img = new Image();\n        img.src = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' %3E%3Cpath /%3E%3C/svg%3E\";\n        (_b = (_a = e.dataTransfer).setDragImage) === null || _b === void 0 ? void 0 : _b.call(_a, img, 0, 0);\n        try {\n          e.dataTransfer.setData('text/html', 'view-port-minimap');\n        } catch (_c) {\n          // support IE\n          e.dataTransfer.setData('text', 'view-port-minimap');\n        }\n      }\n      cfgs.refresh = false;\n      if (e.target !== viewport) {\n        return;\n      }\n      // 如果视口已经最大了，不需要拖拽\n      var style = viewport.style;\n      left = parseInt(style.left, 10);\n      top = parseInt(style.top, 10);\n      width = parseInt(style.width, 10);\n      height = parseInt(style.height, 10);\n      if (width > size[0] || height > size[1]) {\n        return;\n      }\n      zoom = graph.getZoom();\n      ratio = _this.get('ratio');\n      dragging = true;\n      x = e.clientX;\n      y = e.clientY;\n    }, false);\n    var dragListener = function dragListener(e) {\n      if (!dragging || isNil(e.clientX) || isNil(e.clientY)) {\n        return;\n      }\n      var dx = x - e.clientX;\n      var dy = y - e.clientY;\n      // 若视口移动到最左边或最右边了,仅移动到边界\n      if (left - dx < 0 || left - dx + width >= size[0]) {\n        dx = 0;\n      }\n      // 若视口移动到最上或最下边了，仅移动到边界\n      if (top - dy < 0 || top - dy + height >= size[1]) {\n        dy = 0;\n      }\n      left -= dx;\n      top -= dy;\n      // 先移动视口，避免移动到边上以后出现视口闪烁\n      modifyCSS(viewport, {\n        left: \"\".concat(left, \"px\"),\n        top: \"\".concat(top, \"px\")\n      });\n      // graph 移动需要偏移量 dx/dy * 缩放比例才会得到正确的移动距离\n      graph.translate(dx * zoom / ratio, dy * zoom / ratio);\n      x = e.clientX;\n      y = e.clientY;\n    };\n    if (!isSafari && !isFireFox) {\n      viewport.addEventListener('drag', dragListener, false);\n    }\n    var dragendListener = function dragendListener() {\n      dragging = false;\n      cfgs.refresh = true;\n    };\n    var dragendevent = isSafari || isFireFox ? 'mouseup' : 'dragend';\n    viewport.addEventListener(dragendevent, dragendListener, false);\n    containerDOM.addEventListener('mouseleave', dragendListener);\n    containerDOM.addEventListener('mouseup', dragendListener);\n    if (isSafari || isFireFox) {\n      containerDOM.addEventListener('mousemove', dragListener, false);\n    }\n    this.set('viewport', viewport);\n    containerDOM.appendChild(viewport);\n  };\n  /**\n   * 更新 viewport 视图\n   */\n  MiniMap.prototype.updateViewport = function () {\n    if (this.destroyed) return;\n    var ratio = this.get('ratio');\n    var totaldx = this.get('totaldx');\n    var totaldy = this.get('totaldy');\n    var graph = this.get('graph');\n    var size = this.get('size');\n    var graphCanvasEl = graph.get('canvas').get('el');\n    var graphWidth = graph.get('width') || graphCanvasEl.scrollWidth || 500;\n    var graphHeight = graph.get('height') || graphCanvasEl.scrollHeight || 500;\n    var topLeft = graph.getPointByCanvas(0, 0);\n    var bottomRight = graph.getPointByCanvas(graphWidth, graphHeight);\n    var viewport = this.get('viewport');\n    if (!viewport) {\n      this.initViewport();\n    }\n    // viewport宽高,左上角点的计算\n    var width = (bottomRight.x - topLeft.x) * ratio;\n    var height = (bottomRight.y - topLeft.y) * ratio;\n    var left = topLeft.x * ratio + totaldx;\n    var top = topLeft.y * ratio + totaldy;\n    var right = left + width;\n    var bottom = top + height;\n    if (left < 0) {\n      width += left;\n      left = 0;\n    }\n    if (right > size[0]) {\n      width = width - (right - size[0]);\n    }\n    if (top < 0) {\n      height += top;\n      top = 0;\n    }\n    if (bottom > size[1]) {\n      height = height - (bottom - size[1]);\n    }\n    // 缓存目前缩放比，在移动 minimap 视窗时就不用再计算大图的移动量\n    this.set('ratio', ratio);\n    var correctLeft = \"\".concat(left, \"px\");\n    var correctTop = \"\".concat(top, \"px\");\n    modifyCSS(viewport, {\n      left: correctLeft,\n      top: correctTop,\n      width: \"\".concat(width, \"px\"),\n      height: \"\".concat(height, \"px\")\n    });\n  };\n  /**\n   * 将主图上的图形完全复制到小图\n   */\n  MiniMap.prototype.updateGraphShapes = function () {\n    var graph = this._cfgs.graph;\n    var canvas = this.get('canvas');\n    var graphGroup = graph.get('group');\n    if (graphGroup.destroyed) return;\n    canvas.clear();\n    var clonedGroup;\n    if (this.get('hideEdge')) {\n      clonedGroup = canvas.addGroup();\n      graphGroup.get('children').forEach(function (group) {\n        if (group.get('id').includes('-edge')) return;\n        clonedGroup.add(group.clone());\n      });\n    } else {\n      clonedGroup = graphGroup.clone();\n      clonedGroup.resetMatrix();\n      canvas.add(clonedGroup);\n    }\n    // 当 renderer 是 svg，由于渲染引擎的 bug，这里需要将 visible 为 false 的元素手动隐藏\n    var renderer = graph.get('renderer');\n    if (renderer === SVG) {\n      // 递归更新子元素\n      this.updateVisible(clonedGroup);\n    }\n  };\n  // svg 在 canvas.add(clonedGroup) 之后会出现 visible 为 false 的元素被展示出来，需要递归更新\n  MiniMap.prototype.updateVisible = function (ele) {\n    var _this = this;\n    if (!ele.isGroup() && !ele.get('visible')) {\n      ele.hide();\n    } else {\n      var children = ele.get('children');\n      if (!children || !children.length) return;\n      children.forEach(function (child) {\n        if (!child.get('visible')) child.hide();\n        _this.updateVisible(child);\n      });\n    }\n  };\n  // 仅在 minimap 上绘制 keyShape\n  // FIXME 如果用户自定义绘制了其他内容，minimap上就无法画出\n  MiniMap.prototype.updateKeyShapes = function () {\n    var _this = this;\n    var graph = this._cfgs.graph;\n    var canvas = this.get('canvas');\n    var group = canvas.get('children')[0] || canvas.addGroup();\n    if (!this.get('hideEdge')) {\n      each(graph.getEdges(), function (edge) {\n        _this.updateOneEdgeKeyShape(edge, group);\n      });\n    }\n    each(graph.getNodes(), function (node) {\n      _this.updateOneNodeKeyShape(node, group);\n    });\n    var combos = graph.getCombos();\n    if (combos && combos.length) {\n      var comboGroup_1 = group.find(function (e) {\n        return e.get('name') === 'comboGroup';\n      }) || group.addGroup({\n        name: 'comboGroup'\n      });\n      setTimeout(function () {\n        if (_this.destroyed) return;\n        each(combos, function (combo) {\n          _this.updateOneComboKeyShape(combo, comboGroup_1);\n        });\n        comboGroup_1 === null || comboGroup_1 === void 0 ? void 0 : comboGroup_1.sort();\n        comboGroup_1 === null || comboGroup_1 === void 0 ? void 0 : comboGroup_1.toBack();\n        _this.updateCanvas();\n      }, 250);\n    }\n    this.clearDestroyedShapes();\n  };\n  /**\n   * 增加/更新单个元素的 keyShape\n   * @param item ICombo 实例\n   */\n  MiniMap.prototype.updateOneComboKeyShape = function (item, comboGroup) {\n    if (this.destroyed) return;\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    var bbox = item.getBBox(); // 计算了节点父组矩阵的 bbox\n    var cKeyShape = item.get('keyShape').clone();\n    var keyShapeStyle = cKeyShape.attr();\n    var attrs = {\n      x: bbox.centerX,\n      y: bbox.centerY\n    };\n    if (!mappedItem) {\n      mappedItem = cKeyShape;\n      comboGroup.add(mappedItem);\n    } else {\n      attrs = Object.assign(keyShapeStyle, attrs);\n    }\n    var shapeType = mappedItem.get('type');\n    if (shapeType === 'rect' || shapeType === 'image') {\n      attrs.x = bbox.minX;\n      attrs.y = bbox.minY;\n    }\n    mappedItem.attr(attrs);\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    var zIndex = item.getModel().depth;\n    if (!isNaN(zIndex)) mappedItem.set('zIndex', zIndex);\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  /**\n   * 增加/更新单个元素的 keyShape\n   * @param item INode 实例\n   */\n  MiniMap.prototype.updateOneNodeKeyShape = function (item, group) {\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    var bbox = item.getBBox(); // 计算了节点父组矩阵的 bbox\n    var cKeyShape = item.get('keyShape').clone();\n    var keyShapeStyle = cKeyShape.attr();\n    var attrs = {\n      x: bbox.centerX,\n      y: bbox.centerY\n    };\n    if (!mappedItem) {\n      mappedItem = cKeyShape;\n      group.add(mappedItem);\n    } else {\n      attrs = Object.assign(keyShapeStyle, attrs);\n      mappedItem.toFront();\n    }\n    var shapeType = mappedItem.get('type');\n    if (shapeType === 'rect' || shapeType === 'image') {\n      attrs.x = bbox.minX;\n      attrs.y = bbox.minY;\n    }\n    mappedItem.attr(attrs);\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    var zIndex = item.getModel().depth;\n    if (!isNaN(zIndex)) mappedItem.set('zIndex', zIndex);\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  /**\n   * Minimap 中展示自定义的rect，支持用户自定义样式和节点大小\n   */\n  MiniMap.prototype.updateDelegateShapes = function () {\n    var _this = this;\n    var graph = this._cfgs.graph;\n    var canvas = this.get('canvas');\n    var group = canvas.get('children')[0] || canvas.addGroup();\n    // 差量更新 minimap 上的节点和边\n    if (!this.get('hideEdge')) {\n      each(graph.getEdges(), function (edge) {\n        _this.updateOneEdgeKeyShape(edge, group);\n      });\n    }\n    each(graph.getNodes(), function (node) {\n      _this.updateOneNodeDelegateShape(node, group);\n    });\n    var combos = graph.getCombos();\n    if (combos && combos.length) {\n      var comboGroup_2 = group.find(function (e) {\n        return e.get('name') === 'comboGroup';\n      }) || group.addGroup({\n        name: 'comboGroup'\n      });\n      setTimeout(function () {\n        if (_this.destroyed) return;\n        each(combos, function (combo) {\n          _this.updateOneComboKeyShape(combo, comboGroup_2);\n        });\n        comboGroup_2 === null || comboGroup_2 === void 0 ? void 0 : comboGroup_2.sort();\n        comboGroup_2 === null || comboGroup_2 === void 0 ? void 0 : comboGroup_2.toBack();\n        _this.updateCanvas();\n      }, 250);\n    }\n    this.clearDestroyedShapes();\n  };\n  MiniMap.prototype.clearDestroyedShapes = function () {\n    var itemMap = this.get('itemMap') || {};\n    var keys = Object.keys(itemMap);\n    if (!keys || keys.length === 0) return;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      var shape = itemMap[keys[i]];\n      var exist = shape.exist;\n      shape.exist = false;\n      if (!exist) {\n        shape.remove();\n        delete itemMap[keys[i]];\n      }\n    }\n  };\n  /**\n   * 设置只显示 edge 的 keyShape\n   * @param item IEdge 实例\n   */\n  MiniMap.prototype.updateOneEdgeKeyShape = function (item, group) {\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    if (mappedItem) {\n      var path = item.get('keyShape').attr('path');\n      mappedItem.attr('path', path);\n    } else {\n      mappedItem = item.get('keyShape').clone();\n      group.add(mappedItem);\n    }\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  /**\n   * Minimap 中展示自定义的 rect，支持用户自定义样式和节点大小\n   * 增加/更新单个元素\n   * @param item INode 实例\n   */\n  MiniMap.prototype.updateOneNodeDelegateShape = function (item, group) {\n    var delegateStyle = this.get('delegateStyle');\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    var bbox = item.getBBox(); // 计算了节点父组矩阵的 bbox\n    if (mappedItem) {\n      var attrs = {\n        x: bbox.minX,\n        y: bbox.minY,\n        width: bbox.width,\n        height: bbox.height\n      };\n      mappedItem.attr(attrs);\n      mappedItem.toFront();\n    } else {\n      mappedItem = group.addShape('rect', {\n        attrs: __assign({\n          x: bbox.minX,\n          y: bbox.minY,\n          width: bbox.width,\n          height: bbox.height\n        }, delegateStyle),\n        name: 'minimap-node-shape'\n      });\n    }\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  MiniMap.prototype.init = function () {\n    this.initContainer();\n    this.get('graph').on('afterupdateitem', this.handleUpdateCanvas);\n    this.get('graph').on('afteritemstatechange', this.handleUpdateCanvas);\n    this.get('graph').on('afteradditem', this.handleUpdateCanvas);\n    this.get('graph').on('afterremoveitem', this.handleUpdateCanvas);\n    this.get('graph').on('afterrender', this.handleUpdateCanvas);\n    this.get('graph').on('afterlayout', this.handleUpdateCanvas);\n  };\n  /**\n   * 初始化 Minimap 的容器\n   */\n  MiniMap.prototype.initContainer = function () {\n    var self = this;\n    var graph = self.get('graph');\n    var size = self.get('size');\n    var className = self.get('className');\n    var parentNode = self.get('container');\n    var container = createDom(\"<div class='\".concat(className, \"' style='width: \").concat(size[0], \"px; height: \").concat(size[1], \"px; overflow: hidden'></div>\"));\n    if (isString(parentNode)) {\n      parentNode = document.getElementById(parentNode);\n    }\n    if (parentNode) {\n      parentNode.appendChild(container);\n    } else {\n      graph.get('container').appendChild(container);\n    }\n    self.set('container', container);\n    var containerDOM = createDom('<div class=\"g6-minimap-container\" style=\"position: relative;\"></div>');\n    container.appendChild(containerDOM);\n    containerDOM.addEventListener('dragenter', function (e) {\n      e.preventDefault();\n    });\n    containerDOM.addEventListener('dragover', function (e) {\n      e.preventDefault();\n    });\n    var canvas;\n    var renderer = graph.get('renderer');\n    if (renderer === SVG) {\n      canvas = new GSVGCanvas({\n        container: containerDOM,\n        width: size[0],\n        height: size[1]\n      });\n    } else {\n      canvas = new GCanvas({\n        container: containerDOM,\n        width: size[0],\n        height: size[1]\n      });\n    }\n    self.set('canvas', canvas);\n    self.updateCanvas();\n  };\n  MiniMap.prototype.updateCanvas = function () {\n    if (this.destroyed) return;\n    // 如果是在动画，则不刷新视图\n    var isRefresh = this.get('refresh');\n    if (!isRefresh) {\n      return;\n    }\n    var graph = this.get('graph');\n    if (graph.get('destroyed')) {\n      return;\n    }\n    // 如果是视口变换，也不刷新视图，但是需要重置视口大小和位置\n    if (this.get('viewportChange')) {\n      this.set('viewportChange', false);\n      this.updateViewport();\n    }\n    var size = this.get('size'); // 用户定义的 minimap size\n    var canvas = this.get('canvas'); // minimap 的 canvas\n    var type = this.get('type'); // minimap 的类型\n    var padding = this.get('padding'); // 用户额定义的 minimap 的 padding\n    if (canvas.destroyed) {\n      return;\n    }\n    switch (type) {\n      case DEFAULT_MODE:\n        this.updateGraphShapes();\n        break;\n      case KEYSHAPE_MODE:\n        this.updateKeyShapes();\n        break;\n      case DELEGATE_MODE:\n        // 得到的节点直接带有 x 和 y，每个节点不存在父 group，即每个节点位置不由父 group 控制\n        this.updateDelegateShapes();\n        break;\n      default:\n        break;\n    }\n    var group = canvas.get('children')[0];\n    if (!group) return;\n    group.resetMatrix();\n    // 该 bbox 是准确的，不计算 matrix 的包围盒\n    var bbox = group.getCanvasBBox();\n    var graphBBox = graph.get('canvas').getCanvasBBox(); // 主图的 bbox\n    var graphZoom = graph.getZoom() || 1;\n    var width = graphBBox.width / graphZoom;\n    var height = graphBBox.height / graphZoom;\n    if (Number.isFinite(bbox.width)) {\n      // 刷新后bbox可能会变，需要重置画布矩阵以缩放到合适的大小\n      width = max(bbox.width, width);\n      height = max(bbox.height, height);\n    }\n    width += 2 * padding;\n    height += 2 * padding;\n    var ratio = Math.min(size[0] / width, size[1] / height);\n    var matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var minX = 0;\n    var minY = 0;\n    // 平移到左上角\n    if (Number.isFinite(bbox.minX)) {\n      minX = -bbox.minX;\n    }\n    if (Number.isFinite(bbox.minY)) {\n      minY = -bbox.minY;\n    }\n    // 缩放到适合视口后, 平移到画布中心\n    var dx = (size[0] - (width - 2 * padding) * ratio) / 2;\n    var dy = (size[1] - (height - 2 * padding) * ratio) / 2;\n    matrix = transform(matrix, [['t', minX, minY], ['s', ratio, ratio], ['t', dx, dy] // 移动到画布中心\n    ]);\n\n    group.setMatrix(matrix);\n    // 更新minimap视口\n    this.set('ratio', ratio);\n    this.set('totaldx', dx + minX * ratio);\n    this.set('totaldy', dy + minY * ratio);\n    this.set('dx', dx);\n    this.set('dy', dy);\n    this.updateViewport();\n  };\n  /**\n   * 获取minimap的画布\n   * @return {GCanvas} G的canvas实例\n   */\n  MiniMap.prototype.getCanvas = function () {\n    return this.get('canvas');\n  };\n  /**\n   * 获取minimap的窗口\n   * @return {HTMLElement} 窗口的dom实例\n   */\n  MiniMap.prototype.getViewport = function () {\n    return this.get('viewport');\n  };\n  /**\n   * 获取minimap的容器dom\n   * @return {HTMLElement} dom\n   */\n  MiniMap.prototype.getContainer = function () {\n    return this.get('container');\n  };\n  MiniMap.prototype.destroy = function () {\n    var _a;\n    (_a = this.get('canvas')) === null || _a === void 0 ? void 0 : _a.destroy();\n    var container = this.get('container');\n    if (container === null || container === void 0 ? void 0 : container.parentNode) container.parentNode.removeChild(container);\n  };\n  return MiniMap;\n}(Base);\nexport default MiniMap;","map":{"version":3,"names":["__extends","_extendStatics","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","Canvas","GCanvas","GSVGCanvas","isString","isNil","each","debounce","createDom","modifyCSS","ext","Base","max","Math","transform","DEFAULT_MODE","KEYSHAPE_MODE","DELEGATE_MODE","SVG","MiniMap","_super","config","_this","handleUpdateCanvas","event","self","destroyed","updateCanvas","getDefaultCfgs","container","className","viewportClassName","type","padding","size","delegateStyle","fill","stroke","refresh","hideEdge","getEvents","beforepaint","beforeanimate","afteranimate","viewportchange","disableRefresh","set","enableRefresh","disableOneRefresh","initViewport","cfgs","_cfgs","graph","canvas","get","containerDOM","isFireFox","navigator","userAgent","toLowerCase","indexOf","isSafari","viewport","concat","x","y","dragging","left","top","width","height","ratio","zoom","dragstartevent","addEventListener","e","_a","_b","dataTransfer","img","Image","src","setDragImage","setData","_c","target","style","parseInt","getZoom","clientX","clientY","dragListener","dx","dy","translate","dragendListener","dragendevent","appendChild","updateViewport","totaldx","totaldy","graphCanvasEl","graphWidth","scrollWidth","graphHeight","scrollHeight","topLeft","getPointByCanvas","bottomRight","right","bottom","correctLeft","correctTop","updateGraphShapes","graphGroup","clear","clonedGroup","addGroup","forEach","group","includes","add","clone","resetMatrix","renderer","updateVisible","ele","isGroup","hide","children","child","updateKeyShapes","getEdges","edge","updateOneEdgeKeyShape","getNodes","node","updateOneNodeKeyShape","combos","getCombos","comboGroup_1","find","name","setTimeout","combo","updateOneComboKeyShape","sort","toBack","clearDestroyedShapes","item","comboGroup","itemMap","mappedItem","bbox","getBBox","cKeyShape","keyShapeStyle","attr","attrs","centerX","centerY","shapeType","minX","minY","isVisible","show","exist","zIndex","getModel","depth","isNaN","toFront","updateDelegateShapes","updateOneNodeDelegateShape","comboGroup_2","keys","shape","remove","path","addShape","init","initContainer","on","parentNode","document","getElementById","preventDefault","isRefresh","getCanvasBBox","graphBBox","graphZoom","Number","isFinite","min","matrix","setMatrix","getCanvas","getViewport","getContainer","destroy","removeChild"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-plugin/es/minimap/index.js"],"sourcesContent":["var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { Canvas as GCanvas } from '@antv/g-canvas';\nimport { Canvas as GSVGCanvas } from '@antv/g-svg';\nimport { isString, isNil, each, debounce } from '@antv/util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { ext } from '@antv/matrix-util';\nimport Base from '../base';\nvar max = Math.max;\nvar transform = ext.transform;\nvar DEFAULT_MODE = 'default';\nvar KEYSHAPE_MODE = 'keyShape';\nvar DELEGATE_MODE = 'delegate';\nvar SVG = 'svg';\nvar MiniMap = /** @class */function (_super) {\n  __extends(MiniMap, _super);\n  function MiniMap(config) {\n    var _this = _super.call(this, config) || this;\n    /**\n     * 主图更新的监听函数，使用 debounce 减少渲染频率\n     * e.g. 拖拽节点只会在松手后的 100ms 后执行 updateCanvas\n     * e.g. render 时大量 addItem 也只会执行一次 updateCanvas\n     */\n    _this.handleUpdateCanvas = debounce(function (event) {\n      var self = _this;\n      if (self.destroyed) return;\n      self.updateCanvas();\n    }, 100, false);\n    return _this;\n  }\n  MiniMap.prototype.getDefaultCfgs = function () {\n    return {\n      container: null,\n      className: 'g6-minimap',\n      viewportClassName: 'g6-minimap-viewport',\n      // Minimap 中默认展示和主图一样的内容，KeyShape 只展示节点和边的 key shape 部分，delegate表示展示自定义的rect，用户可自定义样式\n      type: 'default',\n      padding: 50,\n      size: [200, 120],\n      delegateStyle: {\n        fill: '#40a9ff',\n        stroke: '#096dd9'\n      },\n      refresh: true,\n      hideEdge: false\n    };\n  };\n  MiniMap.prototype.getEvents = function () {\n    return {\n      beforepaint: 'updateViewport',\n      beforeanimate: 'disableRefresh',\n      afteranimate: 'enableRefresh',\n      viewportchange: 'disableOneRefresh'\n    };\n  };\n  // 若是正在进行动画，不刷新缩略图\n  MiniMap.prototype.disableRefresh = function () {\n    this.set('refresh', false);\n  };\n  MiniMap.prototype.enableRefresh = function () {\n    this.set('refresh', true);\n    this.updateCanvas();\n  };\n  MiniMap.prototype.disableOneRefresh = function () {\n    this.set('viewportChange', true);\n  };\n  MiniMap.prototype.initViewport = function () {\n    var _this = this;\n    var cfgs = this._cfgs;\n    var size = cfgs.size,\n      graph = cfgs.graph;\n    if (this.destroyed) return;\n    var canvas = this.get('canvas');\n    var containerDOM = canvas.get('container');\n    var isFireFox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n    var isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1;\n    var viewport = createDom(\"\\n      <div\\n        class=\".concat(cfgs.viewportClassName, \"\\n        style='position:absolute;\\n          left:0;\\n          top:0;\\n          box-sizing:border-box;\\n          outline: 2px solid #1980ff;\\n          cursor:move'\\n        draggable=\").concat(isSafari || isFireFox ? false : true, \"\\n      </div>\"));\n    // 计算拖拽水平方向距离\n    var x = 0;\n    // 计算拖拽垂直方向距离\n    var y = 0;\n    // 是否在拖拽minimap的视口\n    var dragging = false;\n    // 缓存viewport当前对于画布的x\n    var left = 0;\n    // 缓存viewport当前对于画布的y\n    var top = 0;\n    // 缓存viewport当前宽度\n    var width = 0;\n    // 缓存viewport当前高度\n    var height = 0;\n    var ratio = 0;\n    var zoom = 0;\n    var dragstartevent = isSafari || isFireFox ? 'mousedown' : 'dragstart';\n    viewport.addEventListener(dragstartevent, function (e) {\n      var _a, _b;\n      if (e.dataTransfer) {\n        var img = new Image();\n        img.src = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' %3E%3Cpath /%3E%3C/svg%3E\";\n        (_b = (_a = e.dataTransfer).setDragImage) === null || _b === void 0 ? void 0 : _b.call(_a, img, 0, 0);\n        try {\n          e.dataTransfer.setData('text/html', 'view-port-minimap');\n        } catch (_c) {\n          // support IE\n          e.dataTransfer.setData('text', 'view-port-minimap');\n        }\n      }\n      cfgs.refresh = false;\n      if (e.target !== viewport) {\n        return;\n      }\n      // 如果视口已经最大了，不需要拖拽\n      var style = viewport.style;\n      left = parseInt(style.left, 10);\n      top = parseInt(style.top, 10);\n      width = parseInt(style.width, 10);\n      height = parseInt(style.height, 10);\n      if (width > size[0] || height > size[1]) {\n        return;\n      }\n      zoom = graph.getZoom();\n      ratio = _this.get('ratio');\n      dragging = true;\n      x = e.clientX;\n      y = e.clientY;\n    }, false);\n    var dragListener = function dragListener(e) {\n      if (!dragging || isNil(e.clientX) || isNil(e.clientY)) {\n        return;\n      }\n      var dx = x - e.clientX;\n      var dy = y - e.clientY;\n      // 若视口移动到最左边或最右边了,仅移动到边界\n      if (left - dx < 0 || left - dx + width >= size[0]) {\n        dx = 0;\n      }\n      // 若视口移动到最上或最下边了，仅移动到边界\n      if (top - dy < 0 || top - dy + height >= size[1]) {\n        dy = 0;\n      }\n      left -= dx;\n      top -= dy;\n      // 先移动视口，避免移动到边上以后出现视口闪烁\n      modifyCSS(viewport, {\n        left: \"\".concat(left, \"px\"),\n        top: \"\".concat(top, \"px\")\n      });\n      // graph 移动需要偏移量 dx/dy * 缩放比例才会得到正确的移动距离\n      graph.translate(dx * zoom / ratio, dy * zoom / ratio);\n      x = e.clientX;\n      y = e.clientY;\n    };\n    if (!isSafari && !isFireFox) {\n      viewport.addEventListener('drag', dragListener, false);\n    }\n    var dragendListener = function dragendListener() {\n      dragging = false;\n      cfgs.refresh = true;\n    };\n    var dragendevent = isSafari || isFireFox ? 'mouseup' : 'dragend';\n    viewport.addEventListener(dragendevent, dragendListener, false);\n    containerDOM.addEventListener('mouseleave', dragendListener);\n    containerDOM.addEventListener('mouseup', dragendListener);\n    if (isSafari || isFireFox) {\n      containerDOM.addEventListener('mousemove', dragListener, false);\n    }\n    this.set('viewport', viewport);\n    containerDOM.appendChild(viewport);\n  };\n  /**\n   * 更新 viewport 视图\n   */\n  MiniMap.prototype.updateViewport = function () {\n    if (this.destroyed) return;\n    var ratio = this.get('ratio');\n    var totaldx = this.get('totaldx');\n    var totaldy = this.get('totaldy');\n    var graph = this.get('graph');\n    var size = this.get('size');\n    var graphCanvasEl = graph.get('canvas').get('el');\n    var graphWidth = graph.get('width') || graphCanvasEl.scrollWidth || 500;\n    var graphHeight = graph.get('height') || graphCanvasEl.scrollHeight || 500;\n    var topLeft = graph.getPointByCanvas(0, 0);\n    var bottomRight = graph.getPointByCanvas(graphWidth, graphHeight);\n    var viewport = this.get('viewport');\n    if (!viewport) {\n      this.initViewport();\n    }\n    // viewport宽高,左上角点的计算\n    var width = (bottomRight.x - topLeft.x) * ratio;\n    var height = (bottomRight.y - topLeft.y) * ratio;\n    var left = topLeft.x * ratio + totaldx;\n    var top = topLeft.y * ratio + totaldy;\n    var right = left + width;\n    var bottom = top + height;\n    if (left < 0) {\n      width += left;\n      left = 0;\n    }\n    if (right > size[0]) {\n      width = width - (right - size[0]);\n    }\n    if (top < 0) {\n      height += top;\n      top = 0;\n    }\n    if (bottom > size[1]) {\n      height = height - (bottom - size[1]);\n    }\n    // 缓存目前缩放比，在移动 minimap 视窗时就不用再计算大图的移动量\n    this.set('ratio', ratio);\n    var correctLeft = \"\".concat(left, \"px\");\n    var correctTop = \"\".concat(top, \"px\");\n    modifyCSS(viewport, {\n      left: correctLeft,\n      top: correctTop,\n      width: \"\".concat(width, \"px\"),\n      height: \"\".concat(height, \"px\")\n    });\n  };\n  /**\n   * 将主图上的图形完全复制到小图\n   */\n  MiniMap.prototype.updateGraphShapes = function () {\n    var graph = this._cfgs.graph;\n    var canvas = this.get('canvas');\n    var graphGroup = graph.get('group');\n    if (graphGroup.destroyed) return;\n    canvas.clear();\n    var clonedGroup;\n    if (this.get('hideEdge')) {\n      clonedGroup = canvas.addGroup();\n      graphGroup.get('children').forEach(function (group) {\n        if (group.get('id').includes('-edge')) return;\n        clonedGroup.add(group.clone());\n      });\n    } else {\n      clonedGroup = graphGroup.clone();\n      clonedGroup.resetMatrix();\n      canvas.add(clonedGroup);\n    }\n    // 当 renderer 是 svg，由于渲染引擎的 bug，这里需要将 visible 为 false 的元素手动隐藏\n    var renderer = graph.get('renderer');\n    if (renderer === SVG) {\n      // 递归更新子元素\n      this.updateVisible(clonedGroup);\n    }\n  };\n  // svg 在 canvas.add(clonedGroup) 之后会出现 visible 为 false 的元素被展示出来，需要递归更新\n  MiniMap.prototype.updateVisible = function (ele) {\n    var _this = this;\n    if (!ele.isGroup() && !ele.get('visible')) {\n      ele.hide();\n    } else {\n      var children = ele.get('children');\n      if (!children || !children.length) return;\n      children.forEach(function (child) {\n        if (!child.get('visible')) child.hide();\n        _this.updateVisible(child);\n      });\n    }\n  };\n  // 仅在 minimap 上绘制 keyShape\n  // FIXME 如果用户自定义绘制了其他内容，minimap上就无法画出\n  MiniMap.prototype.updateKeyShapes = function () {\n    var _this = this;\n    var graph = this._cfgs.graph;\n    var canvas = this.get('canvas');\n    var group = canvas.get('children')[0] || canvas.addGroup();\n    if (!this.get('hideEdge')) {\n      each(graph.getEdges(), function (edge) {\n        _this.updateOneEdgeKeyShape(edge, group);\n      });\n    }\n    each(graph.getNodes(), function (node) {\n      _this.updateOneNodeKeyShape(node, group);\n    });\n    var combos = graph.getCombos();\n    if (combos && combos.length) {\n      var comboGroup_1 = group.find(function (e) {\n        return e.get('name') === 'comboGroup';\n      }) || group.addGroup({\n        name: 'comboGroup'\n      });\n      setTimeout(function () {\n        if (_this.destroyed) return;\n        each(combos, function (combo) {\n          _this.updateOneComboKeyShape(combo, comboGroup_1);\n        });\n        comboGroup_1 === null || comboGroup_1 === void 0 ? void 0 : comboGroup_1.sort();\n        comboGroup_1 === null || comboGroup_1 === void 0 ? void 0 : comboGroup_1.toBack();\n        _this.updateCanvas();\n      }, 250);\n    }\n    this.clearDestroyedShapes();\n  };\n  /**\n   * 增加/更新单个元素的 keyShape\n   * @param item ICombo 实例\n   */\n  MiniMap.prototype.updateOneComboKeyShape = function (item, comboGroup) {\n    if (this.destroyed) return;\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    var bbox = item.getBBox(); // 计算了节点父组矩阵的 bbox\n    var cKeyShape = item.get('keyShape').clone();\n    var keyShapeStyle = cKeyShape.attr();\n    var attrs = {\n      x: bbox.centerX,\n      y: bbox.centerY\n    };\n    if (!mappedItem) {\n      mappedItem = cKeyShape;\n      comboGroup.add(mappedItem);\n    } else {\n      attrs = Object.assign(keyShapeStyle, attrs);\n    }\n    var shapeType = mappedItem.get('type');\n    if (shapeType === 'rect' || shapeType === 'image') {\n      attrs.x = bbox.minX;\n      attrs.y = bbox.minY;\n    }\n    mappedItem.attr(attrs);\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    var zIndex = item.getModel().depth;\n    if (!isNaN(zIndex)) mappedItem.set('zIndex', zIndex);\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  /**\n   * 增加/更新单个元素的 keyShape\n   * @param item INode 实例\n   */\n  MiniMap.prototype.updateOneNodeKeyShape = function (item, group) {\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    var bbox = item.getBBox(); // 计算了节点父组矩阵的 bbox\n    var cKeyShape = item.get('keyShape').clone();\n    var keyShapeStyle = cKeyShape.attr();\n    var attrs = {\n      x: bbox.centerX,\n      y: bbox.centerY\n    };\n    if (!mappedItem) {\n      mappedItem = cKeyShape;\n      group.add(mappedItem);\n    } else {\n      attrs = Object.assign(keyShapeStyle, attrs);\n      mappedItem.toFront();\n    }\n    var shapeType = mappedItem.get('type');\n    if (shapeType === 'rect' || shapeType === 'image') {\n      attrs.x = bbox.minX;\n      attrs.y = bbox.minY;\n    }\n    mappedItem.attr(attrs);\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    var zIndex = item.getModel().depth;\n    if (!isNaN(zIndex)) mappedItem.set('zIndex', zIndex);\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  /**\n   * Minimap 中展示自定义的rect，支持用户自定义样式和节点大小\n   */\n  MiniMap.prototype.updateDelegateShapes = function () {\n    var _this = this;\n    var graph = this._cfgs.graph;\n    var canvas = this.get('canvas');\n    var group = canvas.get('children')[0] || canvas.addGroup();\n    // 差量更新 minimap 上的节点和边\n    if (!this.get('hideEdge')) {\n      each(graph.getEdges(), function (edge) {\n        _this.updateOneEdgeKeyShape(edge, group);\n      });\n    }\n    each(graph.getNodes(), function (node) {\n      _this.updateOneNodeDelegateShape(node, group);\n    });\n    var combos = graph.getCombos();\n    if (combos && combos.length) {\n      var comboGroup_2 = group.find(function (e) {\n        return e.get('name') === 'comboGroup';\n      }) || group.addGroup({\n        name: 'comboGroup'\n      });\n      setTimeout(function () {\n        if (_this.destroyed) return;\n        each(combos, function (combo) {\n          _this.updateOneComboKeyShape(combo, comboGroup_2);\n        });\n        comboGroup_2 === null || comboGroup_2 === void 0 ? void 0 : comboGroup_2.sort();\n        comboGroup_2 === null || comboGroup_2 === void 0 ? void 0 : comboGroup_2.toBack();\n        _this.updateCanvas();\n      }, 250);\n    }\n    this.clearDestroyedShapes();\n  };\n  MiniMap.prototype.clearDestroyedShapes = function () {\n    var itemMap = this.get('itemMap') || {};\n    var keys = Object.keys(itemMap);\n    if (!keys || keys.length === 0) return;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      var shape = itemMap[keys[i]];\n      var exist = shape.exist;\n      shape.exist = false;\n      if (!exist) {\n        shape.remove();\n        delete itemMap[keys[i]];\n      }\n    }\n  };\n  /**\n   * 设置只显示 edge 的 keyShape\n   * @param item IEdge 实例\n   */\n  MiniMap.prototype.updateOneEdgeKeyShape = function (item, group) {\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    if (mappedItem) {\n      var path = item.get('keyShape').attr('path');\n      mappedItem.attr('path', path);\n    } else {\n      mappedItem = item.get('keyShape').clone();\n      group.add(mappedItem);\n    }\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  /**\n   * Minimap 中展示自定义的 rect，支持用户自定义样式和节点大小\n   * 增加/更新单个元素\n   * @param item INode 实例\n   */\n  MiniMap.prototype.updateOneNodeDelegateShape = function (item, group) {\n    var delegateStyle = this.get('delegateStyle');\n    var itemMap = this.get('itemMap') || {};\n    // 差量更新 minimap 上的一个节点，对应主图的 item\n    var mappedItem = itemMap[item.get('id')];\n    var bbox = item.getBBox(); // 计算了节点父组矩阵的 bbox\n    if (mappedItem) {\n      var attrs = {\n        x: bbox.minX,\n        y: bbox.minY,\n        width: bbox.width,\n        height: bbox.height\n      };\n      mappedItem.attr(attrs);\n      mappedItem.toFront();\n    } else {\n      mappedItem = group.addShape('rect', {\n        attrs: __assign({\n          x: bbox.minX,\n          y: bbox.minY,\n          width: bbox.width,\n          height: bbox.height\n        }, delegateStyle),\n        name: 'minimap-node-shape'\n      });\n    }\n    if (!item.isVisible()) mappedItem.hide();else mappedItem.show();\n    mappedItem.exist = true;\n    itemMap[item.get('id')] = mappedItem;\n    this.set('itemMap', itemMap);\n  };\n  MiniMap.prototype.init = function () {\n    this.initContainer();\n    this.get('graph').on('afterupdateitem', this.handleUpdateCanvas);\n    this.get('graph').on('afteritemstatechange', this.handleUpdateCanvas);\n    this.get('graph').on('afteradditem', this.handleUpdateCanvas);\n    this.get('graph').on('afterremoveitem', this.handleUpdateCanvas);\n    this.get('graph').on('afterrender', this.handleUpdateCanvas);\n    this.get('graph').on('afterlayout', this.handleUpdateCanvas);\n  };\n  /**\n   * 初始化 Minimap 的容器\n   */\n  MiniMap.prototype.initContainer = function () {\n    var self = this;\n    var graph = self.get('graph');\n    var size = self.get('size');\n    var className = self.get('className');\n    var parentNode = self.get('container');\n    var container = createDom(\"<div class='\".concat(className, \"' style='width: \").concat(size[0], \"px; height: \").concat(size[1], \"px; overflow: hidden'></div>\"));\n    if (isString(parentNode)) {\n      parentNode = document.getElementById(parentNode);\n    }\n    if (parentNode) {\n      parentNode.appendChild(container);\n    } else {\n      graph.get('container').appendChild(container);\n    }\n    self.set('container', container);\n    var containerDOM = createDom('<div class=\"g6-minimap-container\" style=\"position: relative;\"></div>');\n    container.appendChild(containerDOM);\n    containerDOM.addEventListener('dragenter', function (e) {\n      e.preventDefault();\n    });\n    containerDOM.addEventListener('dragover', function (e) {\n      e.preventDefault();\n    });\n    var canvas;\n    var renderer = graph.get('renderer');\n    if (renderer === SVG) {\n      canvas = new GSVGCanvas({\n        container: containerDOM,\n        width: size[0],\n        height: size[1]\n      });\n    } else {\n      canvas = new GCanvas({\n        container: containerDOM,\n        width: size[0],\n        height: size[1]\n      });\n    }\n    self.set('canvas', canvas);\n    self.updateCanvas();\n  };\n  MiniMap.prototype.updateCanvas = function () {\n    if (this.destroyed) return;\n    // 如果是在动画，则不刷新视图\n    var isRefresh = this.get('refresh');\n    if (!isRefresh) {\n      return;\n    }\n    var graph = this.get('graph');\n    if (graph.get('destroyed')) {\n      return;\n    }\n    // 如果是视口变换，也不刷新视图，但是需要重置视口大小和位置\n    if (this.get('viewportChange')) {\n      this.set('viewportChange', false);\n      this.updateViewport();\n    }\n    var size = this.get('size'); // 用户定义的 minimap size\n    var canvas = this.get('canvas'); // minimap 的 canvas\n    var type = this.get('type'); // minimap 的类型\n    var padding = this.get('padding'); // 用户额定义的 minimap 的 padding\n    if (canvas.destroyed) {\n      return;\n    }\n    switch (type) {\n      case DEFAULT_MODE:\n        this.updateGraphShapes();\n        break;\n      case KEYSHAPE_MODE:\n        this.updateKeyShapes();\n        break;\n      case DELEGATE_MODE:\n        // 得到的节点直接带有 x 和 y，每个节点不存在父 group，即每个节点位置不由父 group 控制\n        this.updateDelegateShapes();\n        break;\n      default:\n        break;\n    }\n    var group = canvas.get('children')[0];\n    if (!group) return;\n    group.resetMatrix();\n    // 该 bbox 是准确的，不计算 matrix 的包围盒\n    var bbox = group.getCanvasBBox();\n    var graphBBox = graph.get('canvas').getCanvasBBox(); // 主图的 bbox\n    var graphZoom = graph.getZoom() || 1;\n    var width = graphBBox.width / graphZoom;\n    var height = graphBBox.height / graphZoom;\n    if (Number.isFinite(bbox.width)) {\n      // 刷新后bbox可能会变，需要重置画布矩阵以缩放到合适的大小\n      width = max(bbox.width, width);\n      height = max(bbox.height, height);\n    }\n    width += 2 * padding;\n    height += 2 * padding;\n    var ratio = Math.min(size[0] / width, size[1] / height);\n    var matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var minX = 0;\n    var minY = 0;\n    // 平移到左上角\n    if (Number.isFinite(bbox.minX)) {\n      minX = -bbox.minX;\n    }\n    if (Number.isFinite(bbox.minY)) {\n      minY = -bbox.minY;\n    }\n    // 缩放到适合视口后, 平移到画布中心\n    var dx = (size[0] - (width - 2 * padding) * ratio) / 2;\n    var dy = (size[1] - (height - 2 * padding) * ratio) / 2;\n    matrix = transform(matrix, [['t', minX, minY], ['s', ratio, ratio], ['t', dx, dy] // 移动到画布中心\n    ]);\n\n    group.setMatrix(matrix);\n    // 更新minimap视口\n    this.set('ratio', ratio);\n    this.set('totaldx', dx + minX * ratio);\n    this.set('totaldy', dy + minY * ratio);\n    this.set('dx', dx);\n    this.set('dy', dy);\n    this.updateViewport();\n  };\n  /**\n   * 获取minimap的画布\n   * @return {GCanvas} G的canvas实例\n   */\n  MiniMap.prototype.getCanvas = function () {\n    return this.get('canvas');\n  };\n  /**\n   * 获取minimap的窗口\n   * @return {HTMLElement} 窗口的dom实例\n   */\n  MiniMap.prototype.getViewport = function () {\n    return this.get('viewport');\n  };\n  /**\n   * 获取minimap的容器dom\n   * @return {HTMLElement} dom\n   */\n  MiniMap.prototype.getContainer = function () {\n    return this.get('container');\n  };\n  MiniMap.prototype.destroy = function () {\n    var _a;\n    (_a = this.get('canvas')) === null || _a === void 0 ? void 0 : _a.destroy();\n    var container = this.get('container');\n    if (container === null || container === void 0 ? void 0 : container.parentNode) container.parentNode.removeChild(container);\n  };\n  return MiniMap;\n}(Base);\nexport default MiniMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}