{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n/**\n * 柱形图\n */\nvar Column = /** @class */function (_super) {\n  __extends(Column, _super);\n  function Column() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'column';\n    return _this;\n  }\n  /**\n   * 获取 柱形图 默认配置项\n   * 供外部使用\n   */\n  Column.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   */\n  Column.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = this.options,\n      yField = _a.yField,\n      xField = _a.xField,\n      isPercent = _a.isPercent;\n    var _b = this,\n      chart = _b.chart,\n      options = _b.options;\n    meta({\n      chart: chart,\n      options: options\n    });\n    this.chart.changeData(getDataWhetherPercentage(data, yField, xField, yField, isPercent));\n  };\n  /**\n   * 获取 柱形图 默认配置\n   */\n  Column.prototype.getDefaultOptions = function () {\n    return Column.getDefaultOptions();\n  };\n  /**\n   * 获取 柱形图 的适配器\n   */\n  Column.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Column;\n}(Plot);\nexport { Column };","map":{"version":3,"names":["Plot","getDataWhetherPercentage","adaptor","meta","DEFAULT_OPTIONS","Column","_super","__extends","_this","apply","arguments","type","getDefaultOptions","prototype","changeData","data","updateOption","_a","options","yField","xField","isPercent","_b","chart","getSchemaAdaptor"],"sources":["../../../src/plots/column/index.ts"],"sourcesContent":["import { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { ColumnOptions } from './types';\n\nexport type { ColumnOptions };\n\n/**\n * 柱形图\n */\nexport class Column extends Plot<ColumnOptions> {\n  /**\n   * 获取 柱形图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<ColumnOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'column';\n\n  /**\n   * @override\n   */\n  public changeData(data: ColumnOptions['data']) {\n    this.updateOption({ data });\n    const { yField, xField, isPercent } = this.options;\n    const { chart, options } = this;\n    meta({ chart, options });\n    this.chart.changeData(getDataWhetherPercentage(data, yField, xField, yField, isPercent));\n  }\n\n  /**\n   * 获取 柱形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Column.getDefaultOptions();\n  }\n\n  /**\n   * 获取 柱形图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<ColumnOptions> {\n    return adaptor;\n  }\n}\n"],"mappings":";AACA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,OAAO,EAAEC,IAAI,QAAQ,WAAW;AACzC,SAASC,eAAe,QAAQ,aAAa;AAK7C;;;AAGA,IAAAC,MAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAA5B,SAAAD,OAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IASE;IACgBF,KAAA,CAAAG,IAAI,GAAW,QAAQ;;EA0BzC;EAnCE;;;;EAION,MAAA,CAAAO,iBAAiB,GAAxB;IACE,OAAOR,eAAe;EACxB,CAAC;EAKD;;;EAGOC,MAAA,CAAAQ,SAAA,CAAAC,UAAU,GAAjB,UAAkBC,IAA2B;IAC3C,IAAI,CAACC,YAAY,CAAC;MAAED,IAAI,EAAAA;IAAA,CAAE,CAAC;IACrB,IAAAE,EAAA,GAAgC,IAAI,CAACC,OAAO;MAA1CC,MAAM,GAAAF,EAAA,CAAAE,MAAA;MAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;MAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAiB;IAC5C,IAAAC,EAAA,GAAqB,IAAI;MAAvBC,KAAK,GAAAD,EAAA,CAAAC,KAAA;MAAEL,OAAO,GAAAI,EAAA,CAAAJ,OAAS;IAC/Bf,IAAI,CAAC;MAAEoB,KAAK,EAAAA,KAAA;MAAEL,OAAO,EAAAA;IAAA,CAAE,CAAC;IACxB,IAAI,CAACK,KAAK,CAACT,UAAU,CAACb,wBAAwB,CAACc,IAAI,EAAEI,MAAM,EAAEC,MAAM,EAAED,MAAM,EAAEE,SAAS,CAAC,CAAC;EAC1F,CAAC;EAED;;;EAGUhB,MAAA,CAAAQ,SAAA,CAAAD,iBAAiB,GAA3B;IACE,OAAOP,MAAM,CAACO,iBAAiB,EAAE;EACnC,CAAC;EAED;;;EAGUP,MAAA,CAAAQ,SAAA,CAAAW,gBAAgB,GAA1B;IACE,OAAOtB,OAAO;EAChB,CAAC;EACH,OAAAG,MAAC;AAAD,CAAC,CApC2BL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}