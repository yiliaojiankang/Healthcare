{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 矩阵分面\n */\nvar Rect = /** @class */function (_super) {\n  __extends(Rect, _super);\n  function Rect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Rect.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Rect.prototype.beforeEachView = function (view, facet) {\n    // do nothing\n  };\n  Rect.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'rect',\n      columnTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this)),\n      rowTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this))\n    });\n  };\n  Rect.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n  Rect.prototype.generateFacets = function (data) {\n    var _this = this;\n    var _a = __read(this.cfg.fields, 2),\n      columnField = _a[0],\n      rowField = _a[1];\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    }\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  Rect.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnIndex = facet.columnIndex,\n        rowIndex = facet.rowIndex,\n        columnValuesLength = facet.columnValuesLength,\n        columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      // top\n      if (rowIndex === 0) {\n        var formatter = get(_this.cfg.columnTitle, 'formatter');\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        var formatter = get(_this.cfg.rowTitle, 'formatter');\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);\n        view.annotation().text(config);\n      }\n    });\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Rect.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return __assign(__assign({}, option), {\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Rect.prototype.getYAxisOption = function (y, axes, option, facet) {\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return __assign(__assign({}, option), {\n        title: null\n      });\n    }\n    return option;\n  };\n  return Rect;\n}(Facet);\nexport default Rect;","map":{"version":3,"names":["deepMix","each","filter","get","DIRECTION","getFactTitleConfig","Facet","Rect","_super","__extends","prototype","afterEachView","view","facet","processAxis","beforeEachView","getDefaultCfg","call","type","columnTitle","__assign","getDefaultTitleCfg","rowTitle","render","cfg","showTitle","renderTitle","generateFacets","data","_this","_a","__read","fields","columnField","rowField","rst","columnValuesLength","rowValuesLength","columnValues","rowValues","getFieldValues","length","forEach","xVal","xIndex","yVal","yIndex","conditions","field","value","values","facetData","getFacetDataFilter","region","getRegion","columnValue","rowValue","columnIndex","rowIndex","push","facets","facetIndex","formatter","config","position","content","TOP","annotation","text","RIGHT","getXAxisOption","x","axes","option","title","label","Math","floor","getYAxisOption","y"],"sources":["../../src/facet/rect.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, RectCfg, RectData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 矩阵分面\n */\nexport default class Rect extends Facet<RectCfg, RectData> {\n  protected afterEachView(view: View, facet: RectData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: RectData) {\n    // do nothing\n  }\n\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'rect',\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n  protected generateFacets(data: Datum[]): RectData[] {\n    const [columnField, rowField] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: RectData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  private renderTitle(): void {\n    each(this.facets, (facet: RectData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: RectData): object {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: RectData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}