{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { FIELD_ORIGIN } from '../constant';\nimport Path from './path';\nimport './shape/area';\n/**\n * Area 几何标记类。\n * 常用于绘制面积图。\n */\nvar Area = /** @class */function (_super) {\n  __extends(Area, _super);\n  function Area(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.type = 'area';\n    _this.shapeType = 'area';\n    /** 生成图形关键点 */\n    _this.generatePoints = true;\n    /**\n     * 面积图是否从 0 基准线开始填充。\n     * 1. 默认值为 `true`，表现如下：\n     * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n     * 2. 当值为 `false` 时，表现如下：\n     * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n     */\n    _this.startOnZero = true;\n    var _a = cfg.startOnZero,\n      startOnZero = _a === void 0 ? true : _a,\n      _b = cfg.sortable,\n      sortable = _b === void 0 ? false : _b,\n      _c = cfg.showSinglePoint,\n      showSinglePoint = _c === void 0 ? false : _c;\n    _this.startOnZero = startOnZero; // 默认为 true\n    _this.sortable = sortable; // 关闭默认的 X 轴数据排序\n    _this.showSinglePoint = showSinglePoint;\n    return _this;\n  }\n  /**\n   * 获取图形绘制的关键点以及数据\n   * @param mappingData 映射后的数据\n   */\n  Area.prototype.getPointsAndData = function (mappingData) {\n    var points = [];\n    var data = [];\n    for (var i = 0, len = mappingData.length; i < len; i++) {\n      var obj = mappingData[i];\n      points.push(obj.points);\n      data.push(obj[FIELD_ORIGIN]);\n    }\n    return {\n      points: points,\n      data: data\n    };\n  };\n  /**\n   * 获取 Y 轴上的最小值\n   * @returns y 字段最小值\n   */\n  Area.prototype.getYMinValue = function () {\n    if (this.startOnZero) {\n      return _super.prototype.getYMinValue.call(this);\n    }\n    var yScale = this.getYScale();\n    return yScale.min;\n  };\n  return Area;\n}(Path);\nexport default Area;","map":{"version":3,"names":["FIELD_ORIGIN","Path","Area","_super","__extends","cfg","_this","call","type","shapeType","generatePoints","startOnZero","_a","_b","sortable","_c","showSinglePoint","prototype","getPointsAndData","mappingData","points","data","i","len","length","obj","push","getYMinValue","yScale","getYScale","min"],"sources":["../../src/geometry/area.ts"],"sourcesContent":["import { FIELD_ORIGIN } from '../constant';\nimport { MappingDatum } from '../interface';\nimport Path, { PathCfg } from './path';\nimport './shape/area';\n\n/** Area 几何标记构造函数参数 */\nexport interface AreaCfg extends PathCfg {\n  /**\n   * 面积图是否从 0 基准线开始填充。\n   * 1. 默认值为 `true`，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n   * 2. 当值为 `false` 时，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n   */\n  startOnZero?: boolean;\n}\n\n/**\n * Area 几何标记类。\n * 常用于绘制面积图。\n */\nexport default class Area extends Path {\n  public readonly type: string = 'area';\n  public readonly shapeType: string = 'area';\n  /** 生成图形关键点 */\n  public readonly generatePoints: boolean = true;\n  /**\n   * 面积图是否从 0 基准线开始填充。\n   * 1. 默认值为 `true`，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n   * 2. 当值为 `false` 时，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n   */\n  public readonly startOnZero: boolean = true;\n\n  constructor(cfg: AreaCfg) {\n    super(cfg);\n\n    const { startOnZero = true, sortable = false, showSinglePoint = false } = cfg;\n    this.startOnZero = startOnZero; // 默认为 true\n    this.sortable = sortable; // 关闭默认的 X 轴数据排序\n    this.showSinglePoint = showSinglePoint;\n  }\n\n  /**\n   * 获取图形绘制的关键点以及数据\n   * @param mappingData 映射后的数据\n   */\n  protected getPointsAndData(mappingData: MappingDatum[]) {\n    const points = [];\n    const data = [];\n\n    for (let i = 0, len = mappingData.length; i < len; i++) {\n      const obj = mappingData[i];\n      points.push(obj.points);\n      data.push(obj[FIELD_ORIGIN]);\n    }\n\n    return {\n      points,\n      data,\n    };\n  }\n\n  /**\n   * 获取 Y 轴上的最小值\n   * @returns y 字段最小值\n   */\n  protected getYMinValue(): number {\n    if (this.startOnZero) {\n      return super.getYMinValue();\n    }\n    const yScale = this.getYScale();\n    return yScale.min;\n  }\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,aAAa;AAE1C,OAAOC,IAAiB,MAAM,QAAQ;AACtC,OAAO,cAAc;AAcrB;;;;AAIA,IAAAC,IAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAchC,SAAAD,KAAYG,GAAY;IAAxB,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,OAAMF,GAAG,CAAC;IAdIC,KAAA,CAAAE,IAAI,GAAW,MAAM;IACrBF,KAAA,CAAAG,SAAS,GAAW,MAAM;IAC1C;IACgBH,KAAA,CAAAI,cAAc,GAAY,IAAI;IAC9C;;;;;;;IAOgBJ,KAAA,CAAAK,WAAW,GAAY,IAAI;IAKjC,IAAAC,EAAA,GAAkEP,GAAG,CAAAM,WAAnD;MAAlBA,WAAW,GAAAC,EAAA,cAAG,IAAI,GAAAA,EAAA;MAAEC,EAAA,GAA8CR,GAAG,CAAAS,QAAjC;MAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;MAAEE,EAAA,GAA4BV,GAAG,CAAAW,eAAR;MAAvBA,eAAe,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IACrET,KAAI,CAACK,WAAW,GAAGA,WAAW,CAAC,CAAC;IAChCL,KAAI,CAACQ,QAAQ,GAAGA,QAAQ,CAAC,CAAC;IAC1BR,KAAI,CAACU,eAAe,GAAGA,eAAe;;EACxC;EAEA;;;;EAIUd,IAAA,CAAAe,SAAA,CAAAC,gBAAgB,GAA1B,UAA2BC,WAA2B;IACpD,IAAMC,MAAM,GAAG,EAAE;IACjB,IAAMC,IAAI,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGJ,WAAW,CAACK,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MACtD,IAAMG,GAAG,GAAGN,WAAW,CAACG,CAAC,CAAC;MAC1BF,MAAM,CAACM,IAAI,CAACD,GAAG,CAACL,MAAM,CAAC;MACvBC,IAAI,CAACK,IAAI,CAACD,GAAG,CAACzB,YAAY,CAAC,CAAC;;IAG9B,OAAO;MACLoB,MAAM,EAAAA,MAAA;MACNC,IAAI,EAAAA;KACL;EACH,CAAC;EAED;;;;EAIUnB,IAAA,CAAAe,SAAA,CAAAU,YAAY,GAAtB;IACE,IAAI,IAAI,CAAChB,WAAW,EAAE;MACpB,OAAOR,MAAA,CAAAc,SAAA,CAAMU,YAAY,CAAApB,IAAA,MAAE;;IAE7B,IAAMqB,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAC/B,OAAOD,MAAM,CAACE,GAAG;EACnB,CAAC;EACH,OAAA5B,IAAC;AAAD,CAAC,CAtDiCD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}