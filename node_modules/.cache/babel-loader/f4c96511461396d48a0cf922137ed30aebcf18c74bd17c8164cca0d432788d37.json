{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _dec, _class;\nimport { mat4 } from 'gl-matrix';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nvar CameraService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function CameraService() {\n    _classCallCheck(this, CameraService);\n    _defineProperty(this, \"viewport\", void 0);\n    /**\n     * 不使用 Viewport 计算的 VP 矩阵，例如偏移坐标系场景\n     */\n    _defineProperty(this, \"overridedViewProjectionMatrix\", void 0);\n    /**\n     * 抖动后的 VP 矩阵\n     */\n    _defineProperty(this, \"jitteredViewProjectionMatrix\", void 0);\n    /**\n     * 抖动后的 Projection 矩阵\n     */\n    _defineProperty(this, \"jitteredProjectionMatrix\", void 0);\n    /**\n     * ViewMatrix 逆矩阵，用于计算相机位置\n     */\n    // private viewMatrixInverse: number[];\n    _defineProperty(this, \"viewMatrixInverse\", void 0);\n    /**\n     * 相机位置\n     */\n    _defineProperty(this, \"cameraPosition\", void 0);\n  }\n  _createClass(CameraService, [{\n    key: \"init\",\n    value: function init() {\n      //\n    }\n\n    /**\n     * 同步根据相机参数创建的视口\n     */\n  }, {\n    key: \"update\",\n    value: function update(viewport) {\n      this.viewport = viewport;\n\n      // 计算逆矩阵\n      // this.viewMatrixInverse = (mat4.invert(\n      //   mat4.create(), (this.getViewMatrix() as unknown) as mat4,\n      // ) as unknown) as number[];\n\n      this.viewMatrixInverse = mat4.create();\n      mat4.invert(this.viewMatrixInverse, viewport.getViewMatrix());\n      this.cameraPosition = [this.viewMatrixInverse[12], this.viewMatrixInverse[13], this.viewMatrixInverse[14]];\n    }\n  }, {\n    key: \"getProjectionMatrix\",\n    value: function getProjectionMatrix() {\n      // 优先返回抖动后的 ProjectionMatrix\n      return this.jitteredProjectionMatrix || this.viewport.getProjectionMatrix();\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix() {\n      return this.viewport.getModelMatrix();\n    }\n  }, {\n    key: \"getViewMatrix\",\n    value: function getViewMatrix() {\n      return this.viewport.getViewMatrix();\n    }\n  }, {\n    key: \"getViewMatrixUncentered\",\n    value: function getViewMatrixUncentered() {\n      return this.viewport.getViewMatrixUncentered();\n    }\n  }, {\n    key: \"getViewProjectionMatrixUncentered\",\n    value: function getViewProjectionMatrixUncentered() {\n      return this.viewport.getViewProjectionMatrixUncentered();\n    }\n  }, {\n    key: \"getViewProjectionMatrix\",\n    value: function getViewProjectionMatrix() {\n      return this.overridedViewProjectionMatrix || this.jitteredViewProjectionMatrix || this.viewport.getViewProjectionMatrix();\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.viewport.getZoom();\n    }\n  }, {\n    key: \"getZoomScale\",\n    value: function getZoomScale() {\n      return this.viewport.getZoomScale();\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      var _this$viewport$getCen = this.viewport.getCenter(),\n        _this$viewport$getCen2 = _slicedToArray(_this$viewport$getCen, 2),\n        lng = _this$viewport$getCen2[0],\n        lat = _this$viewport$getCen2[1];\n      return [lng, lat];\n    }\n  }, {\n    key: \"getFocalDistance\",\n    value: function getFocalDistance() {\n      return this.viewport.getFocalDistance();\n    }\n  }, {\n    key: \"getCameraPosition\",\n    value: function getCameraPosition() {\n      return this.cameraPosition;\n    }\n  }, {\n    key: \"projectFlat\",\n    value: function projectFlat(lngLat, scale) {\n      return this.viewport.projectFlat(lngLat, scale);\n    }\n\n    /**\n     * 支持外部计算 VP 矩阵的场景，例如：在偏移坐标系场景中，需要重新计算 VP 矩阵\n     */\n  }, {\n    key: \"setViewProjectionMatrix\",\n    value: function setViewProjectionMatrix(viewProjectionMatrix) {\n      this.overridedViewProjectionMatrix = viewProjectionMatrix;\n    }\n  }, {\n    key: \"jitterProjectionMatrix\",\n    value: function jitterProjectionMatrix(x, y) {\n      var translation = mat4.fromTranslation(mat4.create(), [x, y, 0]);\n      this.jitteredProjectionMatrix = mat4.multiply(mat4.create(), translation, this.viewport.getProjectionMatrix());\n      this.jitteredViewProjectionMatrix = mat4.multiply(mat4.create(), this.jitteredProjectionMatrix, this.viewport.getViewMatrix());\n    }\n  }, {\n    key: \"clearJitterProjectionMatrix\",\n    value: function clearJitterProjectionMatrix() {\n      this.jitteredProjectionMatrix = undefined;\n      this.jitteredViewProjectionMatrix = undefined;\n    }\n  }]);\n  return CameraService;\n}()) || _class);\nexport { CameraService as default };","map":{"version":3,"names":["_slicedToArray","_classCallCheck","_createClass","_defineProperty","_dec","_class","mat4","injectable","CameraService","key","value","init","update","viewport","viewMatrixInverse","create","invert","getViewMatrix","cameraPosition","getProjectionMatrix","jitteredProjectionMatrix","getModelMatrix","getViewMatrixUncentered","getViewProjectionMatrixUncentered","getViewProjectionMatrix","overridedViewProjectionMatrix","jitteredViewProjectionMatrix","getZoom","getZoomScale","getCenter","_this$viewport$getCen","_this$viewport$getCen2","lng","lat","getFocalDistance","getCameraPosition","projectFlat","lngLat","scale","setViewProjectionMatrix","viewProjectionMatrix","jitterProjectionMatrix","x","y","translation","fromTranslation","multiply","clearJitterProjectionMatrix","undefined","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/camera/CameraService.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _dec, _class;\nimport { mat4 } from 'gl-matrix';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nvar CameraService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function CameraService() {\n    _classCallCheck(this, CameraService);\n    _defineProperty(this, \"viewport\", void 0);\n    /**\n     * 不使用 Viewport 计算的 VP 矩阵，例如偏移坐标系场景\n     */\n    _defineProperty(this, \"overridedViewProjectionMatrix\", void 0);\n    /**\n     * 抖动后的 VP 矩阵\n     */\n    _defineProperty(this, \"jitteredViewProjectionMatrix\", void 0);\n    /**\n     * 抖动后的 Projection 矩阵\n     */\n    _defineProperty(this, \"jitteredProjectionMatrix\", void 0);\n    /**\n     * ViewMatrix 逆矩阵，用于计算相机位置\n     */\n    // private viewMatrixInverse: number[];\n    _defineProperty(this, \"viewMatrixInverse\", void 0);\n    /**\n     * 相机位置\n     */\n    _defineProperty(this, \"cameraPosition\", void 0);\n  }\n  _createClass(CameraService, [{\n    key: \"init\",\n    value: function init() {\n      //\n    }\n\n    /**\n     * 同步根据相机参数创建的视口\n     */\n  }, {\n    key: \"update\",\n    value: function update(viewport) {\n      this.viewport = viewport;\n\n      // 计算逆矩阵\n      // this.viewMatrixInverse = (mat4.invert(\n      //   mat4.create(), (this.getViewMatrix() as unknown) as mat4,\n      // ) as unknown) as number[];\n\n      this.viewMatrixInverse = mat4.create();\n      mat4.invert(this.viewMatrixInverse, viewport.getViewMatrix());\n      this.cameraPosition = [this.viewMatrixInverse[12], this.viewMatrixInverse[13], this.viewMatrixInverse[14]];\n    }\n  }, {\n    key: \"getProjectionMatrix\",\n    value: function getProjectionMatrix() {\n      // 优先返回抖动后的 ProjectionMatrix\n      return this.jitteredProjectionMatrix || this.viewport.getProjectionMatrix();\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix() {\n      return this.viewport.getModelMatrix();\n    }\n  }, {\n    key: \"getViewMatrix\",\n    value: function getViewMatrix() {\n      return this.viewport.getViewMatrix();\n    }\n  }, {\n    key: \"getViewMatrixUncentered\",\n    value: function getViewMatrixUncentered() {\n      return this.viewport.getViewMatrixUncentered();\n    }\n  }, {\n    key: \"getViewProjectionMatrixUncentered\",\n    value: function getViewProjectionMatrixUncentered() {\n      return this.viewport.getViewProjectionMatrixUncentered();\n    }\n  }, {\n    key: \"getViewProjectionMatrix\",\n    value: function getViewProjectionMatrix() {\n      return this.overridedViewProjectionMatrix || this.jitteredViewProjectionMatrix || this.viewport.getViewProjectionMatrix();\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.viewport.getZoom();\n    }\n  }, {\n    key: \"getZoomScale\",\n    value: function getZoomScale() {\n      return this.viewport.getZoomScale();\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      var _this$viewport$getCen = this.viewport.getCenter(),\n        _this$viewport$getCen2 = _slicedToArray(_this$viewport$getCen, 2),\n        lng = _this$viewport$getCen2[0],\n        lat = _this$viewport$getCen2[1];\n      return [lng, lat];\n    }\n  }, {\n    key: \"getFocalDistance\",\n    value: function getFocalDistance() {\n      return this.viewport.getFocalDistance();\n    }\n  }, {\n    key: \"getCameraPosition\",\n    value: function getCameraPosition() {\n      return this.cameraPosition;\n    }\n  }, {\n    key: \"projectFlat\",\n    value: function projectFlat(lngLat, scale) {\n      return this.viewport.projectFlat(lngLat, scale);\n    }\n\n    /**\n     * 支持外部计算 VP 矩阵的场景，例如：在偏移坐标系场景中，需要重新计算 VP 矩阵\n     */\n  }, {\n    key: \"setViewProjectionMatrix\",\n    value: function setViewProjectionMatrix(viewProjectionMatrix) {\n      this.overridedViewProjectionMatrix = viewProjectionMatrix;\n    }\n  }, {\n    key: \"jitterProjectionMatrix\",\n    value: function jitterProjectionMatrix(x, y) {\n      var translation = mat4.fromTranslation(mat4.create(), [x, y, 0]);\n      this.jitteredProjectionMatrix = mat4.multiply(mat4.create(), translation, this.viewport.getProjectionMatrix());\n      this.jitteredViewProjectionMatrix = mat4.multiply(mat4.create(), this.jitteredProjectionMatrix, this.viewport.getViewMatrix());\n    }\n  }, {\n    key: \"clearJitterProjectionMatrix\",\n    value: function clearJitterProjectionMatrix() {\n      this.jitteredProjectionMatrix = undefined;\n      this.jitteredViewProjectionMatrix = undefined;\n    }\n  }]);\n  return CameraService;\n}()) || _class);\nexport { CameraService as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}