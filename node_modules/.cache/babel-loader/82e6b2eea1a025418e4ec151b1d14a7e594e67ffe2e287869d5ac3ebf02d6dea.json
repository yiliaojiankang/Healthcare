{"ast":null,"code":"\"use strict\";\n\n/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CircularLayout = void 0;\nvar base_1 = require(\"./base\");\nvar util_1 = require(\"../util\");\nfunction initHierarchy(nodes, edges, nodeMap, directed) {\n  nodes.forEach(function (_, i) {\n    nodes[i].children = [];\n    nodes[i].parent = [];\n  });\n  if (directed) {\n    edges.forEach(function (e) {\n      var source = (0, util_1.getEdgeTerminal)(e, 'source');\n      var target = (0, util_1.getEdgeTerminal)(e, 'target');\n      var sourceIdx = 0;\n      if (source) {\n        sourceIdx = nodeMap[source];\n      }\n      var targetIdx = 0;\n      if (target) {\n        targetIdx = nodeMap[target];\n      }\n      var child = nodes[sourceIdx].children;\n      var parent = nodes[targetIdx].parent;\n      child.push(nodes[targetIdx].id);\n      parent.push(nodes[sourceIdx].id);\n    });\n  } else {\n    edges.forEach(function (e) {\n      var source = (0, util_1.getEdgeTerminal)(e, 'source');\n      var target = (0, util_1.getEdgeTerminal)(e, 'target');\n      var sourceIdx = 0;\n      if (source) {\n        sourceIdx = nodeMap[source];\n      }\n      var targetIdx = 0;\n      if (target) {\n        targetIdx = nodeMap[target];\n      }\n      var sourceChildren = nodes[sourceIdx].children;\n      var targetChildren = nodes[targetIdx].children;\n      sourceChildren.push(nodes[targetIdx].id);\n      targetChildren.push(nodes[sourceIdx].id);\n    });\n  }\n}\nfunction connect(a, b, edges) {\n  var m = edges.length;\n  for (var i = 0; i < m; i++) {\n    var source = (0, util_1.getEdgeTerminal)(edges[i], 'source');\n    var target = (0, util_1.getEdgeTerminal)(edges[i], 'target');\n    if (a.id === source && b.id === target || b.id === source && a.id === target) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction compareDegree(a, b) {\n  var aDegree = a.degree;\n  var bDegree = b.degree;\n  if (aDegree < bDegree) {\n    return -1;\n  }\n  if (aDegree > bDegree) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * 圆形布局\n */\nvar CircularLayout = /** @class */function (_super) {\n  __extends(CircularLayout, _super);\n  function CircularLayout(options) {\n    var _this = _super.call(this) || this;\n    /** 固定半径，若设置了 radius，则 startRadius 与 endRadius 不起效 */\n    _this.radius = null;\n    /** 节点大小，配合 nodeSpacing，一起用于计算 radius。若不配置，节点大小默认为 30 */\n    _this.nodeSize = undefined;\n    /** 起始半径 */\n    _this.startRadius = null;\n    /** 终止半径 */\n    _this.endRadius = null;\n    /** 起始角度 */\n    _this.startAngle = 0;\n    /** 终止角度 */\n    _this.endAngle = 2 * Math.PI;\n    /** 是否顺时针 */\n    _this.clockwise = true;\n    /** 节点在环上分成段数（几个段将均匀分布），在 endRadius - startRadius != 0 时生效 */\n    _this.divisions = 1;\n    /** 节点在环上排序的依据，可选: 'topology', 'degree', 'null' */\n    _this.ordering = null;\n    /** how many 2*pi from first to last nodes */\n    _this.angleRatio = 1;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.nodeMap = {};\n    _this.degrees = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.updateCfg(options);\n    return _this;\n  }\n  CircularLayout.prototype.getDefaultCfg = function () {\n    return {\n      radius: null,\n      startRadius: null,\n      endRadius: null,\n      startAngle: 0,\n      endAngle: 2 * Math.PI,\n      clockwise: true,\n      divisions: 1,\n      ordering: null,\n      angleRatio: 1\n    };\n  };\n  /**\n   * 执行布局\n   */\n  CircularLayout.prototype.execute = function () {\n    var _a;\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges;\n    var n = nodes.length;\n    if (n === 0) {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n    if (!self.center) {\n      self.center = [self.width / 2, self.height / 2];\n    }\n    var center = self.center;\n    if (n === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n    var radius = self.radius,\n      startRadius = self.startRadius,\n      endRadius = self.endRadius;\n    var divisions = self.divisions,\n      startAngle = self.startAngle,\n      endAngle = self.endAngle,\n      angleRatio = self.angleRatio,\n      ordering = self.ordering,\n      clockwise = self.clockwise,\n      paramNodeSpacing = self.nodeSpacing,\n      paramNodeSize = self.nodeSize;\n    var angleStep = (endAngle - startAngle) / n;\n    // layout\n    var nodeMap = {};\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    var degrees = (0, util_1.getDegree)(nodes.length, nodeMap, edges);\n    self.degrees = degrees;\n    if (paramNodeSpacing) {\n      var nodeSpacing_1 = (0, util_1.getFuncByUnknownType)(10, paramNodeSpacing);\n      var nodeSize_1 = (0, util_1.getFuncByUnknownType)(10, paramNodeSize);\n      var maxNodeSize_1 = -Infinity;\n      nodes.forEach(function (node) {\n        var nSize = nodeSize_1(node);\n        if (maxNodeSize_1 < nSize) maxNodeSize_1 = nSize;\n      });\n      var length_1 = 0;\n      nodes.forEach(function (node, i) {\n        if (i === 0) length_1 += maxNodeSize_1 || 10;else length_1 += (nodeSpacing_1(node) || 0) + (maxNodeSize_1 || 10);\n      });\n      radius = length_1 / (2 * Math.PI);\n    } else if (!radius && !startRadius && !endRadius) {\n      radius = self.height > self.width ? self.width / 2 : self.height / 2;\n    } else if (!startRadius && endRadius) {\n      startRadius = endRadius;\n    } else if (startRadius && !endRadius) {\n      endRadius = startRadius;\n    }\n    var astep = angleStep * angleRatio;\n    var layoutNodes = [];\n    if (ordering === \"topology\") {\n      // layout according to the topology\n      layoutNodes = self.topologyOrdering();\n    } else if (ordering === \"topology-directed\") {\n      // layout according to the topology\n      layoutNodes = self.topologyOrdering(true);\n    } else if (ordering === \"degree\") {\n      // layout according to the descent order of degrees\n      layoutNodes = self.degreeOrdering();\n    } else {\n      // layout according to the original order in the data.nodes\n      layoutNodes = nodes;\n    }\n    var divN = Math.ceil(n / divisions); // node number in each division\n    for (var i = 0; i < n; ++i) {\n      var r = radius;\n      if (!r && startRadius !== null && endRadius !== null) {\n        r = startRadius + i * (endRadius - startRadius) / (n - 1);\n      }\n      if (!r) {\n        r = 10 + i * 100 / (n - 1);\n      }\n      var angle = startAngle + i % divN * astep + 2 * Math.PI / divisions * Math.floor(i / divN);\n      if (!clockwise) {\n        angle = endAngle - i % divN * astep - 2 * Math.PI / divisions * Math.floor(i / divN);\n      }\n      layoutNodes[i].x = center[0] + Math.cos(angle) * r;\n      layoutNodes[i].y = center[1] + Math.sin(angle) * r;\n      layoutNodes[i].weight = degrees[i].all;\n    }\n    (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n    return {\n      nodes: layoutNodes,\n      edges: this.edges\n    };\n  };\n  /**\n   * 根据节点的拓扑结构排序\n   * @return {array} orderedNodes 排序后的结果\n   */\n  CircularLayout.prototype.topologyOrdering = function (directed) {\n    if (directed === void 0) {\n      directed = false;\n    }\n    var self = this;\n    var degrees = self.degrees;\n    var edges = self.edges;\n    var nodes = self.nodes;\n    var cnodes = (0, util_1.clone)(nodes);\n    var nodeMap = self.nodeMap;\n    var orderedCNodes = [cnodes[0]];\n    var resNodes = [nodes[0]];\n    var pickFlags = [];\n    var n = nodes.length;\n    pickFlags[0] = true;\n    initHierarchy(cnodes, edges, nodeMap, directed);\n    var k = 0;\n    cnodes.forEach(function (cnode, i) {\n      if (i !== 0) {\n        if ((i === n - 1 || degrees[i].all !== degrees[i + 1].all || connect(orderedCNodes[k], cnode, edges)) && !pickFlags[i]) {\n          orderedCNodes.push(cnode);\n          resNodes.push(nodes[nodeMap[cnode.id]]);\n          pickFlags[i] = true;\n          k++;\n        } else {\n          var children = orderedCNodes[k].children;\n          var foundChild = false;\n          for (var j = 0; j < children.length; j++) {\n            var childIdx = nodeMap[children[j]];\n            if (degrees[childIdx].all === degrees[i].all && !pickFlags[childIdx]) {\n              orderedCNodes.push(cnodes[childIdx]);\n              resNodes.push(nodes[nodeMap[cnodes[childIdx].id]]);\n              pickFlags[childIdx] = true;\n              foundChild = true;\n              break;\n            }\n          }\n          var ii = 0;\n          while (!foundChild) {\n            if (!pickFlags[ii]) {\n              orderedCNodes.push(cnodes[ii]);\n              resNodes.push(nodes[nodeMap[cnodes[ii].id]]);\n              pickFlags[ii] = true;\n              foundChild = true;\n            }\n            ii++;\n            if (ii === n) {\n              break;\n            }\n          }\n        }\n      }\n    });\n    return resNodes;\n  };\n  /**\n   * 根据节点度数大小排序\n   * @return {array} orderedNodes 排序后的结果\n   */\n  CircularLayout.prototype.degreeOrdering = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var orderedNodes = [];\n    var degrees = self.degrees;\n    nodes.forEach(function (node, i) {\n      node.degree = degrees[i].all;\n      orderedNodes.push(node);\n    });\n    orderedNodes.sort(compareDegree);\n    return orderedNodes;\n  };\n  CircularLayout.prototype.getType = function () {\n    return \"circular\";\n  };\n  return CircularLayout;\n}(base_1.Base);\nexports.CircularLayout = CircularLayout;","map":{"version":3,"names":["require","base_1","util_1","initHierarchy","nodes","edges","nodeMap","directed","forEach","_","i","children","parent","e","source","getEdgeTerminal","target","sourceIdx","targetIdx","child","push","id","sourceChildren","targetChildren","connect","a","b","m","length","compareDegree","aDegree","degree","bDegree","CircularLayout","_super","__extends","options","_this","call","radius","nodeSize","undefined","startRadius","endRadius","startAngle","endAngle","Math","PI","clockwise","divisions","ordering","angleRatio","degrees","width","height","updateCfg","prototype","getDefaultCfg","execute","self","n","onLayoutEnd","window","innerWidth","innerHeight","center","x","y","paramNodeSpacing","nodeSpacing","paramNodeSize","angleStep","node","getDegree","nodeSpacing_1","getFuncByUnknownType","nodeSize_1","maxNodeSize_1","Infinity","nSize","length_1","astep","layoutNodes","topologyOrdering","degreeOrdering","divN","ceil","r","angle","floor","cos","sin","weight","all","_a","cnodes","clone","orderedCNodes","resNodes","pickFlags","k","cnode","foundChild","j","childIdx","ii","orderedNodes","sort","getType","Base","exports"],"sources":["../../src/layout/circular.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}