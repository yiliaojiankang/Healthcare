{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nimport { __assign } from \"tslib\";\nimport Global from '../global';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix, each, mix, isBoolean, isPlainObject, clone } from '@antv/util';\nimport { cloneBesidesImg } from '../util/graphic';\nvar transform = ext.transform;\nvar CLS_SHAPE_SUFFIX = '-shape';\nvar CLS_LABEL_SUFFIX = '-label';\nvar ARROWS = ['startArrow', 'endArrow'];\nvar SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: undefined,\n  fill: undefined,\n  lineAppendWidth: 1,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  x: 0,\n  y: 0,\n  r: 10,\n  width: 20,\n  height: 20,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar PATH_SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: '#000',\n  lineDash: undefined,\n  startArrow: false,\n  endArrow: false,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar SHAPES_DEFAULT_ATTRS = {\n  edge: PATH_SHAPE_DEFAULT_ATTRS,\n  node: SHAPE_DEFAULT_ATTRS,\n  combo: SHAPE_DEFAULT_ATTRS\n};\nexport var CLS_LABEL_BG_SUFFIX = '-label-bg';\n// 单个 shape 带有一个 label，共用这段代码\nexport var shapeBase = {\n  // 默认样式及配置\n  options: {\n    labelCfg: {\n      style: {\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    descriptionCfg: {\n      style: {\n        fontFamily: Global.windowFontFamily\n      }\n    }\n  },\n  itemType: '',\n  /**\n   * 形状的类型，例如 circle，ellipse，polyline...\n   */\n  type: '',\n  getCustomConfig: function getCustomConfig(cfg) {\n    return {};\n  },\n  getOptions: function getOptions(cfg, updateType) {\n    if (updateType === 'move' || (updateType === null || updateType === void 0 ? void 0 : updateType.includes('bbox'))) return cfg;\n    return deepMix({}, this.options, this.getCustomConfig(cfg) || {}, cfg);\n  },\n  /**\n   * 绘制节点/边，包含文本\n   * @override\n   * @param  {Object} cfg 节点的配置项\n   * @param  {G.Group} group 节点的容器\n   * @return {IShape} 绘制的图形\n   */\n  draw: function draw(cfg, group) {\n    group['shapeMap'] = {};\n    this.mergeStyle = this.getOptions(cfg);\n    var shape = this.drawShape(cfg, group);\n    shape.set('className', this.itemType + CLS_SHAPE_SUFFIX);\n    group['shapeMap'][this.itemType + CLS_SHAPE_SUFFIX] = shape;\n    if (cfg.label) {\n      var label = this.drawLabel(cfg, group);\n      label.set('className', this.itemType + CLS_LABEL_SUFFIX);\n      group['shapeMap'][this.itemType + CLS_LABEL_SUFFIX] = label;\n    }\n    return shape;\n  },\n  /**\n   * 绘制完成后的操作，便于用户继承现有的节点、边\n   * @param cfg\n   * @param group\n   * @param keyShape\n   */\n  afterDraw: function afterDraw(cfg, group, keyShape) {},\n  drawShape: function drawShape(cfg, group) {\n    return null;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = (this.mergeStyle || this.getOptions(cfg) || {}).labelCfg;\n    // image的情况下有可能为null\n    var labelCfg = defaultLabelCfg || {};\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      draggable: true,\n      className: 'text-shape',\n      name: 'text-shape',\n      labelRelated: true\n    });\n    group['shapeMap']['text-shape'] = label;\n    if (!isNaN(rotate) && rotate !== '') {\n      var labelBBox = label.getBBox();\n      var labelMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      if (labelStyle.rotateCenter) {\n        switch (labelStyle.rotateCenter) {\n          case 'center':\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n          case 'lefttop':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n            break;\n          case 'leftcenter':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n            break;\n          default:\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n        }\n      } else {\n        labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n      }\n      label.setMatrix(labelMatrix);\n    }\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      group['shapeMap'][labelBgClassname] = rect;\n      label.toFront();\n    }\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = mix({}, defaultLabelCfg, cfg.labelCfg);\n    var style = this.getLabelBgStyleByPosition(label, labelCfg);\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style,\n      labelRelated: true\n    });\n    group['shapeMap']['text-bg-shape'] = rect;\n    return rect;\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    return {\n      text: cfg.label\n    };\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, labelCfg) {\n    return {};\n  },\n  /**\n   * 获取文本的配置项\n   * @param cfg 节点的配置项\n   * @param labelCfg 文本的配置项\n   * @param group 父容器，label 的定位可能与图形相关\n   */\n  getLabelStyle: function getLabelStyle(cfg, labelCfg, group) {\n    var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n    var attrName = \"\".concat(this.itemType, \"Label\"); // 取 nodeLabel，edgeLabel 的配置项\n    var defaultStyle = Global[attrName] ? Global[attrName].style : null;\n    return __assign(__assign(__assign({}, defaultStyle), calculateStyle), labelCfg.style);\n  },\n  /**\n   * 获取图形的配置项\n   * @param cfg\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    return cfg.style;\n  },\n  /**\n   * 更新节点，包含文本\n   * @override\n   * @param  {Object} cfg 节点/边的配置项\n   * @param  {G6.Item} item 节点/边\n   */\n  update: function update(cfg, item, updateType) {\n    this.updateShapeStyle(cfg, item, updateType);\n    this.updateLabel(cfg, item, updateType);\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item, updateType) {\n    var _a;\n    var group = item.getContainer();\n    var shape = item.getKeyShape();\n    var shapeStyle = mix({}, shape.attr(), cfg.style);\n    var _loop_1 = function _loop_1(key) {\n      var _b;\n      var style = shapeStyle[key];\n      if (isPlainObject(style)) {\n        // 更新图元素样式，支持更新子元素\n        var subShape = ((_a = group['shapeMap']) === null || _a === void 0 ? void 0 : _a[key]) || group.find(function (element) {\n          return element.get('name') === key;\n        });\n        subShape === null || subShape === void 0 ? void 0 : subShape.attr(style);\n      } else {\n        shape.attr((_b = {}, _b[key] = style, _b));\n      }\n    };\n    for (var key in shapeStyle) {\n      _loop_1(key);\n    }\n  },\n  updateLabel: function updateLabel(cfg, item, updateType) {\n    var _a, _b;\n    var group = item.getContainer();\n    var _c = (this.mergeStyle || this.getOptions({}, updateType) || {}).labelCfg,\n      labelCfg = _c === void 0 ? {} : _c;\n    var labelClassName = this.itemType + CLS_LABEL_SUFFIX;\n    var label = group['shapeMap'][labelClassName] || group.find(function (ele) {\n      return ele.get('className') === labelClassName;\n    });\n    var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n    var labelBg = group['shapeMap'][labelBgClassname] || group.find(function (ele) {\n      return ele.get('className') === labelBgClassname;\n    });\n    if (label && cfg.label === undefined) {\n      group.removeChild(label);\n      delete group['shapeMap'][labelClassName];\n      if (labelBg) {\n        group.removeChild(labelBg);\n        delete group['shapeMap'][labelBgClassname];\n      }\n    }\n    // 防止 cfg.label = \"\" 的情况\n    if (cfg.label || cfg.label === '') {\n      // 若传入的新配置中有 label，（用户没传入但原先有 label，label 也会有值）\n      if (!label) {\n        // 若原先不存在 label，则绘制一个新的 label\n        var newLabel = this.drawLabel(cfg, group);\n        newLabel.set('className', labelClassName);\n        group['shapeMap'][labelClassName] = newLabel;\n      } else {\n        // 若原先存在 label，则更新样式。与 getLabelStyle 不同在于这里需要融合当前 label 的样式\n        // 融合 style 以外的属性：position, offset, ...\n        if (!updateType || updateType === 'bbox|label' || this.itemType === 'edge' && updateType !== 'style') {\n          labelCfg = deepMix(labelCfg, cfg.labelCfg);\n        }\n        // 获取位置信息\n        var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n        // 取 nodeLabel，edgeLabel 的配置项\n        var cfgStyle = (_a = cfg.labelCfg) === null || _a === void 0 ? void 0 : _a.style;\n        // const cfgBgStyle = labelCfg.style?.background;\n        // 需要融合当前\b label 的样式 label.attr()。不再需要全局/默认样式，因为已经应用在当前的 label 上\n        var labelStyle = __assign(__assign({}, calculateStyle), cfgStyle);\n        var rotate = labelStyle.rotate;\n        delete labelStyle.rotate;\n        // 计算 label 的旋转矩阵\n        if (!isNaN(rotate) && rotate !== '') {\n          // if G 4.x define the rotateAtStart, use it directly instead of using the following codes\n          var rotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          rotateMatrix = transform(rotateMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n          labelStyle.matrix = rotateMatrix;\n          label.attr(labelStyle);\n        } else {\n          if (((_b = label.getMatrix()) === null || _b === void 0 ? void 0 : _b[4]) !== 1) {\n            label.resetMatrix();\n          }\n          label.attr(labelStyle);\n        }\n        if (!labelBg) {\n          if (labelStyle.background) {\n            labelBg = this.drawLabelBg(cfg, group, label);\n            labelBg.set('classname', labelBgClassname);\n            group['shapeMap'][labelBgClassname] = labelBg;\n            label.toFront();\n          }\n        } else if (labelStyle.background) {\n          var calculateBgStyle = this.getLabelBgStyleByPosition(label, labelCfg);\n          labelBg.attr(calculateBgStyle);\n        } else {\n          group.removeChild(labelBg);\n        }\n      }\n    }\n  },\n  // update(cfg, item) // 默认不定义\n  afterUpdate: function afterUpdate(cfg, item) {},\n  /**\n   * 设置节点的状态，主要是交互状态，业务状态请在 draw 方法中实现\n   * 单图形的节点仅考虑 selected、active 状态，有其他状态需求的用户自己复写这个方法\n   * @override\n   * @param  {String} name 状态名称\n   * @param  {String | Boolean} value 状态值\n   * @param  {G6.Item} item 节点\n   */\n  setState: function setState(name, value, item) {\n    var _a, _b;\n    var _c;\n    var shape = item.get('keyShape');\n    if (!shape || shape.destroyed) return;\n    var type = item.getType();\n    var stateName = isBoolean(value) ? name : \"\".concat(name, \":\").concat(value);\n    var shapeStateStyle = this.getStateStyle(stateName, item);\n    var itemStateStyle = item.getStateStyle(stateName);\n    // const originStyle = item.getOriginStyle();\n    // 不允许设置一个不存在的状态\n    if (!itemStateStyle && !shapeStateStyle) {\n      return;\n    }\n    // 要设置或取消的状态的样式\n    // 当没有 state 状态时，默认使用 model.stateStyles 中的样式\n    var styles = mix({}, itemStateStyle || shapeStateStyle);\n    var group = item.getContainer();\n    // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值。使用对象检索更快\n    var keptAttrs = {\n      x: 1,\n      y: 1,\n      cx: 1,\n      cy: 1,\n      matrix: 1\n    };\n    if (type === 'combo') {\n      keptAttrs.r = 1;\n      keptAttrs.width = 1;\n      keptAttrs.height = 1;\n    }\n    if (value) {\n      var _loop_2 = function _loop_2(key) {\n        var _d;\n        var style = styles[key];\n        if (isPlainObject(style) && !ARROWS.includes(key)) {\n          var subShape = ((_c = group['shapeMap']) === null || _c === void 0 ? void 0 : _c[key]) || group.find(function (element) {\n            return element.get('name') === key;\n          });\n          subShape === null || subShape === void 0 ? void 0 : subShape.attr(style);\n        } else {\n          // 非纯对象，则认为是设置到 keyShape 上面的\n          shape.attr((_d = {}, _d[key] = style, _d));\n        }\n      };\n      // style 为要设置的状态的样式\n      for (var key in styles) {\n        _loop_2(key);\n      }\n    } else {\n      // 所有生效的 state 的样式\n      var enableStatesStyle = cloneBesidesImg(item.getCurrentStatesStyle());\n      var model = item.getModel();\n      // 原始样式\n      var originStyle_1 = mix({}, model.style, cloneBesidesImg(item.getOriginStyle()));\n      var keyShapeName_1 = shape.get('name');\n      // cloning  shape.attr(), keys.forEach to avoid cloning the img attr, which leads to maximum clone heap #2383\n      // const keyShapeStyles = clone(shape.attr())\n      var shapeAttrs_1 = shape.attr();\n      var keyShapeStyles_1 = {};\n      Object.keys(shapeAttrs_1).forEach(function (key) {\n        if (key === 'img') return;\n        var attr = shapeAttrs_1[key];\n        if (attr && _typeof(attr) === 'object') {\n          keyShapeStyles_1[key] = clone(attr);\n        } else {\n          keyShapeStyles_1[key] = attr;\n        }\n      });\n      // 已有样式 - 要取消的状态的样式\n      var filtetDisableStatesStyle = {};\n      var _loop_3 = function _loop_3(p) {\n        var style = styles[p];\n        if (isPlainObject(style) && !ARROWS.includes(p)) {\n          var subShape_1 = group['shapeMap'][p] || group.find(function (ele) {\n            return ele.get('name') === p;\n          });\n          if (subShape_1) {\n            var subShapeStyles_1 = cloneBesidesImg(subShape_1.attr());\n            each(style, function (v, key) {\n              if (p === keyShapeName_1 && keyShapeStyles_1[key] && !keptAttrs[key]) {\n                delete keyShapeStyles_1[key];\n                var value_1 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                shape.attr(key, value_1);\n              } else if (subShapeStyles_1[key] || subShapeStyles_1[key] === 0) {\n                delete subShapeStyles_1[key];\n                var value_2 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                subShape_1.attr(key, value_2);\n              }\n            });\n            filtetDisableStatesStyle[p] = subShapeStyles_1;\n          }\n        } else {\n          if (keyShapeStyles_1[p] && !keptAttrs[p]) {\n            delete keyShapeStyles_1[p];\n            var value_3 = originStyle_1[p] || (originStyle_1[keyShapeName_1] ? originStyle_1[keyShapeName_1][p] : undefined) || SHAPES_DEFAULT_ATTRS[type][p];\n            shape.attr(p, value_3);\n          }\n        }\n      };\n      // styles 为要取消的状态的样式\n      for (var p in styles) {\n        _loop_3(p);\n      }\n      // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值后，\n      // 如果 keyShape 有 name 属性，则 filtetDisableStatesStyle 的格式为 { keyShapeName: {} }\n      // 否则为普通对象\n      if (!keyShapeName_1) {\n        mix(filtetDisableStatesStyle, keyShapeStyles_1);\n      } else {\n        filtetDisableStatesStyle[keyShapeName_1] = keyShapeStyles_1;\n      }\n      for (var key in enableStatesStyle) {\n        if (keptAttrs[key]) continue;\n        var enableStyle = enableStatesStyle[key];\n        if (!isPlainObject(enableStyle) || ARROWS.includes(key)) {\n          // 把样式属性merge到keyShape中\n          if (!keyShapeName_1) {\n            mix(originStyle_1, (_a = {}, _a[key] = enableStyle, _a));\n          } else {\n            mix(originStyle_1[keyShapeName_1], (_b = {}, _b[key] = enableStyle, _b));\n            delete originStyle_1[key];\n          }\n          delete enableStatesStyle[key];\n        }\n      }\n      var originstyles = {};\n      deepMix(originstyles, originStyle_1, filtetDisableStatesStyle, enableStatesStyle);\n      var keyShapeSetted = false;\n      var _loop_4 = function _loop_4(originKey) {\n        var _e, _f;\n        var style = originstyles[originKey];\n        if (isPlainObject(style) && !ARROWS.includes(originKey)) {\n          var subShape = group['shapeMap'][originKey] || group.find(function (ele) {\n            return ele.get('name') === originKey;\n          });\n          if (subShape) {\n            // The text's position and matrix is not allowed to be affected by states\n            if (subShape.get('type') === 'text' || subShape.get('labelRelated')) {\n              delete style.x;\n              delete style.y;\n              delete style.matrix;\n            }\n            if (originKey === keyShapeName_1) {\n              if (type === 'combo') {\n                delete style.r;\n                delete style.width;\n                delete style.height;\n              }\n              keyShapeSetted = true;\n            }\n            subShape.attr(style);\n          }\n        } else if (!keyShapeSetted) {\n          var value_4 = style || SHAPES_DEFAULT_ATTRS[type][originKey];\n          // 当更新 combo 状态时，当不存在 keyShapeName 时候，则认为是设置到 keyShape 上面的\n          if (type === 'combo') {\n            if (!keyShapeName_1) {\n              shape.attr((_e = {}, _e[originKey] = value_4, _e));\n            }\n          } else {\n            shape.attr((_f = {}, _f[originKey] = value_4, _f));\n          }\n        }\n      };\n      for (var originKey in originstyles) {\n        _loop_4(originKey);\n      }\n    }\n  },\n  /**\n   * 获取不同状态下的样式\n   *\n   * @param {string} name 状态名称\n   * @param {Item} item Node或Edge的实例\n   * @return {object} 样式\n   */\n  getStateStyle: function getStateStyle(name, item) {\n    var model = item.getModel();\n    var type = item.getType();\n    var _a = this.getOptions(model),\n      stateStyles = _a.stateStyles,\n      _b = _a.style,\n      style = _b === void 0 ? {} : _b;\n    var modelStateStyle = model.stateStyles ? model.stateStyles[name] : stateStyles && stateStyles[name];\n    if (type === 'combo') {\n      return clone(modelStateStyle);\n    }\n    return mix({}, style, modelStateStyle);\n  },\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 控制点的数组,如果为 null，则没有控制点\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 锚点的数组,如果为 null，则没有锚点\n   */\n  getAnchorPoints: function getAnchorPoints(cfg) {\n    var _a, _b;\n    var anchorPoints = (cfg === null || cfg === void 0 ? void 0 : cfg.anchorPoints) || ((_a = this.getCustomConfig(cfg)) === null || _a === void 0 ? void 0 : _a.anchorPoints) || ((_b = this.options) === null || _b === void 0 ? void 0 : _b.anchorPoints);\n    return anchorPoints;\n  }\n};","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","__assign","Global","ext","deepMix","each","mix","isBoolean","isPlainObject","clone","cloneBesidesImg","transform","CLS_SHAPE_SUFFIX","CLS_LABEL_SUFFIX","ARROWS","SHAPE_DEFAULT_ATTRS","lineWidth","stroke","undefined","fill","lineAppendWidth","opacity","strokeOpacity","fillOpacity","x","y","r","width","height","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","PATH_SHAPE_DEFAULT_ATTRS","lineDash","startArrow","endArrow","SHAPES_DEFAULT_ATTRS","edge","node","combo","CLS_LABEL_BG_SUFFIX","shapeBase","options","labelCfg","style","fontFamily","windowFontFamily","descriptionCfg","itemType","type","getCustomConfig","cfg","getOptions","updateType","includes","draw","group","mergeStyle","shape","drawShape","set","label","drawLabel","afterDraw","keyShape","defaultLabelCfg","labelStyle","getLabelStyle","rotate","addShape","attrs","draggable","className","name","labelRelated","isNaN","labelBBox","getBBox","labelMatrix","rotateCenter","setMatrix","background","rect","drawLabelBg","labelBgClassname","toFront","getLabelBgStyleByPosition","getLabelStyleByPosition","text","calculateStyle","attrName","concat","defaultStyle","getShapeStyle","update","item","updateShapeStyle","updateLabel","_a","getContainer","getKeyShape","shapeStyle","attr","_loop_1","key","_b","subShape","find","element","get","_c","labelClassName","ele","labelBg","removeChild","newLabel","cfgStyle","rotateMatrix","matrix","getMatrix","resetMatrix","calculateBgStyle","afterUpdate","setState","value","destroyed","getType","stateName","shapeStateStyle","getStateStyle","itemStateStyle","styles","keptAttrs","cx","cy","_loop_2","_d","enableStatesStyle","getCurrentStatesStyle","model","getModel","originStyle_1","getOriginStyle","keyShapeName_1","shapeAttrs_1","keyShapeStyles_1","Object","keys","forEach","filtetDisableStatesStyle","_loop_3","p","subShape_1","subShapeStyles_1","v","value_1","value_2","value_3","enableStyle","originstyles","keyShapeSetted","_loop_4","originKey","_e","_f","value_4","stateStyles","modelStateStyle","getControlPoints","controlPoints","getAnchorPoints","anchorPoints"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-core/es/element/shapeBase.js"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nimport { __assign } from \"tslib\";\nimport Global from '../global';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix, each, mix, isBoolean, isPlainObject, clone } from '@antv/util';\nimport { cloneBesidesImg } from '../util/graphic';\nvar transform = ext.transform;\nvar CLS_SHAPE_SUFFIX = '-shape';\nvar CLS_LABEL_SUFFIX = '-label';\nvar ARROWS = ['startArrow', 'endArrow'];\nvar SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: undefined,\n  fill: undefined,\n  lineAppendWidth: 1,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  x: 0,\n  y: 0,\n  r: 10,\n  width: 20,\n  height: 20,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar PATH_SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: '#000',\n  lineDash: undefined,\n  startArrow: false,\n  endArrow: false,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar SHAPES_DEFAULT_ATTRS = {\n  edge: PATH_SHAPE_DEFAULT_ATTRS,\n  node: SHAPE_DEFAULT_ATTRS,\n  combo: SHAPE_DEFAULT_ATTRS\n};\nexport var CLS_LABEL_BG_SUFFIX = '-label-bg';\n// 单个 shape 带有一个 label，共用这段代码\nexport var shapeBase = {\n  // 默认样式及配置\n  options: {\n    labelCfg: {\n      style: {\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    descriptionCfg: {\n      style: {\n        fontFamily: Global.windowFontFamily\n      }\n    }\n  },\n  itemType: '',\n  /**\n   * 形状的类型，例如 circle，ellipse，polyline...\n   */\n  type: '',\n  getCustomConfig: function getCustomConfig(cfg) {\n    return {};\n  },\n  getOptions: function getOptions(cfg, updateType) {\n    if (updateType === 'move' || (updateType === null || updateType === void 0 ? void 0 : updateType.includes('bbox'))) return cfg;\n    return deepMix({}, this.options, this.getCustomConfig(cfg) || {}, cfg);\n  },\n  /**\n   * 绘制节点/边，包含文本\n   * @override\n   * @param  {Object} cfg 节点的配置项\n   * @param  {G.Group} group 节点的容器\n   * @return {IShape} 绘制的图形\n   */\n  draw: function draw(cfg, group) {\n    group['shapeMap'] = {};\n    this.mergeStyle = this.getOptions(cfg);\n    var shape = this.drawShape(cfg, group);\n    shape.set('className', this.itemType + CLS_SHAPE_SUFFIX);\n    group['shapeMap'][this.itemType + CLS_SHAPE_SUFFIX] = shape;\n    if (cfg.label) {\n      var label = this.drawLabel(cfg, group);\n      label.set('className', this.itemType + CLS_LABEL_SUFFIX);\n      group['shapeMap'][this.itemType + CLS_LABEL_SUFFIX] = label;\n    }\n    return shape;\n  },\n  /**\n   * 绘制完成后的操作，便于用户继承现有的节点、边\n   * @param cfg\n   * @param group\n   * @param keyShape\n   */\n  afterDraw: function afterDraw(cfg, group, keyShape) {},\n  drawShape: function drawShape(cfg, group) {\n    return null;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = (this.mergeStyle || this.getOptions(cfg) || {}).labelCfg;\n    // image的情况下有可能为null\n    var labelCfg = defaultLabelCfg || {};\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      draggable: true,\n      className: 'text-shape',\n      name: 'text-shape',\n      labelRelated: true\n    });\n    group['shapeMap']['text-shape'] = label;\n    if (!isNaN(rotate) && rotate !== '') {\n      var labelBBox = label.getBBox();\n      var labelMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      if (labelStyle.rotateCenter) {\n        switch (labelStyle.rotateCenter) {\n          case 'center':\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n          case 'lefttop':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n            break;\n          case 'leftcenter':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n            break;\n          default:\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n        }\n      } else {\n        labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n      }\n      label.setMatrix(labelMatrix);\n    }\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      group['shapeMap'][labelBgClassname] = rect;\n      label.toFront();\n    }\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = mix({}, defaultLabelCfg, cfg.labelCfg);\n    var style = this.getLabelBgStyleByPosition(label, labelCfg);\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style,\n      labelRelated: true\n    });\n    group['shapeMap']['text-bg-shape'] = rect;\n    return rect;\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    return {\n      text: cfg.label\n    };\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, labelCfg) {\n    return {};\n  },\n  /**\n   * 获取文本的配置项\n   * @param cfg 节点的配置项\n   * @param labelCfg 文本的配置项\n   * @param group 父容器，label 的定位可能与图形相关\n   */\n  getLabelStyle: function getLabelStyle(cfg, labelCfg, group) {\n    var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n    var attrName = \"\".concat(this.itemType, \"Label\"); // 取 nodeLabel，edgeLabel 的配置项\n    var defaultStyle = Global[attrName] ? Global[attrName].style : null;\n    return __assign(__assign(__assign({}, defaultStyle), calculateStyle), labelCfg.style);\n  },\n  /**\n   * 获取图形的配置项\n   * @param cfg\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    return cfg.style;\n  },\n  /**\n   * 更新节点，包含文本\n   * @override\n   * @param  {Object} cfg 节点/边的配置项\n   * @param  {G6.Item} item 节点/边\n   */\n  update: function update(cfg, item, updateType) {\n    this.updateShapeStyle(cfg, item, updateType);\n    this.updateLabel(cfg, item, updateType);\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item, updateType) {\n    var _a;\n    var group = item.getContainer();\n    var shape = item.getKeyShape();\n    var shapeStyle = mix({}, shape.attr(), cfg.style);\n    var _loop_1 = function _loop_1(key) {\n      var _b;\n      var style = shapeStyle[key];\n      if (isPlainObject(style)) {\n        // 更新图元素样式，支持更新子元素\n        var subShape = ((_a = group['shapeMap']) === null || _a === void 0 ? void 0 : _a[key]) || group.find(function (element) {\n          return element.get('name') === key;\n        });\n        subShape === null || subShape === void 0 ? void 0 : subShape.attr(style);\n      } else {\n        shape.attr((_b = {}, _b[key] = style, _b));\n      }\n    };\n    for (var key in shapeStyle) {\n      _loop_1(key);\n    }\n  },\n  updateLabel: function updateLabel(cfg, item, updateType) {\n    var _a, _b;\n    var group = item.getContainer();\n    var _c = (this.mergeStyle || this.getOptions({}, updateType) || {}).labelCfg,\n      labelCfg = _c === void 0 ? {} : _c;\n    var labelClassName = this.itemType + CLS_LABEL_SUFFIX;\n    var label = group['shapeMap'][labelClassName] || group.find(function (ele) {\n      return ele.get('className') === labelClassName;\n    });\n    var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n    var labelBg = group['shapeMap'][labelBgClassname] || group.find(function (ele) {\n      return ele.get('className') === labelBgClassname;\n    });\n    if (label && cfg.label === undefined) {\n      group.removeChild(label);\n      delete group['shapeMap'][labelClassName];\n      if (labelBg) {\n        group.removeChild(labelBg);\n        delete group['shapeMap'][labelBgClassname];\n      }\n    }\n    // 防止 cfg.label = \"\" 的情况\n    if (cfg.label || cfg.label === '') {\n      // 若传入的新配置中有 label，（用户没传入但原先有 label，label 也会有值）\n      if (!label) {\n        // 若原先不存在 label，则绘制一个新的 label\n        var newLabel = this.drawLabel(cfg, group);\n        newLabel.set('className', labelClassName);\n        group['shapeMap'][labelClassName] = newLabel;\n      } else {\n        // 若原先存在 label，则更新样式。与 getLabelStyle 不同在于这里需要融合当前 label 的样式\n        // 融合 style 以外的属性：position, offset, ...\n        if (!updateType || updateType === 'bbox|label' || this.itemType === 'edge' && updateType !== 'style') {\n          labelCfg = deepMix(labelCfg, cfg.labelCfg);\n        }\n        // 获取位置信息\n        var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n        // 取 nodeLabel，edgeLabel 的配置项\n        var cfgStyle = (_a = cfg.labelCfg) === null || _a === void 0 ? void 0 : _a.style;\n        // const cfgBgStyle = labelCfg.style?.background;\n        // 需要融合当前\b label 的样式 label.attr()。不再需要全局/默认样式，因为已经应用在当前的 label 上\n        var labelStyle = __assign(__assign({}, calculateStyle), cfgStyle);\n        var rotate = labelStyle.rotate;\n        delete labelStyle.rotate;\n        // 计算 label 的旋转矩阵\n        if (!isNaN(rotate) && rotate !== '') {\n          // if G 4.x define the rotateAtStart, use it directly instead of using the following codes\n          var rotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          rotateMatrix = transform(rotateMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n          labelStyle.matrix = rotateMatrix;\n          label.attr(labelStyle);\n        } else {\n          if (((_b = label.getMatrix()) === null || _b === void 0 ? void 0 : _b[4]) !== 1) {\n            label.resetMatrix();\n          }\n          label.attr(labelStyle);\n        }\n        if (!labelBg) {\n          if (labelStyle.background) {\n            labelBg = this.drawLabelBg(cfg, group, label);\n            labelBg.set('classname', labelBgClassname);\n            group['shapeMap'][labelBgClassname] = labelBg;\n            label.toFront();\n          }\n        } else if (labelStyle.background) {\n          var calculateBgStyle = this.getLabelBgStyleByPosition(label, labelCfg);\n          labelBg.attr(calculateBgStyle);\n        } else {\n          group.removeChild(labelBg);\n        }\n      }\n    }\n  },\n  // update(cfg, item) // 默认不定义\n  afterUpdate: function afterUpdate(cfg, item) {},\n  /**\n   * 设置节点的状态，主要是交互状态，业务状态请在 draw 方法中实现\n   * 单图形的节点仅考虑 selected、active 状态，有其他状态需求的用户自己复写这个方法\n   * @override\n   * @param  {String} name 状态名称\n   * @param  {String | Boolean} value 状态值\n   * @param  {G6.Item} item 节点\n   */\n  setState: function setState(name, value, item) {\n    var _a, _b;\n    var _c;\n    var shape = item.get('keyShape');\n    if (!shape || shape.destroyed) return;\n    var type = item.getType();\n    var stateName = isBoolean(value) ? name : \"\".concat(name, \":\").concat(value);\n    var shapeStateStyle = this.getStateStyle(stateName, item);\n    var itemStateStyle = item.getStateStyle(stateName);\n    // const originStyle = item.getOriginStyle();\n    // 不允许设置一个不存在的状态\n    if (!itemStateStyle && !shapeStateStyle) {\n      return;\n    }\n    // 要设置或取消的状态的样式\n    // 当没有 state 状态时，默认使用 model.stateStyles 中的样式\n    var styles = mix({}, itemStateStyle || shapeStateStyle);\n    var group = item.getContainer();\n    // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值。使用对象检索更快\n    var keptAttrs = {\n      x: 1,\n      y: 1,\n      cx: 1,\n      cy: 1,\n      matrix: 1\n    };\n    if (type === 'combo') {\n      keptAttrs.r = 1;\n      keptAttrs.width = 1;\n      keptAttrs.height = 1;\n    }\n    if (value) {\n      var _loop_2 = function _loop_2(key) {\n        var _d;\n        var style = styles[key];\n        if (isPlainObject(style) && !ARROWS.includes(key)) {\n          var subShape = ((_c = group['shapeMap']) === null || _c === void 0 ? void 0 : _c[key]) || group.find(function (element) {\n            return element.get('name') === key;\n          });\n          subShape === null || subShape === void 0 ? void 0 : subShape.attr(style);\n        } else {\n          // 非纯对象，则认为是设置到 keyShape 上面的\n          shape.attr((_d = {}, _d[key] = style, _d));\n        }\n      };\n      // style 为要设置的状态的样式\n      for (var key in styles) {\n        _loop_2(key);\n      }\n    } else {\n      // 所有生效的 state 的样式\n      var enableStatesStyle = cloneBesidesImg(item.getCurrentStatesStyle());\n      var model = item.getModel();\n      // 原始样式\n      var originStyle_1 = mix({}, model.style, cloneBesidesImg(item.getOriginStyle()));\n      var keyShapeName_1 = shape.get('name');\n      // cloning  shape.attr(), keys.forEach to avoid cloning the img attr, which leads to maximum clone heap #2383\n      // const keyShapeStyles = clone(shape.attr())\n      var shapeAttrs_1 = shape.attr();\n      var keyShapeStyles_1 = {};\n      Object.keys(shapeAttrs_1).forEach(function (key) {\n        if (key === 'img') return;\n        var attr = shapeAttrs_1[key];\n        if (attr && _typeof(attr) === 'object') {\n          keyShapeStyles_1[key] = clone(attr);\n        } else {\n          keyShapeStyles_1[key] = attr;\n        }\n      });\n      // 已有样式 - 要取消的状态的样式\n      var filtetDisableStatesStyle = {};\n      var _loop_3 = function _loop_3(p) {\n        var style = styles[p];\n        if (isPlainObject(style) && !ARROWS.includes(p)) {\n          var subShape_1 = group['shapeMap'][p] || group.find(function (ele) {\n            return ele.get('name') === p;\n          });\n          if (subShape_1) {\n            var subShapeStyles_1 = cloneBesidesImg(subShape_1.attr());\n            each(style, function (v, key) {\n              if (p === keyShapeName_1 && keyShapeStyles_1[key] && !keptAttrs[key]) {\n                delete keyShapeStyles_1[key];\n                var value_1 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                shape.attr(key, value_1);\n              } else if (subShapeStyles_1[key] || subShapeStyles_1[key] === 0) {\n                delete subShapeStyles_1[key];\n                var value_2 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                subShape_1.attr(key, value_2);\n              }\n            });\n            filtetDisableStatesStyle[p] = subShapeStyles_1;\n          }\n        } else {\n          if (keyShapeStyles_1[p] && !keptAttrs[p]) {\n            delete keyShapeStyles_1[p];\n            var value_3 = originStyle_1[p] || (originStyle_1[keyShapeName_1] ? originStyle_1[keyShapeName_1][p] : undefined) || SHAPES_DEFAULT_ATTRS[type][p];\n            shape.attr(p, value_3);\n          }\n        }\n      };\n      // styles 为要取消的状态的样式\n      for (var p in styles) {\n        _loop_3(p);\n      }\n      // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值后，\n      // 如果 keyShape 有 name 属性，则 filtetDisableStatesStyle 的格式为 { keyShapeName: {} }\n      // 否则为普通对象\n      if (!keyShapeName_1) {\n        mix(filtetDisableStatesStyle, keyShapeStyles_1);\n      } else {\n        filtetDisableStatesStyle[keyShapeName_1] = keyShapeStyles_1;\n      }\n      for (var key in enableStatesStyle) {\n        if (keptAttrs[key]) continue;\n        var enableStyle = enableStatesStyle[key];\n        if (!isPlainObject(enableStyle) || ARROWS.includes(key)) {\n          // 把样式属性merge到keyShape中\n          if (!keyShapeName_1) {\n            mix(originStyle_1, (_a = {}, _a[key] = enableStyle, _a));\n          } else {\n            mix(originStyle_1[keyShapeName_1], (_b = {}, _b[key] = enableStyle, _b));\n            delete originStyle_1[key];\n          }\n          delete enableStatesStyle[key];\n        }\n      }\n      var originstyles = {};\n      deepMix(originstyles, originStyle_1, filtetDisableStatesStyle, enableStatesStyle);\n      var keyShapeSetted = false;\n      var _loop_4 = function _loop_4(originKey) {\n        var _e, _f;\n        var style = originstyles[originKey];\n        if (isPlainObject(style) && !ARROWS.includes(originKey)) {\n          var subShape = group['shapeMap'][originKey] || group.find(function (ele) {\n            return ele.get('name') === originKey;\n          });\n          if (subShape) {\n            // The text's position and matrix is not allowed to be affected by states\n            if (subShape.get('type') === 'text' || subShape.get('labelRelated')) {\n              delete style.x;\n              delete style.y;\n              delete style.matrix;\n            }\n            if (originKey === keyShapeName_1) {\n              if (type === 'combo') {\n                delete style.r;\n                delete style.width;\n                delete style.height;\n              }\n              keyShapeSetted = true;\n            }\n            subShape.attr(style);\n          }\n        } else if (!keyShapeSetted) {\n          var value_4 = style || SHAPES_DEFAULT_ATTRS[type][originKey];\n          // 当更新 combo 状态时，当不存在 keyShapeName 时候，则认为是设置到 keyShape 上面的\n          if (type === 'combo') {\n            if (!keyShapeName_1) {\n              shape.attr((_e = {}, _e[originKey] = value_4, _e));\n            }\n          } else {\n            shape.attr((_f = {}, _f[originKey] = value_4, _f));\n          }\n        }\n      };\n      for (var originKey in originstyles) {\n        _loop_4(originKey);\n      }\n    }\n  },\n  /**\n   * 获取不同状态下的样式\n   *\n   * @param {string} name 状态名称\n   * @param {Item} item Node或Edge的实例\n   * @return {object} 样式\n   */\n  getStateStyle: function getStateStyle(name, item) {\n    var model = item.getModel();\n    var type = item.getType();\n    var _a = this.getOptions(model),\n      stateStyles = _a.stateStyles,\n      _b = _a.style,\n      style = _b === void 0 ? {} : _b;\n    var modelStateStyle = model.stateStyles ? model.stateStyles[name] : stateStyles && stateStyles[name];\n    if (type === 'combo') {\n      return clone(modelStateStyle);\n    }\n    return mix({}, style, modelStateStyle);\n  },\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 控制点的数组,如果为 null，则没有控制点\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 锚点的数组,如果为 null，则没有锚点\n   */\n  getAnchorPoints: function getAnchorPoints(cfg) {\n    var _a, _b;\n    var anchorPoints = (cfg === null || cfg === void 0 ? void 0 : cfg.anchorPoints) || ((_a = this.getCustomConfig(cfg)) === null || _a === void 0 ? void 0 : _a.anchorPoints) || ((_b = this.options) === null || _b === void 0 ? void 0 : _b.anchorPoints);\n    return anchorPoints;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}