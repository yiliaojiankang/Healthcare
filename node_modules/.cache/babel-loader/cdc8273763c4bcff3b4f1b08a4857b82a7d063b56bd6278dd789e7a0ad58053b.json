{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray, isNil } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nfunction parseValue(value) {\n  var array = !isArray(value) ? [value] : value;\n  var min = array[0]; // 最小值\n  var max = array[array.length - 1]; // 最大值\n  var min1 = array.length > 1 ? array[1] : min;\n  var max1 = array.length > 3 ? array[3] : max;\n  var median = array.length > 2 ? array[2] : min1;\n  return {\n    min: min,\n    max: max,\n    min1: min1,\n    max1: max1,\n    median: median\n  };\n}\nfunction getBoxPoints(x, y, size) {\n  var halfSize = size / 2;\n  var pointsArray;\n  if (isArray(y)) {\n    // 2维\n    var _a = parseValue(y),\n      min = _a.min,\n      max = _a.max,\n      median = _a.median,\n      min1 = _a.min1,\n      max1 = _a.max1;\n    var minX = x - halfSize;\n    var maxX = x + halfSize;\n    pointsArray = [[minX, max], [maxX, max], [x, max], [x, max1], [minX, min1], [minX, max1], [maxX, max1], [maxX, min1], [x, min1], [x, min], [minX, min], [maxX, min], [minX, median], [maxX, median]];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n    var _b = parseValue(x),\n      min = _b.min,\n      max = _b.max,\n      median = _b.median,\n      min1 = _b.min1,\n      max1 = _b.max1;\n    var minY = y - halfSize;\n    var maxY = y + halfSize;\n    pointsArray = [[min, minY], [min, maxY], [min, y], [min1, y], [min1, minY], [min1, maxY], [max1, maxY], [max1, minY], [max1, y], [max, y], [max, minY], [max, maxY], [median, minY], [median, maxY]];\n  }\n  return pointsArray.map(function (arr) {\n    return {\n      x: arr[0],\n      y: arr[1]\n    };\n  });\n}\nfunction getBoxPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x, points[10].y], ['L', points[11].x, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n}\n// box shape\nregisterShape('schema', 'box', {\n  getPoints: function (shapePoint) {\n    var x = shapePoint.x,\n      y = shapePoint.y,\n      size = shapePoint.size;\n    return getBoxPoints(x, y, size);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getBoxPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path,\n        name: 'schema'\n      })\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        var yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        var points = getBoxPoints(x, yValues, r);\n        return [['M', points[0].x + 1, points[0].y], ['L', points[1].x - 1, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x + 1, points[10].y], ['L', points[11].x - 1, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"names":["isArray","isNil","registerShape","getStyle","parseValue","value","array","min","max","length","min1","max1","median","getBoxPoints","x","y","size","halfSize","pointsArray","_a","minX","maxX","_b","minY","maxY","map","arr","getBoxPath","points","getPoints","shapePoint","draw","cfg","container","style","path","parsePath","shape","addShape","attrs","__assign","name","getMarker","markerCfg","color","symbol","r","yValues","lineWidth","stroke"],"sources":["../../../../src/geometry/shape/schema/box.ts"],"sourcesContent":["import { isArray, isNil } from '@antv/util';\nimport { IGroup, PathCommand } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction parseValue(value: number[]) {\n  const array = !isArray(value) ? [value] : value;\n\n  const min = array[0]; // 最小值\n  const max = array[array.length - 1]; // 最大值\n  const min1 = array.length > 1 ? array[1] : min;\n  const max1 = array.length > 3 ? array[3] : max;\n  const median = array.length > 2 ? array[2] : min1;\n\n  return {\n    min, // 最小值\n    max, // 最大值\n    min1,\n    max1,\n    median,\n  };\n}\n\nfunction getBoxPoints(x: number | number[], y: number | number[], size: number): Point[] {\n  const halfSize = size / 2;\n  let pointsArray;\n  if (isArray(y)) {\n    // 2维\n    const { min, max, median, min1, max1 } = parseValue(y);\n    const minX = (x as number) - halfSize;\n    const maxX = (x as number) + halfSize;\n    pointsArray = [\n      [minX, max],\n      [maxX, max],\n      [x as number, max],\n      [x as number, max1],\n      [minX, min1],\n      [minX, max1],\n      [maxX, max1],\n      [maxX, min1],\n      [x as number, min1],\n      [x as number, min],\n      [minX, min],\n      [maxX, min],\n      [minX, median],\n      [maxX, median],\n    ];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n    const { min, max, median, min1, max1 } = parseValue(x as number[]);\n    const minY = y - halfSize;\n    const maxY = y + halfSize;\n    pointsArray = [\n      [min, minY],\n      [min, maxY],\n      [min, y],\n      [min1, y],\n      [min1, minY],\n      [min1, maxY],\n      [max1, maxY],\n      [max1, minY],\n      [max1, y],\n      [max, y],\n      [max, minY],\n      [max, maxY],\n      [median, minY],\n      [median, maxY],\n    ];\n  }\n\n  return pointsArray.map((arr) => {\n    return {\n      x: arr[0],\n      y: arr[1],\n    };\n  });\n}\n\nfunction getBoxPath(points): PathCommand[] {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n    ['L', points[6].x, points[6].y],\n    ['L', points[7].x, points[7].y],\n    ['L', points[4].x, points[4].y], // 封闭 z\n    ['Z'],\n    ['M', points[8].x, points[8].y],\n    ['L', points[9].x, points[9].y],\n    ['M', points[10].x, points[10].y],\n    ['L', points[11].x, points[11].y],\n    ['M', points[12].x, points[12].y],\n    ['L', points[13].x, points[13].y],\n  ];\n}\n\n// box shape\nregisterShape('schema', 'box', {\n  getPoints(shapePoint: ShapePoint) {\n    const { x, y, size } = shapePoint;\n    return getBoxPoints(x as number, y as number[], size);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getBoxPath(cfg.points));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n        name: 'schema',\n      },\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol(x: number, y: number, r: number) {\n        const yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        const points = getBoxPoints(x, yValues, r);\n        return [\n          ['M', points[0].x + 1, points[0].y],\n          ['L', points[1].x - 1, points[1].y],\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n          ['M', points[4].x, points[4].y],\n          ['L', points[5].x, points[5].y],\n          ['L', points[6].x, points[6].y],\n          ['L', points[7].x, points[7].y],\n          ['L', points[4].x, points[4].y],\n          ['Z'],\n          ['M', points[8].x, points[8].y],\n          ['L', points[9].x, points[9].y],\n          ['M', points[10].x + 1, points[10].y],\n          ['L', points[11].x - 1, points[11].y],\n          ['M', points[12].x, points[12].y],\n          ['L', points[13].x, points[13].y],\n        ];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color,\n      },\n    };\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}