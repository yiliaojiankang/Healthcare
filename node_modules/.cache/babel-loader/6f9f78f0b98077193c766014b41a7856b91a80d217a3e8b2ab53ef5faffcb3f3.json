{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { RasterTileType } from '@antv/l7-core';\nimport { getCustomData, getCustomImageData } from \"../utils/tile/getCustomData\";\nimport { defaultFormat, getTileBuffer, getTileImage } from \"../utils/tile/getRasterTile\";\nvar DEFAULT_CONFIG = {\n  tileSize: 256,\n  minZoom: 0,\n  maxZoom: Infinity,\n  zoomOffset: 0,\n  warp: true\n};\nexport var rasterDataTypes = [RasterTileType.ARRAYBUFFER, RasterTileType.RGB];\nfunction isUrlError(url) {\n  if (Array.isArray(url) && url.length === 0) {\n    return true;\n  }\n  if (!Array.isArray(url) && typeof url !== 'string') {\n    return true;\n  }\n  return false;\n}\n/**\n *\n * @param data\n * @param cfg\n * @returns\n */\nexport default function rasterTile(data) {\n  var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (isUrlError(data)) {\n    throw new Error('tile server url is error');\n  }\n  var tileDataType = (cfg === null || cfg === void 0 ? void 0 : cfg.dataType) || RasterTileType.IMAGE;\n  // Tip: RasterTileType.RGB 是彩色多通道的数据纹理，同样走数据纹理的请求\n  if (tileDataType === RasterTileType.RGB) {\n    tileDataType = RasterTileType.ARRAYBUFFER;\n  }\n  var getTileData = function getTileData(tileParams, tile) {\n    switch (tileDataType) {\n      case RasterTileType.IMAGE:\n        return getTileImage(data, tileParams, tile, cfg);\n      case RasterTileType.CUSTOMIMAGE:\n      case RasterTileType.CUSTOMTERRAINRGB:\n        return getCustomImageData(\n        // 自定义地形请求方式数据\n        tile,\n        // @ts-ignore\n        cfg === null || cfg === void 0 ? void 0 : cfg.getCustomData);\n      case RasterTileType.ARRAYBUFFER:\n        return getTileBuffer(data, tileParams, tile, (cfg === null || cfg === void 0 ? void 0 : cfg.format) || defaultFormat, cfg === null || cfg === void 0 ? void 0 : cfg.operation);\n      case RasterTileType.CUSTOMARRAYBUFFER:\n      case RasterTileType.CUSTOMRGB:\n        return getCustomData(tile,\n        // @ts-ignore\n        cfg === null || cfg === void 0 ? void 0 : cfg.getCustomData, (cfg === null || cfg === void 0 ? void 0 : cfg.format) || defaultFormat, cfg === null || cfg === void 0 ? void 0 : cfg.operation);\n      default:\n        return getTileImage(data, tileParams, tile, cfg);\n    }\n  };\n  var tilesetOptions = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CONFIG), cfg), {}, {\n    getTileData: getTileData\n  });\n  return {\n    data: data,\n    dataArray: [],\n    tilesetOptions: tilesetOptions,\n    isTile: true\n  };\n}","map":{"version":3,"names":["_objectSpread","RasterTileType","getCustomData","getCustomImageData","defaultFormat","getTileBuffer","getTileImage","DEFAULT_CONFIG","tileSize","minZoom","maxZoom","Infinity","zoomOffset","warp","rasterDataTypes","ARRAYBUFFER","RGB","isUrlError","url","Array","isArray","length","rasterTile","data","cfg","arguments","undefined","Error","tileDataType","dataType","IMAGE","getTileData","tileParams","tile","CUSTOMIMAGE","CUSTOMTERRAINRGB","format","operation","CUSTOMARRAYBUFFER","CUSTOMRGB","tilesetOptions","dataArray","isTile"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/parser/raster-tile.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { RasterTileType } from '@antv/l7-core';\nimport { getCustomData, getCustomImageData } from \"../utils/tile/getCustomData\";\nimport { defaultFormat, getTileBuffer, getTileImage } from \"../utils/tile/getRasterTile\";\nvar DEFAULT_CONFIG = {\n  tileSize: 256,\n  minZoom: 0,\n  maxZoom: Infinity,\n  zoomOffset: 0,\n  warp: true\n};\nexport var rasterDataTypes = [RasterTileType.ARRAYBUFFER, RasterTileType.RGB];\nfunction isUrlError(url) {\n  if (Array.isArray(url) && url.length === 0) {\n    return true;\n  }\n  if (!Array.isArray(url) && typeof url !== 'string') {\n    return true;\n  }\n  return false;\n}\n/**\n *\n * @param data\n * @param cfg\n * @returns\n */\nexport default function rasterTile(data) {\n  var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (isUrlError(data)) {\n    throw new Error('tile server url is error');\n  }\n  var tileDataType = (cfg === null || cfg === void 0 ? void 0 : cfg.dataType) || RasterTileType.IMAGE;\n  // Tip: RasterTileType.RGB 是彩色多通道的数据纹理，同样走数据纹理的请求\n  if (tileDataType === RasterTileType.RGB) {\n    tileDataType = RasterTileType.ARRAYBUFFER;\n  }\n  var getTileData = function getTileData(tileParams, tile) {\n    switch (tileDataType) {\n      case RasterTileType.IMAGE:\n        return getTileImage(data, tileParams, tile, cfg);\n      case RasterTileType.CUSTOMIMAGE:\n      case RasterTileType.CUSTOMTERRAINRGB:\n        return getCustomImageData(\n        // 自定义地形请求方式数据\n        tile, // @ts-ignore\n        cfg === null || cfg === void 0 ? void 0 : cfg.getCustomData);\n      case RasterTileType.ARRAYBUFFER:\n        return getTileBuffer(data, tileParams, tile, (cfg === null || cfg === void 0 ? void 0 : cfg.format) || defaultFormat, cfg === null || cfg === void 0 ? void 0 : cfg.operation);\n      case RasterTileType.CUSTOMARRAYBUFFER:\n      case RasterTileType.CUSTOMRGB:\n        return getCustomData(tile, // @ts-ignore\n        cfg === null || cfg === void 0 ? void 0 : cfg.getCustomData, (cfg === null || cfg === void 0 ? void 0 : cfg.format) || defaultFormat, cfg === null || cfg === void 0 ? void 0 : cfg.operation);\n      default:\n        return getTileImage(data, tileParams, tile, cfg);\n    }\n  };\n  var tilesetOptions = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CONFIG), cfg), {}, {\n    getTileData: getTileData\n  });\n  return {\n    data: data,\n    dataArray: [],\n    tilesetOptions: tilesetOptions,\n    isTile: true\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}