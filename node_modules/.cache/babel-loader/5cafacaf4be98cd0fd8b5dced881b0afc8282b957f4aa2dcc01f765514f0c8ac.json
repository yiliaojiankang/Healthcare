{"ast":null,"code":"/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n  // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n  this.cx = 3.0 * p1x;\n  this.bx = 3.0 * (p2x - p1x) - this.cx;\n  this.ax = 1.0 - this.cx - this.bx;\n  this.cy = 3.0 * p1y;\n  this.by = 3.0 * (p2y - p1y) - this.cy;\n  this.ay = 1.0 - this.cy - this.by;\n  this.p1x = p1x;\n  this.p1y = p2y;\n  this.p2x = p2x;\n  this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n  // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n  return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n  return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n  return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n  if (typeof epsilon === 'undefined') epsilon = 1e-6;\n  var t0, t1, t2, x2, i;\n\n  // First try a few iterations of Newton's method -- normally very fast.\n  for (t2 = x, i = 0; i < 8; i++) {\n    x2 = this.sampleCurveX(t2) - x;\n    if (Math.abs(x2) < epsilon) return t2;\n    var d2 = this.sampleCurveDerivativeX(t2);\n    if (Math.abs(d2) < 1e-6) break;\n    t2 = t2 - x2 / d2;\n  }\n\n  // Fall back to the bisection method for reliability.\n  t0 = 0.0;\n  t1 = 1.0;\n  t2 = x;\n  if (t2 < t0) return t0;\n  if (t2 > t1) return t1;\n  while (t0 < t1) {\n    x2 = this.sampleCurveX(t2);\n    if (Math.abs(x2 - x) < epsilon) return t2;\n    if (x > x2) {\n      t0 = t2;\n    } else {\n      t1 = t2;\n    }\n    t2 = (t1 - t0) * 0.5 + t0;\n  }\n\n  // Failure.\n  return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n  return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};","map":{"version":3,"names":["module","exports","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@mapbox/unitbezier/index.js"],"sourcesContent":["/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}