{"ast":null,"code":"import { isDate, isString, last } from '@antv/util';\nimport fecha from 'fecha';\nimport * as fecha1 from 'fecha';\nimport bisector from './bisector';\nvar FORMAT_METHOD = 'format';\nexport function timeFormat(time, mask) {\n  var method = fecha1[FORMAT_METHOD] || fecha[FORMAT_METHOD];\n  return method(time, mask);\n}\n/**\n * 转换成时间戳\n * @param value 时间值\n */\nexport function toTimeStamp(value) {\n  if (isString(value)) {\n    if (value.indexOf('T') > 0) {\n      value = new Date(value).getTime();\n    } else {\n      // new Date('2010/01/10') 和 new Date('2010-01-10') 的差别在于:\n      // 如果仅有年月日时，前者是带有时区的: Fri Jan 10 2020 02:40:13 GMT+0800 (中国标准时间)\n      // 后者会格式化成 Sun Jan 10 2010 08:00:00 GMT+0800 (中国标准时间)\n      value = new Date(value.replace(/-/gi, '/')).getTime();\n    }\n  }\n  if (isDate(value)) {\n    value = value.getTime();\n  }\n  return value;\n}\nvar SECOND = 1000;\nvar MINUTE = 60 * SECOND;\nvar HOUR = 60 * MINUTE;\nvar DAY = 24 * HOUR;\nvar MONTH = DAY * 31;\nvar YEAR = DAY * 365;\nexport { SECOND, MINUTE, HOUR, DAY, MONTH, YEAR };\nvar intervals = [['HH:mm:ss', SECOND], ['HH:mm:ss', SECOND * 10], ['HH:mm:ss', SECOND * 30], ['HH:mm', MINUTE], ['HH:mm', MINUTE * 10], ['HH:mm', MINUTE * 30], ['HH', HOUR], ['HH', HOUR * 6], ['HH', HOUR * 12], ['YYYY-MM-DD', DAY], ['YYYY-MM-DD', DAY * 4], ['YYYY-WW', DAY * 7], ['YYYY-MM', MONTH], ['YYYY-MM', MONTH * 4], ['YYYY-MM', MONTH * 6], ['YYYY', DAY * 380]];\nexport function getTickInterval(min, max, tickCount) {\n  var target = (max - min) / tickCount;\n  var idx = bisector(function (o) {\n    return o[1];\n  })(intervals, target) - 1;\n  var interval = intervals[idx];\n  if (idx < 0) {\n    interval = intervals[0];\n  } else if (idx >= intervals.length) {\n    interval = last(intervals);\n  }\n  return interval;\n}","map":{"version":3,"names":["isDate","isString","last","fecha","fecha1","bisector","FORMAT_METHOD","timeFormat","time","mask","method","toTimeStamp","value","indexOf","Date","getTime","replace","SECOND","MINUTE","HOUR","DAY","MONTH","YEAR","intervals","getTickInterval","min","max","tickCount","target","idx","o","interval","length"],"sources":["../../src/util/time.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,YAAY;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,MAAM,MAAM,OAAO;AAE/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,IAAMC,aAAa,GAAG,QAAQ;AAE9B,OAAM,SAAUC,UAAUA,CAACC,IAAI,EAAEC,IAAI;EACnC,IAAMC,MAAM,GAAGN,MAAM,CAACE,aAAa,CAAC,IAAIH,KAAK,CAACG,aAAa,CAAC;EAC5D,OAAOI,MAAM,CAACF,IAAI,EAAEC,IAAI,CAAC;AAC3B;AACA;;;;AAIA,OAAM,SAAUE,WAAWA,CAACC,KAAU;EACpC,IAAIX,QAAQ,CAACW,KAAK,CAAC,EAAE;IACnB,IAAIA,KAAK,CAACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MAC1BD,KAAK,GAAG,IAAIE,IAAI,CAACF,KAAK,CAAC,CAACG,OAAO,EAAE;KAClC,MAAM;MACL;MACA;MACA;MACAH,KAAK,GAAG,IAAIE,IAAI,CAACF,KAAK,CAACI,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAACD,OAAO,EAAE;;;EAGzD,IAAIf,MAAM,CAACY,KAAK,CAAC,EAAE;IACjBA,KAAK,GAAGA,KAAK,CAACG,OAAO,EAAE;;EAEzB,OAAOH,KAAK;AACd;AAEA,IAAMK,MAAM,GAAG,IAAI;AACnB,IAAMC,MAAM,GAAG,EAAE,GAAGD,MAAM;AAC1B,IAAME,IAAI,GAAG,EAAE,GAAGD,MAAM;AACxB,IAAME,GAAG,GAAG,EAAE,GAAGD,IAAI;AACrB,IAAME,KAAK,GAAGD,GAAG,GAAG,EAAE;AACtB,IAAME,IAAI,GAAGF,GAAG,GAAG,GAAG;AAEtB,SAASH,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,IAAI;AAE/C,IAAMC,SAAS,GAAe,CAC5B,CAAC,UAAU,EAAEN,MAAM,CAAC,EACpB,CAAC,UAAU,EAAEA,MAAM,GAAG,EAAE,CAAC,EACzB,CAAC,UAAU,EAAEA,MAAM,GAAG,EAAE,CAAC,EACzB,CAAC,OAAO,EAAEC,MAAM,CAAC,EACjB,CAAC,OAAO,EAAEA,MAAM,GAAG,EAAE,CAAC,EACtB,CAAC,OAAO,EAAEA,MAAM,GAAG,EAAE,CAAC,EACtB,CAAC,IAAI,EAAEC,IAAI,CAAC,EACZ,CAAC,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC,EAChB,CAAC,IAAI,EAAEA,IAAI,GAAG,EAAE,CAAC,EACjB,CAAC,YAAY,EAAEC,GAAG,CAAC,EACnB,CAAC,YAAY,EAAEA,GAAG,GAAG,CAAC,CAAC,EACvB,CAAC,SAAS,EAAEA,GAAG,GAAG,CAAC,CAAC,EACpB,CAAC,SAAS,EAAEC,KAAK,CAAC,EAClB,CAAC,SAAS,EAAEA,KAAK,GAAG,CAAC,CAAC,EACtB,CAAC,SAAS,EAAEA,KAAK,GAAG,CAAC,CAAC,EACtB,CAAC,MAAM,EAAED,GAAG,GAAG,GAAG,CAAC,CACpB;AAED,OAAM,SAAUI,eAAeA,CAACC,GAAW,EAAEC,GAAW,EAAEC,SAAiB;EACzE,IAAMC,MAAM,GAAG,CAACF,GAAG,GAAGD,GAAG,IAAIE,SAAS;EACtC,IAAME,GAAG,GAAGxB,QAAQ,CAAC,UAACyB,CAAW;IAAK,OAAAA,CAAC,CAAC,CAAC,CAAC;EAAJ,CAAI,CAAC,CAACP,SAAS,EAAEK,MAAM,CAAC,GAAG,CAAC;EAClE,IAAIG,QAAQ,GAAaR,SAAS,CAACM,GAAG,CAAC;EACvC,IAAIA,GAAG,GAAG,CAAC,EAAE;IACXE,QAAQ,GAAGR,SAAS,CAAC,CAAC,CAAC;GACxB,MAAM,IAAIM,GAAG,IAAIN,SAAS,CAACS,MAAM,EAAE;IAClCD,QAAQ,GAAG7B,IAAI,CAACqB,SAAS,CAAC;;EAE5B,OAAOQ,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}