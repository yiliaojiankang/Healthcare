{"ast":null,"code":"export function createProgram(gl, vshader, fshader) {\n  // Create shader object\n  var vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader); // 创建顶点着色器对象\n  var fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader); // 创建片元着色器对象\n  if (!vertexShader || !fragmentShader) {\n    return null;\n  }\n\n  // Create a program object\n  var program = gl.createProgram(); // 创建程序对象\n  if (!program) {\n    return null;\n  }\n\n  // Attach the shader objects\n  gl.attachShader(program, vertexShader); // 绑定着色器对象\n  gl.attachShader(program, fragmentShader);\n\n  // Link the program object\n  gl.linkProgram(program); // 链接着色器对象\n\n  // Check the result of linking\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS); // 判断着色器对象是否链接成功\n  if (!linked) {\n    var error = gl.getProgramInfoLog(program);\n    console.warn('Failed to link program: ' + error);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n    gl.deleteShader(vertexShader);\n    return null;\n  }\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (var i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    // @ts-ignore\n    program[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (var i$1 = 0; i$1 < numUniforms; i$1++) {\n    var uniform = gl.getActiveUniform(program, i$1);\n    // @ts-ignore\n    program[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  // @ts-ignore\n  program.vertexShader = vertexShader;\n  // @ts-ignore\n  program.fragmentShader = fragmentShader;\n  return program;\n}\nexport function loadShader(gl, type, source) {\n  // Create shader object\n  var shader = gl.createShader(type); // 生成着色器对象\n  if (shader == null) {\n    console.warn('unable to create shader');\n    return null;\n  }\n\n  // Set the shader program\n  gl.shaderSource(shader, source); // 载入着色器\n\n  // Compile the shader\n  gl.compileShader(shader); // 编译着色器代码\n\n  // Check the result of compilation\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS); // 判断着色器对象是否生成成功\n  // gl.SHADER_TYPE、gl.DELETE_STATUS、gl.COMPILE_STATUS\n  if (!compiled) {\n    var error = gl.getShaderInfoLog(shader);\n    console.warn('Failed to compile shader: ' + error);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\nexport function createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\nexport function createDataTexture(gl, filter, data) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\nexport function bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\nexport function createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\nexport function bindAttriBuffer(gl, attrName, vertices, count, program) {\n  var buffer = gl.createBuffer();\n  if (!buffer) {\n    console.warn('failed create vertex buffer');\n  }\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer); // 将缓冲区对象绑定到目标\n  gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW); // 向缓冲区对象中写入数据\n\n  var attr = gl.getAttribLocation(program, attrName);\n  gl.vertexAttribPointer(attr, count, gl.FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(attr);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return {\n    buffer: buffer,\n    attr: attr,\n    count: count\n  };\n}\nexport function bindAttriIndicesBuffer(gl, indices) {\n  var buffer = gl.createBuffer();\n  if (!buffer) {\n    console.warn('failed create vertex buffer');\n  } else {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n  }\n  return buffer;\n}\nexport function bindUnifrom(gl, unifromName, data, program, vec) {\n  var uniform = gl.getUniformLocation(program, unifromName);\n  // @ts-ignore\n  if (uniform === null || uniform < 0) {\n    console.warn('无法获取 uniform 变量的存储位置');\n  } else {\n    setUnifrom(gl, uniform, data, vec);\n  }\n  return uniform;\n}\nexport function setUnifrom(gl, location, data, vec) {\n  switch (vec) {\n    case 'float':\n      gl.uniform1f(location, data);\n      break;\n    case 'vec2':\n      gl.uniform2fv(location, data);\n      break;\n    case 'vec3':\n      gl.uniform3fv(location, data);\n      break;\n    case 'vec4':\n      gl.uniform4fv(location, data);\n      break;\n    case 'bool':\n      gl.uniform1i(location, data); // 1 - true    0 - false\n      break;\n    case 'sampler2d':\n      break;\n    case 'mat4':\n      gl.uniformMatrix4fv(location, false, data);\n      break;\n  }\n}\nexport function initFramebuffer(gl) {\n  var drawingBufferWidth = gl.drawingBufferWidth,\n    drawingBufferHeight = gl.drawingBufferHeight;\n  var OFFER_SCREEN_WIDTH = drawingBufferWidth;\n  var OFFER_SCREEN_HEIGHT = drawingBufferHeight;\n  var FRAMEBUFFER = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, FRAMEBUFFER);\n  var depthbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, depthbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, OFFER_SCREEN_WIDTH, OFFER_SCREEN_HEIGHT);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthbuffer);\n  var texture = gl.createTexture();\n  // @ts-ignore\n  FRAMEBUFFER.texture = texture;\n  // @ts-ignore\n  FRAMEBUFFER.width = OFFER_SCREEN_WIDTH;\n  // @ts-ignore\n  FRAMEBUFFER.height = OFFER_SCREEN_HEIGHT;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, OFFER_SCREEN_WIDTH, OFFER_SCREEN_HEIGHT, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return {\n    FRAMEBUFFER: FRAMEBUFFER,\n    OFFER_SCREEN_WIDTH: OFFER_SCREEN_WIDTH,\n    OFFER_SCREEN_HEIGHT: OFFER_SCREEN_HEIGHT\n  };\n}","map":{"version":3,"names":["createProgram","gl","vshader","fshader","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","console","warn","deleteProgram","deleteShader","numAttributes","ACTIVE_ATTRIBUTES","i","attribute","getActiveAttrib","name","getAttribLocation","numUniforms","ACTIVE_UNIFORMS","i$1","uniform","getActiveUniform","getUniformLocation","type","source","shader","createShader","shaderSource","compileShader","compiled","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createTexture","filter","data","width","height","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","createDataTexture","unit","activeTexture","TEXTURE0","createBuffer","buffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","bindAttriBuffer","attrName","vertices","count","attr","vertexAttribPointer","FLOAT","enableVertexAttribArray","bindAttriIndicesBuffer","indices","ELEMENT_ARRAY_BUFFER","bindUnifrom","unifromName","vec","setUnifrom","location","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1i","uniformMatrix4fv","initFramebuffer","drawingBufferWidth","drawingBufferHeight","OFFER_SCREEN_WIDTH","OFFER_SCREEN_HEIGHT","FRAMEBUFFER","createFramebuffer","bindFramebuffer","depthbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","NEAREST","framebufferTexture2D","COLOR_ATTACHMENT0"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/wind/models/utils.js"],"sourcesContent":["export function createProgram(gl, vshader, fshader) {\n  // Create shader object\n  var vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader); // 创建顶点着色器对象\n  var fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader); // 创建片元着色器对象\n  if (!vertexShader || !fragmentShader) {\n    return null;\n  }\n\n  // Create a program object\n  var program = gl.createProgram(); // 创建程序对象\n  if (!program) {\n    return null;\n  }\n\n  // Attach the shader objects\n  gl.attachShader(program, vertexShader); // 绑定着色器对象\n  gl.attachShader(program, fragmentShader);\n\n  // Link the program object\n  gl.linkProgram(program); // 链接着色器对象\n\n  // Check the result of linking\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS); // 判断着色器对象是否链接成功\n  if (!linked) {\n    var error = gl.getProgramInfoLog(program);\n    console.warn('Failed to link program: ' + error);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n    gl.deleteShader(vertexShader);\n    return null;\n  }\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (var i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    // @ts-ignore\n    program[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (var i$1 = 0; i$1 < numUniforms; i$1++) {\n    var uniform = gl.getActiveUniform(program, i$1);\n    // @ts-ignore\n    program[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  // @ts-ignore\n  program.vertexShader = vertexShader;\n  // @ts-ignore\n  program.fragmentShader = fragmentShader;\n  return program;\n}\nexport function loadShader(gl, type, source) {\n  // Create shader object\n  var shader = gl.createShader(type); // 生成着色器对象\n  if (shader == null) {\n    console.warn('unable to create shader');\n    return null;\n  }\n\n  // Set the shader program\n  gl.shaderSource(shader, source); // 载入着色器\n\n  // Compile the shader\n  gl.compileShader(shader); // 编译着色器代码\n\n  // Check the result of compilation\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS); // 判断着色器对象是否生成成功\n  // gl.SHADER_TYPE、gl.DELETE_STATUS、gl.COMPILE_STATUS\n  if (!compiled) {\n    var error = gl.getShaderInfoLog(shader);\n    console.warn('Failed to compile shader: ' + error);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\nexport function createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\nexport function createDataTexture(gl, filter, data) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\nexport function bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\nexport function createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\nexport function bindAttriBuffer(gl, attrName, vertices, count, program) {\n  var buffer = gl.createBuffer();\n  if (!buffer) {\n    console.warn('failed create vertex buffer');\n  }\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer); // 将缓冲区对象绑定到目标\n  gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW); // 向缓冲区对象中写入数据\n\n  var attr = gl.getAttribLocation(program, attrName);\n  gl.vertexAttribPointer(attr, count, gl.FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(attr);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return {\n    buffer: buffer,\n    attr: attr,\n    count: count\n  };\n}\nexport function bindAttriIndicesBuffer(gl, indices) {\n  var buffer = gl.createBuffer();\n  if (!buffer) {\n    console.warn('failed create vertex buffer');\n  } else {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n  }\n  return buffer;\n}\nexport function bindUnifrom(gl, unifromName, data, program, vec) {\n  var uniform = gl.getUniformLocation(program, unifromName);\n  // @ts-ignore\n  if (uniform === null || uniform < 0) {\n    console.warn('无法获取 uniform 变量的存储位置');\n  } else {\n    setUnifrom(gl, uniform, data, vec);\n  }\n  return uniform;\n}\nexport function setUnifrom(gl, location, data, vec) {\n  switch (vec) {\n    case 'float':\n      gl.uniform1f(location, data);\n      break;\n    case 'vec2':\n      gl.uniform2fv(location, data);\n      break;\n    case 'vec3':\n      gl.uniform3fv(location, data);\n      break;\n    case 'vec4':\n      gl.uniform4fv(location, data);\n      break;\n    case 'bool':\n      gl.uniform1i(location, data); // 1 - true    0 - false\n      break;\n    case 'sampler2d':\n      break;\n    case 'mat4':\n      gl.uniformMatrix4fv(location, false, data);\n      break;\n  }\n}\nexport function initFramebuffer(gl) {\n  var drawingBufferWidth = gl.drawingBufferWidth,\n    drawingBufferHeight = gl.drawingBufferHeight;\n  var OFFER_SCREEN_WIDTH = drawingBufferWidth;\n  var OFFER_SCREEN_HEIGHT = drawingBufferHeight;\n  var FRAMEBUFFER = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, FRAMEBUFFER);\n  var depthbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, depthbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, OFFER_SCREEN_WIDTH, OFFER_SCREEN_HEIGHT);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthbuffer);\n  var texture = gl.createTexture();\n  // @ts-ignore\n  FRAMEBUFFER.texture = texture;\n  // @ts-ignore\n  FRAMEBUFFER.width = OFFER_SCREEN_WIDTH;\n  // @ts-ignore\n  FRAMEBUFFER.height = OFFER_SCREEN_HEIGHT;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, OFFER_SCREEN_WIDTH, OFFER_SCREEN_HEIGHT, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return {\n    FRAMEBUFFER: FRAMEBUFFER,\n    OFFER_SCREEN_WIDTH: OFFER_SCREEN_WIDTH,\n    OFFER_SCREEN_HEIGHT: OFFER_SCREEN_HEIGHT\n  };\n}"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAClD;EACA,IAAIC,YAAY,GAAGC,UAAU,CAACJ,EAAE,EAAEA,EAAE,CAACK,aAAa,EAAEJ,OAAO,CAAC,CAAC,CAAC;EAC9D,IAAIK,cAAc,GAAGF,UAAU,CAACJ,EAAE,EAAEA,EAAE,CAACO,eAAe,EAAEL,OAAO,CAAC,CAAC,CAAC;EAClE,IAAI,CAACC,YAAY,IAAI,CAACG,cAAc,EAAE;IACpC,OAAO,IAAI;EACb;;EAEA;EACA,IAAIE,OAAO,GAAGR,EAAE,CAACD,aAAa,CAAC,CAAC,CAAC,CAAC;EAClC,IAAI,CAACS,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;;EAEA;EACAR,EAAE,CAACS,YAAY,CAACD,OAAO,EAAEL,YAAY,CAAC,CAAC,CAAC;EACxCH,EAAE,CAACS,YAAY,CAACD,OAAO,EAAEF,cAAc,CAAC;;EAExC;EACAN,EAAE,CAACU,WAAW,CAACF,OAAO,CAAC,CAAC,CAAC;;EAEzB;EACA,IAAIG,MAAM,GAAGX,EAAE,CAACY,mBAAmB,CAACJ,OAAO,EAAER,EAAE,CAACa,WAAW,CAAC,CAAC,CAAC;EAC9D,IAAI,CAACF,MAAM,EAAE;IACX,IAAIG,KAAK,GAAGd,EAAE,CAACe,iBAAiB,CAACP,OAAO,CAAC;IACzCQ,OAAO,CAACC,IAAI,CAAC,0BAA0B,GAAGH,KAAK,CAAC;IAChDd,EAAE,CAACkB,aAAa,CAACV,OAAO,CAAC;IACzBR,EAAE,CAACmB,YAAY,CAACb,cAAc,CAAC;IAC/BN,EAAE,CAACmB,YAAY,CAAChB,YAAY,CAAC;IAC7B,OAAO,IAAI;EACb;EACA,IAAIiB,aAAa,GAAGpB,EAAE,CAACY,mBAAmB,CAACJ,OAAO,EAAER,EAAE,CAACqB,iBAAiB,CAAC;EACzE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC,IAAIC,SAAS,GAAGvB,EAAE,CAACwB,eAAe,CAAChB,OAAO,EAAEc,CAAC,CAAC;IAC9C;IACAd,OAAO,CAACe,SAAS,CAACE,IAAI,CAAC,GAAGzB,EAAE,CAAC0B,iBAAiB,CAAClB,OAAO,EAAEe,SAAS,CAACE,IAAI,CAAC;EACzE;EACA,IAAIE,WAAW,GAAG3B,EAAE,CAACY,mBAAmB,CAACJ,OAAO,EAAER,EAAE,CAAC4B,eAAe,CAAC;EACrE,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,WAAW,EAAEE,GAAG,EAAE,EAAE;IAC1C,IAAIC,OAAO,GAAG9B,EAAE,CAAC+B,gBAAgB,CAACvB,OAAO,EAAEqB,GAAG,CAAC;IAC/C;IACArB,OAAO,CAACsB,OAAO,CAACL,IAAI,CAAC,GAAGzB,EAAE,CAACgC,kBAAkB,CAACxB,OAAO,EAAEsB,OAAO,CAACL,IAAI,CAAC;EACtE;;EAEA;EACAjB,OAAO,CAACL,YAAY,GAAGA,YAAY;EACnC;EACAK,OAAO,CAACF,cAAc,GAAGA,cAAc;EACvC,OAAOE,OAAO;AAChB;AACA,OAAO,SAASJ,UAAUA,CAACJ,EAAE,EAAEiC,IAAI,EAAEC,MAAM,EAAE;EAC3C;EACA,IAAIC,MAAM,GAAGnC,EAAE,CAACoC,YAAY,CAACH,IAAI,CAAC,CAAC,CAAC;EACpC,IAAIE,MAAM,IAAI,IAAI,EAAE;IAClBnB,OAAO,CAACC,IAAI,CAAC,yBAAyB,CAAC;IACvC,OAAO,IAAI;EACb;;EAEA;EACAjB,EAAE,CAACqC,YAAY,CAACF,MAAM,EAAED,MAAM,CAAC,CAAC,CAAC;;EAEjC;EACAlC,EAAE,CAACsC,aAAa,CAACH,MAAM,CAAC,CAAC,CAAC;;EAE1B;EACA,IAAII,QAAQ,GAAGvC,EAAE,CAACwC,kBAAkB,CAACL,MAAM,EAAEnC,EAAE,CAACyC,cAAc,CAAC,CAAC,CAAC;EACjE;EACA,IAAI,CAACF,QAAQ,EAAE;IACb,IAAIzB,KAAK,GAAGd,EAAE,CAAC0C,gBAAgB,CAACP,MAAM,CAAC;IACvCnB,OAAO,CAACC,IAAI,CAAC,4BAA4B,GAAGH,KAAK,CAAC;IAClDd,EAAE,CAACmB,YAAY,CAACgB,MAAM,CAAC;IACvB,OAAO,IAAI;EACb;EACA,OAAOA,MAAM;AACf;AACA,OAAO,SAASQ,aAAaA,CAAC3C,EAAE,EAAE4C,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EAC7D,IAAIC,OAAO,GAAGhD,EAAE,CAAC2C,aAAa,CAAC,CAAC;EAChC3C,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAEF,OAAO,CAAC;EACtChD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACoD,cAAc,EAAEpD,EAAE,CAACqD,aAAa,CAAC;EACpErD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACsD,cAAc,EAAEtD,EAAE,CAACqD,aAAa,CAAC;EACpErD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACuD,kBAAkB,EAAEX,MAAM,CAAC;EAC9D5C,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACwD,kBAAkB,EAAEZ,MAAM,CAAC;EAC9D5C,EAAE,CAACyD,UAAU,CAACzD,EAAE,CAACkD,UAAU,EAAE,CAAC,EAAElD,EAAE,CAAC0D,IAAI,EAAEZ,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE/C,EAAE,CAAC0D,IAAI,EAAE1D,EAAE,CAAC2D,aAAa,EAAEd,IAAI,CAAC;EAC3F7C,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAE,IAAI,CAAC;EACnC,OAAOF,OAAO;AAChB;AACA,OAAO,SAASY,iBAAiBA,CAAC5D,EAAE,EAAE4C,MAAM,EAAEC,IAAI,EAAE;EAClD,IAAIG,OAAO,GAAGhD,EAAE,CAAC2C,aAAa,CAAC,CAAC;EAChC3C,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAEF,OAAO,CAAC;EACtChD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACoD,cAAc,EAAEpD,EAAE,CAACqD,aAAa,CAAC;EACpErD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACsD,cAAc,EAAEtD,EAAE,CAACqD,aAAa,CAAC;EACpErD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACuD,kBAAkB,EAAEX,MAAM,CAAC;EAC9D5C,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACwD,kBAAkB,EAAEZ,MAAM,CAAC;EAC9D5C,EAAE,CAACyD,UAAU,CAACzD,EAAE,CAACkD,UAAU,EAAE,CAAC,EAAElD,EAAE,CAAC0D,IAAI,EAAE1D,EAAE,CAAC0D,IAAI,EAAE1D,EAAE,CAAC2D,aAAa,EAAEd,IAAI,CAAC;EACzE7C,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAE,IAAI,CAAC;EACnC,OAAOF,OAAO;AAChB;AACA,OAAO,SAASC,WAAWA,CAACjD,EAAE,EAAEgD,OAAO,EAAEa,IAAI,EAAE;EAC7C7D,EAAE,CAAC8D,aAAa,CAAC9D,EAAE,CAAC+D,QAAQ,GAAGF,IAAI,CAAC;EACpC7D,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAEF,OAAO,CAAC;AACxC;AACA,OAAO,SAASgB,YAAYA,CAAChE,EAAE,EAAE6C,IAAI,EAAE;EACrC,IAAIoB,MAAM,GAAGjE,EAAE,CAACgE,YAAY,CAAC,CAAC;EAC9BhE,EAAE,CAACkE,UAAU,CAAClE,EAAE,CAACmE,YAAY,EAAEF,MAAM,CAAC;EACtCjE,EAAE,CAACoE,UAAU,CAACpE,EAAE,CAACmE,YAAY,EAAEtB,IAAI,EAAE7C,EAAE,CAACqE,WAAW,CAAC;EACpD,OAAOJ,MAAM;AACf;AACA,OAAO,SAASK,eAAeA,CAACtE,EAAE,EAAEuE,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEjE,OAAO,EAAE;EACtE,IAAIyD,MAAM,GAAGjE,EAAE,CAACgE,YAAY,CAAC,CAAC;EAC9B,IAAI,CAACC,MAAM,EAAE;IACXjD,OAAO,CAACC,IAAI,CAAC,6BAA6B,CAAC;EAC7C;EACAjB,EAAE,CAACkE,UAAU,CAAClE,EAAE,CAACmE,YAAY,EAAEF,MAAM,CAAC,CAAC,CAAC;EACxCjE,EAAE,CAACoE,UAAU,CAACpE,EAAE,CAACmE,YAAY,EAAEK,QAAQ,EAAExE,EAAE,CAACqE,WAAW,CAAC,CAAC,CAAC;;EAE1D,IAAIK,IAAI,GAAG1E,EAAE,CAAC0B,iBAAiB,CAAClB,OAAO,EAAE+D,QAAQ,CAAC;EAClDvE,EAAE,CAAC2E,mBAAmB,CAACD,IAAI,EAAED,KAAK,EAAEzE,EAAE,CAAC4E,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1D5E,EAAE,CAAC6E,uBAAuB,CAACH,IAAI,CAAC;EAChC1E,EAAE,CAACkE,UAAU,CAAClE,EAAE,CAACmE,YAAY,EAAE,IAAI,CAAC;EACpC,OAAO;IACLF,MAAM,EAAEA,MAAM;IACdS,IAAI,EAAEA,IAAI;IACVD,KAAK,EAAEA;EACT,CAAC;AACH;AACA,OAAO,SAASK,sBAAsBA,CAAC9E,EAAE,EAAE+E,OAAO,EAAE;EAClD,IAAId,MAAM,GAAGjE,EAAE,CAACgE,YAAY,CAAC,CAAC;EAC9B,IAAI,CAACC,MAAM,EAAE;IACXjD,OAAO,CAACC,IAAI,CAAC,6BAA6B,CAAC;EAC7C,CAAC,MAAM;IACLjB,EAAE,CAACkE,UAAU,CAAClE,EAAE,CAACgF,oBAAoB,EAAEf,MAAM,CAAC;IAC9CjE,EAAE,CAACoE,UAAU,CAACpE,EAAE,CAACgF,oBAAoB,EAAED,OAAO,EAAE/E,EAAE,CAACqE,WAAW,CAAC;EACjE;EACA,OAAOJ,MAAM;AACf;AACA,OAAO,SAASgB,WAAWA,CAACjF,EAAE,EAAEkF,WAAW,EAAErC,IAAI,EAAErC,OAAO,EAAE2E,GAAG,EAAE;EAC/D,IAAIrD,OAAO,GAAG9B,EAAE,CAACgC,kBAAkB,CAACxB,OAAO,EAAE0E,WAAW,CAAC;EACzD;EACA,IAAIpD,OAAO,KAAK,IAAI,IAAIA,OAAO,GAAG,CAAC,EAAE;IACnCd,OAAO,CAACC,IAAI,CAAC,sBAAsB,CAAC;EACtC,CAAC,MAAM;IACLmE,UAAU,CAACpF,EAAE,EAAE8B,OAAO,EAAEe,IAAI,EAAEsC,GAAG,CAAC;EACpC;EACA,OAAOrD,OAAO;AAChB;AACA,OAAO,SAASsD,UAAUA,CAACpF,EAAE,EAAEqF,QAAQ,EAAExC,IAAI,EAAEsC,GAAG,EAAE;EAClD,QAAQA,GAAG;IACT,KAAK,OAAO;MACVnF,EAAE,CAACsF,SAAS,CAACD,QAAQ,EAAExC,IAAI,CAAC;MAC5B;IACF,KAAK,MAAM;MACT7C,EAAE,CAACuF,UAAU,CAACF,QAAQ,EAAExC,IAAI,CAAC;MAC7B;IACF,KAAK,MAAM;MACT7C,EAAE,CAACwF,UAAU,CAACH,QAAQ,EAAExC,IAAI,CAAC;MAC7B;IACF,KAAK,MAAM;MACT7C,EAAE,CAACyF,UAAU,CAACJ,QAAQ,EAAExC,IAAI,CAAC;MAC7B;IACF,KAAK,MAAM;MACT7C,EAAE,CAAC0F,SAAS,CAACL,QAAQ,EAAExC,IAAI,CAAC,CAAC,CAAC;MAC9B;IACF,KAAK,WAAW;MACd;IACF,KAAK,MAAM;MACT7C,EAAE,CAAC2F,gBAAgB,CAACN,QAAQ,EAAE,KAAK,EAAExC,IAAI,CAAC;MAC1C;EACJ;AACF;AACA,OAAO,SAAS+C,eAAeA,CAAC5F,EAAE,EAAE;EAClC,IAAI6F,kBAAkB,GAAG7F,EAAE,CAAC6F,kBAAkB;IAC5CC,mBAAmB,GAAG9F,EAAE,CAAC8F,mBAAmB;EAC9C,IAAIC,kBAAkB,GAAGF,kBAAkB;EAC3C,IAAIG,mBAAmB,GAAGF,mBAAmB;EAC7C,IAAIG,WAAW,GAAGjG,EAAE,CAACkG,iBAAiB,CAAC,CAAC;EACxClG,EAAE,CAACmG,eAAe,CAACnG,EAAE,CAACiG,WAAW,EAAEA,WAAW,CAAC;EAC/C,IAAIG,WAAW,GAAGpG,EAAE,CAACqG,kBAAkB,CAAC,CAAC;EACzCrG,EAAE,CAACsG,gBAAgB,CAACtG,EAAE,CAACuG,YAAY,EAAEH,WAAW,CAAC;EACjDpG,EAAE,CAACwG,mBAAmB,CAACxG,EAAE,CAACuG,YAAY,EAAEvG,EAAE,CAACyG,iBAAiB,EAAEV,kBAAkB,EAAEC,mBAAmB,CAAC;EACtGhG,EAAE,CAAC0G,uBAAuB,CAAC1G,EAAE,CAACiG,WAAW,EAAEjG,EAAE,CAAC2G,gBAAgB,EAAE3G,EAAE,CAACuG,YAAY,EAAEH,WAAW,CAAC;EAC7F,IAAIpD,OAAO,GAAGhD,EAAE,CAAC2C,aAAa,CAAC,CAAC;EAChC;EACAsD,WAAW,CAACjD,OAAO,GAAGA,OAAO;EAC7B;EACAiD,WAAW,CAACnD,KAAK,GAAGiD,kBAAkB;EACtC;EACAE,WAAW,CAAClD,MAAM,GAAGiD,mBAAmB;EACxChG,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAEF,OAAO,CAAC;EACtChD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACwD,kBAAkB,EAAExD,EAAE,CAAC4G,OAAO,CAAC;EAClE5G,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACuD,kBAAkB,EAAEvD,EAAE,CAAC4G,OAAO,CAAC;EAClE5G,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACoD,cAAc,EAAEpD,EAAE,CAACqD,aAAa,CAAC;EACpErD,EAAE,CAACmD,aAAa,CAACnD,EAAE,CAACkD,UAAU,EAAElD,EAAE,CAACsD,cAAc,EAAEtD,EAAE,CAACqD,aAAa,CAAC;EACpErD,EAAE,CAACyD,UAAU,CAACzD,EAAE,CAACkD,UAAU,EAAE,CAAC,EAAElD,EAAE,CAAC0D,IAAI,EAAEqC,kBAAkB,EAAEC,mBAAmB,EAAE,CAAC,EAAEhG,EAAE,CAAC0D,IAAI,EAAE1D,EAAE,CAAC2D,aAAa,EAAE,IAAI,CAAC;EACrH3D,EAAE,CAAC6G,oBAAoB,CAAC7G,EAAE,CAACiG,WAAW,EAAEjG,EAAE,CAAC8G,iBAAiB,EAAE9G,EAAE,CAACkD,UAAU,EAAEF,OAAO,EAAE,CAAC,CAAC;EACxFhD,EAAE,CAACiD,WAAW,CAACjD,EAAE,CAACkD,UAAU,EAAE,IAAI,CAAC;EACnClD,EAAE,CAACmG,eAAe,CAACnG,EAAE,CAACiG,WAAW,EAAE,IAAI,CAAC;EACxC,OAAO;IACLA,WAAW,EAAEA,WAAW;IACxBF,kBAAkB,EAAEA,kBAAkB;IACtCC,mBAAmB,EAAEA;EACvB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}