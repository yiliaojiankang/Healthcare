{"ast":null,"code":"import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n      return a * determinant(subMatrix0) - b * determinant(subMatrix1) + c * determinant(subMatrix2);\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}","map":{"version":3,"names":["LuDecomposition","Matrix","MatrixSelectionView","determinant","matrix","checkMatrix","isSquare","a","b","c","d","columns","get","subMatrix0","subMatrix1","subMatrix2","Error"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/layout/node_modules/ml-matrix/src/determinant.js"],"sourcesContent":["import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,SAAS;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,mBAAmB,MAAM,mBAAmB;AAEnD,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAE;EAClCA,MAAM,GAAGH,MAAM,CAACI,WAAW,CAACD,MAAM,CAAC;EACnC,IAAIA,MAAM,CAACE,QAAQ,CAAC,CAAC,EAAE;IACrB,IAAIC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC;IACd,IAAIN,MAAM,CAACO,OAAO,KAAK,CAAC,EAAE;MACxB;MACAJ,CAAC,GAAGH,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBJ,CAAC,GAAGJ,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBH,CAAC,GAAGL,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBF,CAAC,GAAGN,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAEpB,OAAOL,CAAC,GAAGG,CAAC,GAAGF,CAAC,GAAGC,CAAC;IACtB,CAAC,MAAM,IAAIL,MAAM,CAACO,OAAO,KAAK,CAAC,EAAE;MAC/B;MACA,IAAIE,UAAU,EAAEC,UAAU,EAAEC,UAAU;MACtCF,UAAU,GAAG,IAAIX,mBAAmB,CAACE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DU,UAAU,GAAG,IAAIZ,mBAAmB,CAACE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DW,UAAU,GAAG,IAAIb,mBAAmB,CAACE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5DG,CAAC,GAAGH,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBJ,CAAC,GAAGJ,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBH,CAAC,GAAGL,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAEpB,OACEL,CAAC,GAAGJ,WAAW,CAACU,UAAU,CAAC,GAC3BL,CAAC,GAAGL,WAAW,CAACW,UAAU,CAAC,GAC3BL,CAAC,GAAGN,WAAW,CAACY,UAAU,CAAC;IAE/B,CAAC,MAAM;MACL;MACA,OAAO,IAAIf,eAAe,CAACI,MAAM,CAAC,CAACD,WAAW;IAChD;EACF,CAAC,MAAM;IACL,MAAMa,KAAK,CAAC,wDAAwD,CAAC;EACvE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}