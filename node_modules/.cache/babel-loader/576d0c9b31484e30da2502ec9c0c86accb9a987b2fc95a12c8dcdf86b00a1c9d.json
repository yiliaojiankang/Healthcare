{"ast":null,"code":"import { bandsOperation } from \"../utils/bandOperation/bands\";\nimport { isNumberArray } from \"../utils/util\";\nexport default function raster(data, cfg) {\n  var extent = cfg.extent,\n    width = cfg.width,\n    height = cfg.height,\n    min = cfg.min,\n    max = cfg.max,\n    format = cfg.format,\n    operation = cfg.operation;\n  var bandData;\n  var rasterWidth;\n  var rasterHeight;\n  if (format === undefined || isNumberArray(data)) {\n    // 兼容写法 - 用户直接传入解析完的波段数据\n    bandData = Array.from(data);\n    rasterWidth = width;\n    rasterHeight = height;\n  } else {\n    // 用户传入为解析的栅格数据 - arraybuffer\n    // 将数据统一为 IRasterFileData[]\n    var imageDataList = Array.isArray(data) ? data : [data];\n    bandData = bandsOperation(imageDataList, format, operation);\n  }\n  var resultData = {\n    _id: 1,\n    dataArray: [{\n      _id: 1,\n      data: bandData,\n      width: rasterWidth,\n      height: rasterHeight,\n      min: min,\n      max: max,\n      coordinates: [[extent[0], extent[1]], [extent[2], extent[3]]]\n    }]\n  };\n  return resultData;\n}","map":{"version":3,"names":["bandsOperation","isNumberArray","raster","data","cfg","extent","width","height","min","max","format","operation","bandData","rasterWidth","rasterHeight","undefined","Array","from","imageDataList","isArray","resultData","_id","dataArray","coordinates"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/parser/raster.js"],"sourcesContent":["import { bandsOperation } from \"../utils/bandOperation/bands\";\nimport { isNumberArray } from \"../utils/util\";\nexport default function raster(data, cfg) {\n  var extent = cfg.extent,\n    width = cfg.width,\n    height = cfg.height,\n    min = cfg.min,\n    max = cfg.max,\n    format = cfg.format,\n    operation = cfg.operation;\n  var bandData;\n  var rasterWidth;\n  var rasterHeight;\n  if (format === undefined || isNumberArray(data)) {\n    // 兼容写法 - 用户直接传入解析完的波段数据\n    bandData = Array.from(data);\n    rasterWidth = width;\n    rasterHeight = height;\n  } else {\n    // 用户传入为解析的栅格数据 - arraybuffer\n    // 将数据统一为 IRasterFileData[]\n    var imageDataList = Array.isArray(data) ? data : [data];\n    bandData = bandsOperation(imageDataList, format, operation);\n  }\n  var resultData = {\n    _id: 1,\n    dataArray: [{\n      _id: 1,\n      data: bandData,\n      width: rasterWidth,\n      height: rasterHeight,\n      min: min,\n      max: max,\n      coordinates: [[extent[0], extent[1]], [extent[2], extent[3]]]\n    }]\n  };\n  return resultData;\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,aAAa,QAAQ,eAAe;AAC7C,eAAe,SAASC,MAAMA,CAACC,IAAI,EAAEC,GAAG,EAAE;EACxC,IAAIC,MAAM,GAAGD,GAAG,CAACC,MAAM;IACrBC,KAAK,GAAGF,GAAG,CAACE,KAAK;IACjBC,MAAM,GAAGH,GAAG,CAACG,MAAM;IACnBC,GAAG,GAAGJ,GAAG,CAACI,GAAG;IACbC,GAAG,GAAGL,GAAG,CAACK,GAAG;IACbC,MAAM,GAAGN,GAAG,CAACM,MAAM;IACnBC,SAAS,GAAGP,GAAG,CAACO,SAAS;EAC3B,IAAIC,QAAQ;EACZ,IAAIC,WAAW;EACf,IAAIC,YAAY;EAChB,IAAIJ,MAAM,KAAKK,SAAS,IAAId,aAAa,CAACE,IAAI,CAAC,EAAE;IAC/C;IACAS,QAAQ,GAAGI,KAAK,CAACC,IAAI,CAACd,IAAI,CAAC;IAC3BU,WAAW,GAAGP,KAAK;IACnBQ,YAAY,GAAGP,MAAM;EACvB,CAAC,MAAM;IACL;IACA;IACA,IAAIW,aAAa,GAAGF,KAAK,CAACG,OAAO,CAAChB,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;IACvDS,QAAQ,GAAGZ,cAAc,CAACkB,aAAa,EAAER,MAAM,EAAEC,SAAS,CAAC;EAC7D;EACA,IAAIS,UAAU,GAAG;IACfC,GAAG,EAAE,CAAC;IACNC,SAAS,EAAE,CAAC;MACVD,GAAG,EAAE,CAAC;MACNlB,IAAI,EAAES,QAAQ;MACdN,KAAK,EAAEO,WAAW;MAClBN,MAAM,EAAEO,YAAY;MACpBN,GAAG,EAAEA,GAAG;MACRC,GAAG,EAAEA,GAAG;MACRc,WAAW,EAAE,CAAC,CAAClB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;EACH,CAAC;EACD,OAAOe,UAAU;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}