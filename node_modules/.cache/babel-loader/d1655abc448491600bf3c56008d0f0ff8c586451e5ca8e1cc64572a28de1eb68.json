{"ast":null,"code":"import { isEqual, some } from '@antv/util';\n/**\n * @ignore\n * Determines whether model is change\n * @param currentModel\n * @param preModel\n * @returns\n */\nexport function isModelChange(currentModel, preModel) {\n  return some(['color', 'shape', 'size', 'x', 'y', 'isInCircle', 'data', 'style', 'defaultStyle', 'points', 'mappingData'], function (key) {\n    return !isEqual(currentModel[key], preModel[key]);\n  });\n}","map":{"version":3,"names":["isEqual","some","isModelChange","currentModel","preModel","key"],"sources":["../../../src/geometry/util/is-model-change.ts"],"sourcesContent":["import { isEqual, some } from '@antv/util';\nimport { ShapeInfo } from '../../interface';\n\n/**\n * @ignore\n * Determines whether model is change\n * @param currentModel\n * @param preModel\n * @returns\n */\nexport function isModelChange(currentModel: ShapeInfo, preModel: ShapeInfo) {\n  return some(\n    ['color', 'shape', 'size', 'x', 'y', 'isInCircle', 'data', 'style', 'defaultStyle', 'points', 'mappingData'],\n    (key: string) => {\n      return !isEqual(currentModel[key], preModel[key]);\n    }\n  );\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,IAAI,QAAQ,YAAY;AAG1C;;;;;;;AAOA,OAAM,SAAUC,aAAaA,CAACC,YAAuB,EAAEC,QAAmB;EACxE,OAAOH,IAAI,CACT,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,aAAa,CAAC,EAC5G,UAACI,GAAW;IACV,OAAO,CAACL,OAAO,CAACG,YAAY,CAACE,GAAG,CAAC,EAAED,QAAQ,CAACC,GAAG,CAAC,CAAC;EACnD,CAAC,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}