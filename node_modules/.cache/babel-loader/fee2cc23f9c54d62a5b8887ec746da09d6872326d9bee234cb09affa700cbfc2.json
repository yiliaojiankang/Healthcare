{"ast":null,"code":"import { __assign } from \"tslib\";\nimport Shape from '../shape';\nimport Global from '../../global';\n/**\n * 基本的图片，可以添加文本，默认文本在图片的下面\n */\nShape.registerNode('image', {\n  options: {\n    img: 'https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*eD7nT6tmYgAAAAAAAAAAAABkARQnAQ',\n    size: 200,\n    labelCfg: {\n      style: {\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    clipCfg: {\n      show: false,\n      type: 'circle',\n      // circle\n      r: 50,\n      // ellipse\n      rx: 50,\n      ry: 35,\n      // rect\n      width: 50,\n      height: 35,\n      // polygon\n      points: [[30, 12], [12, 30], [30, 48], [48, 30]],\n      // path\n      path: [['M', 25, 25], ['L', 50, 25], ['A', 12.5, 12.5, 0, 1, 1, 50, 50], ['A', 12.5, 12.5, 0, 1, 0, 50, 50], ['L', 25, 75], ['Z']],\n      // 坐标\n      x: 0,\n      y: 0\n      // clip 的属性样式\n      // style: {\n      //   lineWidth: 1\n      // },\n    }\n  },\n\n  shapeType: 'image',\n  labelPosition: 'bottom',\n  drawShape: function drawShape(cfg, group) {\n    var shapeType = this.shapeType;\n    var style = this.getShapeStyle(cfg);\n    delete style.fill;\n    var shape = group.addShape(shapeType, {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    this.drawClip(cfg, shape);\n    return shape;\n  },\n  drawClip: function drawClip(cfg, shape) {\n    var clip = (this.mergeStyle || this.getOptions(cfg)).clipCfg;\n    if (!clip.show) {\n      return;\n    }\n    // 支持 circle、rect、ellipse、Polygon 及自定义 path clip\n    var type = clip.type,\n      x = clip.x,\n      y = clip.y,\n      style = clip.style;\n    if (type === 'circle') {\n      var r = clip.r;\n      shape.setClip({\n        type: 'circle',\n        attrs: __assign({\n          r: r,\n          x: x,\n          y: y\n        }, style)\n      });\n    } else if (type === 'rect') {\n      var width = clip.width,\n        height = clip.height;\n      var rectX = x - width / 2;\n      var rectY = y - height / 2;\n      shape.setClip({\n        type: 'rect',\n        attrs: __assign({\n          x: rectX,\n          y: rectY,\n          width: width,\n          height: height\n        }, style)\n      });\n    } else if (type === 'ellipse') {\n      var rx = clip.rx,\n        ry = clip.ry;\n      shape.setClip({\n        type: 'ellipse',\n        attrs: __assign({\n          x: x,\n          y: y,\n          rx: rx,\n          ry: ry\n        }, style)\n      });\n    } else if (type === 'polygon') {\n      var points = clip.points;\n      shape.setClip({\n        type: 'polygon',\n        attrs: __assign({\n          points: points\n        }, style)\n      });\n    } else if (type === 'path') {\n      var path = clip.path;\n      shape.setClip({\n        type: 'path',\n        attrs: __assign({\n          path: path\n        }, style)\n      });\n    }\n  },\n  getShapeStyle: function getShapeStyle(cfg) {\n    var _a = this.mergeStyle || this.getOptions(cfg),\n      defaultStyle = _a.style,\n      img = _a.img;\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    if (defaultStyle) {\n      width = defaultStyle.width || size[0];\n      height = defaultStyle.height || size[1];\n    }\n    var style = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height,\n      img: img\n    }, defaultStyle);\n    return style;\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var shapeClassName = \"\".concat(this.itemType, \"-shape\");\n    var shape = group['shapeMap'][shapeClassName] || group.find(function (element) {\n      return element.get('className') === shapeClassName;\n    }) || item.getKeyShape();\n    var shapeStyle = this.getShapeStyle(cfg);\n    if (shape && !shape.destroyed) {\n      shape.attr(shapeStyle);\n    }\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","Shape","Global","registerNode","options","img","size","labelCfg","style","fontFamily","windowFontFamily","clipCfg","show","type","r","rx","ry","width","height","points","path","x","y","shapeType","labelPosition","drawShape","cfg","group","getShapeStyle","fill","shape","addShape","attrs","className","concat","name","draggable","drawClip","clip","mergeStyle","getOptions","setClip","rectX","rectY","_a","defaultStyle","getSize","updateShapeStyle","item","getContainer","shapeClassName","itemType","find","element","get","getKeyShape","shapeStyle","destroyed","attr"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-core/es/element/nodes/image.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport Shape from '../shape';\nimport Global from '../../global';\n/**\n * 基本的图片，可以添加文本，默认文本在图片的下面\n */\nShape.registerNode('image', {\n  options: {\n    img: 'https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*eD7nT6tmYgAAAAAAAAAAAABkARQnAQ',\n    size: 200,\n    labelCfg: {\n      style: {\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    clipCfg: {\n      show: false,\n      type: 'circle',\n      // circle\n      r: 50,\n      // ellipse\n      rx: 50,\n      ry: 35,\n      // rect\n      width: 50,\n      height: 35,\n      // polygon\n      points: [[30, 12], [12, 30], [30, 48], [48, 30]],\n      // path\n      path: [['M', 25, 25], ['L', 50, 25], ['A', 12.5, 12.5, 0, 1, 1, 50, 50], ['A', 12.5, 12.5, 0, 1, 0, 50, 50], ['L', 25, 75], ['Z']],\n      // 坐标\n      x: 0,\n      y: 0\n      // clip 的属性样式\n      // style: {\n      //   lineWidth: 1\n      // },\n    }\n  },\n\n  shapeType: 'image',\n  labelPosition: 'bottom',\n  drawShape: function drawShape(cfg, group) {\n    var shapeType = this.shapeType;\n    var style = this.getShapeStyle(cfg);\n    delete style.fill;\n    var shape = group.addShape(shapeType, {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    this.drawClip(cfg, shape);\n    return shape;\n  },\n  drawClip: function drawClip(cfg, shape) {\n    var clip = (this.mergeStyle || this.getOptions(cfg)).clipCfg;\n    if (!clip.show) {\n      return;\n    }\n    // 支持 circle、rect、ellipse、Polygon 及自定义 path clip\n    var type = clip.type,\n      x = clip.x,\n      y = clip.y,\n      style = clip.style;\n    if (type === 'circle') {\n      var r = clip.r;\n      shape.setClip({\n        type: 'circle',\n        attrs: __assign({\n          r: r,\n          x: x,\n          y: y\n        }, style)\n      });\n    } else if (type === 'rect') {\n      var width = clip.width,\n        height = clip.height;\n      var rectX = x - width / 2;\n      var rectY = y - height / 2;\n      shape.setClip({\n        type: 'rect',\n        attrs: __assign({\n          x: rectX,\n          y: rectY,\n          width: width,\n          height: height\n        }, style)\n      });\n    } else if (type === 'ellipse') {\n      var rx = clip.rx,\n        ry = clip.ry;\n      shape.setClip({\n        type: 'ellipse',\n        attrs: __assign({\n          x: x,\n          y: y,\n          rx: rx,\n          ry: ry\n        }, style)\n      });\n    } else if (type === 'polygon') {\n      var points = clip.points;\n      shape.setClip({\n        type: 'polygon',\n        attrs: __assign({\n          points: points\n        }, style)\n      });\n    } else if (type === 'path') {\n      var path = clip.path;\n      shape.setClip({\n        type: 'path',\n        attrs: __assign({\n          path: path\n        }, style)\n      });\n    }\n  },\n  getShapeStyle: function getShapeStyle(cfg) {\n    var _a = this.mergeStyle || this.getOptions(cfg),\n      defaultStyle = _a.style,\n      img = _a.img;\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    if (defaultStyle) {\n      width = defaultStyle.width || size[0];\n      height = defaultStyle.height || size[1];\n    }\n    var style = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height,\n      img: img\n    }, defaultStyle);\n    return style;\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var shapeClassName = \"\".concat(this.itemType, \"-shape\");\n    var shape = group['shapeMap'][shapeClassName] || group.find(function (element) {\n      return element.get('className') === shapeClassName;\n    }) || item.getKeyShape();\n    var shapeStyle = this.getShapeStyle(cfg);\n    if (shape && !shape.destroyed) {\n      shape.attr(shapeStyle);\n    }\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}