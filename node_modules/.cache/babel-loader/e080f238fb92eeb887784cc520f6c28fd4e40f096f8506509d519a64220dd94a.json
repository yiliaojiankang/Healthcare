{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { mix } from '@antv/util';\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nregisterNode('rect', {\n  // 自定义节点时的配置\n  options: {\n    size: [100, 30],\n    style: {\n      radius: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    // 连接点，默认为左右\n    // anchorPoints: [{ x: 0, y: 0.5 }, { x: 1, y: 0.5 }]\n    anchorPoints: [[0, 0.5], [1, 0.5]],\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'rect',\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('rect', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n      linkPoints = _a === void 0 ? {} : _a;\n    var top = linkPoints.top,\n      left = linkPoints.left,\n      right = linkPoints.right,\n      bottom = linkPoints.bottom,\n      markSize = linkPoints.size,\n      markR = linkPoints.r,\n      markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var width = style.width || size[0];\n    var height = style.height || size[1];\n    var styles = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height\n    }, style);\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer();\n    // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var keyShape = item.get('keyShape');\n    if (!cfg.size) {\n      size[0] = keyShape.attr('width') || defaultStyle.width;\n      size[1] = keyShape.attr('height') || defaultStyle.height;\n    }\n    // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n    var strokeStyle = {\n      stroke: cfg.color,\n      x: -size[0] / 2,\n      y: -size[1] / 2,\n      width: size[0],\n      height: size[1]\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, false, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","__rest","mix","registerNode","BaseGlobal","Global","options","size","style","radius","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","anchorPoints","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","getShapeStyle","keyShape","addShape","attrs","className","concat","type","name","draggable","drawLinkPoints","_a","mergeStyle","getOptions","markSize","markR","r","markStyle","getSize","x","y","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-element/es/nodes/rect.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { mix } from '@antv/util';\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nregisterNode('rect', {\n  // 自定义节点时的配置\n  options: {\n    size: [100, 30],\n    style: {\n      radius: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    // 连接点，默认为左右\n    // anchorPoints: [{ x: 0, y: 0.5 }, { x: 1, y: 0.5 }]\n    anchorPoints: [[0, 0.5], [1, 0.5]],\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'rect',\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('rect', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n      linkPoints = _a === void 0 ? {} : _a;\n    var top = linkPoints.top,\n      left = linkPoints.left,\n      right = linkPoints.right,\n      bottom = linkPoints.bottom,\n      markSize = linkPoints.size,\n      markR = linkPoints.r,\n      markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    // 如果设置了color，则覆盖默认的stroke属性\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var width = style.width || size[0];\n    var height = style.height || size[1];\n    var styles = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height\n    }, style);\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer();\n    // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var keyShape = item.get('keyShape');\n    if (!cfg.size) {\n      size[0] = keyShape.attr('width') || defaultStyle.width;\n      size[1] = keyShape.attr('height') || defaultStyle.height;\n    }\n    // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n    var strokeStyle = {\n      stroke: cfg.color,\n      x: -size[0] / 2,\n      y: -size[1] / 2,\n      width: size[0],\n      height: size[1]\n    };\n    // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, false, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}