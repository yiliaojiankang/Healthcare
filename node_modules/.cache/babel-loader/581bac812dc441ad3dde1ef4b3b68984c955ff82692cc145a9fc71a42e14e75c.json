{"ast":null,"code":"import { DIRECTION } from '../constant';\n/**\n * @ignore\n * 方位常量转实际的 bbox 位置大小\n * @param parentBBox\n * @param bbox\n * @param direction\n */\nexport function directionToPosition(parentBBox, bbox, direction) {\n  if (direction === DIRECTION.TOP) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.minY];\n  }\n  if (direction === DIRECTION.BOTTOM) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.maxY - bbox.height];\n  }\n  if (direction === DIRECTION.LEFT) {\n    return [parentBBox.minX, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.RIGHT) {\n    return [parentBBox.maxX - bbox.width, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.TOP_LEFT || direction === DIRECTION.LEFT_TOP) {\n    return [parentBBox.tl.x, parentBBox.tl.y];\n  }\n  if (direction === DIRECTION.TOP_RIGHT || direction === DIRECTION.RIGHT_TOP) {\n    return [parentBBox.tr.x - bbox.width, parentBBox.tr.y];\n  }\n  if (direction === DIRECTION.BOTTOM_LEFT || direction === DIRECTION.LEFT_BOTTOM) {\n    return [parentBBox.bl.x, parentBBox.bl.y - bbox.height];\n  }\n  if (direction === DIRECTION.BOTTOM_RIGHT || direction === DIRECTION.RIGHT_BOTTOM) {\n    return [parentBBox.br.x - bbox.width, parentBBox.br.y - bbox.height];\n  }\n  return [0, 0];\n}\n/**\n * get direction after coordinate transpose\n * @param direction\n * @param coordinate\n * @returns direction after transpose or not\n */\nfunction getTransposedDirection(direction, coordinate) {\n  if (coordinate.isTransposed) {\n    switch (direction) {\n      case DIRECTION.BOTTOM:\n        return DIRECTION.LEFT;\n      case DIRECTION.LEFT:\n        return DIRECTION.BOTTOM;\n      case DIRECTION.RIGHT:\n        return DIRECTION.TOP;\n      case DIRECTION.TOP:\n        return DIRECTION.RIGHT;\n    }\n  }\n  return direction;\n}\nfunction reflectX(direct) {\n  if (direct === DIRECTION.LEFT) {\n    return DIRECTION.RIGHT;\n  }\n  if (direct === DIRECTION.RIGHT) {\n    return DIRECTION.LEFT;\n  }\n  return direct;\n}\nfunction reflectY(direct) {\n  if (direct === DIRECTION.TOP) {\n    return DIRECTION.BOTTOM;\n  }\n  if (direct === DIRECTION.BOTTOM) {\n    return DIRECTION.TOP;\n  }\n  return direct;\n}\n/**\n * get direction after coordinate.scale\n * @param direction\n * @param coordinate\n */\nfunction getScaleDirection(direction, coordinate) {\n  var x = coordinate.matrix[0];\n  var y = coordinate.matrix[4];\n  var d = direction;\n  if (x < 0) {\n    d = reflectX(d);\n  }\n  if (y < 0) {\n    d = reflectY(d);\n  }\n  return d;\n}\n/**\n *\n * @param direction\n * @param coordinate\n */\nfunction getReflectDirection(direction, coordinate) {\n  var d = direction;\n  if (coordinate.isReflect('x')) {\n    d = reflectX(d);\n  }\n  if (coordinate.isReflect('y')) {\n    d = reflectY(d);\n  }\n  return d;\n}\n/**\n * @ignore\n * get direction after coordinate translate\n * @param direction\n * @param coordinate\n */\nexport function getTranslateDirection(direction, coordinate) {\n  var d = direction;\n  d = getTransposedDirection(d, coordinate);\n  d = getScaleDirection(d, coordinate);\n  d = getReflectDirection(d, coordinate);\n  return d;\n}","map":{"version":3,"names":["DIRECTION","directionToPosition","parentBBox","bbox","direction","TOP","minX","width","minY","BOTTOM","maxY","height","LEFT","RIGHT","maxX","TOP_LEFT","LEFT_TOP","tl","x","y","TOP_RIGHT","RIGHT_TOP","tr","BOTTOM_LEFT","LEFT_BOTTOM","bl","BOTTOM_RIGHT","RIGHT_BOTTOM","br","getTransposedDirection","coordinate","isTransposed","reflectX","direct","reflectY","getScaleDirection","matrix","d","getReflectDirection","isReflect","getTranslateDirection"],"sources":["../../src/util/direction.ts"],"sourcesContent":["import { DIRECTION } from '../constant';\nimport { Coordinate } from '../dependents';\nimport { Position } from '../interface';\nimport { BBox } from './bbox';\n\n/**\n * @ignore\n * 方位常量转实际的 bbox 位置大小\n * @param parentBBox\n * @param bbox\n * @param direction\n */\nexport function directionToPosition(parentBBox: BBox, bbox: BBox, direction: DIRECTION): Position {\n  if (direction === DIRECTION.TOP) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.minY];\n  }\n  if (direction === DIRECTION.BOTTOM) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.maxY - bbox.height];\n  }\n  if (direction === DIRECTION.LEFT) {\n    return [parentBBox.minX, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.RIGHT) {\n    return [parentBBox.maxX - bbox.width, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n\n  if (direction === DIRECTION.TOP_LEFT || direction === DIRECTION.LEFT_TOP) {\n    return [parentBBox.tl.x, parentBBox.tl.y];\n  }\n  if (direction === DIRECTION.TOP_RIGHT || direction === DIRECTION.RIGHT_TOP) {\n    return [parentBBox.tr.x - bbox.width, parentBBox.tr.y];\n  }\n  if (direction === DIRECTION.BOTTOM_LEFT || direction === DIRECTION.LEFT_BOTTOM) {\n    return [parentBBox.bl.x, parentBBox.bl.y - bbox.height];\n  }\n  if (direction === DIRECTION.BOTTOM_RIGHT || direction === DIRECTION.RIGHT_BOTTOM) {\n    return [parentBBox.br.x - bbox.width, parentBBox.br.y - bbox.height];\n  }\n\n  return [0, 0];\n}\n\n/**\n * get direction after coordinate transpose\n * @param direction\n * @param coordinate\n * @returns direction after transpose or not\n */\nfunction getTransposedDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  if (coordinate.isTransposed) {\n    switch (direction) {\n      case DIRECTION.BOTTOM:\n        return DIRECTION.LEFT;\n      case DIRECTION.LEFT:\n        return DIRECTION.BOTTOM;\n      case DIRECTION.RIGHT:\n        return DIRECTION.TOP;\n      case DIRECTION.TOP:\n        return DIRECTION.RIGHT;\n    }\n  }\n  return direction;\n}\n\nfunction reflectX(direct: DIRECTION): DIRECTION {\n  if (direct === DIRECTION.LEFT) {\n    return DIRECTION.RIGHT;\n  }\n\n  if (direct === DIRECTION.RIGHT) {\n    return DIRECTION.LEFT;\n  }\n\n  return direct;\n}\n\nfunction reflectY(direct: DIRECTION): DIRECTION {\n  if (direct === DIRECTION.TOP) {\n    return DIRECTION.BOTTOM;\n  }\n  if (direct === DIRECTION.BOTTOM) {\n    return DIRECTION.TOP;\n  }\n\n  return direct;\n}\n\n/**\n * get direction after coordinate.scale\n * @param direction\n * @param coordinate\n */\nfunction getScaleDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  const x = coordinate.matrix[0];\n  const y = coordinate.matrix[4];\n\n  let d = direction;\n  if (x < 0) {\n    d = reflectX(d);\n  }\n  if (y < 0) {\n    d = reflectY(d);\n  }\n  return d;\n}\n\n/**\n *\n * @param direction\n * @param coordinate\n */\nfunction getReflectDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  let d = direction;\n\n  if (coordinate.isReflect('x')) {\n    d = reflectX(d);\n  }\n  if (coordinate.isReflect('y')) {\n    d = reflectY(d);\n  }\n\n  return d;\n}\n\n/**\n * @ignore\n * get direction after coordinate translate\n * @param direction\n * @param coordinate\n */\nexport function getTranslateDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  let d = direction;\n  d = getTransposedDirection(d, coordinate);\n  d = getScaleDirection(d, coordinate);\n  d = getReflectDirection(d, coordinate);\n\n  return d;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}