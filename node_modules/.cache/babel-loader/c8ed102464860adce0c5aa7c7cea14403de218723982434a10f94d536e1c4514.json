{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getSymbol, lineArrowPath } from \"./shape/arrow\";\n\n// list all arrow shape\n\n// Half Edge\nexport function FlowHalfArrowFillTriangulation(feature) {\n  // @ts-ignore\n  var coord = feature.coordinates.flat();\n  var tin = 1;\n  var tout = 1.0;\n  return {\n    vertices: [1, 0, 0].concat(_toConsumableArray(coord), [\n    // 0\n    1, 2, -3], _toConsumableArray(coord), [\n    // 1\n    1, 1, -3], _toConsumableArray(coord), [\n    // 2\n    0, 1, 0], _toConsumableArray(coord), [\n    // 3\n    0, 0, 0], _toConsumableArray(coord), [\n    // 4\n    1, 0, 0], _toConsumableArray(coord), [\n    // 0\n    1, 2, -3], _toConsumableArray(coord), [\n    // 1\n    1, 1, -3], _toConsumableArray(coord), [\n    // 2\n    0, 1, 0], _toConsumableArray(coord), [\n    // 3\n    0, 0, 0], _toConsumableArray(coord)),\n    normals: [-tin, 2 * tout, 1,\n    // 0\n    2 * tout, -tout, 1,\n    // 1\n    tout, -tout, 1,\n    // 2\n    tout, -tout, 1,\n    // 3\n    -tin, -tout, 1,\n    // 4\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    indices: [0, 1, 2, 0, 2, 3, 0, 3, 4, 5, 6, 7, 5, 7, 8, 5, 8, 9],\n    size: 7\n  };\n}\nexport function FlowLineTriangulation(feature, symbolOption) {\n  return symbolOption ? ArrowLineTriangulation(feature, symbolOption) : FlowHalfArrowFillTriangulation(feature);\n}\nexport function ArrowLineTriangulation(feature, symbolOption) {\n  // @ts-ignore\n  var coord = feature.coordinates.flat();\n  var _ref = symbolOption,\n    _ref$target = _ref.target,\n    target = _ref$target === void 0 ? 'classic' : _ref$target,\n    _ref$source = _ref.source,\n    source = _ref$source === void 0 ? 'circle' : _ref$source;\n  var startSymbol = shape2Vertices(getSymbol(source, 'source'), coord, 0, 0);\n  var linePath = lineArrowPath(coord, startSymbol.vertices.length / 7, symbolOption);\n  var endSymbol = shape2Vertices(getSymbol(target, 'target'), coord, 1, startSymbol.vertices.length / 7 + linePath.vertices.length / 7);\n  var data = {\n    vertices: [].concat(_toConsumableArray(startSymbol.vertices), _toConsumableArray(linePath.vertices), _toConsumableArray(endSymbol.vertices)),\n    indices: [].concat(_toConsumableArray(startSymbol.outLineIndices), _toConsumableArray(linePath.outLineIndices), _toConsumableArray(endSymbol.outLineIndices), _toConsumableArray(startSymbol.indices), _toConsumableArray(linePath.indices), _toConsumableArray(endSymbol.indices)),\n    normals: [].concat(_toConsumableArray(startSymbol.normals), _toConsumableArray(linePath.normals), _toConsumableArray(endSymbol.normals)),\n    size: 7\n  };\n  return data;\n}\n// start 0,end 1;\nfunction shape2Vertices(shape, coord) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var indexOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var shapeVertices = [];\n  var vertices = shape.vertices,\n    indices = shape.indices,\n    dimensions = shape.dimensions,\n    outLineIndices = shape.outLineIndices;\n  for (var i = 0; i < vertices.length; i += dimensions) {\n    shapeVertices.push.apply(shapeVertices, [type, vertices[i + 1], vertices[i]].concat(_toConsumableArray(coord)));\n  }\n  return _objectSpread(_objectSpread({}, shape), {}, {\n    vertices: shapeVertices,\n    indices: indices.map(function (i) {\n      return i + indexOffset;\n    }),\n    outLineIndices: outLineIndices.map(function (i) {\n      return i + indexOffset;\n    })\n  });\n}","map":{"version":3,"names":["_objectSpread","_toConsumableArray","getSymbol","lineArrowPath","FlowHalfArrowFillTriangulation","feature","coord","coordinates","flat","tin","tout","vertices","concat","normals","indices","size","FlowLineTriangulation","symbolOption","ArrowLineTriangulation","_ref","_ref$target","target","_ref$source","source","startSymbol","shape2Vertices","linePath","length","endSymbol","data","outLineIndices","shape","type","arguments","undefined","indexOffset","shapeVertices","dimensions","i","push","apply","map"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/core/line_trangluation.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getSymbol, lineArrowPath } from \"./shape/arrow\";\n\n// list all arrow shape\n\n// Half Edge\nexport function FlowHalfArrowFillTriangulation(feature) {\n  // @ts-ignore\n  var coord = feature.coordinates.flat();\n  var tin = 1;\n  var tout = 1.0;\n  return {\n    vertices: [1, 0, 0].concat(_toConsumableArray(coord), [\n    // 0\n    1, 2, -3], _toConsumableArray(coord), [\n    // 1\n    1, 1, -3], _toConsumableArray(coord), [\n    // 2\n    0, 1, 0], _toConsumableArray(coord), [\n    // 3\n    0, 0, 0], _toConsumableArray(coord), [\n    // 4\n    1, 0, 0], _toConsumableArray(coord), [\n    // 0\n    1, 2, -3], _toConsumableArray(coord), [\n    // 1\n    1, 1, -3], _toConsumableArray(coord), [\n    // 2\n    0, 1, 0], _toConsumableArray(coord), [\n    // 3\n    0, 0, 0], _toConsumableArray(coord)),\n    normals: [-tin, 2 * tout, 1,\n    // 0\n    2 * tout, -tout, 1,\n    // 1\n    tout, -tout, 1,\n    // 2\n    tout, -tout, 1,\n    // 3\n    -tin, -tout, 1,\n    // 4\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    indices: [0, 1, 2, 0, 2, 3, 0, 3, 4, 5, 6, 7, 5, 7, 8, 5, 8, 9],\n    size: 7\n  };\n}\nexport function FlowLineTriangulation(feature, symbolOption) {\n  return symbolOption ? ArrowLineTriangulation(feature, symbolOption) : FlowHalfArrowFillTriangulation(feature);\n}\nexport function ArrowLineTriangulation(feature, symbolOption) {\n  // @ts-ignore\n  var coord = feature.coordinates.flat();\n  var _ref = symbolOption,\n    _ref$target = _ref.target,\n    target = _ref$target === void 0 ? 'classic' : _ref$target,\n    _ref$source = _ref.source,\n    source = _ref$source === void 0 ? 'circle' : _ref$source;\n  var startSymbol = shape2Vertices(getSymbol(source, 'source'), coord, 0, 0);\n  var linePath = lineArrowPath(coord, startSymbol.vertices.length / 7, symbolOption);\n  var endSymbol = shape2Vertices(getSymbol(target, 'target'), coord, 1, startSymbol.vertices.length / 7 + linePath.vertices.length / 7);\n  var data = {\n    vertices: [].concat(_toConsumableArray(startSymbol.vertices), _toConsumableArray(linePath.vertices), _toConsumableArray(endSymbol.vertices)),\n    indices: [].concat(_toConsumableArray(startSymbol.outLineIndices), _toConsumableArray(linePath.outLineIndices), _toConsumableArray(endSymbol.outLineIndices), _toConsumableArray(startSymbol.indices), _toConsumableArray(linePath.indices), _toConsumableArray(endSymbol.indices)),\n    normals: [].concat(_toConsumableArray(startSymbol.normals), _toConsumableArray(linePath.normals), _toConsumableArray(endSymbol.normals)),\n    size: 7\n  };\n  return data;\n}\n// start 0,end 1;\nfunction shape2Vertices(shape, coord) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var indexOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var shapeVertices = [];\n  var vertices = shape.vertices,\n    indices = shape.indices,\n    dimensions = shape.dimensions,\n    outLineIndices = shape.outLineIndices;\n  for (var i = 0; i < vertices.length; i += dimensions) {\n    shapeVertices.push.apply(shapeVertices, [type, vertices[i + 1], vertices[i]].concat(_toConsumableArray(coord)));\n  }\n  return _objectSpread(_objectSpread({}, shape), {}, {\n    vertices: shapeVertices,\n    indices: indices.map(function (i) {\n      return i + indexOffset;\n    }),\n    outLineIndices: outLineIndices.map(function (i) {\n      return i + indexOffset;\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}