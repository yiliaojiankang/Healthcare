{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __rest } from \"tslib\";\nimport { each, filter, isMatch } from '@antv/util';\nimport { brushInteraction } from '../../adaptor/brush';\nimport { animation, annotation, interaction, limitInPlot, scale, scrollbar, slider, state, theme, transformations } from '../../adaptor/common';\nimport { connectedArea } from '../../adaptor/connected-area';\nimport { conversionTag } from '../../adaptor/conversion-tag';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { adjustYMetaByZero, deepAssign, findGeometry, flow, pick, transformLabel } from '../../utils';\nimport { getDataWhetherPercentage, getDeepPercent } from '../../utils/transform/percent';\n/**\n * defaultOptions\n * @param params\n */\nfunction defaultOptions(params) {\n  var options = params.options;\n  // 默认 legend 位置\n  var legend = options.legend;\n  var seriesField = options.seriesField,\n    isStack = options.isStack;\n  if (seriesField) {\n    if (legend !== false) {\n      legend = __assign({\n        position: isStack ? 'right-top' : 'top-left'\n      }, legend);\n    }\n  } else {\n    legend = false;\n  }\n  // @ts-ignore 直接改值\n  params.options.legend = legend;\n  return params;\n}\n/**\n * 字段\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    columnStyle = options.columnStyle,\n    color = options.color,\n    columnWidthRatio = options.columnWidthRatio,\n    isPercent = options.isPercent,\n    isGroup = options.isGroup,\n    isStack = options.isStack,\n    xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField,\n    groupField = options.groupField,\n    tooltip = options.tooltip,\n    shape = options.shape;\n  var percentData = isPercent && isGroup && isStack ? getDeepPercent(data, yField, [xField, groupField], yField) : getDataWhetherPercentage(data, yField, xField, yField, isPercent);\n  var chartData = [];\n  // 存在堆叠,并且存在堆叠seriesField分类，并且不存在分组的时候 进行堆叠\n  if (isStack && seriesField && !isGroup) {\n    percentData.forEach(function (item) {\n      var stackedItem = chartData.find(function (v) {\n        return v[xField] === item[xField] && v[seriesField] === item[seriesField];\n      });\n      if (stackedItem) {\n        stackedItem[yField] += item[yField] || 0;\n      } else {\n        chartData.push(__assign({}, item));\n      }\n    });\n  } else {\n    chartData = percentData;\n  }\n  chart.data(chartData);\n  // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n  var tooltipOptions = isPercent ? __assign({\n    formatter: function (datum) {\n      var _a;\n      return {\n        name: isGroup && isStack ? \"\".concat(datum[seriesField], \" - \").concat(datum[groupField]) : (_a = datum[seriesField]) !== null && _a !== void 0 ? _a : datum[xField],\n        value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n      };\n    }\n  }, tooltip) : tooltip;\n  var p = deepAssign({}, params, {\n    options: {\n      data: chartData,\n      widthRatio: columnWidthRatio,\n      tooltip: tooltipOptions,\n      interval: {\n        shape: shape,\n        style: columnStyle,\n        color: color\n      }\n    }\n  });\n  interval(p);\n  return p;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a, _b;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField,\n    data = options.data,\n    isPercent = options.isPercent;\n  var percentYMeta = isPercent ? {\n    max: 1,\n    min: 0,\n    minLimit: 0,\n    maxLimit: 1\n  } : {};\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a), (_b = {}, _b[xField] = {\n    type: 'cat'\n  }, _b[yField] = __assign(__assign({}, adjustYMetaByZero(data, yField)), percentYMeta), _b)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend,\n    seriesField = options.seriesField;\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    yField = options.yField,\n    isRange = options.isRange;\n  var geometry = findGeometry(chart, 'interval');\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    geometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign({\n        // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n        layout: (cfg === null || cfg === void 0 ? void 0 : cfg.position) ? undefined : [{\n          type: 'interval-adjust-position'\n        }, {\n          type: 'interval-hide-overlap'\n        }, {\n          type: 'adjust-color'\n        }, {\n          type: 'limit-in-plot',\n          cfg: {\n            action: 'hide'\n          }\n        }]\n      }, transformLabel(isRange ? __assign({\n        content: function (item) {\n          var _a;\n          return (_a = item[yField]) === null || _a === void 0 ? void 0 : _a.join('-');\n        }\n      }, cfg) : cfg))\n    });\n  }\n  return params;\n}\n/**\n * 柱形图 tooltip 配置 (对堆叠、分组做特殊处理)\n * @param params\n */\nfunction columnTooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip,\n    isGroup = options.isGroup,\n    isStack = options.isStack,\n    groupField = options.groupField,\n    data = options.data,\n    xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField;\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip;\n    // fix: https://github.com/antvis/G2Plot/issues/2572\n    if (isGroup && isStack) {\n      var customItems_1 = tooltipOptions.customItems;\n      var tooltipFormatter_1 = (tooltipOptions === null || tooltipOptions === void 0 ? void 0 : tooltipOptions.formatter) || function (datum) {\n        return {\n          name: \"\".concat(datum[seriesField], \" - \").concat(datum[groupField]),\n          value: datum[yField]\n        };\n      };\n      tooltipOptions = __assign(__assign({}, tooltipOptions), {\n        customItems: function (originalItems) {\n          var items = [];\n          each(originalItems, function (item) {\n            // Find datas in same cluster\n            var datas = filter(data, function (d) {\n              return isMatch(d, pick(item.data, [xField, seriesField]));\n            });\n            datas.forEach(function (datum) {\n              items.push(__assign(__assign(__assign({}, item), {\n                value: datum[yField],\n                data: datum,\n                mappingData: {\n                  _origin: datum\n                }\n              }), tooltipFormatter_1(datum)));\n            });\n          });\n          // fix https://github.com/antvis/G2Plot/issues/3367\n          return customItems_1 ? customItems_1(items) : items;\n        }\n      });\n    }\n    chart.tooltip(tooltipOptions);\n  }\n  return params;\n}\n/**\n * 柱形图适配器\n * @param params\n */\nexport function adaptor(params, isBar) {\n  if (isBar === void 0) {\n    isBar = false;\n  }\n  var options = params.options;\n  var seriesField = options.seriesField;\n  return flow(defaultOptions,\n  // 处理默认配置\n  theme,\n  // theme 需要在 geometry 之前\n  pattern('columnStyle'), state, transformations('rect'), geometry, meta, axis, legend, columnTooltip, slider, scrollbar, label, brushInteraction, interaction, animation, annotation(), conversionTag(options.yField, !isBar, !!seriesField),\n  // 有拆分的时候禁用转化率\n  connectedArea(!options.isStack), limitInPlot)(params);\n}","map":{"version":3,"names":["each","filter","isMatch","brushInteraction","animation","annotation","interaction","limitInPlot","scale","scrollbar","slider","state","theme","transformations","connectedArea","conversionTag","interval","pattern","adjustYMetaByZero","deepAssign","findGeometry","flow","pick","transformLabel","getDataWhetherPercentage","getDeepPercent","defaultOptions","params","options","legend","seriesField","isStack","__assign","position","geometry","chart","data","columnStyle","color","columnWidthRatio","isPercent","isGroup","xField","yField","groupField","tooltip","shape","percentData","chartData","forEach","item","stackedItem","find","v","push","tooltipOptions","formatter","datum","name","concat","_a","value","Number","toFixed","p","widthRatio","style","meta","xAxis","yAxis","percentYMeta","max","min","minLimit","maxLimit","_b","type","axis","label","isRange","callback","cfg","__rest","fields","layout","undefined","action","content","join","columnTooltip","customItems_1","customItems","tooltipFormatter_1","originalItems","items","datas","d","mappingData","_origin","adaptor","isBar"],"sources":["../../../src/plots/column/adaptor.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { each, filter, isMatch } from '@antv/util';\nimport { brushInteraction } from '../../adaptor/brush';\nimport {\n  animation,\n  annotation,\n  interaction,\n  limitInPlot,\n  scale,\n  scrollbar,\n  slider,\n  state,\n  theme,\n  transformations,\n} from '../../adaptor/common';\nimport { connectedArea } from '../../adaptor/connected-area';\nimport { conversionTag } from '../../adaptor/conversion-tag';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { Params } from '../../core/adaptor';\nimport { Datum } from '../../types';\nimport { adjustYMetaByZero, deepAssign, findGeometry, flow, pick, transformLabel } from '../../utils';\nimport { getDataWhetherPercentage, getDeepPercent } from '../../utils/transform/percent';\nimport { ColumnOptions } from './types';\n\n/**\n * defaultOptions\n * @param params\n */\nfunction defaultOptions(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { options } = params;\n  // 默认 legend 位置\n  let { legend } = options;\n  const { seriesField, isStack } = options;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'right-top' : 'top-left',\n        ...legend,\n      };\n    }\n  } else {\n    legend = false;\n  }\n\n  // @ts-ignore 直接改值\n  params.options.legend = legend;\n  return params;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    columnStyle,\n    color,\n    columnWidthRatio,\n    isPercent,\n    isGroup,\n    isStack,\n    xField,\n    yField,\n    seriesField,\n    groupField,\n    tooltip,\n    shape,\n  } = options;\n\n  const percentData =\n    isPercent && isGroup && isStack\n      ? getDeepPercent(data, yField, [xField, groupField], yField)\n      : getDataWhetherPercentage(data, yField, xField, yField, isPercent);\n\n  let chartData = [];\n\n  // 存在堆叠,并且存在堆叠seriesField分类，并且不存在分组的时候 进行堆叠\n  if (isStack && seriesField && !isGroup) {\n    percentData.forEach((item) => {\n      const stackedItem = chartData.find((v) => v[xField] === item[xField] && v[seriesField] === item[seriesField]);\n      if (stackedItem) {\n        stackedItem[yField] += item[yField] || 0;\n      } else {\n        chartData.push({ ...item });\n      }\n    });\n  } else {\n    chartData = percentData;\n  }\n\n  chart.data(chartData);\n\n  // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n  const tooltipOptions = isPercent\n    ? {\n        formatter: (datum: Datum) => ({\n          name:\n            isGroup && isStack ? `${datum[seriesField]} - ${datum[groupField]}` : datum[seriesField] ?? datum[xField],\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n        }),\n        ...tooltip,\n      }\n    : tooltip;\n\n  const p = deepAssign({}, params, {\n    options: {\n      data: chartData,\n      widthRatio: columnWidthRatio,\n      tooltip: tooltipOptions,\n      interval: {\n        shape,\n        style: columnStyle,\n        color,\n      },\n    },\n  });\n  interval(p);\n\n  return p;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, data, isPercent } = options;\n\n  const percentYMeta = isPercent ? { max: 1, min: 0, minLimit: 0, maxLimit: 1 } : {};\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n      },\n      {\n        [xField]: {\n          type: 'cat',\n        },\n        [yField]: {\n          ...adjustYMetaByZero(data, yField),\n          ...percentYMeta,\n        },\n      }\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { label, yField, isRange } = options;\n\n  const geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n        layout: cfg?.position\n          ? undefined\n          : [\n              { type: 'interval-adjust-position' },\n              { type: 'interval-hide-overlap' },\n              { type: 'adjust-color' },\n              { type: 'limit-in-plot', cfg: { action: 'hide' } },\n            ],\n        ...transformLabel(\n          isRange\n            ? {\n                content: (item: object) => {\n                  return item[yField]?.join('-');\n                },\n                ...cfg,\n              }\n            : cfg\n        ),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 柱形图 tooltip 配置 (对堆叠、分组做特殊处理)\n * @param params\n */\nfunction columnTooltip(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { tooltip, isGroup, isStack, groupField, data, xField, yField, seriesField } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // fix: https://github.com/antvis/G2Plot/issues/2572\n    if (isGroup && isStack) {\n      const { customItems } = tooltipOptions;\n      const tooltipFormatter =\n        tooltipOptions?.formatter ||\n        ((datum: Datum) => ({ name: `${datum[seriesField]} - ${datum[groupField]}`, value: datum[yField] }));\n      tooltipOptions = {\n        ...tooltipOptions,\n        customItems: (originalItems: Types.TooltipItem[]) => {\n          const items: Types.TooltipItem[] = [];\n          each(originalItems, (item: Types.TooltipItem) => {\n            // Find datas in same cluster\n            const datas = filter(data, (d) => isMatch(d, pick(item.data, [xField, seriesField])));\n            datas.forEach((datum) => {\n              items.push({\n                ...item,\n                value: datum[yField],\n                data: datum,\n                mappingData: { _origin: datum },\n                ...tooltipFormatter(datum),\n              });\n            });\n          });\n          // fix https://github.com/antvis/G2Plot/issues/3367\n          return customItems ? customItems(items) : items;\n        },\n      };\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function adaptor(params: Params<ColumnOptions>, isBar = false) {\n  const { options } = params;\n  const { seriesField } = options;\n  return flow(\n    defaultOptions, // 处理默认配置\n    theme, // theme 需要在 geometry 之前\n    pattern('columnStyle'),\n    state,\n    transformations('rect'),\n    geometry,\n    meta,\n    axis,\n    legend,\n    columnTooltip,\n    slider,\n    scrollbar,\n    label,\n    brushInteraction,\n    interaction,\n    animation,\n    annotation(),\n    conversionTag<ColumnOptions>(options.yField, !isBar, !!seriesField), // 有拆分的时候禁用转化率\n    connectedArea<ColumnOptions>(!options.isStack),\n    limitInPlot\n  )(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}