{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForceAtlas2Layout = void 0;\nvar base_1 = require(\"../base\");\nvar util_1 = require(\"../../util\");\nvar body_1 = __importDefault(require(\"./body\"));\nvar quad_1 = __importDefault(require(\"./quad\"));\nvar quadTree_1 = __importDefault(require(\"./quadTree\"));\nvar ForceAtlas2Layout = /** @class */function (_super) {\n  __extends(ForceAtlas2Layout, _super);\n  function ForceAtlas2Layout(options) {\n    var _this = _super.call(this) || this;\n    /** 布局中心 */\n    _this.center = [0, 0];\n    /** 宽度 */\n    _this.width = 300;\n    /** 高度 */\n    _this.height = 300;\n    _this.nodes = [];\n    _this.edges = [];\n    /**\n     * the parameter for repulsive forces,\n     * it will scale the layout but won't change the layout\n     * larger the kr, looser the layout\n     * @type  {number}\n     */\n    _this.kr = 5;\n    /**\n     * the parameter for gravity forces\n     * @type  {number}\n     */\n    _this.kg = 1;\n    /**\n     * modes:\n     * 'normal' for normal using\n     * 'linlog' for compact clusters.\n     * @type  {string}\n     */\n    _this.mode = 'normal';\n    /**\n     * whether preventing the node overlapping\n     * @type  {boolean}\n     */\n    _this.preventOverlap = false;\n    /**\n     * whether active the dissuade hub mode\n     * true: grant authorities (nodes with a high indegree)\n     * a more central position than hubs (nodes with a high outdegree)\n     * @type  {boolean}\n     */\n    _this.dissuadeHubs = false;\n    /**\n     * whether active the barnes hut optimization on computing repulsive forces\n     * @type  {boolean}\n     */\n    _this.barnesHut = undefined;\n    /**\n     * the max iteration number\n     * @type  {number}\n     */\n    _this.maxIteration = 0;\n    /**\n     * control the global velocity\n     * defualt: 0.1(gephi)\n     * @type  {number}\n     */\n    _this.ks = 0.1;\n    /**\n     * the max global velocity\n     * @type  {number}\n     */\n    _this.ksmax = 10;\n    /**\n     * the tolerance for the global swinging\n     * @type  {number}\n     */\n    _this.tao = 0.1;\n    /**\n     * the function of layout complete listener, display the legend and minimap after layout\n     * @type  {function}\n     */\n    _this.onLayoutEnd = function () {};\n    /**\n     * activate prune or not.\n     * prune the leaves during most iterations, layout the leaves in the last 50 iteraitons.\n     * if prune === '', it will be activated when the nodes number > 100\n     * note that it will reduce the quality of the layout\n     * @type  {boolean}\n     */\n    _this.prune = undefined;\n    _this.updateCfg(options);\n    return _this;\n  }\n  ForceAtlas2Layout.prototype.getDefaultCfg = function () {\n    return {};\n  };\n  // execute the layout\n  ForceAtlas2Layout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n      onLayoutEnd = self.onLayoutEnd,\n      prune = self.prune;\n    var maxIteration = self.maxIteration;\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n    // the whidth of each nodes\n    var sizes = [];\n    var nodeNum = nodes.length;\n    for (var i = 0; i < nodeNum; i += 1) {\n      var node = nodes[i];\n      var nodeWidth = 10;\n      var nodeHeight = 10;\n      if ((0, util_1.isNumber)(node.size)) {\n        nodeWidth = node.size;\n        nodeHeight = node.size;\n      }\n      if ((0, util_1.isArray)(node.size)) {\n        if (!isNaN(node.size[0])) nodeWidth = node.size[0];\n        if (!isNaN(node.size[1])) nodeHeight = node.size[1];\n      } else if ((0, util_1.isObject)(node.size)) {\n        nodeWidth = node.size.width;\n        nodeHeight = node.size.height;\n      }\n      if (self.getWidth && !isNaN(self.getWidth(node))) nodeHeight = self.getWidth(node);\n      if (self.getHeight && !isNaN(self.getHeight(node))) nodeWidth = self.getHeight(node);\n      var maxSize = Math.max(nodeWidth, nodeHeight);\n      sizes.push(maxSize);\n    }\n    if (self.barnesHut === undefined && nodeNum > 250) self.barnesHut = true;\n    if (self.prune === undefined && nodeNum > 100) self.prune = true;\n    if (this.maxIteration === 0 && !self.prune) {\n      maxIteration = 250;\n      if (nodeNum <= 200 && nodeNum > 100) maxIteration = 1000;else if (nodeNum > 200) maxIteration = 1200;\n      this.maxIteration = maxIteration;\n    } else if (this.maxIteration === 0 && prune) {\n      maxIteration = 100;\n      if (nodeNum <= 200 && nodeNum > 100) maxIteration = 500;else if (nodeNum > 200) maxIteration = 950;\n      this.maxIteration = maxIteration;\n    }\n    if (!self.kr) {\n      self.kr = 50;\n      if (nodeNum > 100 && nodeNum <= 500) self.kr = 20;else if (nodeNum > 500) self.kr = 1;\n    }\n    if (!self.kg) {\n      self.kg = 20;\n      if (nodeNum > 100 && nodeNum <= 500) self.kg = 10;else if (nodeNum > 500) self.kg = 1;\n    }\n    this.nodes = self.updateNodesByForces(sizes);\n    onLayoutEnd();\n  };\n  ForceAtlas2Layout.prototype.updateNodesByForces = function (sizes) {\n    var self = this;\n    var edges = self.edges,\n      maxIteration = self.maxIteration;\n    var nodes = self.nodes;\n    var nonLoopEdges = edges.filter(function (edge) {\n      var source = (0, util_1.getEdgeTerminal)(edge, 'source');\n      var target = (0, util_1.getEdgeTerminal)(edge, 'target');\n      return source !== target;\n    });\n    var size = nodes.length;\n    var esize = nonLoopEdges.length;\n    var degrees = [];\n    var idMap = {};\n    var edgeEndsIdMap = {};\n    // tslint:disable-next-line\n    var Es = [];\n    for (var i = 0; i < size; i += 1) {\n      idMap[nodes[i].id] = i;\n      degrees[i] = 0;\n      if (nodes[i].x === undefined || isNaN(nodes[i].x)) {\n        nodes[i].x = Math.random() * 1000;\n      }\n      if (nodes[i].y === undefined || isNaN(nodes[i].y)) {\n        nodes[i].y = Math.random() * 1000;\n      }\n      Es.push({\n        x: nodes[i].x,\n        y: nodes[i].y\n      });\n    }\n    for (var i = 0; i < esize; i += 1) {\n      var node1 = void 0;\n      var node2 = void 0;\n      var sIdx = 0;\n      var tIdx = 0;\n      for (var j = 0; j < size; j += 1) {\n        var source = (0, util_1.getEdgeTerminal)(nonLoopEdges[i], 'source');\n        var target = (0, util_1.getEdgeTerminal)(nonLoopEdges[i], 'target');\n        if (nodes[j].id === source) {\n          node1 = nodes[j];\n          sIdx = j;\n        } else if (nodes[j].id === target) {\n          node2 = nodes[j];\n          tIdx = j;\n        }\n        edgeEndsIdMap[i] = {\n          sourceIdx: sIdx,\n          targetIdx: tIdx\n        };\n      }\n      if (node1) degrees[idMap[node1.id]] += 1;\n      if (node2) degrees[idMap[node2.id]] += 1;\n    }\n    var iteration = maxIteration;\n    nodes = this.iterate(iteration, idMap, edgeEndsIdMap, esize, degrees, sizes);\n    // if prune, place the leaves around their parents, and then re-layout for several iterations.\n    if (self.prune) {\n      for (var j = 0; j < esize; j += 1) {\n        if (degrees[edgeEndsIdMap[j].sourceIdx] <= 1) {\n          nodes[edgeEndsIdMap[j].sourceIdx].x = nodes[edgeEndsIdMap[j].targetIdx].x;\n          nodes[edgeEndsIdMap[j].sourceIdx].y = nodes[edgeEndsIdMap[j].targetIdx].y;\n        } else if (degrees[edgeEndsIdMap[j].targetIdx] <= 1) {\n          nodes[edgeEndsIdMap[j].targetIdx].x = nodes[edgeEndsIdMap[j].sourceIdx].x;\n          nodes[edgeEndsIdMap[j].targetIdx].y = nodes[edgeEndsIdMap[j].sourceIdx].y;\n        }\n      }\n      self.prune = false;\n      self.barnesHut = false;\n      iteration = 100;\n      nodes = this.iterate(iteration, idMap, edgeEndsIdMap, esize, degrees, sizes);\n    }\n    return nodes;\n  };\n  ForceAtlas2Layout.prototype.iterate = function (iteration, idMap, edgeEndsIdMap, esize, degrees, sizes) {\n    var self = this;\n    var nodes = self.nodes;\n    var kr = self.kr,\n      preventOverlap = self.preventOverlap;\n    var barnesHut = self.barnesHut;\n    var nodeNum = nodes.length;\n    var sg = 0;\n    var krPrime = 100;\n    var iter = iteration;\n    var prevoIter = 50;\n    var forces = [];\n    var preForces = [];\n    var bodies = [];\n    for (var i = 0; i < nodeNum; i += 1) {\n      forces[2 * i] = 0;\n      forces[2 * i + 1] = 0;\n      if (barnesHut) {\n        var params = {\n          id: i,\n          rx: nodes[i].x,\n          ry: nodes[i].y,\n          mass: 1,\n          g: kr,\n          degree: degrees[i]\n        };\n        bodies[i] = new body_1.default(params);\n      }\n    }\n    while (iter > 0) {\n      for (var i = 0; i < nodeNum; i += 1) {\n        preForces[2 * i] = forces[2 * i];\n        preForces[2 * i + 1] = forces[2 * i + 1];\n        forces[2 * i] = 0;\n        forces[2 * i + 1] = 0;\n      }\n      // attractive forces, existing on every actual edge\n      forces = this.getAttrForces(iter, prevoIter, esize, idMap, edgeEndsIdMap, degrees, sizes, forces);\n      // repulsive forces and Gravity, existing on every node pair\n      // if preventOverlap, using the no-optimized method in the last prevoIter instead.\n      if (barnesHut && (preventOverlap && iter > prevoIter || !preventOverlap)) {\n        forces = this.getOptRepGraForces(forces, bodies, degrees);\n      } else {\n        forces = this.getRepGraForces(iter, prevoIter, forces, krPrime, sizes, degrees);\n      }\n      // update the positions\n      var res = this.updatePos(forces, preForces, sg, degrees);\n      nodes = res.nodes;\n      sg = res.sg;\n      iter--;\n      if (self.tick) self.tick();\n    }\n    return nodes;\n  };\n  ForceAtlas2Layout.prototype.getAttrForces = function (iter, prevoIter, esize, idMap, edgeEndsIdMap, degrees, sizes, forces) {\n    var self = this;\n    var nodes = self.nodes,\n      preventOverlap = self.preventOverlap,\n      dissuadeHubs = self.dissuadeHubs,\n      mode = self.mode,\n      prune = self.prune;\n    for (var i = 0; i < esize; i += 1) {\n      var sourceNode = nodes[edgeEndsIdMap[i].sourceIdx];\n      var sourceIdx = edgeEndsIdMap[i].sourceIdx;\n      var targetNode = nodes[edgeEndsIdMap[i].targetIdx];\n      var targetIdx = edgeEndsIdMap[i].targetIdx;\n      if (prune && (degrees[sourceIdx] <= 1 || degrees[targetIdx] <= 1)) continue;\n      var dir = [targetNode.x - sourceNode.x, targetNode.y - sourceNode.y];\n      var eucliDis = Math.hypot(dir[0], dir[1]);\n      eucliDis = eucliDis < 0.0001 ? 0.0001 : eucliDis;\n      dir[0] = dir[0] / eucliDis;\n      dir[1] = dir[1] / eucliDis;\n      if (preventOverlap && iter < prevoIter) eucliDis = eucliDis - sizes[sourceIdx] - sizes[targetIdx];\n      var Fa1 = eucliDis; // tslint:disable-line\n      var Fa2 = Fa1; // tslint:disable-line\n      if (mode === 'linlog') {\n        Fa1 = Math.log(1 + eucliDis);\n        Fa2 = Fa1;\n      }\n      if (dissuadeHubs) {\n        Fa1 = eucliDis / degrees[sourceIdx];\n        Fa2 = eucliDis / degrees[targetIdx];\n      }\n      if (preventOverlap && iter < prevoIter && eucliDis <= 0) {\n        Fa1 = 0;\n        Fa2 = 0;\n      } else if (preventOverlap && iter < prevoIter && eucliDis > 0) {\n        Fa1 = eucliDis;\n        Fa2 = eucliDis;\n      }\n      forces[2 * idMap[sourceNode.id]] += Fa1 * dir[0];\n      forces[2 * idMap[targetNode.id]] -= Fa2 * dir[0];\n      forces[2 * idMap[sourceNode.id] + 1] += Fa1 * dir[1];\n      forces[2 * idMap[targetNode.id] + 1] -= Fa2 * dir[1];\n    }\n    return forces;\n  };\n  ForceAtlas2Layout.prototype.getRepGraForces = function (iter, prevoIter, forces, krPrime, sizes, degrees) {\n    var self = this;\n    var nodes = self.nodes,\n      preventOverlap = self.preventOverlap,\n      kr = self.kr,\n      kg = self.kg,\n      center = self.center,\n      prune = self.prune;\n    var nodeNum = nodes.length;\n    for (var i = 0; i < nodeNum; i += 1) {\n      for (var j = i + 1; j < nodeNum; j += 1) {\n        if (prune && (degrees[i] <= 1 || degrees[j] <= 1)) continue;\n        var dir_1 = [nodes[j].x - nodes[i].x, nodes[j].y - nodes[i].y];\n        var eucliDis_1 = Math.hypot(dir_1[0], dir_1[1]);\n        eucliDis_1 = eucliDis_1 < 0.0001 ? 0.0001 : eucliDis_1;\n        dir_1[0] = dir_1[0] / eucliDis_1;\n        dir_1[1] = dir_1[1] / eucliDis_1;\n        if (preventOverlap && iter < prevoIter) eucliDis_1 = eucliDis_1 - sizes[i] - sizes[j];\n        var Fr = kr * (degrees[i] + 1) * (degrees[j] + 1) / eucliDis_1; // tslint:disable-line\n        if (preventOverlap && iter < prevoIter && eucliDis_1 < 0) {\n          Fr = krPrime * (degrees[i] + 1) * (degrees[j] + 1);\n        } else if (preventOverlap && iter < prevoIter && eucliDis_1 === 0) {\n          Fr = 0;\n        } else if (preventOverlap && iter < prevoIter && eucliDis_1 > 0) {\n          Fr = kr * (degrees[i] + 1) * (degrees[j] + 1) / eucliDis_1;\n        }\n        forces[2 * i] -= Fr * dir_1[0];\n        forces[2 * j] += Fr * dir_1[0];\n        forces[2 * i + 1] -= Fr * dir_1[1];\n        forces[2 * j + 1] += Fr * dir_1[1];\n      }\n      // gravity\n      var dir = [nodes[i].x - center[0], nodes[i].y - center[1]];\n      var eucliDis = Math.hypot(dir[0], dir[1]);\n      dir[0] = dir[0] / eucliDis;\n      dir[1] = dir[1] / eucliDis;\n      var Fg = kg * (degrees[i] + 1); // tslint:disable-line\n      forces[2 * i] -= Fg * dir[0];\n      forces[2 * i + 1] -= Fg * dir[1];\n    }\n    return forces;\n  };\n  ForceAtlas2Layout.prototype.getOptRepGraForces = function (forces, bodies, degrees) {\n    var self = this;\n    var nodes = self.nodes,\n      kg = self.kg,\n      center = self.center,\n      prune = self.prune;\n    var nodeNum = nodes.length;\n    var minx = 9e10;\n    var maxx = -9e10;\n    var miny = 9e10;\n    var maxy = -9e10;\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      bodies[i].setPos(nodes[i].x, nodes[i].y);\n      if (nodes[i].x >= maxx) maxx = nodes[i].x;\n      if (nodes[i].x <= minx) minx = nodes[i].x;\n      if (nodes[i].y >= maxy) maxy = nodes[i].y;\n      if (nodes[i].y <= miny) miny = nodes[i].y;\n    }\n    var width = Math.max(maxx - minx, maxy - miny);\n    var quadParams = {\n      xmid: (maxx + minx) / 2,\n      ymid: (maxy + miny) / 2,\n      length: width,\n      massCenter: center,\n      mass: nodeNum\n    };\n    var quad = new quad_1.default(quadParams);\n    var quadTree = new quadTree_1.default(quad);\n    // build the tree, insert the nodes(quads) into the tree\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      if (bodies[i].in(quad)) quadTree.insert(bodies[i]);\n    }\n    // update the repulsive forces and the gravity.\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      bodies[i].resetForce();\n      quadTree.updateForce(bodies[i]);\n      forces[2 * i] -= bodies[i].fx;\n      forces[2 * i + 1] -= bodies[i].fy;\n      // gravity\n      var dir = [nodes[i].x - center[0], nodes[i].y - center[1]];\n      var eucliDis = Math.hypot(dir[0], dir[1]);\n      eucliDis = eucliDis < 0.0001 ? 0.0001 : eucliDis;\n      dir[0] = dir[0] / eucliDis;\n      dir[1] = dir[1] / eucliDis;\n      var Fg = kg * (degrees[i] + 1); // tslint:disable-line\n      forces[2 * i] -= Fg * dir[0];\n      forces[2 * i + 1] -= Fg * dir[1];\n    }\n    return forces;\n  };\n  ForceAtlas2Layout.prototype.updatePos = function (forces, preForces, sg, degrees) {\n    var self = this;\n    var nodes = self.nodes,\n      ks = self.ks,\n      tao = self.tao,\n      prune = self.prune,\n      ksmax = self.ksmax;\n    var nodeNum = nodes.length;\n    var swgns = [];\n    var trans = [];\n    // swg(G) and tra(G)\n    var swgG = 0;\n    var traG = 0;\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      var minus = [forces[2 * i] - preForces[2 * i], forces[2 * i + 1] - preForces[2 * i + 1]];\n      var minusNorm = Math.hypot(minus[0], minus[1]);\n      var add = [forces[2 * i] + preForces[2 * i], forces[2 * i + 1] + preForces[2 * i + 1]];\n      var addNorm = Math.hypot(add[0], add[1]);\n      swgns[i] = minusNorm;\n      trans[i] = addNorm / 2;\n      swgG += (degrees[i] + 1) * swgns[i];\n      traG += (degrees[i] + 1) * trans[i];\n    }\n    var preSG = sg;\n    sg = tao * traG / swgG; // tslint:disable-line\n    if (preSG !== 0) {\n      sg = sg > 1.5 * preSG ? 1.5 * preSG : sg; // tslint:disable-line\n    }\n    // update the node positions\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      if ((0, util_1.isNumber)(nodes[i].fx) && (0, util_1.isNumber)(nodes[i].fy)) continue;\n      var sn = ks * sg / (1 + sg * Math.sqrt(swgns[i]));\n      var absForce = Math.hypot(forces[2 * i], forces[2 * i + 1]);\n      absForce = absForce < 0.0001 ? 0.0001 : absForce;\n      var max = ksmax / absForce;\n      sn = sn > max ? max : sn;\n      var dnx = sn * forces[2 * i];\n      var dny = sn * forces[2 * i + 1];\n      nodes[i].x += dnx;\n      nodes[i].y += dny;\n    }\n    return {\n      nodes: nodes,\n      sg: sg\n    };\n  };\n  return ForceAtlas2Layout;\n}(base_1.Base);\nexports.ForceAtlas2Layout = ForceAtlas2Layout;","map":{"version":3,"names":["base_1","require","util_1","body_1","__importDefault","quad_1","quadTree_1","ForceAtlas2Layout","_super","__extends","options","_this","call","center","width","height","nodes","edges","kr","kg","mode","preventOverlap","dissuadeHubs","barnesHut","undefined","maxIteration","ks","ksmax","tao","onLayoutEnd","prune","updateCfg","prototype","getDefaultCfg","execute","self","window","innerWidth","innerHeight","sizes","nodeNum","length","i","node","nodeWidth","nodeHeight","isNumber","size","isArray","isNaN","isObject","getWidth","getHeight","maxSize","Math","max","push","updateNodesByForces","nonLoopEdges","filter","edge","source","getEdgeTerminal","target","esize","degrees","idMap","edgeEndsIdMap","Es","id","x","random","y","node1","node2","sIdx","tIdx","j","sourceIdx","targetIdx","iteration","iterate","sg","krPrime","iter","prevoIter","forces","preForces","bodies","params","rx","ry","mass","g","degree","default","getAttrForces","getOptRepGraForces","getRepGraForces","res","updatePos","tick","sourceNode","targetNode","dir","eucliDis","hypot","Fa1","Fa2","log","dir_1","eucliDis_1","Fr","Fg","minx","maxx","miny","maxy","setPos","quadParams","xmid","ymid","massCenter","quad","quadTree","in","insert","resetForce","updateForce","fx","fy","swgns","trans","swgG","traG","minus","minusNorm","add","addNorm","preSG","sn","sqrt","absForce","dnx","dny","Base","exports"],"sources":["../../../src/layout/forceAtlas2/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}