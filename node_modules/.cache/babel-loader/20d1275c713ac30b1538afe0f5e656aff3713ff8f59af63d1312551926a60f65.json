{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport EventEmitter from 'eventemitter3';\nimport { lodashUtil } from \"../lodash-adapter\";\nimport { BOUNDS_BUFFER_SCALE, DEFAULT_CACHE_SCALE, DEFAULT_EXTENT, NOOP, UPDATE_TILE_STRATEGIES } from \"./const\";\nimport { SourceTile } from \"./tile\";\nimport { UpdateTileStrategy } from \"./types\";\nimport { getLatLonBoundsBuffer, isLatLonBoundsContains } from \"./utils/bound-buffer\";\nimport { getTileIndices as _getTileIndices, osmLonLat2TileXY } from \"./utils/lonlat-tile\";\nvar throttle = lodashUtil.throttle;\nexport var TileEventType = /*#__PURE__*/function (TileEventType) {\n  TileEventType[\"TilesLoadStart\"] = \"tiles-load-start\";\n  TileEventType[\"TileLoaded\"] = \"tile-loaded\";\n  TileEventType[\"TileError\"] = \"tile-error\";\n  TileEventType[\"TileUnload\"] = \"tile-unload\";\n  TileEventType[\"TileUpdate\"] = \"tile-update\";\n  TileEventType[\"TilesLoadFinished\"] = \"tiles-load-finished\";\n  return TileEventType;\n}({});\n\n/**\n * 管理瓦片数据\n */\nexport var TilesetManager = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(TilesetManager, _EventEmitter);\n  var _super = _createSuper(TilesetManager);\n  // 上一次视野状态\n\n  function TilesetManager(options) {\n    var _this;\n    _classCallCheck(this, TilesetManager);\n    _this = _super.call(this);\n    // 当前层级的瓦片\n    _defineProperty(_assertThisInitialized(_this), \"currentTiles\", []);\n    // 缓存的瓦片，key 为 {z}-{x}-{y}\n    _defineProperty(_assertThisInitialized(_this), \"cacheTiles\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"throttleUpdate\", throttle(function (zoom, latLonBounds) {\n      _this.update(zoom, latLonBounds);\n    }, 16));\n    // 瓦片加载成功回调\n    _defineProperty(_assertThisInitialized(_this), \"onTileLoad\", function (tile) {\n      _this.emit(TileEventType.TileLoaded, tile);\n      _this.updateTileVisible();\n      _this.loadFinished();\n    });\n    // 瓦片加载失败回调\n    _defineProperty(_assertThisInitialized(_this), \"onTileError\", function (error, tile) {\n      _this.emit(TileEventType.TileError, {\n        error: error,\n        tile: tile\n      });\n      _this.updateTileVisible();\n      _this.loadFinished();\n    });\n    // 瓦片被删除回调\n    _defineProperty(_assertThisInitialized(_this), \"onTileUnload\", function (tile) {\n      _this.emit(TileEventType.TileUnload, tile);\n      _this.loadFinished();\n    });\n    _this.options = {\n      tileSize: 256,\n      minZoom: 0,\n      maxZoom: Infinity,\n      zoomOffset: 0,\n      extent: DEFAULT_EXTENT,\n      getTileData: NOOP,\n      warp: true,\n      // TODO 更新策略\n      updateStrategy: UpdateTileStrategy.Replace\n    };\n    _this.updateOptions(options);\n    return _this;\n  }\n\n  // 更新配置项\n  _createClass(TilesetManager, [{\n    key: \"isLoaded\",\n    get: function get() {\n      return this.currentTiles.every(function (tile) {\n        return tile.isDone;\n      });\n    }\n    // 缓存的瓦片数组\n  }, {\n    key: \"tiles\",\n    get: function get() {\n      // 通过 zoom 层级排序，最小的层级在上面\n      var tiles = Array.from(this.cacheTiles.values()).sort(function (t1, t2) {\n        return t1.z - t2.z;\n      });\n      return tiles;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      var minZoom = options.minZoom === undefined ? this.options.minZoom : Math.ceil(options.minZoom);\n      var maxZoom = options.maxZoom === undefined ? this.options.maxZoom : Math.floor(options.maxZoom);\n      this.options = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {}, {\n        minZoom: minZoom,\n        maxZoom: maxZoom\n      });\n    }\n  }, {\n    key: \"update\",\n    value:\n    // 更新\n    // 1.瓦片序号发生改变 2.瓦片新增 3.瓦片显隐控制\n    function update(zoom, latLonBounds) {\n      var _this2 = this;\n      // 校验层级，向上取整\n      var verifyZoom = Math.max(0, Math.ceil(zoom));\n      if (this.lastViewStates && this.lastViewStates.zoom === verifyZoom && isLatLonBoundsContains(this.lastViewStates.latLonBoundsBuffer, latLonBounds)) {\n        return;\n      }\n\n      // 扩大缓存区的边界\n      var latLonBoundsBuffer = getLatLonBoundsBuffer(latLonBounds, BOUNDS_BUFFER_SCALE);\n      this.lastViewStates = {\n        zoom: verifyZoom,\n        latLonBounds: latLonBounds,\n        latLonBoundsBuffer: latLonBoundsBuffer\n      };\n      this.currentZoom = verifyZoom;\n      var isAddTile = false;\n      var tileIndices = this.getTileIndices(verifyZoom, latLonBoundsBuffer).filter(function (tile) {\n        // 处理数据 warp\n        return _this2.options.warp || tile.x >= 0 && tile.x < Math.pow(2, verifyZoom);\n      });\n      this.emit(TileEventType.TilesLoadStart);\n      this.currentTiles = tileIndices.map(function (_ref) {\n        var x = _ref.x,\n          y = _ref.y,\n          z = _ref.z;\n        var tile = _this2.getTile(x, y, z);\n        if (tile) {\n          var _tile, _tile2;\n          var needsReload = ((_tile = tile) === null || _tile === void 0 ? void 0 : _tile.isFailure) || ((_tile2 = tile) === null || _tile2 === void 0 ? void 0 : _tile2.isCancelled);\n          if (needsReload) {\n            tile.loadData({\n              getData: _this2.options.getTileData,\n              onLoad: _this2.onTileLoad,\n              onError: _this2.onTileError\n            });\n          }\n          return tile;\n        }\n        tile = _this2.createTile(x, y, z);\n        isAddTile = true;\n        return tile;\n      });\n      if (isAddTile) {\n        // 更新缓存\n        this.resizeCacheTiles();\n      }\n      // 更新瓦片显示状态\n      this.updateTileVisible();\n      // 取消滞留请求中的瓦片\n      this.pruneRequests();\n    }\n\n    // 重新加载瓦片\n  }, {\n    key: \"reloadAll\",\n    value: function reloadAll() {\n      var _iterator = _createForOfIteratorHelper(this.cacheTiles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            tileId = _step$value[0],\n            tile = _step$value[1];\n          if (!this.currentTiles.includes(tile)) {\n            this.cacheTiles.delete(tileId);\n            this.onTileUnload(tile);\n            return;\n          }\n          this.onTileUnload(tile);\n          tile.loadData({\n            getData: this.options.getTileData,\n            onLoad: this.onTileLoad,\n            onError: this.onTileError\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"reloadTileById\",\n    value: function reloadTileById(z, x, y) {\n      var tile = this.cacheTiles.get(\"\".concat(x, \",\").concat(y, \",\").concat(z));\n      if (tile) {\n        this.onTileUnload(tile);\n        tile.loadData({\n          getData: this.options.getTileData,\n          onLoad: this.onTileLoad,\n          onError: this.onTileError\n        });\n      }\n    }\n  }, {\n    key: \"reloadTileByLnglat\",\n    value: function reloadTileByLnglat(lng, lat, z) {\n      var tile = this.getTileByLngLat(lng, lat, z);\n      if (tile) {\n        this.reloadTileById(tile.z, tile.x, tile.y);\n      }\n    }\n  }, {\n    key: \"reloadTileByExtent\",\n    value: function reloadTileByExtent(extent, z) {\n      var _this3 = this;\n      var tiles = this.getTileIndices(z, extent);\n      tiles.forEach(function (tile) {\n        _this3.reloadTileById(tile.z, tile.x, tile.y);\n      });\n    }\n\n    // 取消滞留请求中的瓦片\n  }, {\n    key: \"pruneRequests\",\n    value: function pruneRequests() {\n      var abortCandidates = [];\n      var _iterator2 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _tile3 = _step2.value;\n          if (_tile3.isLoading) {\n            if (!_tile3.isCurrent && !_tile3.isVisible) {\n              abortCandidates.push(_tile3);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      while (abortCandidates.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var tile = abortCandidates.shift();\n        tile.abortLoad();\n      }\n    }\n  }, {\n    key: \"getTileByLngLat\",\n    value: function getTileByLngLat(lng, lat, zoom) {\n      var zoomOffset = this.options.zoomOffset;\n      var z = Math.ceil(zoom) + zoomOffset;\n      var xy = osmLonLat2TileXY(lng, lat, z);\n      var tiles = this.tiles.filter(function (t) {\n        return t.key === \"\".concat(xy[0], \"_\").concat(xy[1], \"_\").concat(z);\n      });\n      return tiles[0];\n    }\n  }, {\n    key: \"getTileExtent\",\n    value: function getTileExtent(extent, zoom) {\n      return this.getTileIndices(zoom, extent);\n    }\n  }, {\n    key: \"getTileByZXY\",\n    value: function getTileByZXY(z, x, y) {\n      var tile = this.tiles.filter(function (t) {\n        return t.key === \"\".concat(x, \"_\").concat(y, \"_\").concat(z);\n      });\n      return tile[0];\n    }\n\n    // 摧毁\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _iterator3 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var tile = _step3.value;\n          if (tile.isLoading) {\n            tile.abortLoad();\n          } else {\n            this.onTileUnload(tile);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this.lastViewStates = undefined;\n      this.cacheTiles.clear();\n      this.currentTiles = [];\n    }\n\n    // 摧毁\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.removeAllListeners();\n    }\n\n    // 更新瓦片显隐状态\n  }, {\n    key: \"updateTileVisible\",\n    value: function updateTileVisible() {\n      var updateStrategy = this.options.updateStrategy;\n      var beforeVisible = new Map();\n      // 重置显示状态\n      var _iterator4 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var tile = _step4.value;\n          // 存储已经显示的瓦片\n          beforeVisible.set(tile.key, tile.isVisible);\n          tile.isCurrent = false;\n          tile.isVisible = false;\n        }\n        // 设置当前视野的瓦片为可见\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      var _iterator5 = _createForOfIteratorHelper(this.currentTiles),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _tile4 = _step5.value;\n          _tile4.isCurrent = true;\n          _tile4.isVisible = true;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var tiles = Array.from(this.cacheTiles.values());\n      if (typeof updateStrategy === 'function') {\n        updateStrategy(tiles);\n      } else {\n        UPDATE_TILE_STRATEGIES[updateStrategy](tiles);\n      }\n\n      // 检查瓦片显示状态是否发生改变\n      var isVisibleChange = false;\n      Array.from(this.cacheTiles.values()).forEach(function (tile) {\n        if (tile.isVisible !== beforeVisible.get(tile.key)) {\n          tile.isVisibleChange = true;\n          isVisibleChange = true;\n        } else {\n          tile.isVisibleChange = false;\n        }\n      });\n      if (isVisibleChange) {\n        this.emit(TileEventType.TileUpdate);\n      }\n    }\n\n    // 获取当前视野层级瓦片的所有索引\n  }, {\n    key: \"getTileIndices\",\n    value: function getTileIndices(zoom, latLonBounds) {\n      var _this$options = this.options,\n        tileSize = _this$options.tileSize,\n        extent = _this$options.extent,\n        zoomOffset = _this$options.zoomOffset;\n      var maxZoom = Math.floor(this.options.maxZoom);\n      var minZoom = Math.ceil(this.options.minZoom);\n      var indices = _getTileIndices({\n        maxZoom: maxZoom,\n        minZoom: minZoom,\n        zoomOffset: zoomOffset,\n        tileSize: tileSize,\n        zoom: zoom,\n        latLonBounds: latLonBounds,\n        extent: extent\n      });\n      return indices;\n    }\n  }, {\n    key: \"getTileId\",\n    value:\n    // 获取瓦片 ID\n    function getTileId(x, y, z) {\n      var tileId = \"\".concat(x, \",\").concat(y, \",\").concat(z);\n      return tileId;\n    }\n  }, {\n    key: \"loadFinished\",\n    value: function loadFinished() {\n      var finish = !this.currentTiles.some(function (t) {\n        return !t.isDone;\n      });\n      if (finish) {\n        this.emit(TileEventType.TilesLoadFinished);\n      }\n      return finish;\n    }\n\n    // 获取瓦片\n  }, {\n    key: \"getTile\",\n    value: function getTile(x, y, z) {\n      var tileId = this.getTileId(x, y, z);\n      var tile = this.cacheTiles.get(tileId);\n      return tile;\n    }\n\n    // 创建瓦片\n  }, {\n    key: \"createTile\",\n    value: function createTile(x, y, z) {\n      var tileId = this.getTileId(x, y, z);\n      var tile = new SourceTile({\n        x: x,\n        y: y,\n        z: z,\n        tileSize: this.options.tileSize,\n        warp: this.options.warp\n      });\n      this.cacheTiles.set(tileId, tile);\n      tile.loadData({\n        getData: this.options.getTileData,\n        onLoad: this.onTileLoad,\n        onError: this.onTileError\n      });\n      return tile;\n    }\n\n    // 当缓存超过最大值时，清除不可见的瓦片\n  }, {\n    key: \"resizeCacheTiles\",\n    value: function resizeCacheTiles() {\n      var maxCacheSize = DEFAULT_CACHE_SCALE * this.currentTiles.length;\n      var overflown = this.cacheTiles.size > maxCacheSize;\n      if (overflown) {\n        var _iterator6 = _createForOfIteratorHelper(this.cacheTiles),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var _step6$value = _slicedToArray(_step6.value, 2),\n              tileId = _step6$value[0],\n              tile = _step6$value[1];\n            if (!tile.isVisible && !this.currentTiles.includes(tile)) {\n              this.cacheTiles.delete(tileId);\n              this.onTileUnload(tile);\n            }\n            if (this.cacheTiles.size <= maxCacheSize) {\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n      // 缓存更新重新计算瓦片树\n      this.rebuildTileTree();\n    }\n\n    // 重新计算瓦片树\n  }, {\n    key: \"rebuildTileTree\",\n    value: function rebuildTileTree() {\n      // 清空瓦片上的数据\n      var _iterator7 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var tile = _step7.value;\n          tile.parent = null;\n          tile.children.length = 0;\n        }\n\n        // 重新计算瓦片上的关系树\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var _iterator8 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _tile5 = _step8.value;\n          var parent = this.getNearestAncestor(_tile5.x, _tile5.y, _tile5.z);\n          _tile5.parent = parent;\n          if (parent !== null && parent !== void 0 && parent.children) {\n            parent.children.push(_tile5);\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    // 获取瓦片的最近上级的瓦片\n  }, {\n    key: \"getNearestAncestor\",\n    value: function getNearestAncestor(x, y, z) {\n      while (z > this.options.minZoom) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        z = z - 1;\n        var parent = this.getTile(x, y, z);\n        if (parent) {\n          return parent;\n        }\n      }\n      return null;\n    }\n  }]);\n  return TilesetManager;\n}(EventEmitter);","map":{"version":3,"names":["_slicedToArray","_objectSpread","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","EventEmitter","lodashUtil","BOUNDS_BUFFER_SCALE","DEFAULT_CACHE_SCALE","DEFAULT_EXTENT","NOOP","UPDATE_TILE_STRATEGIES","SourceTile","UpdateTileStrategy","getLatLonBoundsBuffer","isLatLonBoundsContains","getTileIndices","_getTileIndices","osmLonLat2TileXY","throttle","TileEventType","TilesetManager","_EventEmitter","_super","options","_this","Map","zoom","latLonBounds","update","tile","emit","TileLoaded","updateTileVisible","loadFinished","error","TileError","TileUnload","tileSize","minZoom","maxZoom","Infinity","zoomOffset","extent","getTileData","warp","updateStrategy","Replace","updateOptions","key","get","currentTiles","every","isDone","tiles","cacheTiles","values","sort","t1","t2","z","undefined","Math","ceil","floor","_this2","verifyZoom","max","lastViewStates","latLonBoundsBuffer","currentZoom","isAddTile","tileIndices","filter","x","pow","TilesLoadStart","map","_ref","y","getTile","_tile","_tile2","needsReload","isFailure","isCancelled","loadData","getData","onLoad","onTileLoad","onError","onTileError","createTile","resizeCacheTiles","pruneRequests","reloadAll","_iterator","_step","_step$value","tileId","includes","delete","onTileUnload","reloadTileById","concat","reloadTileByLnglat","lng","lat","getTileByLngLat","reloadTileByExtent","_this3","forEach","abortCandidates","_iterator2","_step2","_tile3","isLoading","isCurrent","isVisible","push","shift","abortLoad","xy","t","getTileExtent","getTileByZXY","clear","_iterator3","_step3","destroy","removeAllListeners","beforeVisible","_iterator4","_step4","set","_iterator5","_step5","_tile4","isVisibleChange","TileUpdate","_this$options","indices","getTileId","finish","some","TilesLoadFinished","maxCacheSize","overflown","size","_iterator6","_step6","_step6$value","rebuildTileTree","_iterator7","_step7","parent","children","_iterator8","_step8","_tile5","getNearestAncestor"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-utils/es/tileset-manager/tileset-manager.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport EventEmitter from 'eventemitter3';\nimport { lodashUtil } from \"../lodash-adapter\";\nimport { BOUNDS_BUFFER_SCALE, DEFAULT_CACHE_SCALE, DEFAULT_EXTENT, NOOP, UPDATE_TILE_STRATEGIES } from \"./const\";\nimport { SourceTile } from \"./tile\";\nimport { UpdateTileStrategy } from \"./types\";\nimport { getLatLonBoundsBuffer, isLatLonBoundsContains } from \"./utils/bound-buffer\";\nimport { getTileIndices as _getTileIndices, osmLonLat2TileXY } from \"./utils/lonlat-tile\";\nvar throttle = lodashUtil.throttle;\nexport var TileEventType = /*#__PURE__*/function (TileEventType) {\n  TileEventType[\"TilesLoadStart\"] = \"tiles-load-start\";\n  TileEventType[\"TileLoaded\"] = \"tile-loaded\";\n  TileEventType[\"TileError\"] = \"tile-error\";\n  TileEventType[\"TileUnload\"] = \"tile-unload\";\n  TileEventType[\"TileUpdate\"] = \"tile-update\";\n  TileEventType[\"TilesLoadFinished\"] = \"tiles-load-finished\";\n  return TileEventType;\n}({});\n\n/**\n * 管理瓦片数据\n */\nexport var TilesetManager = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(TilesetManager, _EventEmitter);\n  var _super = _createSuper(TilesetManager);\n  // 上一次视野状态\n\n  function TilesetManager(options) {\n    var _this;\n    _classCallCheck(this, TilesetManager);\n    _this = _super.call(this);\n    // 当前层级的瓦片\n    _defineProperty(_assertThisInitialized(_this), \"currentTiles\", []);\n    // 缓存的瓦片，key 为 {z}-{x}-{y}\n    _defineProperty(_assertThisInitialized(_this), \"cacheTiles\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"throttleUpdate\", throttle(function (zoom, latLonBounds) {\n      _this.update(zoom, latLonBounds);\n    }, 16));\n    // 瓦片加载成功回调\n    _defineProperty(_assertThisInitialized(_this), \"onTileLoad\", function (tile) {\n      _this.emit(TileEventType.TileLoaded, tile);\n      _this.updateTileVisible();\n      _this.loadFinished();\n    });\n    // 瓦片加载失败回调\n    _defineProperty(_assertThisInitialized(_this), \"onTileError\", function (error, tile) {\n      _this.emit(TileEventType.TileError, {\n        error: error,\n        tile: tile\n      });\n      _this.updateTileVisible();\n      _this.loadFinished();\n    });\n    // 瓦片被删除回调\n    _defineProperty(_assertThisInitialized(_this), \"onTileUnload\", function (tile) {\n      _this.emit(TileEventType.TileUnload, tile);\n      _this.loadFinished();\n    });\n    _this.options = {\n      tileSize: 256,\n      minZoom: 0,\n      maxZoom: Infinity,\n      zoomOffset: 0,\n      extent: DEFAULT_EXTENT,\n      getTileData: NOOP,\n      warp: true,\n      // TODO 更新策略\n      updateStrategy: UpdateTileStrategy.Replace\n    };\n    _this.updateOptions(options);\n    return _this;\n  }\n\n  // 更新配置项\n  _createClass(TilesetManager, [{\n    key: \"isLoaded\",\n    get: function get() {\n      return this.currentTiles.every(function (tile) {\n        return tile.isDone;\n      });\n    }\n    // 缓存的瓦片数组\n  }, {\n    key: \"tiles\",\n    get: function get() {\n      // 通过 zoom 层级排序，最小的层级在上面\n      var tiles = Array.from(this.cacheTiles.values()).sort(function (t1, t2) {\n        return t1.z - t2.z;\n      });\n      return tiles;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      var minZoom = options.minZoom === undefined ? this.options.minZoom : Math.ceil(options.minZoom);\n      var maxZoom = options.maxZoom === undefined ? this.options.maxZoom : Math.floor(options.maxZoom);\n      this.options = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {}, {\n        minZoom: minZoom,\n        maxZoom: maxZoom\n      });\n    }\n  }, {\n    key: \"update\",\n    value:\n    // 更新\n    // 1.瓦片序号发生改变 2.瓦片新增 3.瓦片显隐控制\n    function update(zoom, latLonBounds) {\n      var _this2 = this;\n      // 校验层级，向上取整\n      var verifyZoom = Math.max(0, Math.ceil(zoom));\n      if (this.lastViewStates && this.lastViewStates.zoom === verifyZoom && isLatLonBoundsContains(this.lastViewStates.latLonBoundsBuffer, latLonBounds)) {\n        return;\n      }\n\n      // 扩大缓存区的边界\n      var latLonBoundsBuffer = getLatLonBoundsBuffer(latLonBounds, BOUNDS_BUFFER_SCALE);\n      this.lastViewStates = {\n        zoom: verifyZoom,\n        latLonBounds: latLonBounds,\n        latLonBoundsBuffer: latLonBoundsBuffer\n      };\n      this.currentZoom = verifyZoom;\n      var isAddTile = false;\n      var tileIndices = this.getTileIndices(verifyZoom, latLonBoundsBuffer).filter(function (tile) {\n        // 处理数据 warp\n        return _this2.options.warp || tile.x >= 0 && tile.x < Math.pow(2, verifyZoom);\n      });\n      this.emit(TileEventType.TilesLoadStart);\n      this.currentTiles = tileIndices.map(function (_ref) {\n        var x = _ref.x,\n          y = _ref.y,\n          z = _ref.z;\n        var tile = _this2.getTile(x, y, z);\n        if (tile) {\n          var _tile, _tile2;\n          var needsReload = ((_tile = tile) === null || _tile === void 0 ? void 0 : _tile.isFailure) || ((_tile2 = tile) === null || _tile2 === void 0 ? void 0 : _tile2.isCancelled);\n          if (needsReload) {\n            tile.loadData({\n              getData: _this2.options.getTileData,\n              onLoad: _this2.onTileLoad,\n              onError: _this2.onTileError\n            });\n          }\n          return tile;\n        }\n        tile = _this2.createTile(x, y, z);\n        isAddTile = true;\n        return tile;\n      });\n      if (isAddTile) {\n        // 更新缓存\n        this.resizeCacheTiles();\n      }\n      // 更新瓦片显示状态\n      this.updateTileVisible();\n      // 取消滞留请求中的瓦片\n      this.pruneRequests();\n    }\n\n    // 重新加载瓦片\n  }, {\n    key: \"reloadAll\",\n    value: function reloadAll() {\n      var _iterator = _createForOfIteratorHelper(this.cacheTiles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            tileId = _step$value[0],\n            tile = _step$value[1];\n          if (!this.currentTiles.includes(tile)) {\n            this.cacheTiles.delete(tileId);\n            this.onTileUnload(tile);\n            return;\n          }\n          this.onTileUnload(tile);\n          tile.loadData({\n            getData: this.options.getTileData,\n            onLoad: this.onTileLoad,\n            onError: this.onTileError\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"reloadTileById\",\n    value: function reloadTileById(z, x, y) {\n      var tile = this.cacheTiles.get(\"\".concat(x, \",\").concat(y, \",\").concat(z));\n      if (tile) {\n        this.onTileUnload(tile);\n        tile.loadData({\n          getData: this.options.getTileData,\n          onLoad: this.onTileLoad,\n          onError: this.onTileError\n        });\n      }\n    }\n  }, {\n    key: \"reloadTileByLnglat\",\n    value: function reloadTileByLnglat(lng, lat, z) {\n      var tile = this.getTileByLngLat(lng, lat, z);\n      if (tile) {\n        this.reloadTileById(tile.z, tile.x, tile.y);\n      }\n    }\n  }, {\n    key: \"reloadTileByExtent\",\n    value: function reloadTileByExtent(extent, z) {\n      var _this3 = this;\n      var tiles = this.getTileIndices(z, extent);\n      tiles.forEach(function (tile) {\n        _this3.reloadTileById(tile.z, tile.x, tile.y);\n      });\n    }\n\n    // 取消滞留请求中的瓦片\n  }, {\n    key: \"pruneRequests\",\n    value: function pruneRequests() {\n      var abortCandidates = [];\n      var _iterator2 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _tile3 = _step2.value;\n          if (_tile3.isLoading) {\n            if (!_tile3.isCurrent && !_tile3.isVisible) {\n              abortCandidates.push(_tile3);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      while (abortCandidates.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var tile = abortCandidates.shift();\n        tile.abortLoad();\n      }\n    }\n  }, {\n    key: \"getTileByLngLat\",\n    value: function getTileByLngLat(lng, lat, zoom) {\n      var zoomOffset = this.options.zoomOffset;\n      var z = Math.ceil(zoom) + zoomOffset;\n      var xy = osmLonLat2TileXY(lng, lat, z);\n      var tiles = this.tiles.filter(function (t) {\n        return t.key === \"\".concat(xy[0], \"_\").concat(xy[1], \"_\").concat(z);\n      });\n      return tiles[0];\n    }\n  }, {\n    key: \"getTileExtent\",\n    value: function getTileExtent(extent, zoom) {\n      return this.getTileIndices(zoom, extent);\n    }\n  }, {\n    key: \"getTileByZXY\",\n    value: function getTileByZXY(z, x, y) {\n      var tile = this.tiles.filter(function (t) {\n        return t.key === \"\".concat(x, \"_\").concat(y, \"_\").concat(z);\n      });\n      return tile[0];\n    }\n\n    // 摧毁\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _iterator3 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var tile = _step3.value;\n          if (tile.isLoading) {\n            tile.abortLoad();\n          } else {\n            this.onTileUnload(tile);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this.lastViewStates = undefined;\n      this.cacheTiles.clear();\n      this.currentTiles = [];\n    }\n\n    // 摧毁\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.removeAllListeners();\n    }\n\n    // 更新瓦片显隐状态\n  }, {\n    key: \"updateTileVisible\",\n    value: function updateTileVisible() {\n      var updateStrategy = this.options.updateStrategy;\n      var beforeVisible = new Map();\n      // 重置显示状态\n      var _iterator4 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var tile = _step4.value;\n          // 存储已经显示的瓦片\n          beforeVisible.set(tile.key, tile.isVisible);\n          tile.isCurrent = false;\n          tile.isVisible = false;\n        }\n        // 设置当前视野的瓦片为可见\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      var _iterator5 = _createForOfIteratorHelper(this.currentTiles),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _tile4 = _step5.value;\n          _tile4.isCurrent = true;\n          _tile4.isVisible = true;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var tiles = Array.from(this.cacheTiles.values());\n      if (typeof updateStrategy === 'function') {\n        updateStrategy(tiles);\n      } else {\n        UPDATE_TILE_STRATEGIES[updateStrategy](tiles);\n      }\n\n      // 检查瓦片显示状态是否发生改变\n      var isVisibleChange = false;\n      Array.from(this.cacheTiles.values()).forEach(function (tile) {\n        if (tile.isVisible !== beforeVisible.get(tile.key)) {\n          tile.isVisibleChange = true;\n          isVisibleChange = true;\n        } else {\n          tile.isVisibleChange = false;\n        }\n      });\n      if (isVisibleChange) {\n        this.emit(TileEventType.TileUpdate);\n      }\n    }\n\n    // 获取当前视野层级瓦片的所有索引\n  }, {\n    key: \"getTileIndices\",\n    value: function getTileIndices(zoom, latLonBounds) {\n      var _this$options = this.options,\n        tileSize = _this$options.tileSize,\n        extent = _this$options.extent,\n        zoomOffset = _this$options.zoomOffset;\n      var maxZoom = Math.floor(this.options.maxZoom);\n      var minZoom = Math.ceil(this.options.minZoom);\n      var indices = _getTileIndices({\n        maxZoom: maxZoom,\n        minZoom: minZoom,\n        zoomOffset: zoomOffset,\n        tileSize: tileSize,\n        zoom: zoom,\n        latLonBounds: latLonBounds,\n        extent: extent\n      });\n      return indices;\n    }\n  }, {\n    key: \"getTileId\",\n    value:\n    // 获取瓦片 ID\n    function getTileId(x, y, z) {\n      var tileId = \"\".concat(x, \",\").concat(y, \",\").concat(z);\n      return tileId;\n    }\n  }, {\n    key: \"loadFinished\",\n    value: function loadFinished() {\n      var finish = !this.currentTiles.some(function (t) {\n        return !t.isDone;\n      });\n      if (finish) {\n        this.emit(TileEventType.TilesLoadFinished);\n      }\n      return finish;\n    }\n\n    // 获取瓦片\n  }, {\n    key: \"getTile\",\n    value: function getTile(x, y, z) {\n      var tileId = this.getTileId(x, y, z);\n      var tile = this.cacheTiles.get(tileId);\n      return tile;\n    }\n\n    // 创建瓦片\n  }, {\n    key: \"createTile\",\n    value: function createTile(x, y, z) {\n      var tileId = this.getTileId(x, y, z);\n      var tile = new SourceTile({\n        x: x,\n        y: y,\n        z: z,\n        tileSize: this.options.tileSize,\n        warp: this.options.warp\n      });\n      this.cacheTiles.set(tileId, tile);\n      tile.loadData({\n        getData: this.options.getTileData,\n        onLoad: this.onTileLoad,\n        onError: this.onTileError\n      });\n      return tile;\n    }\n\n    // 当缓存超过最大值时，清除不可见的瓦片\n  }, {\n    key: \"resizeCacheTiles\",\n    value: function resizeCacheTiles() {\n      var maxCacheSize = DEFAULT_CACHE_SCALE * this.currentTiles.length;\n      var overflown = this.cacheTiles.size > maxCacheSize;\n      if (overflown) {\n        var _iterator6 = _createForOfIteratorHelper(this.cacheTiles),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var _step6$value = _slicedToArray(_step6.value, 2),\n              tileId = _step6$value[0],\n              tile = _step6$value[1];\n            if (!tile.isVisible && !this.currentTiles.includes(tile)) {\n              this.cacheTiles.delete(tileId);\n              this.onTileUnload(tile);\n            }\n            if (this.cacheTiles.size <= maxCacheSize) {\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n      // 缓存更新重新计算瓦片树\n      this.rebuildTileTree();\n    }\n\n    // 重新计算瓦片树\n  }, {\n    key: \"rebuildTileTree\",\n    value: function rebuildTileTree() {\n      // 清空瓦片上的数据\n      var _iterator7 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var tile = _step7.value;\n          tile.parent = null;\n          tile.children.length = 0;\n        }\n\n        // 重新计算瓦片上的关系树\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var _iterator8 = _createForOfIteratorHelper(this.cacheTiles.values()),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _tile5 = _step8.value;\n          var parent = this.getNearestAncestor(_tile5.x, _tile5.y, _tile5.z);\n          _tile5.parent = parent;\n          if (parent !== null && parent !== void 0 && parent.children) {\n            parent.children.push(_tile5);\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    // 获取瓦片的最近上级的瓦片\n  }, {\n    key: \"getNearestAncestor\",\n    value: function getNearestAncestor(x, y, z) {\n      while (z > this.options.minZoom) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        z = z - 1;\n        var parent = this.getTile(x, y, z);\n        if (parent) {\n          return parent;\n        }\n      }\n      return null;\n    }\n  }]);\n  return TilesetManager;\n}(EventEmitter);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}