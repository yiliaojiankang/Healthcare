{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isArray, map } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { findGeometry, flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE, FUNNEL_PERCENT } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = options.data,\n    data = _a === void 0 ? [] : _a,\n    yField = options.yField,\n    maxSize = options.maxSize,\n    minSize = options.minSize;\n  var formatData = transformData(data, data, {\n    yField: yField,\n    maxSize: maxSize,\n    minSize: minSize\n  });\n  // 绘制漏斗图\n  chart.data(formatData);\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    yField = options.yField,\n    color = options.color,\n    tooltip = options.tooltip,\n    label = options.label,\n    _a = options.shape,\n    shape = _a === void 0 ? 'funnel' : _a,\n    funnelStyle = options.funnelStyle,\n    state = options.state;\n  var _b = getTooltipMapping(tooltip, [xField, yField]),\n    fields = _b.fields,\n    formatter = _b.formatter;\n  baseGeometry({\n    chart: chart,\n    options: {\n      type: 'interval',\n      xField: xField,\n      yField: FUNNEL_MAPPING_VALUE,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      mapping: {\n        shape: shape,\n        tooltip: formatter,\n        color: color,\n        style: funnelStyle\n      },\n      label: label,\n      state: state\n    }\n  });\n  var geo = findGeometry(params.chart, 'interval');\n  geo.adjust('symmetric');\n  return params;\n}\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params) {\n  var chart = params.chart,\n    options = params.options;\n  var isTransposed = options.isTransposed;\n  chart.coordinate({\n    type: 'rect',\n    actions: !isTransposed ? [['transpose'], ['scale', 1, -1]] : []\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\nexport function conversionTag(params) {\n  var options = params.options,\n    chart = params.chart;\n  var maxSize = options.maxSize;\n  // 获取形状位置，再转化为需要的转化率位置\n  var dataArray = get(chart, ['geometries', '0', 'dataArray'], []);\n  var size = get(chart, ['options', 'data', 'length']);\n  var x = map(dataArray, function (item) {\n    return get(item, ['0', 'nextPoints', '0', 'x']) * size - 0.5;\n  });\n  var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n    var percent = maxSize - (maxSize - datum[FUNNEL_MAPPING_VALUE]) / 2;\n    return __assign(__assign({}, initLineOption), {\n      start: [x[datumIndex - 1] || datumIndex - 0.5, percent],\n      end: [x[datumIndex - 1] || datumIndex - 0.5, percent + 0.05]\n    });\n  };\n  conversionTagComponent(getLineCoordinate)(params);\n  return params;\n}\n/**\n * 基础漏斗\n * @param chart\n * @param options\n */\nexport function basicFunnel(params) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}","map":{"version":3,"names":["get","isArray","map","geometry","baseGeometry","findGeometry","flow","getTooltipMapping","FUNNEL_CONVERSATION","FUNNEL_MAPPING_VALUE","FUNNEL_PERCENT","conversionTagComponent","transformData","field","params","chart","options","_a","data","yField","maxSize","minSize","formatData","xField","color","tooltip","label","shape","funnelStyle","state","_b","fields","formatter","type","colorField","tooltipFields","concat","mapping","style","geo","adjust","transpose","isTransposed","coordinate","actions","conversionTag","dataArray","size","x","item","getLineCoordinate","datum","datumIndex","initLineOption","percent","__assign","start","end","basicFunnel"],"sources":["../../../../src/plots/funnel/geometries/basic.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { get, isArray, map } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { Params } from '../../../core/adaptor';\nimport { Data, Datum } from '../../../types/common';\nimport { findGeometry, flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE, FUNNEL_PERCENT } from '../constant';\nimport { FunnelOptions } from '../types';\nimport { conversionTagComponent, transformData } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField, maxSize, minSize } = options;\n  const formatData = transformData(data, data, {\n    yField,\n    maxSize,\n    minSize,\n  });\n\n  // 绘制漏斗图\n  chart.data(formatData);\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { xField, yField, color, tooltip, label, shape = 'funnel', funnelStyle, state } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField]);\n\n  baseGeometry({\n    chart,\n    options: {\n      type: 'interval',\n      xField: xField,\n      yField: FUNNEL_MAPPING_VALUE,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      mapping: {\n        shape,\n        tooltip: formatter,\n        color,\n        style: funnelStyle,\n      },\n      label,\n      state,\n    },\n  });\n\n  const geo = findGeometry(params.chart, 'interval');\n  geo.adjust('symmetric');\n\n  return params;\n}\n\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { isTransposed } = options;\n  chart.coordinate({\n    type: 'rect',\n    actions: !isTransposed ? [['transpose'], ['scale', 1, -1]] : [],\n  });\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nexport function conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { options, chart } = params;\n  const { maxSize } = options;\n\n  // 获取形状位置，再转化为需要的转化率位置\n  const dataArray = get(chart, ['geometries', '0', 'dataArray'], []);\n  const size = get(chart, ['options', 'data', 'length']);\n  const x = map(dataArray, (item) => get(item, ['0', 'nextPoints', '0', 'x']) * size - 0.5);\n\n  const getLineCoordinate = (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ): Types.LineOption => {\n    const percent = maxSize - (maxSize - datum[FUNNEL_MAPPING_VALUE]) / 2;\n    return {\n      ...initLineOption,\n      start: [x[datumIndex - 1] || datumIndex - 0.5, percent],\n      end: [x[datumIndex - 1] || datumIndex - 0.5, percent + 0.05],\n    };\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n\n  return params;\n}\n\n/**\n * 基础漏斗\n * @param chart\n * @param options\n */\nexport function basicFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}