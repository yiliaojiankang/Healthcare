{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropertyWeight = exports.getAllSortProperties = exports.getAllProperties = exports.default = void 0;\nvar _time = require(\"../constants/time\");\n// 获取所有属性并排序\nvar getAllSortProperties = function getAllSortProperties(nodes, n) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n  if (n === void 0) {\n    n = 100;\n  }\n  var propertyKeyInfo = {};\n  nodes.forEach(function (node) {\n    if (!node.properties) {\n      return;\n    }\n    Object.keys(node.properties).forEach(function (propertyKey) {\n      // 目前过滤只保留可以转成数值型的或日期型的, todo: 统一转成one-hot特征向量或者embedding\n      if (propertyKey === 'id' || !\"\".concat(node.properties[propertyKey]).match(_time.secondReg) && !\"\".concat(node.properties[propertyKey]).match(_time.dateReg) && isNaN(Number(node.properties[propertyKey]))) {\n        if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n          delete propertyKeyInfo[propertyKey];\n        }\n        return;\n      }\n      if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n        propertyKeyInfo[propertyKey] += 1;\n      } else {\n        propertyKeyInfo[propertyKey] = 1;\n      }\n    });\n  });\n  // 取top50的属性\n  var sortKeys = Object.keys(propertyKeyInfo).sort(function (a, b) {\n    return propertyKeyInfo[b] - propertyKeyInfo[a];\n  });\n  return sortKeys.length < n ? sortKeys : sortKeys.slice(0, n);\n};\nexports.getAllSortProperties = getAllSortProperties;\nvar processProperty = function processProperty(properties, propertyKeys) {\n  return propertyKeys.map(function (key) {\n    if (properties.hasOwnProperty(key)) {\n      // // 可以转成数值的直接转成数值\n      // if (!isNaN(Number(properties[key]))) {\n      //   return Number(properties[key]);\n      // }\n      // // 时间型的转成时间戳\n      // if (properties[key].match(secondReg) || properties[key].match(dateReg)) {\n      //   // @ts-ignore\n      //   return Number(Date.parse(new Date(properties[key]))) / 1000;\n      // }\n      return properties[key];\n    }\n    return 0;\n  });\n};\n// 获取属性特征权重\nvar getPropertyWeight = function getPropertyWeight(nodes) {\n  var propertyKeys = getAllSortProperties(nodes);\n  var allPropertiesWeight = [];\n  for (var i = 0; i < nodes.length; i++) {\n    allPropertiesWeight[i] = processProperty(nodes[i].properties, propertyKeys);\n  }\n  return allPropertiesWeight;\n};\n// 获取所有节点的属性集合\nexports.getPropertyWeight = getPropertyWeight;\nvar getAllProperties = function getAllProperties(nodes, key) {\n  if (key === void 0) {\n    key = undefined;\n  }\n  var allProperties = [];\n  nodes.forEach(function (node) {\n    if (key === undefined) {\n      allProperties.push(node);\n    }\n    if (node[key] !== undefined) {\n      allProperties.push(node[key]);\n    }\n  });\n  return allProperties;\n};\nexports.getAllProperties = getAllProperties;\nvar _default = {\n  getAllSortProperties: getAllSortProperties,\n  getPropertyWeight: getPropertyWeight,\n  getAllProperties: getAllProperties\n};\nexports.default = _default;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","getPropertyWeight","getAllSortProperties","getAllProperties","default","_time","nodes","n","propertyKeyInfo","forEach","node","properties","keys","propertyKey","concat","match","secondReg","dateReg","isNaN","Number","hasOwnProperty","sortKeys","sort","a","b","length","slice","processProperty","propertyKeys","map","key","allPropertiesWeight","i","undefined","allProperties","push","_default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/algorithm/lib/utils/node-properties.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropertyWeight = exports.getAllSortProperties = exports.getAllProperties = exports.default = void 0;\nvar _time = require(\"../constants/time\");\n// 获取所有属性并排序\nvar getAllSortProperties = function getAllSortProperties(nodes, n) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n  if (n === void 0) {\n    n = 100;\n  }\n  var propertyKeyInfo = {};\n  nodes.forEach(function (node) {\n    if (!node.properties) {\n      return;\n    }\n    Object.keys(node.properties).forEach(function (propertyKey) {\n      // 目前过滤只保留可以转成数值型的或日期型的, todo: 统一转成one-hot特征向量或者embedding\n      if (propertyKey === 'id' || !\"\".concat(node.properties[propertyKey]).match(_time.secondReg) && !\"\".concat(node.properties[propertyKey]).match(_time.dateReg) && isNaN(Number(node.properties[propertyKey]))) {\n        if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n          delete propertyKeyInfo[propertyKey];\n        }\n        return;\n      }\n      if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n        propertyKeyInfo[propertyKey] += 1;\n      } else {\n        propertyKeyInfo[propertyKey] = 1;\n      }\n    });\n  });\n  // 取top50的属性\n  var sortKeys = Object.keys(propertyKeyInfo).sort(function (a, b) {\n    return propertyKeyInfo[b] - propertyKeyInfo[a];\n  });\n  return sortKeys.length < n ? sortKeys : sortKeys.slice(0, n);\n};\nexports.getAllSortProperties = getAllSortProperties;\nvar processProperty = function processProperty(properties, propertyKeys) {\n  return propertyKeys.map(function (key) {\n    if (properties.hasOwnProperty(key)) {\n      // // 可以转成数值的直接转成数值\n      // if (!isNaN(Number(properties[key]))) {\n      //   return Number(properties[key]);\n      // }\n      // // 时间型的转成时间戳\n      // if (properties[key].match(secondReg) || properties[key].match(dateReg)) {\n      //   // @ts-ignore\n      //   return Number(Date.parse(new Date(properties[key]))) / 1000;\n      // }\n      return properties[key];\n    }\n    return 0;\n  });\n};\n// 获取属性特征权重\nvar getPropertyWeight = function getPropertyWeight(nodes) {\n  var propertyKeys = getAllSortProperties(nodes);\n  var allPropertiesWeight = [];\n  for (var i = 0; i < nodes.length; i++) {\n    allPropertiesWeight[i] = processProperty(nodes[i].properties, propertyKeys);\n  }\n  return allPropertiesWeight;\n};\n// 获取所有节点的属性集合\nexports.getPropertyWeight = getPropertyWeight;\nvar getAllProperties = function getAllProperties(nodes, key) {\n  if (key === void 0) {\n    key = undefined;\n  }\n  var allProperties = [];\n  nodes.forEach(function (node) {\n    if (key === undefined) {\n      allProperties.push(node);\n    }\n    if (node[key] !== undefined) {\n      allProperties.push(node[key]);\n    }\n  });\n  return allProperties;\n};\nexports.getAllProperties = getAllProperties;\nvar _default = {\n  getAllSortProperties: getAllSortProperties,\n  getPropertyWeight: getPropertyWeight,\n  getAllProperties: getAllProperties\n};\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}