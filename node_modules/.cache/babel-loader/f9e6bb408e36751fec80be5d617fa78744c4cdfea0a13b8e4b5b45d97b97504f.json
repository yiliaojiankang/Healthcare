{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { groupBy } from '@antv/util';\n/**\n * bidirectional-bar 处理数据, 通过 SERIES_FIELD_KEY 字段分成左右数据\n * @param xField\n * @param yField\n * @param data\n */\nexport function transformData(xField, yField, seriesField, data, reverse) {\n  var hopeData = [];\n  yField.forEach(function (d) {\n    data.forEach(function (k) {\n      var _a;\n      var obj = (_a = {}, _a[xField] = k[xField], _a[seriesField] = d, _a[d] = k[d], _a);\n      hopeData.push(obj);\n    });\n  });\n  var groupData = Object.values(groupBy(hopeData, seriesField));\n  var _a = groupData[0],\n    data1 = _a === void 0 ? [] : _a,\n    _b = groupData[1],\n    data2 = _b === void 0 ? [] : _b;\n  return reverse ? [data1.reverse(), data2.reverse()] : [data1, data2];\n}\n/**\n * 是否横向，默认空为横向\n * @param layout\n */\nexport function isHorizontal(layout) {\n  return layout !== 'vertical';\n}\n/**\n * 多 view 进行同步 padding 的自定义逻辑\n * @param chart\n * @param views\n * @param p\n */\nexport function syncViewPadding(chart, views, p) {\n  var v1 = views[0],\n    v2 = views[1];\n  var p1 = v1.autoPadding;\n  var p2 = v2.autoPadding;\n  var _a = chart.__axisPosition,\n    layout = _a.layout,\n    position = _a.position;\n  // 目前只能根据布局的比例来判断 layout\n  if (isHorizontal(layout) && position === 'top') {\n    /**\n     * 保证 v1 的 left 和 v2 right 的间隔相等，因为 v1 有轴\n     * position top 即为 v1 左边，中间间距设置就为 0\n     */\n    v1.autoPadding = p.instance(p1.top, 0, p1.bottom, p1.left);\n    v2.autoPadding = p.instance(p2.top, p1.left, p2.bottom, 0);\n  }\n  if (isHorizontal(layout) && position === 'bottom') {\n    /**\n     * 保证 v1 的 left 和 v2 right 的间隔相等，因为 v1 有轴\n     * position bottom 即为 v1 的右边，v1 right = right / 2  v2 left = right / 2\n     * + 5 是为了 让那个轴不要太贴近了，更好看\n     */\n    v1.autoPadding = p.instance(p1.top, p1.right / 2 + 5, p1.bottom, p1.left);\n    v2.autoPadding = p.instance(p2.top, p2.right, p2.bottom, p1.right / 2 + 5);\n  }\n  if (!isHorizontal(layout) && position === 'bottom') {\n    /**\n     * 保证 v1 的 left 和 v2 left 的间隔相等 left 取最大值\n     * position bottom 即为 v1 下边，v1 bottom = bottom / 2  v2 top = bottom / 2\n     * + 5 是为了 让那个轴不要太贴近了，更好看\n     */\n    var left = p1.left >= p2.left ? p1.left : p2.left;\n    v1.autoPadding = p.instance(p1.top, p1.right, p1.bottom / 2 + 5, left);\n    v2.autoPadding = p.instance(p1.bottom / 2 + 5, p2.right, p2.bottom, left);\n  }\n  // 垂直状态，不建议设置position 为 top， 还是做个兼容处理\n  if (!isHorizontal(layout) && position === 'top') {\n    var left = p1.left >= p2.left ? p1.left : p2.left;\n    v1.autoPadding = p.instance(p1.top, p1.right, 0, left);\n    v2.autoPadding = p.instance(0, p2.right, p1.top, left);\n  }\n}","map":{"version":3,"names":["groupBy","transformData","xField","yField","seriesField","data","reverse","hopeData","forEach","d","k","obj","_a","push","groupData","Object","values","data1","_b","data2","isHorizontal","layout","syncViewPadding","chart","views","p","v1","v2","p1","autoPadding","p2","__axisPosition","position","instance","top","bottom","left","right"],"sources":["../../../src/plots/bidirectional-bar/utils.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { groupBy } from '@antv/util';\nimport { Datum } from '../../types';\nimport { BidirectionalBarOptions } from './types';\n\ntype TransformData = {\n  [key: string]: string | number;\n}[];\n\n/**\n * bidirectional-bar 处理数据, 通过 SERIES_FIELD_KEY 字段分成左右数据\n * @param xField\n * @param yField\n * @param data\n */\nexport function transformData(\n  xField: string,\n  yField: string[],\n  seriesField: string,\n  data: Datum,\n  reverse?: boolean\n): Types.Data[] {\n  const hopeData: TransformData = [];\n  yField.forEach((d: string) => {\n    data.forEach((k: any) => {\n      const obj = {\n        [xField]: k[xField],\n        [seriesField]: d,\n        [d]: k[d],\n      };\n      hopeData.push(obj);\n    });\n  });\n  const groupData = Object.values(groupBy(hopeData, seriesField));\n  const [data1 = [], data2 = []] = groupData;\n  return reverse ? [data1.reverse(), data2.reverse()] : [data1, data2];\n}\n\n/**\n * 是否横向，默认空为横向\n * @param layout\n */\nexport function isHorizontal(layout: BidirectionalBarOptions['layout']) {\n  return layout !== 'vertical';\n}\n\n/**\n * 多 view 进行同步 padding 的自定义逻辑\n * @param chart\n * @param views\n * @param p\n */\nexport function syncViewPadding(chart: any, views: any, p: any) {\n  const [v1, v2] = views;\n  const p1 = v1.autoPadding;\n  const p2 = v2.autoPadding;\n  const { layout, position } = chart.__axisPosition;\n  // 目前只能根据布局的比例来判断 layout\n  if (isHorizontal(layout) && position === 'top') {\n    /**\n     * 保证 v1 的 left 和 v2 right 的间隔相等，因为 v1 有轴\n     * position top 即为 v1 左边，中间间距设置就为 0\n     */\n    v1.autoPadding = p.instance(p1.top, 0, p1.bottom, p1.left);\n    v2.autoPadding = p.instance(p2.top, p1.left, p2.bottom, 0);\n  }\n  if (isHorizontal(layout) && position === 'bottom') {\n    /**\n     * 保证 v1 的 left 和 v2 right 的间隔相等，因为 v1 有轴\n     * position bottom 即为 v1 的右边，v1 right = right / 2  v2 left = right / 2\n     * + 5 是为了 让那个轴不要太贴近了，更好看\n     */\n    v1.autoPadding = p.instance(p1.top, p1.right / 2 + 5, p1.bottom, p1.left);\n    v2.autoPadding = p.instance(p2.top, p2.right, p2.bottom, p1.right / 2 + 5);\n  }\n  if (!isHorizontal(layout) && position === 'bottom') {\n    /**\n     * 保证 v1 的 left 和 v2 left 的间隔相等 left 取最大值\n     * position bottom 即为 v1 下边，v1 bottom = bottom / 2  v2 top = bottom / 2\n     * + 5 是为了 让那个轴不要太贴近了，更好看\n     */\n    const left = p1.left >= p2.left ? p1.left : p2.left;\n    v1.autoPadding = p.instance(p1.top, p1.right, p1.bottom / 2 + 5, left);\n    v2.autoPadding = p.instance(p1.bottom / 2 + 5, p2.right, p2.bottom, left);\n  }\n  // 垂直状态，不建议设置position 为 top， 还是做个兼容处理\n  if (!isHorizontal(layout) && position === 'top') {\n    const left = p1.left >= p2.left ? p1.left : p2.left;\n    v1.autoPadding = p.instance(p1.top, p1.right, 0, left);\n    v2.autoPadding = p.instance(0, p2.right, p1.top, left);\n  }\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,YAAY;AAQpC;;;;;;AAMA,OAAM,SAAUC,aAAaA,CAC3BC,MAAc,EACdC,MAAgB,EAChBC,WAAmB,EACnBC,IAAW,EACXC,OAAiB;EAEjB,IAAMC,QAAQ,GAAkB,EAAE;EAClCJ,MAAM,CAACK,OAAO,CAAC,UAACC,CAAS;IACvBJ,IAAI,CAACG,OAAO,CAAC,UAACE,CAAM;;MAClB,IAAMC,GAAG,IAAAC,EAAA,OACPA,EAAA,CAACV,MAAM,IAAGQ,CAAC,CAACR,MAAM,CAAC,EACnBU,EAAA,CAACR,WAAW,IAAGK,CAAC,EAChBG,EAAA,CAACH,CAAC,IAAGC,CAAC,CAACD,CAAC,CAAC,E,GACV;MACDF,QAAQ,CAACM,IAAI,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,IAAMG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAChB,OAAO,CAACO,QAAQ,EAAEH,WAAW,CAAC,CAAC;EACxD,IAAAQ,EAAA,GAA0BE,SAAS,GAAzB;IAAVG,KAAK,GAAAL,EAAA,cAAG,EAAE,GAAAA,EAAA;IAAEM,EAAA,GAAcJ,SAAS,GAAb;IAAVK,KAAK,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;EAC7B,OAAOZ,OAAO,GAAG,CAACW,KAAK,CAACX,OAAO,EAAE,EAAEa,KAAK,CAACb,OAAO,EAAE,CAAC,GAAG,CAACW,KAAK,EAAEE,KAAK,CAAC;AACtE;AAEA;;;;AAIA,OAAM,SAAUC,YAAYA,CAACC,MAAyC;EACpE,OAAOA,MAAM,KAAK,UAAU;AAC9B;AAEA;;;;;;AAMA,OAAM,SAAUC,eAAeA,CAACC,KAAU,EAAEC,KAAU,EAAEC,CAAM;EACrD,IAAAC,EAAE,GAAQF,KAAK,GAAb;IAAEG,EAAE,GAAIH,KAAK,GAAT;EACb,IAAMI,EAAE,GAAGF,EAAE,CAACG,WAAW;EACzB,IAAMC,EAAE,GAAGH,EAAE,CAACE,WAAW;EACnB,IAAAjB,EAAA,GAAuBW,KAAK,CAACQ,cAAc;IAAzCV,MAAM,GAAAT,EAAA,CAAAS,MAAA;IAAEW,QAAQ,GAAApB,EAAA,CAAAoB,QAAyB;EACjD;EACA,IAAIZ,YAAY,CAACC,MAAM,CAAC,IAAIW,QAAQ,KAAK,KAAK,EAAE;IAC9C;;;;IAIAN,EAAE,CAACG,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACL,EAAE,CAACM,GAAG,EAAE,CAAC,EAAEN,EAAE,CAACO,MAAM,EAAEP,EAAE,CAACQ,IAAI,CAAC;IAC1DT,EAAE,CAACE,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACH,EAAE,CAACI,GAAG,EAAEN,EAAE,CAACQ,IAAI,EAAEN,EAAE,CAACK,MAAM,EAAE,CAAC,CAAC;;EAE5D,IAAIf,YAAY,CAACC,MAAM,CAAC,IAAIW,QAAQ,KAAK,QAAQ,EAAE;IACjD;;;;;IAKAN,EAAE,CAACG,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACL,EAAE,CAACM,GAAG,EAAEN,EAAE,CAACS,KAAK,GAAG,CAAC,GAAG,CAAC,EAAET,EAAE,CAACO,MAAM,EAAEP,EAAE,CAACQ,IAAI,CAAC;IACzET,EAAE,CAACE,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACH,EAAE,CAACI,GAAG,EAAEJ,EAAE,CAACO,KAAK,EAAEP,EAAE,CAACK,MAAM,EAAEP,EAAE,CAACS,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;;EAE5E,IAAI,CAACjB,YAAY,CAACC,MAAM,CAAC,IAAIW,QAAQ,KAAK,QAAQ,EAAE;IAClD;;;;;IAKA,IAAMI,IAAI,GAAGR,EAAE,CAACQ,IAAI,IAAIN,EAAE,CAACM,IAAI,GAAGR,EAAE,CAACQ,IAAI,GAAGN,EAAE,CAACM,IAAI;IACnDV,EAAE,CAACG,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACL,EAAE,CAACM,GAAG,EAAEN,EAAE,CAACS,KAAK,EAAET,EAAE,CAACO,MAAM,GAAG,CAAC,GAAG,CAAC,EAAEC,IAAI,CAAC;IACtET,EAAE,CAACE,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACL,EAAE,CAACO,MAAM,GAAG,CAAC,GAAG,CAAC,EAAEL,EAAE,CAACO,KAAK,EAAEP,EAAE,CAACK,MAAM,EAAEC,IAAI,CAAC;;EAE3E;EACA,IAAI,CAAChB,YAAY,CAACC,MAAM,CAAC,IAAIW,QAAQ,KAAK,KAAK,EAAE;IAC/C,IAAMI,IAAI,GAAGR,EAAE,CAACQ,IAAI,IAAIN,EAAE,CAACM,IAAI,GAAGR,EAAE,CAACQ,IAAI,GAAGN,EAAE,CAACM,IAAI;IACnDV,EAAE,CAACG,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAACL,EAAE,CAACM,GAAG,EAAEN,EAAE,CAACS,KAAK,EAAE,CAAC,EAAED,IAAI,CAAC;IACtDT,EAAE,CAACE,WAAW,GAAGJ,CAAC,CAACQ,QAAQ,CAAC,CAAC,EAAEH,EAAE,CAACO,KAAK,EAAET,EAAE,CAACM,GAAG,EAAEE,IAAI,CAAC;;AAE1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}