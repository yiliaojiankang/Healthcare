{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isNumber, isString } from '@antv/util';\nimport { formatPadding, isNaN } from '../../util/base';\nimport { applyMatrix, invertMatrix, lerpArray } from '../../util/math';\nimport { transform } from '@antv/matrix-util/lib/ext';\nimport { getAnimateCfgWithCallback } from '../../util/graphic';\nvar ViewController = /** @class */function () {\n  function ViewController(graph) {\n    this.destroyed = false;\n    this.graph = graph;\n    this.destroyed = false;\n  }\n  // get view center coordinate\n  ViewController.prototype.getViewCenter = function () {\n    var padding = this.getFormatPadding();\n    var graph = this.graph;\n    var width = this.graph.get('width');\n    var height = graph.get('height');\n    return {\n      x: (width - padding[1] - padding[3]) / 2 + padding[3],\n      y: (height - padding[0] - padding[2]) / 2 + padding[0]\n    };\n  };\n  ViewController.prototype.fitCenter = function (animate, animateCfg) {\n    var graph = this.graph;\n    var group = graph.get('group');\n    var bbox;\n    // if reaches optimizeThreshold, fitView according to the 4 corner nodes\n    var nodes = graph.getNodes();\n    if (nodes.length > graph.get('optimizeThreshold')) {\n      var minX_1 = Infinity;\n      var minY_1 = Infinity;\n      var maxX_1 = -Infinity;\n      var maxY_1 = -Infinity;\n      nodes.forEach(function (node) {\n        var _a = node.getModel(),\n          x = _a.x,\n          y = _a.y;\n        if (minX_1 > x) minX_1 = x;\n        if (minY_1 > y) minY_1 = y;\n        if (maxX_1 < x) maxX_1 = x;\n        if (maxY_1 < y) maxY_1 = y;\n      });\n      var matrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      var _a = applyMatrix({\n          x: minX_1,\n          y: minY_1\n        }, matrix),\n        transMinX = _a.x,\n        transMinY = _a.y;\n      var _b = applyMatrix({\n          x: maxX_1,\n          y: maxY_1\n        }, matrix),\n        transMaxX = _b.x,\n        transMaxY = _b.y;\n      bbox = {\n        minX: transMinX,\n        maxX: transMaxX,\n        minY: transMinY,\n        maxY: transMaxY,\n        width: transMaxX - transMinX,\n        height: transMaxY - transMinY,\n        x: transMinX,\n        y: transMinY\n      };\n    } else {\n      bbox = group.getCanvasBBox();\n    }\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    graph.translate(viewCenter.x - groupCenter.x, viewCenter.y - groupCenter.y, animate, animateCfg);\n  };\n  ViewController.prototype.animatedFitView = function (group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, zoomToFit) {\n    var graph = this.graph;\n    animateCfg = animateCfg ? animateCfg : {\n      duration: 500,\n      easing: 'easeCubic'\n    };\n    // start from the default matrix\n    var matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    // Translate\n    var vx = bbox.x + viewCenter.x - groupCenter.x - bbox.minX;\n    var vy = bbox.y + viewCenter.y - groupCenter.y - bbox.minY;\n    if (isNaN(vx) || isNaN(vy)) return;\n    var translatedMatrix = transform(matrix, [['t', vx, vy]]);\n    if (!zoomToFit) {\n      // If zooming is not needed just animate the current translated matrix and return\n      var animationConfig_1 = getAnimateCfgWithCallback({\n        animateCfg: animateCfg,\n        callback: function callback() {\n          graph.emit('viewportchange', {\n            action: 'translate',\n            matrix: translatedMatrix\n          });\n        }\n      });\n      group.animate(function (ratio) {\n        return {\n          matrix: lerpArray(startMatrix, translatedMatrix, ratio)\n        };\n      }, animationConfig_1);\n      return;\n    }\n    // Zoom\n    var minZoom = graph.get('minZoom');\n    var maxZoom = graph.get('maxZoom');\n    var realRatio = ratio;\n    if (minZoom && ratio < minZoom) {\n      realRatio = minZoom;\n      console.warn('fitview failed, ratio out of range, ratio: %f', ratio, 'graph minzoom has been used instead');\n    } else if (maxZoom && ratio > maxZoom) {\n      realRatio = maxZoom;\n      console.warn('fitview failed, ratio out of range, ratio: %f', ratio, 'graph maxzoom has been used instead');\n    }\n    var zoomedMatrix = transform(translatedMatrix, [['t', -viewCenter.x, -viewCenter.y], ['s', realRatio, realRatio], ['t', viewCenter.x, viewCenter.y]]);\n    // Animation\n    var animationConfig = getAnimateCfgWithCallback({\n      animateCfg: animateCfg,\n      callback: function callback() {\n        group.setMatrix(zoomedMatrix);\n        graph.emit('viewportchange', {\n          action: 'translate',\n          matrix: translatedMatrix\n        });\n        graph.emit('viewportchange', {\n          action: 'zoom',\n          matrix: zoomedMatrix\n        });\n      }\n    });\n    group.stopAnimate();\n    group.setMatrix(startMatrix);\n    group.animate(function (ratio) {\n      return {\n        matrix: lerpArray(startMatrix, zoomedMatrix, ratio)\n      };\n    }, animationConfig);\n  };\n  // fit view graph\n  ViewController.prototype.fitView = function (animate, animateCfg) {\n    var graph = this.graph;\n    var padding = this.getFormatPadding();\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var group = graph.get('group');\n    var startMatrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    group.resetMatrix();\n    var bbox;\n    // if reaches optimizeThreshold, fitView according to the 4 corner nodes\n    var nodes = graph.getNodes();\n    if (nodes.length > graph.get('optimizeThreshold')) {\n      var minX_2 = Infinity;\n      var minY_2 = Infinity;\n      var maxX_2 = -Infinity;\n      var maxY_2 = -Infinity;\n      nodes.forEach(function (node) {\n        var _a = node.getModel(),\n          x = _a.x,\n          y = _a.y;\n        if (minX_2 > x) minX_2 = x;\n        if (minY_2 > y) minY_2 = y;\n        if (maxX_2 < x) maxX_2 = x;\n        if (maxY_2 < y) maxY_2 = y;\n      });\n      bbox = {\n        minX: minX_2,\n        maxX: maxX_2,\n        minY: minY_2,\n        maxY: maxY_2,\n        width: maxX_2 - minX_2,\n        height: maxY_2 - minY_2,\n        x: minX_2,\n        y: minY_2\n      };\n    } else {\n      bbox = group.getCanvasBBox();\n    }\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    // Compute ratio\n    var w = (width - padding[1] - padding[3]) / bbox.width;\n    var h = (height - padding[0] - padding[2]) / bbox.height;\n    var ratio = w;\n    if (w > h) {\n      ratio = h;\n    }\n    if (animate) {\n      this.animatedFitView(group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, true);\n    } else {\n      var dx = viewCenter.x - groupCenter.x;\n      var dy = viewCenter.y - groupCenter.y;\n      if (isNaN(dx) || isNaN(dy)) return;\n      graph.translate(dx, dy);\n      if (!graph.zoom(ratio, viewCenter)) {\n        console.warn('zoom failed, ratio out of range, ratio: %f', ratio);\n      }\n    }\n  };\n  // fit view graph by rule\n  ViewController.prototype.fitViewByRules = function (rules, animate, animateCfg) {\n    var _a = rules.onlyOutOfViewPort,\n      onlyOutOfViewPort = _a === void 0 ? false : _a,\n      _b = rules.direction,\n      direction = _b === void 0 ? 'both' : _b,\n      _c = rules.ratioRule,\n      ratioRule = _c === void 0 ? 'min' : _c;\n    var graph = this.graph;\n    var padding = this.getFormatPadding();\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var group = graph.get('group');\n    var startMatrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    group.resetMatrix();\n    var bbox;\n    // if reaches optimizeThreshold, fitView according to the 4 corner nodes\n    var nodes = graph.getNodes();\n    if (nodes.length > graph.get('optimizeThreshold')) {\n      var minX_3 = Infinity;\n      var minY_3 = Infinity;\n      var maxX_3 = -Infinity;\n      var maxY_3 = -Infinity;\n      nodes.forEach(function (node) {\n        var _a = node.getModel(),\n          x = _a.x,\n          y = _a.y;\n        if (minX_3 > x) minX_3 = x;\n        if (minY_3 > y) minY_3 = y;\n        if (maxX_3 < x) maxX_3 = x;\n        if (maxY_3 < y) maxY_3 = y;\n      });\n      bbox = {\n        minX: minX_3,\n        maxX: maxX_3,\n        minY: minY_3,\n        maxY: maxY_3,\n        width: maxX_3 - minX_3,\n        height: maxY_3 - minY_3,\n        x: minX_3,\n        y: minY_3\n      };\n    } else {\n      bbox = group.getCanvasBBox();\n    }\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    // Compute ratio\n    var wRatio = (width - padding[1] - padding[3]) / bbox.width;\n    var hRatio = (height - padding[0] - padding[2]) / bbox.height;\n    var ratio;\n    if (direction === 'x') {\n      ratio = wRatio;\n    } else if (direction === 'y') {\n      ratio = hRatio;\n    } else {\n      // ratioRule\n      ratio = ratioRule === 'max' ? Math.max(wRatio, hRatio) : Math.min(wRatio, hRatio);\n    }\n    // 如果设置了仅对超出视口宽高的场景进行fitview，则没超出的场景zoom取1\n    if (onlyOutOfViewPort) {\n      ratio = ratio < 1 ? ratio : 1;\n    }\n    if (animate) {\n      this.animatedFitView(group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, true);\n    } else {\n      var initZoomRatio = graph.getZoom();\n      var endZoom = initZoomRatio * ratio;\n      var minZoom = graph.get('minZoom');\n      // 如果zoom小于最小zoom, 则以最小zoom为准\n      if (endZoom < minZoom) {\n        endZoom = minZoom;\n        console.warn('fitview failed, ratio out of range, ratio: %f', ratio, 'graph minzoom has been used instead');\n      }\n      graph.translate(viewCenter.x - groupCenter.x, viewCenter.y - groupCenter.y);\n      graph.zoomTo(endZoom, viewCenter);\n    }\n  };\n  ViewController.prototype.getFormatPadding = function () {\n    var padding = this.graph.get('fitViewPadding');\n    return formatPadding(padding);\n  };\n  ViewController.prototype.focusPoint = function (point, animate, animateCfg) {\n    var _this = this;\n    var viewCenter = this.getViewCenter();\n    var modelCenter = this.getPointByCanvas(viewCenter.x, viewCenter.y);\n    var viewportMatrix = this.graph.get('group').getMatrix();\n    if (!viewportMatrix) viewportMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    if (animate) {\n      var dx_1 = (modelCenter.x - point.x) * viewportMatrix[0];\n      var dy_1 = (modelCenter.y - point.y) * viewportMatrix[4];\n      var lastX_1 = 0;\n      var lastY_1 = 0;\n      var newX_1 = 0;\n      var newY_1 = 0;\n      // 动画每次平移一点，直到目标位置\n      this.graph.get('canvas').animate(function (ratio) {\n        newX_1 = dx_1 * ratio;\n        newY_1 = dy_1 * ratio;\n        _this.graph.translate(newX_1 - lastX_1, newY_1 - lastY_1);\n        lastX_1 = newX_1;\n        lastY_1 = newY_1;\n      }, __assign({}, animateCfg));\n    } else {\n      this.graph.translate((modelCenter.x - point.x) * viewportMatrix[0], (modelCenter.y - point.y) * viewportMatrix[4]);\n    }\n  };\n  /**\n   * 将 Canvas 坐标转成视口坐标\n   * @param canvasX canvas x 坐标\n   * @param canvasY canvas y 坐标\n   */\n  ViewController.prototype.getPointByCanvas = function (canvasX, canvasY) {\n    var viewportMatrix = this.graph.get('group').getMatrix();\n    if (!viewportMatrix) {\n      viewportMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    var point = invertMatrix({\n      x: canvasX,\n      y: canvasY\n    }, viewportMatrix);\n    return point;\n  };\n  /**\n   * 将页面坐标转成视口坐标\n   * @param clientX 页面 x 坐标\n   * @param clientY 页面 y 坐标\n   */\n  ViewController.prototype.getPointByClient = function (clientX, clientY) {\n    var canvas = this.graph.get('canvas');\n    var canvasPoint = canvas.getPointByClient(clientX, clientY);\n    return this.getPointByCanvas(canvasPoint.x, canvasPoint.y);\n  };\n  /**\n   * 将视口坐标转成页面坐标\n   * @param x 视口 x 坐标\n   * @param y 视口 y 坐标\n   */\n  ViewController.prototype.getClientByPoint = function (x, y) {\n    var canvas = this.graph.get('canvas');\n    var canvasPoint = this.getCanvasByPoint(x, y);\n    var point = canvas.getClientByPoint(canvasPoint.x, canvasPoint.y);\n    return {\n      x: point.x,\n      y: point.y\n    };\n  };\n  /**\n   * 将视口坐标转成 Canvas 坐标\n   * @param x 视口 x 坐标\n   * @param y 视口 y 坐标\n   */\n  ViewController.prototype.getCanvasByPoint = function (x, y) {\n    var viewportMatrix = this.graph.get('group').getMatrix();\n    if (!viewportMatrix) {\n      viewportMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    return applyMatrix({\n      x: x,\n      y: y\n    }, viewportMatrix);\n  };\n  /**\n   * 将元素移动到画布中心\n   * @param item Item 实例或 id\n   * @param {boolean} animate 是否带有动画地移动\n   * @param {GraphAnimateConfig} animateCfg 若带有动画，动画的配置项\n   */\n  ViewController.prototype.focus = function (item, animate, animateCfg) {\n    if (isString(item)) {\n      item = this.graph.findById(item);\n    }\n    if (item) {\n      var x = 0,\n        y = 0;\n      if (item.getType && item.getType() === 'edge') {\n        var sourceMatrix = item.getSource().get('group').getMatrix();\n        var targetMatrix = item.getTarget().get('group').getMatrix();\n        if (sourceMatrix && targetMatrix) {\n          x = (sourceMatrix[6] + targetMatrix[6]) / 2;\n          y = (sourceMatrix[7] + targetMatrix[7]) / 2;\n        } else if (sourceMatrix || targetMatrix) {\n          x = sourceMatrix ? sourceMatrix[6] : targetMatrix[6];\n          y = sourceMatrix ? sourceMatrix[7] : targetMatrix[7];\n        }\n      } else {\n        var group = item.get('group');\n        var matrix = group.getMatrix();\n        if (!matrix) matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n        x = matrix[6];\n        y = matrix[7];\n      }\n      // 用实际位置而不是model中的x,y,防止由于拖拽等的交互导致model的x,y并不是当前的x,y\n      this.focusPoint({\n        x: x,\n        y: y\n      }, animate, animateCfg);\n    }\n  };\n  ViewController.prototype.focusItems = function (items, zoomToFit, animate, animateCfg) {\n    if (!items.length) {\n      return;\n    }\n    var graph = this.graph;\n    var padding = this.getFormatPadding();\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var group = graph.get('group');\n    var startMatrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    group.resetMatrix();\n    var bbox = {\n      x: 0,\n      y: 0,\n      minX: Number.MAX_SAFE_INTEGER,\n      minY: Number.MAX_SAFE_INTEGER,\n      maxX: Number.MIN_SAFE_INTEGER,\n      maxY: Number.MIN_SAFE_INTEGER,\n      width: 0,\n      height: 0\n    };\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var item = items_1[_i];\n      var itemBBox = item.getBBox();\n      if (itemBBox.minX < bbox.minX) {\n        bbox.minX = itemBBox.minX;\n      }\n      if (itemBBox.minY < bbox.minY) {\n        bbox.minY = itemBBox.minY;\n      }\n      if (itemBBox.maxX > bbox.maxX) {\n        bbox.maxX = itemBBox.maxX;\n      }\n      if (itemBBox.maxY > bbox.maxY) {\n        bbox.maxY = itemBBox.maxY;\n      }\n    }\n    bbox.x = bbox.minX;\n    bbox.y = bbox.minY;\n    bbox.width = bbox.maxX - bbox.minX;\n    bbox.height = bbox.maxY - bbox.minY;\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    // Compute ratio\n    var w = (width - padding[1] - padding[3]) / bbox.width;\n    var h = (height - padding[0] - padding[2]) / bbox.height;\n    var ratio = w;\n    if (w > h) {\n      ratio = h;\n    }\n    if (animate) {\n      this.animatedFitView(group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, zoomToFit);\n    } else {\n      graph.translate(viewCenter.x - groupCenter.x, viewCenter.y - groupCenter.y);\n      if (zoomToFit && !graph.zoom(ratio, viewCenter)) {\n        console.warn('zoom failed, ratio out of range, ratio: %f', ratio);\n      }\n    }\n  };\n  /**\n   * 改变 canvas 画布的宽度和高度\n   * @param width canvas 宽度\n   * @param height canvas 高度\n   */\n  ViewController.prototype.changeSize = function (width, height) {\n    var graph = this.graph;\n    if (!isNumber(width) || !isNumber(height)) {\n      throw Error('invalid canvas width & height, please make sure width & height type is number');\n    }\n    graph.set({\n      width: width,\n      height: height\n    });\n    var canvas = graph.get('canvas');\n    canvas.changeSize(width, height);\n    // change the size of grid plugin if it exists on graph\n    var plugins = graph.get('plugins');\n    plugins.forEach(function (plugin) {\n      if (plugin.get('gridContainer')) {\n        // 网格定位信息初始化\n        plugin.positionInit();\n      }\n    });\n  };\n  ViewController.prototype.destroy = function () {\n    this.graph = null;\n    this.destroyed = false;\n  };\n  return ViewController;\n}();\nexport default ViewController;","map":{"version":3,"names":["__assign","isNumber","isString","formatPadding","isNaN","applyMatrix","invertMatrix","lerpArray","transform","getAnimateCfgWithCallback","ViewController","graph","destroyed","prototype","getViewCenter","padding","getFormatPadding","width","get","height","x","y","fitCenter","animate","animateCfg","group","bbox","nodes","getNodes","length","minX_1","Infinity","minY_1","maxX_1","maxY_1","forEach","node","_a","getModel","matrix","getMatrix","transMinX","transMinY","_b","transMaxX","transMaxY","minX","maxX","minY","maxY","getCanvasBBox","viewCenter","groupCenter","translate","animatedFitView","startMatrix","ratio","zoomToFit","duration","easing","vx","vy","translatedMatrix","animationConfig_1","callback","emit","action","minZoom","maxZoom","realRatio","console","warn","zoomedMatrix","animationConfig","setMatrix","stopAnimate","fitView","resetMatrix","minX_2","minY_2","maxX_2","maxY_2","w","h","dx","dy","zoom","fitViewByRules","rules","onlyOutOfViewPort","direction","_c","ratioRule","minX_3","minY_3","maxX_3","maxY_3","wRatio","hRatio","Math","max","min","initZoomRatio","getZoom","endZoom","zoomTo","focusPoint","point","_this","modelCenter","getPointByCanvas","viewportMatrix","dx_1","dy_1","lastX_1","lastY_1","newX_1","newY_1","canvasX","canvasY","getPointByClient","clientX","clientY","canvas","canvasPoint","getClientByPoint","getCanvasByPoint","focus","item","findById","getType","sourceMatrix","getSource","targetMatrix","getTarget","focusItems","items","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","_i","items_1","itemBBox","getBBox","changeSize","Error","set","plugins","plugin","positionInit","destroy"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-core/es/graph/controller/view.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { isNumber, isString } from '@antv/util';\nimport { formatPadding, isNaN } from '../../util/base';\nimport { applyMatrix, invertMatrix, lerpArray } from '../../util/math';\nimport { transform } from '@antv/matrix-util/lib/ext';\nimport { getAnimateCfgWithCallback } from '../../util/graphic';\nvar ViewController = /** @class */function () {\n  function ViewController(graph) {\n    this.destroyed = false;\n    this.graph = graph;\n    this.destroyed = false;\n  }\n  // get view center coordinate\n  ViewController.prototype.getViewCenter = function () {\n    var padding = this.getFormatPadding();\n    var graph = this.graph;\n    var width = this.graph.get('width');\n    var height = graph.get('height');\n    return {\n      x: (width - padding[1] - padding[3]) / 2 + padding[3],\n      y: (height - padding[0] - padding[2]) / 2 + padding[0]\n    };\n  };\n  ViewController.prototype.fitCenter = function (animate, animateCfg) {\n    var graph = this.graph;\n    var group = graph.get('group');\n    var bbox;\n    // if reaches optimizeThreshold, fitView according to the 4 corner nodes\n    var nodes = graph.getNodes();\n    if (nodes.length > graph.get('optimizeThreshold')) {\n      var minX_1 = Infinity;\n      var minY_1 = Infinity;\n      var maxX_1 = -Infinity;\n      var maxY_1 = -Infinity;\n      nodes.forEach(function (node) {\n        var _a = node.getModel(),\n          x = _a.x,\n          y = _a.y;\n        if (minX_1 > x) minX_1 = x;\n        if (minY_1 > y) minY_1 = y;\n        if (maxX_1 < x) maxX_1 = x;\n        if (maxY_1 < y) maxY_1 = y;\n      });\n      var matrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      var _a = applyMatrix({\n          x: minX_1,\n          y: minY_1\n        }, matrix),\n        transMinX = _a.x,\n        transMinY = _a.y;\n      var _b = applyMatrix({\n          x: maxX_1,\n          y: maxY_1\n        }, matrix),\n        transMaxX = _b.x,\n        transMaxY = _b.y;\n      bbox = {\n        minX: transMinX,\n        maxX: transMaxX,\n        minY: transMinY,\n        maxY: transMaxY,\n        width: transMaxX - transMinX,\n        height: transMaxY - transMinY,\n        x: transMinX,\n        y: transMinY\n      };\n    } else {\n      bbox = group.getCanvasBBox();\n    }\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    graph.translate(viewCenter.x - groupCenter.x, viewCenter.y - groupCenter.y, animate, animateCfg);\n  };\n  ViewController.prototype.animatedFitView = function (group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, zoomToFit) {\n    var graph = this.graph;\n    animateCfg = animateCfg ? animateCfg : {\n      duration: 500,\n      easing: 'easeCubic'\n    };\n    // start from the default matrix\n    var matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    // Translate\n    var vx = bbox.x + viewCenter.x - groupCenter.x - bbox.minX;\n    var vy = bbox.y + viewCenter.y - groupCenter.y - bbox.minY;\n    if (isNaN(vx) || isNaN(vy)) return;\n    var translatedMatrix = transform(matrix, [['t', vx, vy]]);\n    if (!zoomToFit) {\n      // If zooming is not needed just animate the current translated matrix and return\n      var animationConfig_1 = getAnimateCfgWithCallback({\n        animateCfg: animateCfg,\n        callback: function callback() {\n          graph.emit('viewportchange', {\n            action: 'translate',\n            matrix: translatedMatrix\n          });\n        }\n      });\n      group.animate(function (ratio) {\n        return {\n          matrix: lerpArray(startMatrix, translatedMatrix, ratio)\n        };\n      }, animationConfig_1);\n      return;\n    }\n    // Zoom\n    var minZoom = graph.get('minZoom');\n    var maxZoom = graph.get('maxZoom');\n    var realRatio = ratio;\n    if (minZoom && ratio < minZoom) {\n      realRatio = minZoom;\n      console.warn('fitview failed, ratio out of range, ratio: %f', ratio, 'graph minzoom has been used instead');\n    } else if (maxZoom && ratio > maxZoom) {\n      realRatio = maxZoom;\n      console.warn('fitview failed, ratio out of range, ratio: %f', ratio, 'graph maxzoom has been used instead');\n    }\n    var zoomedMatrix = transform(translatedMatrix, [['t', -viewCenter.x, -viewCenter.y], ['s', realRatio, realRatio], ['t', viewCenter.x, viewCenter.y]]);\n    // Animation\n    var animationConfig = getAnimateCfgWithCallback({\n      animateCfg: animateCfg,\n      callback: function callback() {\n        group.setMatrix(zoomedMatrix);\n        graph.emit('viewportchange', {\n          action: 'translate',\n          matrix: translatedMatrix\n        });\n        graph.emit('viewportchange', {\n          action: 'zoom',\n          matrix: zoomedMatrix\n        });\n      }\n    });\n    group.stopAnimate();\n    group.setMatrix(startMatrix);\n    group.animate(function (ratio) {\n      return {\n        matrix: lerpArray(startMatrix, zoomedMatrix, ratio)\n      };\n    }, animationConfig);\n  };\n  // fit view graph\n  ViewController.prototype.fitView = function (animate, animateCfg) {\n    var graph = this.graph;\n    var padding = this.getFormatPadding();\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var group = graph.get('group');\n    var startMatrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    group.resetMatrix();\n    var bbox;\n    // if reaches optimizeThreshold, fitView according to the 4 corner nodes\n    var nodes = graph.getNodes();\n    if (nodes.length > graph.get('optimizeThreshold')) {\n      var minX_2 = Infinity;\n      var minY_2 = Infinity;\n      var maxX_2 = -Infinity;\n      var maxY_2 = -Infinity;\n      nodes.forEach(function (node) {\n        var _a = node.getModel(),\n          x = _a.x,\n          y = _a.y;\n        if (minX_2 > x) minX_2 = x;\n        if (minY_2 > y) minY_2 = y;\n        if (maxX_2 < x) maxX_2 = x;\n        if (maxY_2 < y) maxY_2 = y;\n      });\n      bbox = {\n        minX: minX_2,\n        maxX: maxX_2,\n        minY: minY_2,\n        maxY: maxY_2,\n        width: maxX_2 - minX_2,\n        height: maxY_2 - minY_2,\n        x: minX_2,\n        y: minY_2\n      };\n    } else {\n      bbox = group.getCanvasBBox();\n    }\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    // Compute ratio\n    var w = (width - padding[1] - padding[3]) / bbox.width;\n    var h = (height - padding[0] - padding[2]) / bbox.height;\n    var ratio = w;\n    if (w > h) {\n      ratio = h;\n    }\n    if (animate) {\n      this.animatedFitView(group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, true);\n    } else {\n      var dx = viewCenter.x - groupCenter.x;\n      var dy = viewCenter.y - groupCenter.y;\n      if (isNaN(dx) || isNaN(dy)) return;\n      graph.translate(dx, dy);\n      if (!graph.zoom(ratio, viewCenter)) {\n        console.warn('zoom failed, ratio out of range, ratio: %f', ratio);\n      }\n    }\n  };\n  // fit view graph by rule\n  ViewController.prototype.fitViewByRules = function (rules, animate, animateCfg) {\n    var _a = rules.onlyOutOfViewPort,\n      onlyOutOfViewPort = _a === void 0 ? false : _a,\n      _b = rules.direction,\n      direction = _b === void 0 ? 'both' : _b,\n      _c = rules.ratioRule,\n      ratioRule = _c === void 0 ? 'min' : _c;\n    var graph = this.graph;\n    var padding = this.getFormatPadding();\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var group = graph.get('group');\n    var startMatrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    group.resetMatrix();\n    var bbox;\n    // if reaches optimizeThreshold, fitView according to the 4 corner nodes\n    var nodes = graph.getNodes();\n    if (nodes.length > graph.get('optimizeThreshold')) {\n      var minX_3 = Infinity;\n      var minY_3 = Infinity;\n      var maxX_3 = -Infinity;\n      var maxY_3 = -Infinity;\n      nodes.forEach(function (node) {\n        var _a = node.getModel(),\n          x = _a.x,\n          y = _a.y;\n        if (minX_3 > x) minX_3 = x;\n        if (minY_3 > y) minY_3 = y;\n        if (maxX_3 < x) maxX_3 = x;\n        if (maxY_3 < y) maxY_3 = y;\n      });\n      bbox = {\n        minX: minX_3,\n        maxX: maxX_3,\n        minY: minY_3,\n        maxY: maxY_3,\n        width: maxX_3 - minX_3,\n        height: maxY_3 - minY_3,\n        x: minX_3,\n        y: minY_3\n      };\n    } else {\n      bbox = group.getCanvasBBox();\n    }\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    // Compute ratio\n    var wRatio = (width - padding[1] - padding[3]) / bbox.width;\n    var hRatio = (height - padding[0] - padding[2]) / bbox.height;\n    var ratio;\n    if (direction === 'x') {\n      ratio = wRatio;\n    } else if (direction === 'y') {\n      ratio = hRatio;\n    } else {\n      // ratioRule\n      ratio = ratioRule === 'max' ? Math.max(wRatio, hRatio) : Math.min(wRatio, hRatio);\n    }\n    // 如果设置了仅对超出视口宽高的场景进行fitview，则没超出的场景zoom取1\n    if (onlyOutOfViewPort) {\n      ratio = ratio < 1 ? ratio : 1;\n    }\n    if (animate) {\n      this.animatedFitView(group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, true);\n    } else {\n      var initZoomRatio = graph.getZoom();\n      var endZoom = initZoomRatio * ratio;\n      var minZoom = graph.get('minZoom');\n      // 如果zoom小于最小zoom, 则以最小zoom为准\n      if (endZoom < minZoom) {\n        endZoom = minZoom;\n        console.warn('fitview failed, ratio out of range, ratio: %f', ratio, 'graph minzoom has been used instead');\n      }\n      graph.translate(viewCenter.x - groupCenter.x, viewCenter.y - groupCenter.y);\n      graph.zoomTo(endZoom, viewCenter);\n    }\n  };\n  ViewController.prototype.getFormatPadding = function () {\n    var padding = this.graph.get('fitViewPadding');\n    return formatPadding(padding);\n  };\n  ViewController.prototype.focusPoint = function (point, animate, animateCfg) {\n    var _this = this;\n    var viewCenter = this.getViewCenter();\n    var modelCenter = this.getPointByCanvas(viewCenter.x, viewCenter.y);\n    var viewportMatrix = this.graph.get('group').getMatrix();\n    if (!viewportMatrix) viewportMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    if (animate) {\n      var dx_1 = (modelCenter.x - point.x) * viewportMatrix[0];\n      var dy_1 = (modelCenter.y - point.y) * viewportMatrix[4];\n      var lastX_1 = 0;\n      var lastY_1 = 0;\n      var newX_1 = 0;\n      var newY_1 = 0;\n      // 动画每次平移一点，直到目标位置\n      this.graph.get('canvas').animate(function (ratio) {\n        newX_1 = dx_1 * ratio;\n        newY_1 = dy_1 * ratio;\n        _this.graph.translate(newX_1 - lastX_1, newY_1 - lastY_1);\n        lastX_1 = newX_1;\n        lastY_1 = newY_1;\n      }, __assign({}, animateCfg));\n    } else {\n      this.graph.translate((modelCenter.x - point.x) * viewportMatrix[0], (modelCenter.y - point.y) * viewportMatrix[4]);\n    }\n  };\n  /**\n   * 将 Canvas 坐标转成视口坐标\n   * @param canvasX canvas x 坐标\n   * @param canvasY canvas y 坐标\n   */\n  ViewController.prototype.getPointByCanvas = function (canvasX, canvasY) {\n    var viewportMatrix = this.graph.get('group').getMatrix();\n    if (!viewportMatrix) {\n      viewportMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    var point = invertMatrix({\n      x: canvasX,\n      y: canvasY\n    }, viewportMatrix);\n    return point;\n  };\n  /**\n   * 将页面坐标转成视口坐标\n   * @param clientX 页面 x 坐标\n   * @param clientY 页面 y 坐标\n   */\n  ViewController.prototype.getPointByClient = function (clientX, clientY) {\n    var canvas = this.graph.get('canvas');\n    var canvasPoint = canvas.getPointByClient(clientX, clientY);\n    return this.getPointByCanvas(canvasPoint.x, canvasPoint.y);\n  };\n  /**\n   * 将视口坐标转成页面坐标\n   * @param x 视口 x 坐标\n   * @param y 视口 y 坐标\n   */\n  ViewController.prototype.getClientByPoint = function (x, y) {\n    var canvas = this.graph.get('canvas');\n    var canvasPoint = this.getCanvasByPoint(x, y);\n    var point = canvas.getClientByPoint(canvasPoint.x, canvasPoint.y);\n    return {\n      x: point.x,\n      y: point.y\n    };\n  };\n  /**\n   * 将视口坐标转成 Canvas 坐标\n   * @param x 视口 x 坐标\n   * @param y 视口 y 坐标\n   */\n  ViewController.prototype.getCanvasByPoint = function (x, y) {\n    var viewportMatrix = this.graph.get('group').getMatrix();\n    if (!viewportMatrix) {\n      viewportMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    return applyMatrix({\n      x: x,\n      y: y\n    }, viewportMatrix);\n  };\n  /**\n   * 将元素移动到画布中心\n   * @param item Item 实例或 id\n   * @param {boolean} animate 是否带有动画地移动\n   * @param {GraphAnimateConfig} animateCfg 若带有动画，动画的配置项\n   */\n  ViewController.prototype.focus = function (item, animate, animateCfg) {\n    if (isString(item)) {\n      item = this.graph.findById(item);\n    }\n    if (item) {\n      var x = 0,\n        y = 0;\n      if (item.getType && item.getType() === 'edge') {\n        var sourceMatrix = item.getSource().get('group').getMatrix();\n        var targetMatrix = item.getTarget().get('group').getMatrix();\n        if (sourceMatrix && targetMatrix) {\n          x = (sourceMatrix[6] + targetMatrix[6]) / 2;\n          y = (sourceMatrix[7] + targetMatrix[7]) / 2;\n        } else if (sourceMatrix || targetMatrix) {\n          x = sourceMatrix ? sourceMatrix[6] : targetMatrix[6];\n          y = sourceMatrix ? sourceMatrix[7] : targetMatrix[7];\n        }\n      } else {\n        var group = item.get('group');\n        var matrix = group.getMatrix();\n        if (!matrix) matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n        x = matrix[6];\n        y = matrix[7];\n      }\n      // 用实际位置而不是model中的x,y,防止由于拖拽等的交互导致model的x,y并不是当前的x,y\n      this.focusPoint({\n        x: x,\n        y: y\n      }, animate, animateCfg);\n    }\n  };\n  ViewController.prototype.focusItems = function (items, zoomToFit, animate, animateCfg) {\n    if (!items.length) {\n      return;\n    }\n    var graph = this.graph;\n    var padding = this.getFormatPadding();\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var group = graph.get('group');\n    var startMatrix = group.getMatrix() || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    group.resetMatrix();\n    var bbox = {\n      x: 0,\n      y: 0,\n      minX: Number.MAX_SAFE_INTEGER,\n      minY: Number.MAX_SAFE_INTEGER,\n      maxX: Number.MIN_SAFE_INTEGER,\n      maxY: Number.MIN_SAFE_INTEGER,\n      width: 0,\n      height: 0\n    };\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var item = items_1[_i];\n      var itemBBox = item.getBBox();\n      if (itemBBox.minX < bbox.minX) {\n        bbox.minX = itemBBox.minX;\n      }\n      if (itemBBox.minY < bbox.minY) {\n        bbox.minY = itemBBox.minY;\n      }\n      if (itemBBox.maxX > bbox.maxX) {\n        bbox.maxX = itemBBox.maxX;\n      }\n      if (itemBBox.maxY > bbox.maxY) {\n        bbox.maxY = itemBBox.maxY;\n      }\n    }\n    bbox.x = bbox.minX;\n    bbox.y = bbox.minY;\n    bbox.width = bbox.maxX - bbox.minX;\n    bbox.height = bbox.maxY - bbox.minY;\n    if (bbox.width === 0 || bbox.height === 0) return;\n    var viewCenter = this.getViewCenter();\n    var groupCenter = {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n    // Compute ratio\n    var w = (width - padding[1] - padding[3]) / bbox.width;\n    var h = (height - padding[0] - padding[2]) / bbox.height;\n    var ratio = w;\n    if (w > h) {\n      ratio = h;\n    }\n    if (animate) {\n      this.animatedFitView(group, startMatrix, animateCfg, bbox, viewCenter, groupCenter, ratio, zoomToFit);\n    } else {\n      graph.translate(viewCenter.x - groupCenter.x, viewCenter.y - groupCenter.y);\n      if (zoomToFit && !graph.zoom(ratio, viewCenter)) {\n        console.warn('zoom failed, ratio out of range, ratio: %f', ratio);\n      }\n    }\n  };\n  /**\n   * 改变 canvas 画布的宽度和高度\n   * @param width canvas 宽度\n   * @param height canvas 高度\n   */\n  ViewController.prototype.changeSize = function (width, height) {\n    var graph = this.graph;\n    if (!isNumber(width) || !isNumber(height)) {\n      throw Error('invalid canvas width & height, please make sure width & height type is number');\n    }\n    graph.set({\n      width: width,\n      height: height\n    });\n    var canvas = graph.get('canvas');\n    canvas.changeSize(width, height);\n    // change the size of grid plugin if it exists on graph\n    var plugins = graph.get('plugins');\n    plugins.forEach(function (plugin) {\n      if (plugin.get('gridContainer')) {\n        // 网格定位信息初始化\n        plugin.positionInit();\n      }\n    });\n  };\n  ViewController.prototype.destroy = function () {\n    this.graph = null;\n    this.destroyed = false;\n  };\n  return ViewController;\n}();\nexport default ViewController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}