{"ast":null,"code":"import { isArray } from '@antv/util';\n/**\n * @ignore\n * 拆分点数据\n * @example\n * // result: [{x: 20, y: 20}, {x: 20, y: 30}]\n * splitPoints({x: 20,y: [20, 30]});\n * @example\n * // result: [{x: 20, y: 20}, {x: 30, y: 30}]\n * splitPoints({x: [20, 30],y: [20, 30]});\n * @param obj\n */\nexport function splitPoints(obj) {\n  // y 有可能是数组，对应原始数据中 y 为一个区间数据，如 [19, 30]，为了统一也将 x 转换为数组\n  var x = obj.x;\n  var y = isArray(obj.y) ? obj.y : [obj.y];\n  return y.map(function (eachY, index) {\n    return {\n      x: isArray(x) ? x[index] : x,\n      y: eachY\n    };\n  });\n}","map":{"version":3,"names":["isArray","splitPoints","obj","x","y","map","eachY","index"],"sources":["../../../../src/geometry/shape/util/split-points.ts"],"sourcesContent":["import { isArray } from '@antv/util';\nimport { Point, RangePoint } from '../../../interface';\n\n/**\n * @ignore\n * 拆分点数据\n * @example\n * // result: [{x: 20, y: 20}, {x: 20, y: 30}]\n * splitPoints({x: 20,y: [20, 30]});\n * @example\n * // result: [{x: 20, y: 20}, {x: 30, y: 30}]\n * splitPoints({x: [20, 30],y: [20, 30]});\n * @param obj\n */\nexport function splitPoints(obj: RangePoint): Point[] {\n  // y 有可能是数组，对应原始数据中 y 为一个区间数据，如 [19, 30]，为了统一也将 x 转换为数组\n  const x = obj.x;\n  const y = isArray(obj.y) ? obj.y : [obj.y];\n\n  return y.map((eachY, index) => {\n    return {\n      x: isArray(x) ? x[index] : x,\n      y: eachY,\n    };\n  });\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAGpC;;;;;;;;;;;AAWA,OAAM,SAAUC,WAAWA,CAACC,GAAe;EACzC;EACA,IAAMC,CAAC,GAAGD,GAAG,CAACC,CAAC;EACf,IAAMC,CAAC,GAAGJ,OAAO,CAACE,GAAG,CAACE,CAAC,CAAC,GAAGF,GAAG,CAACE,CAAC,GAAG,CAACF,GAAG,CAACE,CAAC,CAAC;EAE1C,OAAOA,CAAC,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IACxB,OAAO;MACLJ,CAAC,EAAEH,OAAO,CAACG,CAAC,CAAC,GAAGA,CAAC,CAACI,KAAK,CAAC,GAAGJ,CAAC;MAC5BC,CAAC,EAAEE;KACJ;EACH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}