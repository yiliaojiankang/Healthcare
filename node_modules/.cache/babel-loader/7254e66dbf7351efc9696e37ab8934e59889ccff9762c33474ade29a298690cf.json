{"ast":null,"code":"import { each, isFunction } from '@antv/util';\n/**\n * 在 Chart 中查找特定 id 的子 View\n * @param chart\n * @param id\n */\nexport function findViewById(chart, id) {\n  return chart.views.find(function (view) {\n    return view.id === id;\n  });\n}\n/**\n * 获取同 view 同一级的所有 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getViews(view) {\n  var parent = view.parent;\n  return parent ? parent.views : [];\n}\n/**\n * 获取同 view 同一级的 views，不包括自身\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSiblingViews(view) {\n  return getViews(view).filter(function (sub) {\n    return sub !== view;\n  });\n}\n/**\n * 所有的 Geometries 都使用同一动画（各个图形如有区别，自行覆盖）并添加处理动画回调\n * @param view View\n * @param animation 动画配置\n */\nexport function addViewAnimation(view, animation, geometries) {\n  if (geometries === void 0) {\n    geometries = view.geometries;\n  }\n  // 同时设置整个 view 动画选项\n  if (typeof animation === 'boolean') {\n    view.animate(animation);\n  } else {\n    view.animate(true);\n  }\n  // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n  each(geometries, function (g) {\n    var animationCfg;\n    if (isFunction(animation)) {\n      animationCfg = animation(g.type || g.shapeType, g) || true;\n    } else {\n      animationCfg = animation;\n    }\n    g.animate(animationCfg);\n  });\n}","map":{"version":3,"names":["each","isFunction","findViewById","chart","id","views","find","view","getViews","parent","getSiblingViews","filter","sub","addViewAnimation","animation","geometries","animate","g","animationCfg","type","shapeType"],"sources":["../../src/utils/view.ts"],"sourcesContent":["import { Geometry, Types, View } from '@antv/g2';\nimport { each, isFunction } from '@antv/util';\nimport { Options } from '../types';\nimport { Animation } from '../types/animation';\n\n/**\n * 在 Chart 中查找特定 id 的子 View\n * @param chart\n * @param id\n */\nexport function findViewById(chart: View, id: string): View {\n  return chart.views.find((view: View) => view.id === id);\n}\n\n/**\n * 获取同 view 同一级的所有 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getViews(view: View): View[] {\n  const parent = view.parent;\n  return parent ? parent.views : [];\n}\n\n/**\n * 获取同 view 同一级的 views，不包括自身\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSiblingViews(view: View): View[] {\n  return getViews(view).filter((sub) => sub !== view);\n}\n\n/**\n * 所有的 Geometries 都使用同一动画（各个图形如有区别，自行覆盖）并添加处理动画回调\n * @param view View\n * @param animation 动画配置\n */\nexport function addViewAnimation(\n  view: View,\n  animation: Options['animation'],\n  geometries: Geometry<Types.ShapePoint>[] = view.geometries\n) {\n  // 同时设置整个 view 动画选项\n  if (typeof animation === 'boolean') {\n    view.animate(animation);\n  } else {\n    view.animate(true);\n  }\n\n  // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n  each(geometries, (g: Geometry) => {\n    let animationCfg;\n    if (isFunction(animation)) {\n      animationCfg = animation(g.type || g.shapeType, g) || true;\n    } else {\n      animationCfg = animation;\n    }\n\n    g.animate(animationCfg as Animation);\n  });\n}\n"],"mappings":"AACA,SAASA,IAAI,EAAEC,UAAU,QAAQ,YAAY;AAI7C;;;;;AAKA,OAAM,SAAUC,YAAYA,CAACC,KAAW,EAAEC,EAAU;EAClD,OAAOD,KAAK,CAACE,KAAK,CAACC,IAAI,CAAC,UAACC,IAAU;IAAK,OAAAA,IAAI,CAACH,EAAE,KAAKA,EAAE;EAAd,CAAc,CAAC;AACzD;AAEA;;;;;;AAMA,OAAM,SAAUI,QAAQA,CAACD,IAAU;EACjC,IAAME,MAAM,GAAGF,IAAI,CAACE,MAAM;EAC1B,OAAOA,MAAM,GAAGA,MAAM,CAACJ,KAAK,GAAG,EAAE;AACnC;AAEA;;;;;;AAMA,OAAM,SAAUK,eAAeA,CAACH,IAAU;EACxC,OAAOC,QAAQ,CAACD,IAAI,CAAC,CAACI,MAAM,CAAC,UAACC,GAAG;IAAK,OAAAA,GAAG,KAAKL,IAAI;EAAZ,CAAY,CAAC;AACrD;AAEA;;;;;AAKA,OAAM,SAAUM,gBAAgBA,CAC9BN,IAAU,EACVO,SAA+B,EAC/BC,UAA0D;EAA1D,IAAAA,UAAA;IAAAA,UAAA,GAA2CR,IAAI,CAACQ,UAAU;EAAA;EAE1D;EACA,IAAI,OAAOD,SAAS,KAAK,SAAS,EAAE;IAClCP,IAAI,CAACS,OAAO,CAACF,SAAS,CAAC;GACxB,MAAM;IACLP,IAAI,CAACS,OAAO,CAAC,IAAI,CAAC;;EAGpB;EACAhB,IAAI,CAACe,UAAU,EAAE,UAACE,CAAW;IAC3B,IAAIC,YAAY;IAChB,IAAIjB,UAAU,CAACa,SAAS,CAAC,EAAE;MACzBI,YAAY,GAAGJ,SAAS,CAACG,CAAC,CAACE,IAAI,IAAIF,CAAC,CAACG,SAAS,EAAEH,CAAC,CAAC,IAAI,IAAI;KAC3D,MAAM;MACLC,YAAY,GAAGJ,SAAS;;IAG1BG,CAAC,CAACD,OAAO,CAACE,YAAyB,CAAC;EACtC,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}