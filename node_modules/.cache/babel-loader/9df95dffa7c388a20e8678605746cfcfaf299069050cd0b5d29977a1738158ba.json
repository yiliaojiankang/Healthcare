{"ast":null,"code":"import { lerp } from './math-utils';\nimport { scaleToZoom, zoomToScale, lngLatToWorld, worldToLngLat } from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\nvar EPSILON = 0.01;\nvar VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'];\nvar DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n};\nexport default function flyToViewport(startProps, endProps, t) {\n  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var viewport = {};\n  var _getFlyToTransitionPa = getFlyToTransitionParams(startProps, endProps, opts),\n    startZoom = _getFlyToTransitionPa.startZoom,\n    startCenterXY = _getFlyToTransitionPa.startCenterXY,\n    uDelta = _getFlyToTransitionPa.uDelta,\n    w0 = _getFlyToTransitionPa.w0,\n    u1 = _getFlyToTransitionPa.u1,\n    S = _getFlyToTransitionPa.S,\n    rho = _getFlyToTransitionPa.rho,\n    rho2 = _getFlyToTransitionPa.rho2,\n    r0 = _getFlyToTransitionPa.r0;\n  if (u1 < EPSILON) {\n    for (var _i = 0; _i < VIEWPORT_TRANSITION_PROPS.length; _i++) {\n      var key = VIEWPORT_TRANSITION_PROPS[_i];\n      var startValue = startProps[key];\n      var endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    return viewport;\n  }\n  var s = t * S;\n  var w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n  var u = w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2) / u1;\n  var scaleIncrement = 1 / w;\n  var newZoom = startZoom + scaleToZoom(scaleIncrement);\n  var newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n  vec2.scale(newCenterWorld, newCenterWorld, scaleIncrement);\n  var newCenter = worldToLngLat(newCenterWorld, zoomToScale(newZoom));\n  viewport.longitude = newCenter[0];\n  viewport.latitude = newCenter[1];\n  viewport.zoom = newZoom;\n  return viewport;\n}\nexport function getFlyToDuration(startProps, endProps) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  var _opts = opts,\n    screenSpeed = _opts.screenSpeed,\n    speed = _opts.speed,\n    maxDuration = _opts.maxDuration;\n  var _getFlyToTransitionPa2 = getFlyToTransitionParams(startProps, endProps, opts),\n    S = _getFlyToTransitionPa2.S,\n    rho = _getFlyToTransitionPa2.rho;\n  var length = 1000 * S;\n  var duration;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\nfunction getFlyToTransitionParams(startProps, endProps, opts) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  var rho = opts.curve;\n  var startZoom = startProps.zoom;\n  var startCenter = [startProps.longitude, startProps.latitude];\n  var startScale = zoomToScale(startZoom);\n  var endZoom = endProps.zoom;\n  var endCenter = [endProps.longitude, endProps.latitude];\n  var scale = zoomToScale(endZoom - startZoom);\n  var startCenterXY = lngLatToWorld(startCenter, startScale);\n  var endCenterXY = lngLatToWorld(endCenter, startScale);\n  var uDelta = vec2.sub([], endCenterXY, startCenterXY);\n  var w0 = Math.max(startProps.width, startProps.height);\n  var w1 = w0 / scale;\n  var u1 = vec2.length(uDelta);\n  var _u1 = Math.max(u1, EPSILON);\n  var rho2 = rho * rho;\n  var b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  var b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  var r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  var r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  var S = (r1 - r0) / rho;\n  return {\n    startZoom: startZoom,\n    startCenterXY: startCenterXY,\n    uDelta: uDelta,\n    w0: w0,\n    u1: u1,\n    S: S,\n    rho: rho,\n    rho2: rho2,\n    r0: r0,\n    r1: r1\n  };\n}","map":{"version":3,"names":["lerp","scaleToZoom","zoomToScale","lngLatToWorld","worldToLngLat","vec2","EPSILON","VIEWPORT_TRANSITION_PROPS","DEFAULT_OPTS","curve","speed","flyToViewport","startProps","endProps","t","opts","arguments","length","undefined","viewport","_getFlyToTransitionPa","getFlyToTransitionParams","startZoom","startCenterXY","uDelta","w0","u1","S","rho","rho2","r0","_i","key","startValue","endValue","s","w","Math","cosh","u","tanh","sinh","scaleIncrement","newZoom","newCenterWorld","scale","add","newCenter","longitude","latitude","zoom","getFlyToDuration","Object","assign","_opts","screenSpeed","maxDuration","_getFlyToTransitionPa2","duration","Number","isFinite","startCenter","startScale","endZoom","endCenter","endCenterXY","sub","max","width","height","w1","_u1","b0","b1","log","sqrt","r1"],"sources":["../../src/fly-to-viewport.js"],"sourcesContent":["import {lerp} from './math-utils';\nimport {\n  scaleToZoom,\n  zoomToScale,\n  lngLatToWorld,\n  worldToLngLat\n} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'];\nconst DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n  // screenSpeed and maxDuration are used only if specified\n};\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n*/\nexport default function flyToViewport(startProps, endProps, t, opts = {}) {\n  // Equations from above paper are referred where needed.\n\n  const viewport = {};\n\n  const {\n    startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0\n  } = getFlyToTransitionParams(startProps, endProps, opts);\n\n  // If change in center is too small, do linear interpolaiton.\n  if (u1 < EPSILON) {\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    return viewport;\n  }\n\n  const s = t * S;\n\n  const w = (Math.cosh(r0) / Math.cosh(r0 + rho * s));\n  const u = w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n  vec2.scale(newCenterWorld, newCenterWorld, scaleIncrement);\n\n  const newCenter = worldToLngLat(\n    newCenterWorld,\n    zoomToScale(newZoom));\n  viewport.longitude = newCenter[0];\n  viewport.latitude = newCenter[1];\n  viewport.zoom = newZoom;\n  return viewport;\n}\n\n// returns transition duration in milliseconds\nexport function getFlyToDuration(startProps, endProps, opts = {}) {\n\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const {screenSpeed, speed, maxDuration} = opts;\n  const {S, rho} = getFlyToTransitionParams(startProps, endProps, opts);\n  const length =  1000 * S;\n  let duration;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\n\n// Private Methods\n\n// Calculate all parameters that are static for given startProps and endProps\nfunction getFlyToTransitionParams(startProps, endProps, opts) {\n\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const rho = opts.curve;\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter, startScale);\n  const endCenterXY = lngLatToWorld(endCenter, startScale);\n  const uDelta = vec2.sub([], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta);\n  // u0 is treated as '0' in Eq (9).\n\n  // If u1 is too small, will generate invalid number\n  const _u1 = Math.max(u1, EPSILON);\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n\n  return {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0, r1};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}