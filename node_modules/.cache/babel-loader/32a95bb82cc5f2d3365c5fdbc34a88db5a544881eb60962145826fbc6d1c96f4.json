{"ast":null,"code":"/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\nexport var VERSION = '4.2.10';\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as Element } from './geometry/element'; // Element 类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport { registerGeometryLabel, registerGeometryLabelLayout, getGeometryLabel, getGeometryLabelLayout } from './geometry/label';\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\nexport { LAYER, DIRECTION } from './constant';\n// 因为 typescript 部分版本不支持 export * as 语法。\nimport * as Types from './interface';\nexport { Coordinate, Scale } from './dependents';\n// 一些工具方法导出\nimport { getMappingValue } from './util/attr';\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nimport { getPathPoints } from './geometry/shape/util/get-path-points';\nimport { getPath } from './geometry/shape/line';\nexport var Util = {\n  getLegendItems: getLegendItems,\n  translate: translate,\n  rotate: rotate,\n  zoom: zoom,\n  transform: transform,\n  getAngle: getAngle,\n  getSectorPath: getSectorPath,\n  polarToCartesian: polarToCartesian,\n  getDelegationObject: getDelegationObject,\n  getTooltipItems: getTooltipItems,\n  getMappingValue: getMappingValue,\n  // shape 的一些操作方法\n  getPath: getPath,\n  getPathPoints: getPathPoints\n};","map":{"version":3,"names":["VERSION","Chart","View","Event","Controller","ComponentController","default","TooltipController","Geometry","Element","GeometryLabel","Interaction","Action","Facet","InteractionAction","registerComponentController","registerGeometry","registerShape","registerShapeFactory","getShapeFactory","registerGeometryLabel","registerGeometryLabelLayout","getGeometryLabel","getGeometryLabelLayout","getInteraction","registerInteraction","registerAction","getActionClass","getFacet","registerFacet","getTheme","registerTheme","registerEngine","getEngine","registerAnimation","getAnimation","LAYER","DIRECTION","Types","Coordinate","Scale","getMappingValue","getLegendItems","getAngle","getSectorPath","polarToCartesian","rotate","transform","translate","zoom","getTooltipItems","getDelegationObject","getPathPoints","getPath","Util"],"sources":["../src/core.ts"],"sourcesContent":["/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\n\nexport const VERSION = '4.2.10';\n\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as Element } from './geometry/element'; // Element 类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport {\n  registerGeometryLabel,\n  registerGeometryLabelLayout,\n  getGeometryLabel,\n  getGeometryLabelLayout,\n} from './geometry/label';\n\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\n\nexport { LAYER, DIRECTION } from './constant';\n\n// 因为 typescript 部分版本不支持 export * as 语法。\nimport * as Types from './interface';\nexport type { Types };\n\nexport { IGroup, ShapeAttrs, Coordinate, Scale, ScaleConfig } from './dependents';\n\n// 一些工具方法导出\nimport { getMappingValue } from './util/attr';\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nimport { getPathPoints } from './geometry/shape/util/get-path-points';\nimport { getPath } from './geometry/shape/line';\n\nexport const Util = {\n  getLegendItems,\n  translate,\n  rotate,\n  zoom,\n  transform,\n  getAngle,\n  getSectorPath,\n  polarToCartesian,\n  getDelegationObject,\n  getTooltipItems,\n  getMappingValue,\n  // shape 的一些操作方法\n  getPath,\n  getPathPoints,\n};\n"],"mappings":"AAAA;AAEA,OAAO,IAAMA,OAAO,GAAG,QAAQ;AAE/B;AACA,SAASC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,SAAS,CAAC,CAAC;AAC9C,SAASC,UAAU,IAAIC,mBAAmB,QAAQ,yBAAyB,CAAC,CAAC;AAC7E,SAASC,OAAO,IAAIC,iBAAiB,QAAQ,4BAA4B,CAAC,CAAC;AAC3E,SAASD,OAAO,IAAIE,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;AACvD,SAASF,OAAO,IAAIG,OAAO,QAAQ,oBAAoB,CAAC,CAAC;AACzD,SAASH,OAAO,IAAII,aAAa,QAAQ,uBAAuB,CAAC,CAAC;AAClE,SAASC,WAAW,EAAEC,MAAM,QAAQ,eAAe,CAAC,CAAC;AACrD,SAASC,KAAK,QAAQ,SAAS,CAAC,CAAC;AACjC,SAASP,OAAO,IAAIQ,iBAAiB,QAAQ,2BAA2B,CAAC,CAAC;AAE1E;AACA,SAASC,2BAA2B,QAAQ,SAAS;AAErD;AACA,SAASC,gBAAgB,QAAQ,SAAS;AAE1C;AACA,SAASC,aAAa,EAAEC,oBAAoB,EAAEC,eAAe,QAAQ,uBAAuB;AAE5F;AACA,SACEC,qBAAqB,EACrBC,2BAA2B,EAC3BC,gBAAgB,EAChBC,sBAAsB,QACjB,kBAAkB;AAEzB;AACA,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,eAAe;AAEnG;AACA,SAASC,QAAQ,EAAEC,aAAa,QAAQ,SAAS;AAEjD;AACA,SAASC,QAAQ,EAAEC,aAAa,QAAQ,SAAS;AAEjD;AACA,SAASC,cAAc,EAAEC,SAAS,QAAQ,UAAU;AAEpD;AACA,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,qBAAqB;AAErE,SAASC,KAAK,EAAEC,SAAS,QAAQ,YAAY;AAE7C;AACA,OAAO,KAAKC,KAAK,MAAM,aAAa;AAGpC,SAA6BC,UAAU,EAAEC,KAAK,QAAqB,cAAc;AAEjF;AACA,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,iBAAiB;AAC3E,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AACrE,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,aAAa,QAAQ,uCAAuC;AACrE,SAASC,OAAO,QAAQ,uBAAuB;AAE/C,OAAO,IAAMC,IAAI,GAAG;EAClBZ,cAAc,EAAAA,cAAA;EACdM,SAAS,EAAAA,SAAA;EACTF,MAAM,EAAAA,MAAA;EACNG,IAAI,EAAAA,IAAA;EACJF,SAAS,EAAAA,SAAA;EACTJ,QAAQ,EAAAA,QAAA;EACRC,aAAa,EAAAA,aAAA;EACbC,gBAAgB,EAAAA,gBAAA;EAChBM,mBAAmB,EAAAA,mBAAA;EACnBD,eAAe,EAAAA,eAAA;EACfT,eAAe,EAAAA,eAAA;EACf;EACAY,OAAO,EAAAA,OAAA;EACPD,aAAa,EAAAA;CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}