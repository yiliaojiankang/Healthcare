{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n/** Counter for jobs */\nvar requestId = 0;\n// 异步队列\nvar inputBatches;\nvar options;\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process, processInBatches) {\n  var _this = this;\n  // 检查是否在 worker 线程中\n  if (typeof self === 'undefined') {\n    return;\n  }\n  var context = {\n    process: processOnMainThread\n  };\n  WorkerBody.onmessage = function (type, payload) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var _a, result, resultIterator, resultIterator_1, resultIterator_1_1, batch, e_1_1, error_1, message;\n      var e_1, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 19,, 20]);\n            _a = type;\n            switch (_a) {\n              case 'process':\n                return [3 /*break*/, 1];\n              case 'process-in-batches':\n                return [3 /*break*/, 3];\n              case 'input-batch':\n                return [3 /*break*/, 16];\n              case 'input-done':\n                return [3 /*break*/, 17];\n            }\n            return [3 /*break*/, 18];\n          case 1:\n            if (!process) {\n              throw new Error('Worker does not support atomic processing');\n            }\n            return [4 /*yield*/, process(payload.input, payload.options || {}, context)];\n          case 2:\n            result = _c.sent();\n            WorkerBody.postMessage('done', {\n              result: result\n            });\n            return [3 /*break*/, 18];\n          case 3:\n            if (!processInBatches) {\n              throw new Error('Worker does not support batched processing');\n            }\n            inputBatches = new AsyncQueue();\n            options = payload.options || {};\n            resultIterator = processInBatches(inputBatches, options, context);\n            _c.label = 4;\n          case 4:\n            _c.trys.push([4, 9, 10, 15]);\n            resultIterator_1 = __asyncValues(resultIterator);\n            _c.label = 5;\n          case 5:\n            return [4 /*yield*/, resultIterator_1.next()];\n          case 6:\n            if (!(resultIterator_1_1 = _c.sent(), !resultIterator_1_1.done)) return [3 /*break*/, 8];\n            batch = resultIterator_1_1.value;\n            WorkerBody.postMessage('output-batch', {\n              result: batch\n            });\n            _c.label = 7;\n          case 7:\n            return [3 /*break*/, 5];\n          case 8:\n            return [3 /*break*/, 15];\n          case 9:\n            e_1_1 = _c.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3 /*break*/, 15];\n          case 10:\n            _c.trys.push([10,, 13, 14]);\n            if (!(resultIterator_1_1 && !resultIterator_1_1.done && (_b = resultIterator_1.return))) return [3 /*break*/, 12];\n            return [4 /*yield*/, _b.call(resultIterator_1)];\n          case 11:\n            _c.sent();\n            _c.label = 12;\n          case 12:\n            return [3 /*break*/, 14];\n          case 13:\n            if (e_1) throw e_1.error;\n            return [7 /*endfinally*/];\n          case 14:\n            return [7 /*endfinally*/];\n          case 15:\n            WorkerBody.postMessage('done', {});\n            return [3 /*break*/, 18];\n          case 16:\n            inputBatches.push(payload.input);\n            return [3 /*break*/, 18];\n          case 17:\n            inputBatches.close();\n            return [3 /*break*/, 18];\n          case 18:\n            return [3 /*break*/, 20];\n          case 19:\n            error_1 = _c.sent();\n            message = error_1 instanceof Error ? error_1.message : '';\n            WorkerBody.postMessage('error', {\n              error: message\n            });\n            return [3 /*break*/, 20];\n          case 20:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n}\n\nfunction processOnMainThread(arrayBuffer, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return new Promise(function (resolve, reject) {\n    var id = requestId++;\n    /**\n     */\n    var onMessage = function (type, payload) {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n    // Ask the main thread to decode data\n    var payload = {\n      id: id,\n      input: arrayBuffer,\n      options: options\n    };\n    WorkerBody.postMessage('process', payload);\n  });\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__asyncValues","o","asyncIterator","m","i","__values","settle","d","AsyncQueue","WorkerBody","requestId","inputBatches","options","createWorker","process","processInBatches","_this","self","context","processOnMainThread","onmessage","type","payload","_a","resultIterator","resultIterator_1","resultIterator_1_1","batch","e_1_1","error_1","message","e_1","_b","_c","Error","input","postMessage","error","return","close","arrayBuffer","id","onMessage","removeEventListener","addEventListener"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/web-worker-helper/dist/esm/worker-api/create-worker.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n/** Counter for jobs */\nvar requestId = 0;\n// 异步队列\nvar inputBatches;\nvar options;\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process, processInBatches) {\n    var _this = this;\n    // 检查是否在 worker 线程中\n    if (typeof self === 'undefined') {\n        return;\n    }\n    var context = {\n        process: processOnMainThread,\n    };\n    WorkerBody.onmessage = function (type, payload) { return __awaiter(_this, void 0, void 0, function () {\n        var _a, result, resultIterator, resultIterator_1, resultIterator_1_1, batch, e_1_1, error_1, message;\n        var e_1, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _c.trys.push([0, 19, , 20]);\n                    _a = type;\n                    switch (_a) {\n                        case 'process': return [3 /*break*/, 1];\n                        case 'process-in-batches': return [3 /*break*/, 3];\n                        case 'input-batch': return [3 /*break*/, 16];\n                        case 'input-done': return [3 /*break*/, 17];\n                    }\n                    return [3 /*break*/, 18];\n                case 1:\n                    if (!process) {\n                        throw new Error('Worker does not support atomic processing');\n                    }\n                    return [4 /*yield*/, process(payload.input, payload.options || {}, context)];\n                case 2:\n                    result = _c.sent();\n                    WorkerBody.postMessage('done', { result: result });\n                    return [3 /*break*/, 18];\n                case 3:\n                    if (!processInBatches) {\n                        throw new Error('Worker does not support batched processing');\n                    }\n                    inputBatches = new AsyncQueue();\n                    options = payload.options || {};\n                    resultIterator = processInBatches(inputBatches, options, context);\n                    _c.label = 4;\n                case 4:\n                    _c.trys.push([4, 9, 10, 15]);\n                    resultIterator_1 = __asyncValues(resultIterator);\n                    _c.label = 5;\n                case 5: return [4 /*yield*/, resultIterator_1.next()];\n                case 6:\n                    if (!(resultIterator_1_1 = _c.sent(), !resultIterator_1_1.done)) return [3 /*break*/, 8];\n                    batch = resultIterator_1_1.value;\n                    WorkerBody.postMessage('output-batch', { result: batch });\n                    _c.label = 7;\n                case 7: return [3 /*break*/, 5];\n                case 8: return [3 /*break*/, 15];\n                case 9:\n                    e_1_1 = _c.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 15];\n                case 10:\n                    _c.trys.push([10, , 13, 14]);\n                    if (!(resultIterator_1_1 && !resultIterator_1_1.done && (_b = resultIterator_1.return))) return [3 /*break*/, 12];\n                    return [4 /*yield*/, _b.call(resultIterator_1)];\n                case 11:\n                    _c.sent();\n                    _c.label = 12;\n                case 12: return [3 /*break*/, 14];\n                case 13:\n                    if (e_1) throw e_1.error;\n                    return [7 /*endfinally*/];\n                case 14: return [7 /*endfinally*/];\n                case 15:\n                    WorkerBody.postMessage('done', {});\n                    return [3 /*break*/, 18];\n                case 16:\n                    inputBatches.push(payload.input);\n                    return [3 /*break*/, 18];\n                case 17:\n                    inputBatches.close();\n                    return [3 /*break*/, 18];\n                case 18: return [3 /*break*/, 20];\n                case 19:\n                    error_1 = _c.sent();\n                    message = error_1 instanceof Error ? error_1.message : '';\n                    WorkerBody.postMessage('error', { error: message });\n                    return [3 /*break*/, 20];\n                case 20: return [2 /*return*/];\n            }\n        });\n    }); };\n}\nfunction processOnMainThread(arrayBuffer, options) {\n    if (options === void 0) { options = {}; }\n    return new Promise(function (resolve, reject) {\n        var id = requestId++;\n        /**\n         */\n        var onMessage = function (type, payload) {\n            if (payload.id !== id) {\n                // not ours\n                return;\n            }\n            switch (type) {\n                case 'done':\n                    WorkerBody.removeEventListener(onMessage);\n                    resolve(payload.result);\n                    break;\n                case 'error':\n                    WorkerBody.removeEventListener(onMessage);\n                    reject(payload.error);\n                    break;\n                default:\n                // ignore\n            }\n        };\n        WorkerBody.addEventListener(onMessage);\n        // Ask the main thread to decode data\n        var payload = { id: id, input: arrayBuffer, options: options };\n        WorkerBody.postMessage('process', payload);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}