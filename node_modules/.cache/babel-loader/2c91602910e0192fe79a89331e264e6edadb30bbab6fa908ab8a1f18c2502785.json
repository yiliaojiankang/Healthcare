{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// deep first search with both order low for pre, lim for post\nvar dfsBothOrder = function (g) {\n  var _a;\n  var result = {};\n  var lim = 0;\n  var dfs = function (v) {\n    var _a;\n    var low = lim;\n    (_a = g.children(v)) === null || _a === void 0 ? void 0 : _a.forEach(dfs);\n    result[v] = {\n      low: low,\n      lim: lim++\n    };\n  };\n  (_a = g.children()) === null || _a === void 0 ? void 0 : _a.forEach(dfs);\n  return result;\n};\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nvar findPath = function (g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n  // Traverse from w to LCA\n  parent = w;\n  while (parent && parent !== lca) {\n    wPath.push(parent);\n    parent = g.parent(parent);\n  }\n  return {\n    lca: lca,\n    path: vPath.concat(wPath.reverse())\n  };\n};\nvar parentDummyChains = function (g) {\n  var _a;\n  var postorderNums = dfsBothOrder(g);\n  (_a = g.graph().dummyChains) === null || _a === void 0 ? void 0 : _a.forEach(function (startV) {\n    var _a, _b;\n    var v = startV;\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    if (!edgeObj) return;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n      if (ascending) {\n        while (pathV !== lca && ((_a = g.node(pathV)) === null || _a === void 0 ? void 0 : _a.maxRank) < node.rank) {\n          pathIdx++;\n          pathV = path[pathIdx];\n        }\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && ((_b = g.node(path[pathIdx + 1])) === null || _b === void 0 ? void 0 : _b.minRank) <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n};\nexports.default = parentDummyChains;","map":{"version":3,"names":["dfsBothOrder","g","result","lim","dfs","v","low","_a","children","forEach","findPath","postorderNums","w","vPath","wPath","Math","min","max","parent","lca","push","path","concat","reverse","parentDummyChains","graph","dummyChains","startV","node","edgeObj","pathData","pathIdx","pathV","ascending","maxRank","rank","length","_b","minRank","setParent","successors","exports","default"],"sources":["../../../../src/layout/dagre/src/parent-dummy-chains.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}