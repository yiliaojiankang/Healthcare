{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { clamp, size, valuesOfKey } from '@antv/util';\nimport { Action } from '..';\nfunction isWheelDown(event) {\n  var wheelEvent = event.gEvent.originalEvent;\n  return wheelEvent.deltaY > 0;\n}\nvar DEFAULT_WHEELDELTA = 1;\nvar MousewheelScroll = /** @class */function (_super) {\n  __extends(MousewheelScroll, _super);\n  function MousewheelScroll() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MousewheelScroll.prototype.scroll = function (arg) {\n    var _a = this.context,\n      view = _a.view,\n      event = _a.event;\n    if (!view.getOptions().scrollbar) {\n      return;\n    }\n    var wheelDelta = (arg === null || arg === void 0 ? void 0 : arg.wheelDelta) || DEFAULT_WHEELDELTA;\n    var scrollbarController = view.getController('scrollbar');\n    var xScale = view.getXScale();\n    var data = view.getOptions().data;\n    var dataSize = size(valuesOfKey(data, xScale.field));\n    var step = size(xScale.values);\n    var currentRatio = scrollbarController.getValue();\n    var currentStart = Math.floor((dataSize - step) * currentRatio);\n    var nextStart = currentStart + (isWheelDown(event) ? wheelDelta : -wheelDelta);\n    var correction = wheelDelta / (dataSize - step) / 10000;\n    var nextRatio = clamp(nextStart / (dataSize - step) + correction, 0, 1);\n    scrollbarController.setValue(nextRatio);\n  };\n  return MousewheelScroll;\n}(Action);\nexport default MousewheelScroll;","map":{"version":3,"names":["clamp","size","valuesOfKey","Action","isWheelDown","event","wheelEvent","gEvent","originalEvent","deltaY","DEFAULT_WHEELDELTA","MousewheelScroll","_super","__extends","prototype","scroll","arg","_a","context","view","getOptions","scrollbar","wheelDelta","scrollbarController","getController","xScale","getXScale","data","dataSize","field","step","values","currentRatio","getValue","currentStart","Math","floor","nextStart","correction","nextRatio","setValue"],"sources":["../../../../src/interaction/action/view/mousewheel-scroll.ts"],"sourcesContent":["import { clamp, size, valuesOfKey } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../../constant';\nimport { Action } from '..';\nimport { LooseObject } from '../../../interface';\n\nfunction isWheelDown(event: LooseObject) {\n  const wheelEvent = event.gEvent.originalEvent as WheelEvent;\n  return wheelEvent.deltaY > 0;\n}\n\nconst DEFAULT_WHEELDELTA = 1;\nclass MousewheelScroll extends Action {\n  public scroll(arg?) {\n    const { view, event } = this.context;\n\n    if (!view.getOptions().scrollbar) {\n      return;\n    }\n\n    const wheelDelta = arg?.wheelDelta || DEFAULT_WHEELDELTA;\n    const scrollbarController = view.getController('scrollbar');\n\n    const xScale = view.getXScale();\n    const data = view.getOptions().data;\n    const dataSize = size(valuesOfKey(data, xScale.field));\n    const step = size(xScale.values);\n\n    const currentRatio = scrollbarController.getValue();\n    const currentStart = Math.floor((dataSize - step) * currentRatio);\n\n    const nextStart = currentStart + (isWheelDown(event) ? wheelDelta : -wheelDelta);\n    const correction = wheelDelta / (dataSize - step) / 10000;\n    const nextRatio = clamp(nextStart / (dataSize - step) + correction, 0, 1);\n    scrollbarController.setValue(nextRatio);\n  }\n}\n\nexport default MousewheelScroll;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAQ,YAAY;AAErD,SAASC,MAAM,QAAQ,IAAI;AAG3B,SAASC,WAAWA,CAACC,KAAkB;EACrC,IAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,aAA2B;EAC3D,OAAOF,UAAU,CAACG,MAAM,GAAG,CAAC;AAC9B;AAEA,IAAMC,kBAAkB,GAAG,CAAC;AAC5B,IAAAC,gBAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAA/B,SAAAD,iBAAA;;EAwBA;EAvBSA,gBAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb,UAAcC,GAAI;IACV,IAAAC,EAAA,GAAkB,IAAI,CAACC,OAAO;MAA5BC,IAAI,GAAAF,EAAA,CAAAE,IAAA;MAAEd,KAAK,GAAAY,EAAA,CAAAZ,KAAiB;IAEpC,IAAI,CAACc,IAAI,CAACC,UAAU,EAAE,CAACC,SAAS,EAAE;MAChC;;IAGF,IAAMC,UAAU,GAAG,CAAAN,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEM,UAAU,KAAIZ,kBAAkB;IACxD,IAAMa,mBAAmB,GAAGJ,IAAI,CAACK,aAAa,CAAC,WAAW,CAAC;IAE3D,IAAMC,MAAM,GAAGN,IAAI,CAACO,SAAS,EAAE;IAC/B,IAAMC,IAAI,GAAGR,IAAI,CAACC,UAAU,EAAE,CAACO,IAAI;IACnC,IAAMC,QAAQ,GAAG3B,IAAI,CAACC,WAAW,CAACyB,IAAI,EAAEF,MAAM,CAACI,KAAK,CAAC,CAAC;IACtD,IAAMC,IAAI,GAAG7B,IAAI,CAACwB,MAAM,CAACM,MAAM,CAAC;IAEhC,IAAMC,YAAY,GAAGT,mBAAmB,CAACU,QAAQ,EAAE;IACnD,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACR,QAAQ,GAAGE,IAAI,IAAIE,YAAY,CAAC;IAEjE,IAAMK,SAAS,GAAGH,YAAY,IAAI9B,WAAW,CAACC,KAAK,CAAC,GAAGiB,UAAU,GAAG,CAACA,UAAU,CAAC;IAChF,IAAMgB,UAAU,GAAGhB,UAAU,IAAIM,QAAQ,GAAGE,IAAI,CAAC,GAAG,KAAK;IACzD,IAAMS,SAAS,GAAGvC,KAAK,CAACqC,SAAS,IAAIT,QAAQ,GAAGE,IAAI,CAAC,GAAGQ,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;IACzEf,mBAAmB,CAACiB,QAAQ,CAACD,SAAS,CAAC;EACzC,CAAC;EACH,OAAA5B,gBAAC;AAAD,CAAC,CAxB8BR,MAAM;AA0BrC,eAAeQ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}