{"ast":null,"code":"import { each, isNil, getEllipsisText, pick } from '@antv/util';\nimport { ellipsisString, strLen } from './text';\nvar ELLIPSIS_CODE = '\\u2026';\nvar ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度\n/** 大数据量阈值 */\nvar OPTIMIZE_THRESHOLD = 400;\n/**\n * 针对大数据量做优化的 getMaxLabelWidth，做法不是直接去比较每一个 label 的最大宽度\n * 而是先通过比较每个 label 每个的字符串的长度，这里区分了下中英文字符\n * 最终是去字符串最“长”的那个 label 的宽度。\n * @param labels\n */\nfunction getMaxLabelWidthOptimized(labels) {\n  var texts = labels.map(function (label) {\n    var text = label.attr('text');\n    return isNil(text) ? '' : \"\" + text;\n  });\n  var maxLen = 0;\n  var maxIdx = 0;\n  for (var i = 0; i < texts.length; i += 1) {\n    var len = 0;\n    for (var j = 0; j <= texts[i].length; j += 1) {\n      var code = texts[i].charCodeAt(j);\n      if (code >= 19968 && code <= 40869) {\n        len += 2;\n      } else {\n        len += 1;\n      }\n    }\n    if (len > maxLen) {\n      maxLen = len;\n      maxIdx = i;\n    }\n  }\n  return labels[maxIdx].getBBox().width;\n}\n/** 获取最长的 label */\nexport function getMaxLabelWidth(labels) {\n  if (labels.length > OPTIMIZE_THRESHOLD) {\n    return getMaxLabelWidthOptimized(labels);\n  }\n  var max = 0;\n  each(labels, function (label) {\n    var bbox = label.getBBox();\n    var width = bbox.width;\n    if (max < width) {\n      max = width;\n    }\n  });\n  return max;\n}\n/** 获取label长度 */\nexport function getLabelLength(isVertical, label) {\n  var bbox = label.getCanvasBBox();\n  return isVertical ? bbox.width : bbox.height;\n}\n/* label长度是否超过约束值 */\nexport function testLabel(label, limitLength) {\n  return label.getBBox().width < limitLength;\n}\n/** 处理 text shape 的自动省略 */\nexport function ellipsisLabel(isVertical, label, limitLength, position) {\n  var _a;\n  if (position === void 0) {\n    position = 'tail';\n  }\n  var text = (_a = label.attr('text')) !== null && _a !== void 0 ? _a : ''; // 避免出现null、undefined\n  if (position === 'tail') {\n    // component 里的缩略处理做得很糟糕，文字长度测算完全不准确\n    // 这里暂时只对 tail 做处理\n    var font = pick(label.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n    var ellipsisText = getEllipsisText(text, limitLength, font, '…');\n    if (text !== ellipsisText) {\n      label.attr('text', ellipsisText);\n      label.set('tip', text);\n      return true;\n    }\n    label.set('tip', null);\n    return false;\n  }\n  var labelLength = getLabelLength(isVertical, label);\n  var codeLength = strLen(text);\n  var ellipsisFlag = false;\n  if (limitLength < labelLength) {\n    var reserveLength = Math.floor(limitLength / labelLength * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度\n    var newText = void 0;\n    if (reserveLength >= 0) {\n      newText = ellipsisString(text, reserveLength, position);\n    } else {\n      newText = ELLIPSIS_CODE;\n    }\n    if (newText) {\n      label.attr('text', newText);\n      ellipsisFlag = true;\n    }\n  }\n  if (ellipsisFlag) {\n    label.set('tip', text);\n  } else {\n    label.set('tip', null);\n  }\n  return ellipsisFlag;\n}","map":{"version":3,"names":["each","isNil","getEllipsisText","pick","ellipsisString","strLen","ELLIPSIS_CODE","ELLIPSIS_CODE_LENGTH","OPTIMIZE_THRESHOLD","getMaxLabelWidthOptimized","labels","texts","map","label","text","attr","maxLen","maxIdx","i","length","len","j","code","charCodeAt","getBBox","width","getMaxLabelWidth","max","bbox","getLabelLength","isVertical","getCanvasBBox","height","testLabel","limitLength","ellipsisLabel","position","_a","font","ellipsisText","set","labelLength","codeLength","ellipsisFlag","reserveLength","Math","floor","newText"],"sources":["../../src/util/label.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,IAAI,EAAEC,KAAK,EAAEC,eAAe,EAAEC,IAAI,QAAQ,YAAY;AAE/D,SAASC,cAAc,EAAEC,MAAM,QAAQ,QAAQ;AAE/C,IAAMC,aAAa,GAAG,QAAQ;AAC9B,IAAMC,oBAAoB,GAAG,CAAC,CAAC,CAAC;AAEhC;AACA,IAAMC,kBAAkB,GAAG,GAAG;AAC9B;;;;;;AAMA,SAASC,yBAAyBA,CAACC,MAAkB;EACnD,IAAMC,KAAK,GAAaD,MAAM,CAACE,GAAG,CAAC,UAACC,KAAK;IACvC,IAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAAC,MAAM,CAAC;IAC/B,OAAOd,KAAK,CAACa,IAAI,CAAC,GAAG,EAAE,GAAG,KAAGA,IAAM;EACrC,CAAC,CAAC;EACF,IAAIE,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,CAACQ,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACxC,IAAIE,GAAG,GAAG,CAAC;IACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIV,KAAK,CAACO,CAAC,CAAC,CAACC,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;MAC5C,IAAMC,IAAI,GAAGX,KAAK,CAACO,CAAC,CAAC,CAACK,UAAU,CAACF,CAAC,CAAC;MACnC,IAAIC,IAAI,IAAI,KAAK,IAAIA,IAAI,IAAI,KAAK,EAAE;QAClCF,GAAG,IAAI,CAAC;OACT,MAAM;QACLA,GAAG,IAAI,CAAC;;;IAGZ,IAAIA,GAAG,GAAGJ,MAAM,EAAE;MAChBA,MAAM,GAAGI,GAAG;MACZH,MAAM,GAAGC,CAAC;;;EAId,OAAOR,MAAM,CAACO,MAAM,CAAC,CAACO,OAAO,EAAE,CAACC,KAAK;AACvC;AAEA;AACA,OAAM,SAAUC,gBAAgBA,CAAChB,MAAkB;EACjD,IAAIA,MAAM,CAACS,MAAM,GAAGX,kBAAkB,EAAE;IACtC,OAAOC,yBAAyB,CAACC,MAAM,CAAC;;EAG1C,IAAIiB,GAAG,GAAG,CAAC;EACX3B,IAAI,CAACU,MAAM,EAAE,UAACG,KAAK;IACjB,IAAMe,IAAI,GAAGf,KAAK,CAACW,OAAO,EAAE;IAC5B,IAAMC,KAAK,GAAGG,IAAI,CAACH,KAAK;IACxB,IAAIE,GAAG,GAAGF,KAAK,EAAE;MACfE,GAAG,GAAGF,KAAK;;EAEf,CAAC,CAAC;EACF,OAAOE,GAAG;AACZ;AAEA;AACA,OAAM,SAAUE,cAAcA,CAACC,UAAmB,EAAEjB,KAAK;EACvD,IAAMe,IAAI,GAAGf,KAAK,CAACkB,aAAa,EAAE;EAClC,OAAOD,UAAU,GAAGF,IAAI,CAACH,KAAK,GAAGG,IAAI,CAACI,MAAM;AAC9C;AAEA;AACA,OAAM,SAAUC,SAASA,CAACpB,KAAe,EAAEqB,WAAmB;EAC5D,OAAOrB,KAAK,CAACW,OAAO,EAAE,CAACC,KAAK,GAAGS,WAAW;AAC5C;AAEA;AACA,OAAM,SAAUC,aAAaA,CAACL,UAAmB,EAAEjB,KAAe,EAAEqB,WAAmB,EAAEE,QAAyB;;EAAzB,IAAAA,QAAA;IAAAA,QAAA,SAAyB;EAAA;EAChH,IAAMtB,IAAI,IAAAuB,EAAA,GAAGxB,KAAK,CAACE,IAAI,CAAC,MAAM,CAAC,cAAAsB,EAAA,cAAAA,EAAA,GAAI,EAAE,CAAC,CAAC;EAEvC,IAAID,QAAQ,KAAK,MAAM,EAAE;IACvB;IACA;IACA,IAAME,IAAI,GAAGnC,IAAI,CAACU,KAAK,CAACE,IAAI,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;IACrG,IAAMwB,YAAY,GAAGrC,eAAe,CAACY,IAAI,EAAEoB,WAAW,EAAEI,IAAI,EAAE,GAAG,CAAW;IAC5E,IAAIxB,IAAI,KAAKyB,YAAY,EAAE;MACzB1B,KAAK,CAACE,IAAI,CAAC,MAAM,EAAEwB,YAAY,CAAC;MAChC1B,KAAK,CAAC2B,GAAG,CAAC,KAAK,EAAE1B,IAAI,CAAC;MACtB,OAAO,IAAI;;IAEbD,KAAK,CAAC2B,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC;IACtB,OAAO,KAAK;;EAGd,IAAMC,WAAW,GAAGZ,cAAc,CAACC,UAAU,EAAEjB,KAAK,CAAC;EACrD,IAAM6B,UAAU,GAAGrC,MAAM,CAACS,IAAI,CAAC;EAC/B,IAAI6B,YAAY,GAAG,KAAK;EACxB,IAAIT,WAAW,GAAGO,WAAW,EAAE;IAC7B,IAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAAEZ,WAAW,GAAGO,WAAW,GAAIC,UAAU,CAAC,GAAGnC,oBAAoB,CAAC,CAAC;IACnG,IAAIwC,OAAO;IACX,IAAIH,aAAa,IAAI,CAAC,EAAE;MACtBG,OAAO,GAAG3C,cAAc,CAACU,IAAI,EAAE8B,aAAa,EAAER,QAAQ,CAAC;KACxD,MAAM;MACLW,OAAO,GAAGzC,aAAa;;IAEzB,IAAIyC,OAAO,EAAE;MACXlC,KAAK,CAACE,IAAI,CAAC,MAAM,EAAEgC,OAAO,CAAC;MAC3BJ,YAAY,GAAG,IAAI;;;EAGvB,IAAIA,YAAY,EAAE;IAChB9B,KAAK,CAAC2B,GAAG,CAAC,KAAK,EAAE1B,IAAI,CAAC;GACvB,MAAM;IACLD,KAAK,CAAC2B,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC;;EAExB,OAAOG,YAAY;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}