{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { vec2 } from 'gl-matrix';\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var hasConstraint = !!constraint;\n  var prevPoint;\n  var nextPoint;\n  var min;\n  var max;\n  var nextCp0;\n  var cp1;\n  var cp0;\n  if (hasConstraint) {\n    min = constraint[0], max = constraint[1];\n    for (var i = 0, l = points.length; i < l; i += 1) {\n      var point = points[i];\n      min = vec2.min([0, 0], min, point);\n      max = vec2.max([0, 0], max, point);\n    }\n  }\n  for (var i = 0, len = points.length; i < len; i += 1) {\n    var point = points[i];\n    if (i === 0 && !isLoop) {\n      cp0 = point;\n    } else if (i === len - 1 && !isLoop) {\n      cp1 = point;\n      cps.push(cp0);\n      cps.push(cp1);\n    } else {\n      var prevIdx = [i ? i - 1 : len - 1, i - 1][isLoop ? 0 : 1];\n      prevPoint = points[prevIdx];\n      nextPoint = points[isLoop ? (i + 1) % len : i + 1];\n      var v = [0, 0];\n      v = vec2.sub(v, nextPoint, prevPoint);\n      v = vec2.scale(v, v, smooth);\n      var d0 = vec2.distance(point, prevPoint);\n      var d1 = vec2.distance(point, nextPoint);\n      var sum = d0 + d1;\n      if (sum !== 0) {\n        d0 /= sum;\n        d1 /= sum;\n      }\n      var v1 = vec2.scale([0, 0], v, -d0);\n      var v2 = vec2.scale([0, 0], v, d1);\n      cp1 = vec2.add([0, 0], point, v1);\n      nextCp0 = vec2.add([0, 0], point, v2);\n      // 下一个控制点必须在这个点和下一个点之间\n      nextCp0 = vec2.min([0, 0], nextCp0, vec2.max([0, 0], nextPoint, point));\n      nextCp0 = vec2.max([0, 0], nextCp0, vec2.min([0, 0], nextPoint, point));\n      // 重新计算 cp1 的值\n      v1 = vec2.sub([0, 0], nextCp0, point);\n      v1 = vec2.scale([0, 0], v1, -d0 / d1);\n      cp1 = vec2.add([0, 0], point, v1);\n      // 上一个控制点必须要在上一个点和这一个点之间\n      cp1 = vec2.min([0, 0], cp1, vec2.max([0, 0], prevPoint, point));\n      cp1 = vec2.max([0, 0], cp1, vec2.min([0, 0], prevPoint, point));\n      // 重新计算 nextCp0 的值\n      v2 = vec2.sub([0, 0], point, cp1);\n      v2 = vec2.scale([0, 0], v2, d1 / d0);\n      nextCp0 = vec2.add([0, 0], point, v2);\n      if (hasConstraint) {\n        cp1 = vec2.max([0, 0], cp1, min);\n        cp1 = vec2.min([0, 0], cp1, max);\n        nextCp0 = vec2.max([0, 0], nextCp0, min);\n        nextCp0 = vec2.min([0, 0], nextCp0, max);\n      }\n      cps.push(cp0);\n      cps.push(cp1);\n      cp0 = nextCp0;\n    }\n  }\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n  return cps;\n}\n/**\n * create bezier spline from catmull rom spline\n * @param {Array} crp Catmull Rom Points\n * @param {boolean} z Spline is loop\n * @param {Array} constraint Constraint\n */\nfunction catmullRom2Bezier(crp, z, constraint) {\n  if (z === void 0) {\n    z = false;\n  }\n  if (constraint === void 0) {\n    constraint = [[0, 0], [1, 1]];\n  }\n  var isLoop = !!z;\n  var pointList = [];\n  for (var i = 0, l = crp.length; i < l; i += 2) {\n    pointList.push([crp[i], crp[i + 1]]);\n  }\n  var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\n  var len = pointList.length;\n  var d1 = [];\n  var cp1;\n  var cp2;\n  var p;\n  for (var i = 0; i < len - 1; i += 1) {\n    cp1 = controlPointList[i * 2];\n    cp2 = controlPointList[i * 2 + 1];\n    p = pointList[i + 1];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n  if (isLoop) {\n    cp1 = controlPointList[len];\n    cp2 = controlPointList[len + 1];\n    p = pointList[0];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n  return d1;\n}\nexport default catmullRom2Bezier;","map":{"version":3,"names":["vec2","smoothBezier","points","smooth","isLoop","constraint","cps","hasConstraint","prevPoint","nextPoint","min","max","nextCp0","cp1","cp0","i","l","length","point","len","push","prevIdx","v","sub","scale","d0","distance","d1","sum","v1","v2","add","shift","catmullRom2Bezier","crp","z","pointList","controlPointList","cp2","p"],"sources":["../src/catmull-rom-2-bezier.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}