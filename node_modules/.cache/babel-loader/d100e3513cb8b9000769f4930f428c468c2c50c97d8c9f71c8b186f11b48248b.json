{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _dec, _class;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Format, TextureUsage, TransparentBlack, ViewportOrigin, WebGLDeviceContribution, WebGPUDeviceContribution, colorNewFromRGBA } from '@antv/g-device-api';\nimport { lodashUtil } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nimport DeviceAttribute from \"./DeviceAttribute\";\nimport DeviceBuffer from \"./DeviceBuffer\";\nimport { RenderCache } from \"./DeviceCache\";\nimport DeviceElements from \"./DeviceElements\";\nimport DeviceFramebuffer from \"./DeviceFramebuffer\";\nimport DeviceModel from \"./DeviceModel\";\nimport DeviceTexture2D from \"./DeviceTexture2D\";\nimport { isWebGL2 } from \"./utils/webgl\";\nvar isUndefined = lodashUtil.isUndefined;\n\n/**\n * Device API renderer\n */\nvar DeviceRendererService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function DeviceRendererService() {\n    var _this = this;\n    _classCallCheck(this, DeviceRendererService);\n    _defineProperty(this, \"uniformBuffers\", []);\n    _defineProperty(this, \"queryVerdorInfo\", function () {\n      return _this.device.queryVendorInfo().platformString;\n    });\n    _defineProperty(this, \"createModel\", function (options) {\n      return new DeviceModel(_this.device, options, _this);\n    });\n    _defineProperty(this, \"createAttribute\", function (options) {\n      return new DeviceAttribute(_this.device, options);\n    });\n    _defineProperty(this, \"createBuffer\", function (options) {\n      return new DeviceBuffer(_this.device, options);\n    });\n    _defineProperty(this, \"createElements\", function (options) {\n      return new DeviceElements(_this.device, options);\n    });\n    _defineProperty(this, \"createTexture2D\", function (options) {\n      return new DeviceTexture2D(_this.device, options);\n    });\n    _defineProperty(this, \"createFramebuffer\", function (options) {\n      return new DeviceFramebuffer(_this.device, options);\n    });\n    _defineProperty(this, \"useFramebuffer\", function (framebuffer, drawCommands) {\n      _this.currentFramebuffer = framebuffer;\n      _this.beginFrame();\n      drawCommands();\n      _this.endFrame();\n      _this.currentFramebuffer = null;\n    });\n    _defineProperty(this, \"useFramebufferAsync\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(framebuffer, drawCommands) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.currentFramebuffer = framebuffer;\n              _this.preRenderPass = _this.renderPass;\n              _this.beginFrame();\n              _context.next = 5;\n              return drawCommands();\n            case 5:\n              _this.endFrame();\n              _this.currentFramebuffer = null;\n              _this.renderPass = _this.preRenderPass;\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"clear\", function (options) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n      var color = options.color,\n        depth = options.depth,\n        stencil = options.stencil,\n        _options$framebuffer = options.framebuffer,\n        framebuffer = _options$framebuffer === void 0 ? null : _options$framebuffer;\n      if (framebuffer) {\n        // @ts-ignore\n        framebuffer.clearOptions = {\n          color: color,\n          depth: depth,\n          stencil: stencil\n        };\n      } else {\n        var platformString = _this.queryVerdorInfo();\n        if (platformString === 'WebGL1') {\n          var gl = _this.getGLContext();\n          if (!isUndefined(stencil)) {\n            gl.clearStencil(stencil);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n          } else if (!isUndefined(depth)) {\n            gl.clearDepth(depth);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n        } else if (platformString === 'WebGL2') {\n          var _gl = _this.getGLContext();\n          if (!isUndefined(stencil)) {\n            _gl.clearBufferiv(_gl.STENCIL, 0, [stencil]);\n          } else if (!isUndefined(depth)) {\n            _gl.clearBufferfv(_gl.DEPTH, 0, [depth]);\n          }\n        }\n      }\n      // Recreate render pass\n      // this.beginFrame();\n    });\n\n    _defineProperty(this, \"viewport\", function (_ref2) {\n      var width = _ref2.width,\n        height = _ref2.height;\n      // @see https://observablehq.com/@antv/g-device-api#cell-267\n      _this.swapChain.configureSwapChain(width, height);\n      _this.createMainColorDepthRT(width, height);\n      _this.width = width;\n      _this.height = height;\n    });\n    _defineProperty(this, \"readPixels\", function (options) {\n      var framebuffer = options.framebuffer,\n        x = options.x,\n        y = options.y,\n        width = options.width,\n        height = options.height;\n      var readback = _this.device.createReadback();\n      var texture = framebuffer['colorTexture'];\n      var result = readback.readTextureSync(texture, x,\n      /**\n       * Origin is at lower-left corner. Width / height is already multiplied by dpr.\n       * WebGPU needs flipY\n       */\n      _this.viewportOrigin === ViewportOrigin.LOWER_LEFT ? y : _this.height - y, width, height, new Uint8Array(width * height * 4));\n      readback.destroy();\n      return result;\n    });\n    _defineProperty(this, \"readPixelsAsync\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n        var framebuffer, x, y, width, height, readback, texture, result, j, t;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              framebuffer = options.framebuffer, x = options.x, y = options.y, width = options.width, height = options.height;\n              readback = _this.device.createReadback();\n              texture = framebuffer['colorTexture'];\n              _context2.next = 5;\n              return readback.readTexture(texture, x,\n              /**\n               * Origin is at lower-left corner. Width / height is already multiplied by dpr.\n               * WebGPU needs flipY\n               */\n              _this.viewportOrigin === ViewportOrigin.LOWER_LEFT ? y : _this.height - y, width, height, new Uint8Array(width * height * 4));\n            case 5:\n              result = _context2.sent;\n              // Since we use U8_RGBA_RT format in render target, need to change bgranorm -> rgba here.\n              if (_this.viewportOrigin !== ViewportOrigin.LOWER_LEFT) {\n                for (j = 0; j < result.length; j += 4) {\n                  // Switch b and r components.\n                  t = result[j];\n                  result[j] = result[j + 2];\n                  result[j + 2] = t;\n                }\n              }\n              readback.destroy();\n              return _context2.abrupt(\"return\", result);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"getViewportSize\", function () {\n      // FIXME: add viewport size in Device API.\n      return {\n        width: _this.width,\n        height: _this.height\n      };\n    });\n    _defineProperty(this, \"getContainer\", function () {\n      var _this$canvas;\n      return (_this$canvas = _this.canvas) === null || _this$canvas === void 0 ? void 0 : _this$canvas.parentElement;\n    });\n    _defineProperty(this, \"getCanvas\", function () {\n      return _this.canvas;\n    });\n    _defineProperty(this, \"getGLContext\", function () {\n      // @ts-ignore\n      return _this.device['gl'];\n    });\n    _defineProperty(this, \"destroy\", function () {\n      var _this$uniformBuffers;\n      // this.canvas = null 清除对 webgl 实例的引用\n      // @ts-ignore\n      _this.canvas = null;\n      (_this$uniformBuffers = _this.uniformBuffers) === null || _this$uniformBuffers === void 0 || _this$uniformBuffers.forEach(function (buffer) {\n        buffer.destroy();\n      });\n      _this.device.destroy();\n      _this.renderCache.destroy();\n\n      // make sure release webgl context\n      // this.gl?._gl?.getExtension('WEBGL_lose_context')?.loseContext();\n\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n      // this.gl.destroy();\n\n      // @ts-ignore\n      // this.gl = null;\n    });\n  }\n\n  _createClass(DeviceRendererService, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(canvas, cfg) {\n        var enableWebGPU, shaderCompilerPath, deviceContribution, swapChain, gl;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              enableWebGPU = cfg.enableWebGPU, shaderCompilerPath = cfg.shaderCompilerPath; // this.$container = $container;\n              this.canvas = canvas;\n\n              // TODO: use antialias from cfg\n              deviceContribution = enableWebGPU ? new WebGPUDeviceContribution({\n                shaderCompilerPath: shaderCompilerPath\n              }) : new WebGLDeviceContribution({\n                // Use WebGL2 first and downgrade to WebGL1 if WebGL2 is not supported.\n                targets: ['webgl2', 'webgl1'],\n                onContextLost: function onContextLost(e) {\n                  console.warn('context lost', e);\n                },\n                onContextCreationError: function onContextCreationError(e) {\n                  console.warn('context creation error', e);\n                },\n                onContextRestored: function onContextRestored(e) {\n                  console.warn('context restored', e);\n                }\n              });\n              _context3.next = 5;\n              return deviceContribution.createSwapChain(canvas);\n            case 5:\n              swapChain = _context3.sent;\n              swapChain.configureSwapChain(canvas.width, canvas.height);\n              this.device = swapChain.getDevice();\n              this.swapChain = swapChain;\n              this.renderCache = new RenderCache(this.device);\n\n              // Create default RT\n              this.currentFramebuffer = null;\n              this.viewportOrigin = this.device.queryVendorInfo().viewportOrigin;\n\n              // @ts-ignore\n              gl = this.device['gl'];\n              this.extensionObject = {\n                // @ts-ignore\n                OES_texture_float: !isWebGL2(gl) && this.device['OES_texture_float']\n              };\n              this.createMainColorDepthRT(canvas.width, canvas.height);\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function init(_x4, _x5) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"createMainColorDepthRT\",\n    value: function createMainColorDepthRT(width, height) {\n      if (this.mainColorRT) {\n        this.mainColorRT.destroy();\n      }\n      if (this.mainDepthRT) {\n        this.mainDepthRT.destroy();\n      }\n      this.mainColorRT = this.device.createRenderTargetFromTexture(this.device.createTexture({\n        format: Format.U8_RGBA_RT,\n        width: width,\n        height: height,\n        usage: TextureUsage.RENDER_TARGET\n      }));\n      this.mainDepthRT = this.device.createRenderTargetFromTexture(this.device.createTexture({\n        format: Format.D24_S8,\n        width: width,\n        height: height,\n        usage: TextureUsage.RENDER_TARGET\n      }));\n    }\n  }, {\n    key: \"beginFrame\",\n    value: function beginFrame() {\n      this.device.beginFrame();\n      var currentFramebuffer = this.currentFramebuffer,\n        swapChain = this.swapChain,\n        mainColorRT = this.mainColorRT,\n        mainDepthRT = this.mainDepthRT;\n      var colorAttachment = currentFramebuffer ? currentFramebuffer['colorRenderTarget'] : mainColorRT;\n      var colorResolveTo = currentFramebuffer ? null : swapChain.getOnscreenTexture();\n      var depthStencilAttachment = currentFramebuffer ? currentFramebuffer['depthRenderTarget'] : mainDepthRT;\n      var _ref4 =\n        // @ts-ignore\n        (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer.clearOptions) || {},\n        _ref4$color = _ref4.color,\n        color = _ref4$color === void 0 ? [0, 0, 0, 0] : _ref4$color,\n        _ref4$depth = _ref4.depth,\n        depth = _ref4$depth === void 0 ? 1 : _ref4$depth,\n        _ref4$stencil = _ref4.stencil,\n        stencil = _ref4$stencil === void 0 ? 0 : _ref4$stencil;\n      var colorClearColor = colorAttachment ? colorNewFromRGBA(color[0] * 255, color[1] * 255, color[2] * 255, color[3]) : TransparentBlack;\n      var depthClearValue = depthStencilAttachment ? depth : undefined;\n      var stencilClearValue = depthStencilAttachment ? stencil : undefined;\n      var renderPass = this.device.createRenderPass({\n        colorAttachment: [colorAttachment],\n        colorResolveTo: [colorResolveTo],\n        colorClearColor: [colorClearColor],\n        // colorStore: [!!currentFramebuffer],\n        colorStore: [true],\n        depthStencilAttachment: depthStencilAttachment,\n        depthClearValue: depthClearValue,\n        stencilClearValue: stencilClearValue\n      });\n      this.renderPass = renderPass;\n    }\n  }, {\n    key: \"endFrame\",\n    value: function endFrame() {\n      this.device.submitPass(this.renderPass);\n      this.device.endFrame();\n    }\n  }, {\n    key: \"getPointSizeRange\",\n    value: function getPointSizeRange() {\n      // @ts-ignore\n      var gl = this.device['gl'];\n      // FIXME: implement this method in Device API.\n      return gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    }\n  }, {\n    key: \"testExtension\",\n    value: function testExtension(name) {\n      // OES_texture_float\n      return !!this.getGLContext().getExtension(name);\n    }\n  }, {\n    key: \"setState\",\n    value:\n    // TODO: 临时方法\n    function setState() {\n      // this.gl({\n      //   cull: {\n      //     enable: false,\n      //     face: 'back',\n      //   },\n      //   viewport: {\n      //     x: 0,\n      //     y: 0,\n      //     height: this.width,\n      //     width: this.height,\n      //   },\n      //   blend: {\n      //     enable: true,\n      //     equation: 'add',\n      //   },\n      //   framebuffer: null,\n      // });\n      // this.gl._refresh();\n    }\n  }, {\n    key: \"setBaseState\",\n    value: function setBaseState() {\n      // this.gl({\n      //   cull: {\n      //     enable: false,\n      //     face: 'back',\n      //   },\n      //   viewport: {\n      //     x: 0,\n      //     y: 0,\n      //     height: this.width,\n      //     width: this.height,\n      //   },\n      //   blend: {\n      //     enable: false,\n      //     equation: 'add',\n      //   },\n      //   framebuffer: null,\n      // });\n      // this.gl._refresh();\n    }\n  }, {\n    key: \"setCustomLayerDefaults\",\n    value: function setCustomLayerDefaults() {\n      // const gl = this.getGLContext();\n      // gl.disable(gl.CULL_FACE);\n    }\n  }, {\n    key: \"setDirty\",\n    value: function setDirty(flag) {\n      this.isDirty = flag;\n    }\n  }, {\n    key: \"getDirty\",\n    value: function getDirty() {\n      return this.isDirty;\n    }\n  }]);\n  return DeviceRendererService;\n}()) || _class);\nexport { DeviceRendererService as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_defineProperty","_dec","_class","_regeneratorRuntime","Format","TextureUsage","TransparentBlack","ViewportOrigin","WebGLDeviceContribution","WebGPUDeviceContribution","colorNewFromRGBA","lodashUtil","injectable","DeviceAttribute","DeviceBuffer","RenderCache","DeviceElements","DeviceFramebuffer","DeviceModel","DeviceTexture2D","isWebGL2","isUndefined","DeviceRendererService","_this","device","queryVendorInfo","platformString","options","framebuffer","drawCommands","currentFramebuffer","beginFrame","endFrame","_ref","mark","_callee","wrap","_callee$","_context","prev","next","preRenderPass","renderPass","stop","_x","_x2","apply","arguments","color","depth","stencil","_options$framebuffer","clearOptions","queryVerdorInfo","gl","getGLContext","clearStencil","clear","STENCIL_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","_gl","clearBufferiv","STENCIL","clearBufferfv","DEPTH","_ref2","width","height","swapChain","configureSwapChain","createMainColorDepthRT","x","y","readback","createReadback","texture","result","readTextureSync","viewportOrigin","LOWER_LEFT","Uint8Array","destroy","_ref3","_callee2","j","t","_callee2$","_context2","readTexture","sent","length","abrupt","_x3","_this$canvas","canvas","parentElement","_this$uniformBuffers","uniformBuffers","forEach","buffer","renderCache","key","value","_init","_callee3","cfg","enableWebGPU","shaderCompilerPath","deviceContribution","_callee3$","_context3","targets","onContextLost","e","console","warn","onContextCreationError","onContextRestored","createSwapChain","getDevice","extensionObject","OES_texture_float","init","_x4","_x5","mainColorRT","mainDepthRT","createRenderTargetFromTexture","createTexture","format","U8_RGBA_RT","usage","RENDER_TARGET","D24_S8","colorAttachment","colorResolveTo","getOnscreenTexture","depthStencilAttachment","_ref4","_ref4$color","_ref4$depth","_ref4$stencil","colorClearColor","depthClearValue","undefined","stencilClearValue","createRenderPass","colorStore","submitPass","getPointSizeRange","getParameter","ALIASED_POINT_SIZE_RANGE","testExtension","name","getExtension","setState","setBaseState","setCustomLayerDefaults","setDirty","flag","isDirty","getDirty","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-renderer/es/device/index.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _dec, _class;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Format, TextureUsage, TransparentBlack, ViewportOrigin, WebGLDeviceContribution, WebGPUDeviceContribution, colorNewFromRGBA } from '@antv/g-device-api';\nimport { lodashUtil } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nimport DeviceAttribute from \"./DeviceAttribute\";\nimport DeviceBuffer from \"./DeviceBuffer\";\nimport { RenderCache } from \"./DeviceCache\";\nimport DeviceElements from \"./DeviceElements\";\nimport DeviceFramebuffer from \"./DeviceFramebuffer\";\nimport DeviceModel from \"./DeviceModel\";\nimport DeviceTexture2D from \"./DeviceTexture2D\";\nimport { isWebGL2 } from \"./utils/webgl\";\nvar isUndefined = lodashUtil.isUndefined;\n\n/**\n * Device API renderer\n */\nvar DeviceRendererService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function DeviceRendererService() {\n    var _this = this;\n    _classCallCheck(this, DeviceRendererService);\n    _defineProperty(this, \"uniformBuffers\", []);\n    _defineProperty(this, \"queryVerdorInfo\", function () {\n      return _this.device.queryVendorInfo().platformString;\n    });\n    _defineProperty(this, \"createModel\", function (options) {\n      return new DeviceModel(_this.device, options, _this);\n    });\n    _defineProperty(this, \"createAttribute\", function (options) {\n      return new DeviceAttribute(_this.device, options);\n    });\n    _defineProperty(this, \"createBuffer\", function (options) {\n      return new DeviceBuffer(_this.device, options);\n    });\n    _defineProperty(this, \"createElements\", function (options) {\n      return new DeviceElements(_this.device, options);\n    });\n    _defineProperty(this, \"createTexture2D\", function (options) {\n      return new DeviceTexture2D(_this.device, options);\n    });\n    _defineProperty(this, \"createFramebuffer\", function (options) {\n      return new DeviceFramebuffer(_this.device, options);\n    });\n    _defineProperty(this, \"useFramebuffer\", function (framebuffer, drawCommands) {\n      _this.currentFramebuffer = framebuffer;\n      _this.beginFrame();\n      drawCommands();\n      _this.endFrame();\n      _this.currentFramebuffer = null;\n    });\n    _defineProperty(this, \"useFramebufferAsync\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(framebuffer, drawCommands) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.currentFramebuffer = framebuffer;\n              _this.preRenderPass = _this.renderPass;\n              _this.beginFrame();\n              _context.next = 5;\n              return drawCommands();\n            case 5:\n              _this.endFrame();\n              _this.currentFramebuffer = null;\n              _this.renderPass = _this.preRenderPass;\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"clear\", function (options) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n      var color = options.color,\n        depth = options.depth,\n        stencil = options.stencil,\n        _options$framebuffer = options.framebuffer,\n        framebuffer = _options$framebuffer === void 0 ? null : _options$framebuffer;\n      if (framebuffer) {\n        // @ts-ignore\n        framebuffer.clearOptions = {\n          color: color,\n          depth: depth,\n          stencil: stencil\n        };\n      } else {\n        var platformString = _this.queryVerdorInfo();\n        if (platformString === 'WebGL1') {\n          var gl = _this.getGLContext();\n          if (!isUndefined(stencil)) {\n            gl.clearStencil(stencil);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n          } else if (!isUndefined(depth)) {\n            gl.clearDepth(depth);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n        } else if (platformString === 'WebGL2') {\n          var _gl = _this.getGLContext();\n          if (!isUndefined(stencil)) {\n            _gl.clearBufferiv(_gl.STENCIL, 0, [stencil]);\n          } else if (!isUndefined(depth)) {\n            _gl.clearBufferfv(_gl.DEPTH, 0, [depth]);\n          }\n        }\n      }\n      // Recreate render pass\n      // this.beginFrame();\n    });\n    _defineProperty(this, \"viewport\", function (_ref2) {\n      var width = _ref2.width,\n        height = _ref2.height;\n      // @see https://observablehq.com/@antv/g-device-api#cell-267\n      _this.swapChain.configureSwapChain(width, height);\n      _this.createMainColorDepthRT(width, height);\n      _this.width = width;\n      _this.height = height;\n    });\n    _defineProperty(this, \"readPixels\", function (options) {\n      var framebuffer = options.framebuffer,\n        x = options.x,\n        y = options.y,\n        width = options.width,\n        height = options.height;\n      var readback = _this.device.createReadback();\n      var texture = framebuffer['colorTexture'];\n      var result = readback.readTextureSync(texture, x,\n      /**\n       * Origin is at lower-left corner. Width / height is already multiplied by dpr.\n       * WebGPU needs flipY\n       */\n      _this.viewportOrigin === ViewportOrigin.LOWER_LEFT ? y : _this.height - y, width, height, new Uint8Array(width * height * 4));\n      readback.destroy();\n      return result;\n    });\n    _defineProperty(this, \"readPixelsAsync\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n        var framebuffer, x, y, width, height, readback, texture, result, j, t;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              framebuffer = options.framebuffer, x = options.x, y = options.y, width = options.width, height = options.height;\n              readback = _this.device.createReadback();\n              texture = framebuffer['colorTexture'];\n              _context2.next = 5;\n              return readback.readTexture(texture, x,\n              /**\n               * Origin is at lower-left corner. Width / height is already multiplied by dpr.\n               * WebGPU needs flipY\n               */\n              _this.viewportOrigin === ViewportOrigin.LOWER_LEFT ? y : _this.height - y, width, height, new Uint8Array(width * height * 4));\n            case 5:\n              result = _context2.sent;\n              // Since we use U8_RGBA_RT format in render target, need to change bgranorm -> rgba here.\n              if (_this.viewportOrigin !== ViewportOrigin.LOWER_LEFT) {\n                for (j = 0; j < result.length; j += 4) {\n                  // Switch b and r components.\n                  t = result[j];\n                  result[j] = result[j + 2];\n                  result[j + 2] = t;\n                }\n              }\n              readback.destroy();\n              return _context2.abrupt(\"return\", result);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"getViewportSize\", function () {\n      // FIXME: add viewport size in Device API.\n      return {\n        width: _this.width,\n        height: _this.height\n      };\n    });\n    _defineProperty(this, \"getContainer\", function () {\n      var _this$canvas;\n      return (_this$canvas = _this.canvas) === null || _this$canvas === void 0 ? void 0 : _this$canvas.parentElement;\n    });\n    _defineProperty(this, \"getCanvas\", function () {\n      return _this.canvas;\n    });\n    _defineProperty(this, \"getGLContext\", function () {\n      // @ts-ignore\n      return _this.device['gl'];\n    });\n    _defineProperty(this, \"destroy\", function () {\n      var _this$uniformBuffers;\n      // this.canvas = null 清除对 webgl 实例的引用\n      // @ts-ignore\n      _this.canvas = null;\n      (_this$uniformBuffers = _this.uniformBuffers) === null || _this$uniformBuffers === void 0 || _this$uniformBuffers.forEach(function (buffer) {\n        buffer.destroy();\n      });\n      _this.device.destroy();\n      _this.renderCache.destroy();\n\n      // make sure release webgl context\n      // this.gl?._gl?.getExtension('WEBGL_lose_context')?.loseContext();\n\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n      // this.gl.destroy();\n\n      // @ts-ignore\n      // this.gl = null;\n    });\n  }\n  _createClass(DeviceRendererService, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(canvas, cfg) {\n        var enableWebGPU, shaderCompilerPath, deviceContribution, swapChain, gl;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              enableWebGPU = cfg.enableWebGPU, shaderCompilerPath = cfg.shaderCompilerPath; // this.$container = $container;\n              this.canvas = canvas;\n\n              // TODO: use antialias from cfg\n              deviceContribution = enableWebGPU ? new WebGPUDeviceContribution({\n                shaderCompilerPath: shaderCompilerPath\n              }) : new WebGLDeviceContribution({\n                // Use WebGL2 first and downgrade to WebGL1 if WebGL2 is not supported.\n                targets: ['webgl2', 'webgl1'],\n                onContextLost: function onContextLost(e) {\n                  console.warn('context lost', e);\n                },\n                onContextCreationError: function onContextCreationError(e) {\n                  console.warn('context creation error', e);\n                },\n                onContextRestored: function onContextRestored(e) {\n                  console.warn('context restored', e);\n                }\n              });\n              _context3.next = 5;\n              return deviceContribution.createSwapChain(canvas);\n            case 5:\n              swapChain = _context3.sent;\n              swapChain.configureSwapChain(canvas.width, canvas.height);\n              this.device = swapChain.getDevice();\n              this.swapChain = swapChain;\n              this.renderCache = new RenderCache(this.device);\n\n              // Create default RT\n              this.currentFramebuffer = null;\n              this.viewportOrigin = this.device.queryVendorInfo().viewportOrigin;\n\n              // @ts-ignore\n              gl = this.device['gl'];\n              this.extensionObject = {\n                // @ts-ignore\n                OES_texture_float: !isWebGL2(gl) && this.device['OES_texture_float']\n              };\n              this.createMainColorDepthRT(canvas.width, canvas.height);\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function init(_x4, _x5) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"createMainColorDepthRT\",\n    value: function createMainColorDepthRT(width, height) {\n      if (this.mainColorRT) {\n        this.mainColorRT.destroy();\n      }\n      if (this.mainDepthRT) {\n        this.mainDepthRT.destroy();\n      }\n      this.mainColorRT = this.device.createRenderTargetFromTexture(this.device.createTexture({\n        format: Format.U8_RGBA_RT,\n        width: width,\n        height: height,\n        usage: TextureUsage.RENDER_TARGET\n      }));\n      this.mainDepthRT = this.device.createRenderTargetFromTexture(this.device.createTexture({\n        format: Format.D24_S8,\n        width: width,\n        height: height,\n        usage: TextureUsage.RENDER_TARGET\n      }));\n    }\n  }, {\n    key: \"beginFrame\",\n    value: function beginFrame() {\n      this.device.beginFrame();\n      var currentFramebuffer = this.currentFramebuffer,\n        swapChain = this.swapChain,\n        mainColorRT = this.mainColorRT,\n        mainDepthRT = this.mainDepthRT;\n      var colorAttachment = currentFramebuffer ? currentFramebuffer['colorRenderTarget'] : mainColorRT;\n      var colorResolveTo = currentFramebuffer ? null : swapChain.getOnscreenTexture();\n      var depthStencilAttachment = currentFramebuffer ? currentFramebuffer['depthRenderTarget'] : mainDepthRT;\n      var _ref4 =\n        // @ts-ignore\n        (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer.clearOptions) || {},\n        _ref4$color = _ref4.color,\n        color = _ref4$color === void 0 ? [0, 0, 0, 0] : _ref4$color,\n        _ref4$depth = _ref4.depth,\n        depth = _ref4$depth === void 0 ? 1 : _ref4$depth,\n        _ref4$stencil = _ref4.stencil,\n        stencil = _ref4$stencil === void 0 ? 0 : _ref4$stencil;\n      var colorClearColor = colorAttachment ? colorNewFromRGBA(color[0] * 255, color[1] * 255, color[2] * 255, color[3]) : TransparentBlack;\n      var depthClearValue = depthStencilAttachment ? depth : undefined;\n      var stencilClearValue = depthStencilAttachment ? stencil : undefined;\n      var renderPass = this.device.createRenderPass({\n        colorAttachment: [colorAttachment],\n        colorResolveTo: [colorResolveTo],\n        colorClearColor: [colorClearColor],\n        // colorStore: [!!currentFramebuffer],\n        colorStore: [true],\n        depthStencilAttachment: depthStencilAttachment,\n        depthClearValue: depthClearValue,\n        stencilClearValue: stencilClearValue\n      });\n      this.renderPass = renderPass;\n    }\n  }, {\n    key: \"endFrame\",\n    value: function endFrame() {\n      this.device.submitPass(this.renderPass);\n      this.device.endFrame();\n    }\n  }, {\n    key: \"getPointSizeRange\",\n    value: function getPointSizeRange() {\n      // @ts-ignore\n      var gl = this.device['gl'];\n      // FIXME: implement this method in Device API.\n      return gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    }\n  }, {\n    key: \"testExtension\",\n    value: function testExtension(name) {\n      // OES_texture_float\n      return !!this.getGLContext().getExtension(name);\n    }\n  }, {\n    key: \"setState\",\n    value:\n    // TODO: 临时方法\n    function setState() {\n      // this.gl({\n      //   cull: {\n      //     enable: false,\n      //     face: 'back',\n      //   },\n      //   viewport: {\n      //     x: 0,\n      //     y: 0,\n      //     height: this.width,\n      //     width: this.height,\n      //   },\n      //   blend: {\n      //     enable: true,\n      //     equation: 'add',\n      //   },\n      //   framebuffer: null,\n      // });\n      // this.gl._refresh();\n    }\n  }, {\n    key: \"setBaseState\",\n    value: function setBaseState() {\n      // this.gl({\n      //   cull: {\n      //     enable: false,\n      //     face: 'back',\n      //   },\n      //   viewport: {\n      //     x: 0,\n      //     y: 0,\n      //     height: this.width,\n      //     width: this.height,\n      //   },\n      //   blend: {\n      //     enable: false,\n      //     equation: 'add',\n      //   },\n      //   framebuffer: null,\n      // });\n      // this.gl._refresh();\n    }\n  }, {\n    key: \"setCustomLayerDefaults\",\n    value: function setCustomLayerDefaults() {\n      // const gl = this.getGLContext();\n      // gl.disable(gl.CULL_FACE);\n    }\n  }, {\n    key: \"setDirty\",\n    value: function setDirty(flag) {\n      this.isDirty = flag;\n    }\n  }, {\n    key: \"getDirty\",\n    value: function getDirty() {\n      return this.isDirty;\n    }\n  }]);\n  return DeviceRendererService;\n}()) || _class);\nexport { DeviceRendererService as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}