{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport isPointInPolygon from './point-in-polygon';\nimport getLineIntersect from './get-line-intersect';\nimport { each } from '@antv/util';\nfunction parseToLines(points) {\n  var lines = [];\n  var count = points.length;\n  for (var i = 0; i < count - 1; i++) {\n    var point = points[i];\n    var next = points[i + 1];\n    lines.push({\n      from: {\n        x: point[0],\n        y: point[1]\n      },\n      to: {\n        x: next[0],\n        y: next[1]\n      }\n    });\n  }\n  if (lines.length > 1) {\n    var first = points[0];\n    var last = points[count - 1];\n    lines.push({\n      from: {\n        x: last[0],\n        y: last[1]\n      },\n      to: {\n        x: first[0],\n        y: first[1]\n      }\n    });\n  }\n  return lines;\n}\nfunction lineIntersectPolygon(lines, line) {\n  var isIntersect = false;\n  each(lines, function (l) {\n    if (getLineIntersect(l.from, l.to, line.from, line.to)) {\n      isIntersect = true;\n      return false;\n    }\n  });\n  return isIntersect;\n}\nfunction getBBox(points) {\n  var xArr = points.map(function (p) {\n    return p[0];\n  });\n  var yArr = points.map(function (p) {\n    return p[1];\n  });\n  return {\n    minX: Math.min.apply(null, xArr),\n    maxX: Math.max.apply(null, xArr),\n    minY: Math.min.apply(null, yArr),\n    maxY: Math.max.apply(null, yArr)\n  };\n}\nfunction intersectBBox(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\nexport default function isPolygonsIntersect(points1, points2) {\n  // 空数组，或者一个点返回 false\n  if (points1.length < 2 || points2.length < 2) {\n    return false;\n  }\n  var bbox1 = getBBox(points1);\n  var bbox2 = getBBox(points2);\n  // 判定包围盒是否相交，比判定点是否在多边形内要快的多，可以筛选掉大多数情况\n  if (!intersectBBox(bbox1, bbox2)) {\n    return false;\n  }\n  var isIn = false;\n  // 判定点是否在多边形内部，一旦有一个点在另一个多边形内，则返回\n  each(points2, function (point) {\n    if (isPointInPolygon(points1, point[0], point[1])) {\n      isIn = true;\n      return false;\n    }\n  });\n  if (isIn) {\n    return true;\n  }\n  // 两个多边形都需要判定\n  each(points1, function (point) {\n    if (isPointInPolygon(points2, point[0], point[1])) {\n      isIn = true;\n      return false;\n    }\n  });\n  if (isIn) {\n    return true;\n  }\n  var lines1 = parseToLines(points1);\n  var lines2 = parseToLines(points2);\n  var isIntersect = false;\n  each(lines2, function (line) {\n    if (lineIntersectPolygon(lines1, line)) {\n      isIntersect = true;\n      return false;\n    }\n  });\n  return isIntersect;\n}","map":{"version":3,"names":["isPointInPolygon","getLineIntersect","each","parseToLines","points","lines","count","length","i","point","next","push","from","x","y","to","first","last","lineIntersectPolygon","line","isIntersect","l","getBBox","xArr","map","p","yArr","minX","Math","min","apply","maxX","max","minY","maxY","intersectBBox","box1","box2","isPolygonsIntersect","points1","points2","bbox1","bbox2","isIn","lines1","lines2"],"sources":["../src/is-polygons-intersect.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}