{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { EMPTY } from './Entity';\nexport var Component = /*#__PURE__*/_createClass(function Component(data) {\n  _classCallCheck(this, Component);\n} //\n);\n\n/**\n * 管理某一类 Component，尽可能做到 AoS 而非 SoA\n * @see https://wickedengine.net/2019/09/29/entity-component-system/\n * @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h\n */\n// tslint:disable-next-line:max-classes-per-file\nexport var ComponentManager = /*#__PURE__*/function () {\n  /**\n   * 不在 Entity 中维护拥有的 Component 列表，反之亦然\n   */\n\n  function ComponentManager(clazz) {\n    _classCallCheck(this, ComponentManager);\n    this.clazz = void 0;\n    this.components = [];\n    this.entities = [];\n    this.lookup = {};\n    this.clazz = clazz;\n  }\n  _createClass(ComponentManager, [{\n    key: \"clear\",\n    value: function clear() {\n      this.components = [];\n      this.entities = [];\n      this.lookup = {};\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(entity) {\n      return this.lookup[entity] > -1;\n    }\n  }, {\n    key: \"create\",\n    value: function create(entity, data) {\n      this.lookup[entity] = this.components.length;\n      var component = new this.clazz(data || {});\n      this.components.push(component);\n      this.entities.push(entity);\n      return component;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(entity) {\n      var componentIndex = this.lookup[entity];\n      if (componentIndex > -1) {\n        if (componentIndex < this.components.length - 1) {\n          // 将待删除元素和最后一个元素交换\n          // C++ 中有 std::move 这样的操作，避免数据的拷贝\n          // @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h#L169\n          this.components[componentIndex] = this.components[this.components.length - 1];\n          this.entities[componentIndex] = this.entities[this.entities.length - 1];\n          this.lookup[this.entities[componentIndex]] = componentIndex;\n        }\n      }\n\n      // 待删除元素已经移动到了最后一个\n      this.components.pop();\n      this.entities.pop();\n      delete this.lookup[entity];\n    }\n  }, {\n    key: \"removeKeepSorted\",\n    value: function removeKeepSorted(entity) {\n      var componentIndex = this.lookup[entity];\n      if (componentIndex > -1) {\n        var entity2 = this.entities[componentIndex];\n        if (componentIndex < this.components.length - 1) {\n          // Move every component left by one that is after this element:\n          for (var _i = componentIndex + 1; _i < this.components.length; ++_i) {\n            this.components[_i - 1] = this.components[_i];\n          }\n          // Move every entity left by one that is after this element and update lut:\n          for (var _i2 = componentIndex + 1; _i2 < this.entities.length; ++_i2) {\n            this.entities[_i2 - 1] = this.entities[_i2];\n            this.lookup[this.entities[_i2 - 1]] = _i2 - 1;\n          }\n        }\n        this.components.pop();\n        this.entities.pop();\n        delete this.lookup[entity2];\n      }\n    }\n  }, {\n    key: \"moveItem\",\n    value: function moveItem(srcIndex, destIndex) {\n      if (srcIndex === destIndex) {\n        return;\n      }\n\n      // Save the moved component and entity:\n      var srcComponent = this.components[srcIndex];\n      var srcEntity = this.entities[srcIndex];\n\n      // Every other entity-component that's in the way gets moved by one and lut is kept updated:\n      var direction = srcIndex < destIndex ? 1 : -1;\n      for (var _i3 = srcIndex; _i3 !== destIndex; _i3 += direction) {\n        var next = _i3 + direction;\n        this.components[_i3] = this.components[next];\n        this.entities[_i3] = this.entities[next];\n        this.lookup[this.entities[_i3]] = _i3;\n      }\n\n      // Saved entity-component moved to the required position:\n      this.components[destIndex] = srcComponent;\n      this.entities[destIndex] = srcEntity;\n      this.lookup[srcEntity] = destIndex;\n    }\n  }, {\n    key: \"getEntity\",\n    value: function getEntity(index) {\n      return this.entities[index];\n    }\n\n    /**\n     * 由于缺少类似 C++ 的重载操作符，没法通过 [下标] 直接访问。因此只能增加该方法用于遍历。\n     */\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(index) {\n      return this.components[index];\n    }\n  }, {\n    key: \"getComponentByEntity\",\n    value: function getComponentByEntity(entity) {\n      var componentIndex = this.lookup[entity];\n      if (componentIndex > -1) {\n        return this.components[componentIndex];\n      }\n      return null;\n    }\n  }, {\n    key: \"getCount\",\n    value: function getCount() {\n      return this.components.length;\n    }\n  }, {\n    key: \"getEntityByComponentIndex\",\n    value: function getEntityByComponentIndex(componentIdx) {\n      for (var _i4 = 0, _Object$keys = Object.keys(this.lookup); _i4 < _Object$keys.length; _i4++) {\n        var _entity = _Object$keys[_i4];\n        var entityInNum = Number(_entity);\n        if (this.lookup[entityInNum] === componentIdx) {\n          return entityInNum;\n        }\n      }\n      return EMPTY;\n    }\n  }, {\n    key: \"find\",\n    value: function find(callback) {\n      for (var _i5 = 0; _i5 < this.getCount(); _i5++) {\n        var _component = this.getComponent(_i5);\n        if (callback(_component, _i5)) {\n          return _component;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(callback) {\n      for (var _i6 = 0; _i6 < this.getCount(); _i6++) {\n        var _component2 = this.getComponent(_i6);\n        if (callback(_component2, _i6)) {\n          return _i6;\n        }\n      }\n      return -1;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      for (var _i7 = 0, _Object$keys2 = Object.keys(this.lookup); _i7 < _Object$keys2.length; _i7++) {\n        var _entity2 = _Object$keys2[_i7];\n        var entityInNum = Number(_entity2);\n        var componentIndex = this.lookup[entityInNum];\n        callback(entityInNum, this.getComponent(componentIndex));\n      }\n    }\n  }, {\n    key: \"forEachAsync\",\n    value: function () {\n      var _forEachAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n        var _i8, _Object$keys3, _entity3, entityInNum, componentIndex;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _i8 = 0, _Object$keys3 = Object.keys(this.lookup);\n              case 1:\n                if (!(_i8 < _Object$keys3.length)) {\n                  _context.next = 10;\n                  break;\n                }\n                _entity3 = _Object$keys3[_i8];\n                entityInNum = Number(_entity3);\n                componentIndex = this.lookup[entityInNum];\n                _context.next = 7;\n                return callback(entityInNum, this.getComponent(componentIndex));\n              case 7:\n                _i8++;\n                _context.next = 1;\n                break;\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function forEachAsync(_x) {\n        return _forEachAsync.apply(this, arguments);\n      }\n      return forEachAsync;\n    }()\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      var result = [];\n      for (var _i9 = 0, _Object$keys4 = Object.keys(this.lookup); _i9 < _Object$keys4.length; _i9++) {\n        var _entity4 = _Object$keys4[_i9];\n        var entityInNum = Number(_entity4);\n        var componentIndex = this.lookup[entityInNum];\n        result.push(callback(entityInNum, this.getComponent(componentIndex)));\n      }\n      return result;\n    }\n  }]);\n  return ComponentManager;\n}();","map":{"version":3,"names":["EMPTY","Component","_createClass","data","_classCallCheck","ComponentManager","clazz","components","entities","lookup","key","value","clear","contains","entity","create","length","component","push","remove","componentIndex","pop","removeKeepSorted","entity2","_i","_i2","moveItem","srcIndex","destIndex","srcComponent","srcEntity","direction","_i3","next","getEntity","index","getComponent","getComponentByEntity","getCount","getEntityByComponentIndex","componentIdx","_i4","_Object$keys","Object","keys","_entity","entityInNum","Number","find","callback","_i5","_component","findIndex","_i6","_component2","forEach","_i7","_Object$keys2","_entity2","_forEachAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_i8","_Object$keys3","_entity3","wrap","_callee$","_context","prev","stop","forEachAsync","_x","apply","arguments","map","result","_i9","_Object$keys4","_entity4"],"sources":["../src/ComponentManager.ts"],"sourcesContent":["import { Entity } from '.';\nimport { EMPTY } from './Entity';\n\ntype NonFunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends (args: unknown) => void ? never : K;\n}[keyof T];\nexport type NonFunctionProperties<T> = Pick<T, NonFunctionPropertyNames<T>>;\n\nexport type ComponentClassType<P> = new (\n  data: Partial<NonFunctionProperties<P>>,\n) => Component<P> & P;\n\nexport abstract class Component<P> {\n  constructor(data?: Partial<NonFunctionProperties<P>>) {\n    //\n  }\n}\n\n/**\n * 管理某一类 Component，尽可能做到 AoS 而非 SoA\n * @see https://wickedengine.net/2019/09/29/entity-component-system/\n * @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class ComponentManager<P> {\n  private clazz: ComponentClassType<P>;\n  private components: Array<Component<P> & P> = [];\n  private entities: Entity[] = [];\n\n  /**\n   * 不在 Entity 中维护拥有的 Component 列表，反之亦然\n   */\n  private lookup: Record<Entity, number> = {};\n\n  constructor(clazz: ComponentClassType<P>) {\n    this.clazz = clazz;\n  }\n\n  public clear() {\n    this.components = [];\n    this.entities = [];\n    this.lookup = {};\n  }\n\n  public contains(entity: Entity) {\n    return this.lookup[entity] > -1;\n  }\n\n  public create(entity: Entity, data?: Partial<NonFunctionProperties<P>>) {\n    this.lookup[entity] = this.components.length;\n    const component = new this.clazz(data || {});\n    this.components.push(component);\n    this.entities.push(entity);\n    return component;\n  }\n\n  public remove(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      if (componentIndex < this.components.length - 1) {\n        // 将待删除元素和最后一个元素交换\n        // C++ 中有 std::move 这样的操作，避免数据的拷贝\n        // @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h#L169\n        this.components[componentIndex] = this.components[\n          this.components.length - 1\n        ];\n        this.entities[componentIndex] = this.entities[this.entities.length - 1];\n        this.lookup[this.entities[componentIndex]] = componentIndex;\n      }\n    }\n\n    // 待删除元素已经移动到了最后一个\n    this.components.pop();\n    this.entities.pop();\n    delete this.lookup[entity];\n  }\n\n  public removeKeepSorted(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      const entity2 = this.entities[componentIndex];\n\n      if (componentIndex < this.components.length - 1) {\n        // Move every component left by one that is after this element:\n        for (let i = componentIndex + 1; i < this.components.length; ++i) {\n          this.components[i - 1] = this.components[i];\n        }\n        // Move every entity left by one that is after this element and update lut:\n        for (let i = componentIndex + 1; i < this.entities.length; ++i) {\n          this.entities[i - 1] = this.entities[i];\n          this.lookup[this.entities[i - 1]] = i - 1;\n        }\n      }\n\n      this.components.pop();\n      this.entities.pop();\n      delete this.lookup[entity2];\n    }\n  }\n\n  public moveItem(srcIndex: number, destIndex: number) {\n    if (srcIndex === destIndex) {\n      return;\n    }\n\n    // Save the moved component and entity:\n    const srcComponent = this.components[srcIndex];\n    const srcEntity = this.entities[srcIndex];\n\n    // Every other entity-component that's in the way gets moved by one and lut is kept updated:\n    const direction = srcIndex < destIndex ? 1 : -1;\n    for (let i = srcIndex; i !== destIndex; i += direction) {\n      const next = i + direction;\n      this.components[i] = this.components[next];\n      this.entities[i] = this.entities[next];\n      this.lookup[this.entities[i]] = i;\n    }\n\n    // Saved entity-component moved to the required position:\n    this.components[destIndex] = srcComponent;\n    this.entities[destIndex] = srcEntity;\n    this.lookup[srcEntity] = destIndex;\n  }\n\n  public getEntity(index: number) {\n    return this.entities[index];\n  }\n\n  /**\n   * 由于缺少类似 C++ 的重载操作符，没法通过 [下标] 直接访问。因此只能增加该方法用于遍历。\n   */\n  public getComponent(index: number) {\n    return this.components[index];\n  }\n\n  public getComponentByEntity(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      return this.components[componentIndex];\n    }\n    return null;\n  }\n\n  public getCount() {\n    return this.components.length;\n  }\n\n  public getEntityByComponentIndex(componentIdx: number) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      if (this.lookup[entityInNum] === componentIdx) {\n        return entityInNum;\n      }\n    }\n    return EMPTY;\n  }\n\n  public find(callback: (component: Component<P> & P, i: number) => boolean) {\n    for (let i = 0; i < this.getCount(); i++) {\n      const component = this.getComponent(i);\n      if (callback(component, i)) {\n        return component;\n      }\n    }\n    return null;\n  }\n\n  public findIndex(\n    callback: (component: Component<P> & P, i: number) => boolean,\n  ) {\n    for (let i = 0; i < this.getCount(); i++) {\n      const component = this.getComponent(i);\n      if (callback(component, i)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  public forEach(\n    callback: (entity: Entity, component: Component<P> & P) => void,\n  ) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      callback(entityInNum, this.getComponent(componentIndex));\n    }\n  }\n\n  public async forEachAsync(\n    callback: (entity: Entity, component: Component<P> & P) => Promise<void>,\n  ) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      await callback(entityInNum, this.getComponent(componentIndex));\n    }\n  }\n\n  public map(callback: (entity: Entity, component: Component<P> & P) => void) {\n    const result = [];\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      result.push(callback(entityInNum, this.getComponent(componentIndex)));\n    }\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}