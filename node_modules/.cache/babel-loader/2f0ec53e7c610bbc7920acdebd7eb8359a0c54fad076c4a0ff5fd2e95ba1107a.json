{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { mix, each, isArray, isString } from '@antv/util';\nimport { registerEdge, Util, BaseGlobal as Global } from '@antv/g6-core';\nimport { getPathWithBorderRadiusByPolyline, getPolylinePoints, removeRedundantPoint } from './polyline-util';\nimport { pathFinder } from './router';\n// 折线\nregisterEdge('polyline', {\n  options: {\n    color: Global.defaultEdge.color,\n    size: Global.defaultEdge.size,\n    style: {\n      radius: 0,\n      offset: 15,\n      x: 0,\n      y: 0,\n      stroke: Global.defaultEdge.style.stroke,\n      lineAppendWidth: Global.defaultEdge.style.lineAppendWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.edgeLabel.style.fill,\n        fontSize: Global.edgeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    routeCfg: {\n      obstacles: [],\n      maxAllowedDirectionChange: Math.PI,\n      maximumLoops: 500,\n      gridSize: 10 // 指定精度\n    },\n\n    stateStyles: __assign({}, Global.edgeStateStyles)\n  },\n  shapeType: 'polyline',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var shapeStyle = this.getShapeStyle(cfg);\n    if (shapeStyle.radius === 0) delete shapeStyle.radius;\n    var keyShape = group.addShape('path', {\n      className: 'edge-shape',\n      name: 'edge-shape',\n      attrs: shapeStyle\n    });\n    group['shapeMap']['edge-shape'] = keyShape;\n    return keyShape;\n  },\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.options.style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    var style = mix({}, defaultStyle, strokeStyle, cfg.style);\n    cfg = this.getPathPoints(cfg);\n    this.radius = style.radius;\n    this.offset = style.offset;\n    var startPoint = cfg.startPoint,\n      endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg);\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    }\n    // 添加结束点\n    points.push(endPoint);\n    var source = cfg.sourceNode;\n    var target = cfg.targetNode;\n    var radius = style.radius;\n    var defaultRouteCfg = this.options.routeCfg;\n    var routeCfg = mix({}, defaultRouteCfg, cfg.routeCfg);\n    routeCfg.offset = style.offset;\n    var path = this.getPath(points, source, target, radius, routeCfg, !Boolean(controlPoints));\n    if (isArray(path) && path.length <= 1 || isString(path) && path.indexOf('L') === -1) {\n      path = 'M0 0, L0 0';\n    }\n    if (isNaN(startPoint.x) || isNaN(startPoint.y) || isNaN(endPoint.x) || isNaN(endPoint.y)) {\n      path = 'M0 0, L0 0';\n    }\n    var attrs = mix({}, Global.defaultEdge.style, style, {\n      lineWidth: cfg.size,\n      path: path\n    });\n    return attrs;\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    if (!item.isVisible()) return;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    var shape = group['shapeMap']['edge-shape'] || group.find(function (element) {\n      return element.get('className') === 'edge-shape';\n    }) || item.getKeyShape();\n    var size = cfg.size;\n    cfg = this.getPathPoints(cfg);\n    var startPoint = cfg.startPoint,\n      endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg); // || cfg.controlPoints;\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    }\n    // 添加结束点\n    points.push(endPoint);\n    var currentAttr = shape.attr();\n    var previousStyle = mix({}, strokeStyle, currentAttr, cfg.style);\n    var source = cfg.sourceNode;\n    var target = cfg.targetNode;\n    var radius = previousStyle.radius;\n    var defaultRouteCfg = this.options.routeCfg;\n    var routeCfg = mix({}, defaultRouteCfg, cfg.routeCfg);\n    routeCfg.offset = previousStyle.offset;\n    var path = this.getPath(points, source, target, radius, routeCfg, !Boolean(controlPoints));\n    if (isArray(path) && path.length <= 1 || isString(path) && path.indexOf('L') === -1) {\n      path = 'M0 0, L0 0';\n    }\n    if (isNaN(startPoint.x) || isNaN(startPoint.y) || isNaN(endPoint.x) || isNaN(endPoint.y)) {\n      path = 'M0 0, L0 0';\n    }\n    if (currentAttr.endArrow && previousStyle.endArrow === false) {\n      cfg.style.endArrow = {\n        path: ''\n      };\n    }\n    if (currentAttr.startArrow && previousStyle.startArrow === false) {\n      cfg.style.startArrow = {\n        path: ''\n      };\n    }\n    var style = mix(strokeStyle, shape.attr(), {\n      lineWidth: size,\n      path: path\n    }, cfg.style);\n    if (shape) {\n      shape.attr(style);\n    }\n  },\n  getPath: function getPath(points, source, target, radius, routeCfg, auto) {\n    var offset = routeCfg.offset,\n      obstacles = routeCfg.obstacles;\n    var simple = routeCfg.simple;\n    // 指定了控制点\n    if (!offset || points.length > 2 || auto === false) {\n      if (radius) {\n        return getPathWithBorderRadiusByPolyline(points, radius);\n      }\n      var pathArray_1 = [];\n      each(points, function (point, index) {\n        if (index === 0) {\n          pathArray_1.push(['M', point.x, point.y]);\n        } else {\n          pathArray_1.push(['L', point.x, point.y]);\n        }\n      });\n      return pathArray_1;\n    }\n    // 未指定控制点\n    if (simple !== false && !(obstacles === null || obstacles === void 0 ? void 0 : obstacles.length)) simple = true;\n    var polylinePoints = simple ? getPolylinePoints(points[points.length - 1], points[0], target, source, offset) : pathFinder(points[0], points[points.length - 1], source, target, routeCfg);\n    if (!polylinePoints || !polylinePoints.length) return 'M0 0, L0 0';\n    if (radius) {\n      var res_1 = getPathWithBorderRadiusByPolyline(polylinePoints, radius);\n      return res_1;\n    }\n    // 去除连续同 x 不同 y 的中间点；去除连续同 y 不同 x 的中间点\n    polylinePoints = removeRedundantPoint(polylinePoints);\n    var res = Util.pointsToPolygon(polylinePoints);\n    return res;\n  }\n}, 'single-edge');","map":{"version":3,"names":["__assign","mix","each","isArray","isString","registerEdge","Util","BaseGlobal","Global","getPathWithBorderRadiusByPolyline","getPolylinePoints","removeRedundantPoint","pathFinder","options","color","defaultEdge","size","style","radius","offset","x","y","stroke","lineAppendWidth","labelCfg","fill","edgeLabel","fontSize","fontFamily","windowFontFamily","routeCfg","obstacles","maxAllowedDirectionChange","Math","PI","maximumLoops","gridSize","stateStyles","edgeStateStyles","shapeType","labelPosition","drawShape","cfg","group","shapeStyle","getShapeStyle","keyShape","addShape","className","name","attrs","defaultStyle","strokeStyle","getPathPoints","startPoint","endPoint","controlPoints","getControlPoints","points","concat","push","source","sourceNode","target","targetNode","defaultRouteCfg","path","getPath","Boolean","length","indexOf","isNaN","lineWidth","updateShapeStyle","item","getContainer","isVisible","shape","find","element","get","getKeyShape","currentAttr","attr","previousStyle","endArrow","startArrow","auto","simple","pathArray_1","point","index","polylinePoints","res_1","res","pointsToPolygon"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-element/es/edges/polyline.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { mix, each, isArray, isString } from '@antv/util';\nimport { registerEdge, Util, BaseGlobal as Global } from '@antv/g6-core';\nimport { getPathWithBorderRadiusByPolyline, getPolylinePoints, removeRedundantPoint } from './polyline-util';\nimport { pathFinder } from './router';\n// 折线\nregisterEdge('polyline', {\n  options: {\n    color: Global.defaultEdge.color,\n    size: Global.defaultEdge.size,\n    style: {\n      radius: 0,\n      offset: 15,\n      x: 0,\n      y: 0,\n      stroke: Global.defaultEdge.style.stroke,\n      lineAppendWidth: Global.defaultEdge.style.lineAppendWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.edgeLabel.style.fill,\n        fontSize: Global.edgeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    routeCfg: {\n      obstacles: [],\n      maxAllowedDirectionChange: Math.PI,\n      maximumLoops: 500,\n      gridSize: 10 // 指定精度\n    },\n\n    stateStyles: __assign({}, Global.edgeStateStyles)\n  },\n  shapeType: 'polyline',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var shapeStyle = this.getShapeStyle(cfg);\n    if (shapeStyle.radius === 0) delete shapeStyle.radius;\n    var keyShape = group.addShape('path', {\n      className: 'edge-shape',\n      name: 'edge-shape',\n      attrs: shapeStyle\n    });\n    group['shapeMap']['edge-shape'] = keyShape;\n    return keyShape;\n  },\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.options.style;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    var style = mix({}, defaultStyle, strokeStyle, cfg.style);\n    cfg = this.getPathPoints(cfg);\n    this.radius = style.radius;\n    this.offset = style.offset;\n    var startPoint = cfg.startPoint,\n      endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg);\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    }\n    // 添加结束点\n    points.push(endPoint);\n    var source = cfg.sourceNode;\n    var target = cfg.targetNode;\n    var radius = style.radius;\n    var defaultRouteCfg = this.options.routeCfg;\n    var routeCfg = mix({}, defaultRouteCfg, cfg.routeCfg);\n    routeCfg.offset = style.offset;\n    var path = this.getPath(points, source, target, radius, routeCfg, !Boolean(controlPoints));\n    if (isArray(path) && path.length <= 1 || isString(path) && path.indexOf('L') === -1) {\n      path = 'M0 0, L0 0';\n    }\n    if (isNaN(startPoint.x) || isNaN(startPoint.y) || isNaN(endPoint.x) || isNaN(endPoint.y)) {\n      path = 'M0 0, L0 0';\n    }\n    var attrs = mix({}, Global.defaultEdge.style, style, {\n      lineWidth: cfg.size,\n      path: path\n    });\n    return attrs;\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    if (!item.isVisible()) return;\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    var shape = group['shapeMap']['edge-shape'] || group.find(function (element) {\n      return element.get('className') === 'edge-shape';\n    }) || item.getKeyShape();\n    var size = cfg.size;\n    cfg = this.getPathPoints(cfg);\n    var startPoint = cfg.startPoint,\n      endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg); // || cfg.controlPoints;\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    }\n    // 添加结束点\n    points.push(endPoint);\n    var currentAttr = shape.attr();\n    var previousStyle = mix({}, strokeStyle, currentAttr, cfg.style);\n    var source = cfg.sourceNode;\n    var target = cfg.targetNode;\n    var radius = previousStyle.radius;\n    var defaultRouteCfg = this.options.routeCfg;\n    var routeCfg = mix({}, defaultRouteCfg, cfg.routeCfg);\n    routeCfg.offset = previousStyle.offset;\n    var path = this.getPath(points, source, target, radius, routeCfg, !Boolean(controlPoints));\n    if (isArray(path) && path.length <= 1 || isString(path) && path.indexOf('L') === -1) {\n      path = 'M0 0, L0 0';\n    }\n    if (isNaN(startPoint.x) || isNaN(startPoint.y) || isNaN(endPoint.x) || isNaN(endPoint.y)) {\n      path = 'M0 0, L0 0';\n    }\n    if (currentAttr.endArrow && previousStyle.endArrow === false) {\n      cfg.style.endArrow = {\n        path: ''\n      };\n    }\n    if (currentAttr.startArrow && previousStyle.startArrow === false) {\n      cfg.style.startArrow = {\n        path: ''\n      };\n    }\n    var style = mix(strokeStyle, shape.attr(), {\n      lineWidth: size,\n      path: path\n    }, cfg.style);\n    if (shape) {\n      shape.attr(style);\n    }\n  },\n  getPath: function getPath(points, source, target, radius, routeCfg, auto) {\n    var offset = routeCfg.offset,\n      obstacles = routeCfg.obstacles;\n    var simple = routeCfg.simple;\n    // 指定了控制点\n    if (!offset || points.length > 2 || auto === false) {\n      if (radius) {\n        return getPathWithBorderRadiusByPolyline(points, radius);\n      }\n      var pathArray_1 = [];\n      each(points, function (point, index) {\n        if (index === 0) {\n          pathArray_1.push(['M', point.x, point.y]);\n        } else {\n          pathArray_1.push(['L', point.x, point.y]);\n        }\n      });\n      return pathArray_1;\n    }\n    // 未指定控制点\n    if (simple !== false && !(obstacles === null || obstacles === void 0 ? void 0 : obstacles.length)) simple = true;\n    var polylinePoints = simple ? getPolylinePoints(points[points.length - 1], points[0], target, source, offset) : pathFinder(points[0], points[points.length - 1], source, target, routeCfg);\n    if (!polylinePoints || !polylinePoints.length) return 'M0 0, L0 0';\n    if (radius) {\n      var res_1 = getPathWithBorderRadiusByPolyline(polylinePoints, radius);\n      return res_1;\n    }\n    // 去除连续同 x 不同 y 的中间点；去除连续同 y 不同 x 的中间点\n    polylinePoints = removeRedundantPoint(polylinePoints);\n    var res = Util.pointsToPolygon(polylinePoints);\n    return res;\n  }\n}, 'single-edge');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}