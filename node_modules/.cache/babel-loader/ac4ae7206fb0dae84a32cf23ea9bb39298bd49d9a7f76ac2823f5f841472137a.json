{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n// tslint:disable-next-line: jsdoc-format\n/** 数学运算 根据计算表达式进行数学运算\n * * * Math operators:\n * `['*', value1, value2]`\n * `['/', value1, value2]`\n * `['+', value1, value2]`\n * `['-', value1, value2]`\n * `['%', value1, value2]`\n * `['^', value1, value2]`\n * `['abs', value1]`\n * `['floor', value1]`\n * `['round', value1]`\n * `['ceil', value1]`\n * `['sin', value1]`\n * `['cos', value1]`\n * `['atan', value1, value2]`\n */\nexport function mathematical(symbol, n1, n2) {\n  switch (symbol) {\n    case '+':\n      return n1 + n2;\n    case '-':\n      return n1 - n2;\n    case '*':\n      return n1 * n2;\n    case '/':\n      return n1 / n2;\n    case '%':\n      return n1 % n2;\n    case '^':\n      return Math.pow(n1, n2);\n    case 'abs':\n      return Math.abs(n1);\n    case 'floor':\n      return Math.floor(n1);\n    case 'round':\n      return Math.round(n1);\n    case 'ceil':\n      return Math.ceil(n1);\n    case 'sin':\n      return Math.sin(n1);\n    case 'cos':\n      return Math.cos(n1);\n    case 'atan':\n      return n2 === -1 ? Math.atan(n1) : Math.atan2(n1, n2);\n    case 'min':\n      return Math.min(n1, n2);\n    case 'max':\n      return Math.max(n1, n2);\n    case 'log10':\n      return Math.log(n1);\n    case 'log2':\n      return Math.log2(n1);\n    default:\n      console.warn('Calculate symbol err! Return default 0');\n      return 0;\n  }\n}\n\n/**\n * 根据表达式计算\n * @param express\n * @param bandsData\n */\nexport function calculate(express, bandsData) {\n  var _bandsData$ = bandsData[0],\n    width = _bandsData$.width,\n    height = _bandsData$.height;\n  var dataArray = bandsData.map(function (band) {\n    return band.rasterData;\n  });\n  var length = width * height;\n  var rasterData = [];\n  var originExp = JSON.stringify(express);\n  for (var i = 0; i < length; i++) {\n    var exp = JSON.parse(originExp);\n    // 将表达式中的 ['band', 0]、['band', 1] 等替换为实际的栅格数据\n    var expResult = spellExpress(exp, dataArray, i);\n    if (typeof expResult === 'number') {\n      // exp: ['band', 0] => exp: 2 ...\n      // exp 直接指定了波段值，替换完后直接就是数值了，无需计算\n      rasterData.push(expResult);\n    } else {\n      var result = calculateExpress(exp);\n      rasterData.push(result);\n    }\n  }\n  return rasterData;\n}\n/**\n * 将表达式中的指定波段替换为对应波段的栅格数据\n * @param express\n * @param dataArray\n * @param index\n */\nexport function spellExpress(express, dataArray, index) {\n  /**\n   * 用户直接指定波段数值，无需计算\n   */\n  if (express.length === 2 && express[0] === 'band' && typeof express[1] === 'number') {\n    try {\n      return dataArray[express[1]][index];\n    } catch (err) {\n      console.warn('Raster Data err!');\n      return 0;\n    }\n  }\n  express.map(function (e, i) {\n    if (Array.isArray(e) && e.length > 0) {\n      switch (e[0]) {\n        case 'band':\n          try {\n            express[i] = dataArray[e[1]][index];\n          } catch (err) {\n            console.warn('Raster Data err!');\n            express[i] = 0;\n          }\n          break;\n        default:\n          spellExpress(e, dataArray, index);\n      }\n    }\n  });\n}\nexport function formatExpress(express) {\n  var _express = _slicedToArray(express, 3),\n    symbol1 = _express[0],\n    _express$ = _express[1],\n    symbol2 = _express$ === void 0 ? -1 : _express$,\n    _express$2 = _express[2],\n    symbol3 = _express$2 === void 0 ? -1 : _express$2;\n  if (symbol1 === undefined) {\n    console.warn('Express err!');\n    return ['+', 0, 0];\n  }\n  var symbol = symbol1.replace(/\\s+/g, '');\n  return [symbol, symbol2, symbol3];\n}\nexport function calculateExpress(express) {\n  var formatExp = formatExpress(express);\n  var str = formatExp[0];\n  var left = formatExp[1];\n  var right = formatExp[2];\n  if (Array.isArray(left)) {\n    left = calculateExpress(express[1]);\n  }\n  if (Array.isArray(right)) {\n    right = calculateExpress(express[2]);\n  }\n  return mathematical(str, left, right);\n}","map":{"version":3,"names":["_slicedToArray","mathematical","symbol","n1","n2","Math","pow","abs","floor","round","ceil","sin","cos","atan","atan2","min","max","log","log2","console","warn","calculate","express","bandsData","_bandsData$","width","height","dataArray","map","band","rasterData","length","originExp","JSON","stringify","i","exp","parse","expResult","spellExpress","push","result","calculateExpress","index","err","e","Array","isArray","formatExpress","_express","symbol1","_express$","symbol2","_express$2","symbol3","undefined","replace","formatExp","str","left","right"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/utils/bandOperation/math.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n// tslint:disable-next-line: jsdoc-format\n/** 数学运算 根据计算表达式进行数学运算\n * * * Math operators:\n * `['*', value1, value2]`\n * `['/', value1, value2]`\n * `['+', value1, value2]`\n * `['-', value1, value2]`\n * `['%', value1, value2]`\n * `['^', value1, value2]`\n * `['abs', value1]`\n * `['floor', value1]`\n * `['round', value1]`\n * `['ceil', value1]`\n * `['sin', value1]`\n * `['cos', value1]`\n * `['atan', value1, value2]`\n */\nexport function mathematical(symbol, n1, n2) {\n  switch (symbol) {\n    case '+':\n      return n1 + n2;\n    case '-':\n      return n1 - n2;\n    case '*':\n      return n1 * n2;\n    case '/':\n      return n1 / n2;\n    case '%':\n      return n1 % n2;\n    case '^':\n      return Math.pow(n1, n2);\n    case 'abs':\n      return Math.abs(n1);\n    case 'floor':\n      return Math.floor(n1);\n    case 'round':\n      return Math.round(n1);\n    case 'ceil':\n      return Math.ceil(n1);\n    case 'sin':\n      return Math.sin(n1);\n    case 'cos':\n      return Math.cos(n1);\n    case 'atan':\n      return n2 === -1 ? Math.atan(n1) : Math.atan2(n1, n2);\n    case 'min':\n      return Math.min(n1, n2);\n    case 'max':\n      return Math.max(n1, n2);\n    case 'log10':\n      return Math.log(n1);\n    case 'log2':\n      return Math.log2(n1);\n    default:\n      console.warn('Calculate symbol err! Return default 0');\n      return 0;\n  }\n}\n\n/**\n * 根据表达式计算\n * @param express\n * @param bandsData\n */\nexport function calculate(express, bandsData) {\n  var _bandsData$ = bandsData[0],\n    width = _bandsData$.width,\n    height = _bandsData$.height;\n  var dataArray = bandsData.map(function (band) {\n    return band.rasterData;\n  });\n  var length = width * height;\n  var rasterData = [];\n  var originExp = JSON.stringify(express);\n  for (var i = 0; i < length; i++) {\n    var exp = JSON.parse(originExp);\n    // 将表达式中的 ['band', 0]、['band', 1] 等替换为实际的栅格数据\n    var expResult = spellExpress(exp, dataArray, i);\n    if (typeof expResult === 'number') {\n      // exp: ['band', 0] => exp: 2 ...\n      // exp 直接指定了波段值，替换完后直接就是数值了，无需计算\n      rasterData.push(expResult);\n    } else {\n      var result = calculateExpress(exp);\n      rasterData.push(result);\n    }\n  }\n  return rasterData;\n}\n/**\n * 将表达式中的指定波段替换为对应波段的栅格数据\n * @param express\n * @param dataArray\n * @param index\n */\nexport function spellExpress(express, dataArray, index) {\n  /**\n   * 用户直接指定波段数值，无需计算\n   */\n  if (express.length === 2 && express[0] === 'band' && typeof express[1] === 'number') {\n    try {\n      return dataArray[express[1]][index];\n    } catch (err) {\n      console.warn('Raster Data err!');\n      return 0;\n    }\n  }\n  express.map(function (e, i) {\n    if (Array.isArray(e) && e.length > 0) {\n      switch (e[0]) {\n        case 'band':\n          try {\n            express[i] = dataArray[e[1]][index];\n          } catch (err) {\n            console.warn('Raster Data err!');\n            express[i] = 0;\n          }\n          break;\n        default:\n          spellExpress(e, dataArray, index);\n      }\n    }\n  });\n}\nexport function formatExpress(express) {\n  var _express = _slicedToArray(express, 3),\n    symbol1 = _express[0],\n    _express$ = _express[1],\n    symbol2 = _express$ === void 0 ? -1 : _express$,\n    _express$2 = _express[2],\n    symbol3 = _express$2 === void 0 ? -1 : _express$2;\n  if (symbol1 === undefined) {\n    console.warn('Express err!');\n    return ['+', 0, 0];\n  }\n  var symbol = symbol1.replace(/\\s+/g, '');\n  return [symbol, symbol2, symbol3];\n}\nexport function calculateExpress(express) {\n  var formatExp = formatExpress(express);\n  var str = formatExp[0];\n  var left = formatExp[1];\n  var right = formatExp[2];\n  if (Array.isArray(left)) {\n    left = calculateExpress(express[1]);\n  }\n  if (Array.isArray(right)) {\n    right = calculateExpress(express[2]);\n  }\n  return mathematical(str, left, right);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}