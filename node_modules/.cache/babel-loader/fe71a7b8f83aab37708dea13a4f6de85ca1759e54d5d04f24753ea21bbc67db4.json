{"ast":null,"code":"import { deepAssign, flow } from '../../../utils';\nimport { basicFunnel } from './basic';\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var _b = options.data,\n    data = _b === void 0 ? [] : _b,\n    yField = options.yField;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var seriesField = options.seriesField,\n    isTransposed = options.isTransposed,\n    showFacetTitle = options.showFacetTitle;\n  chart.facet('rect', {\n    fields: [seriesField],\n    padding: [isTransposed ? 0 : 32, 10, 0, 10],\n    showTitle: showFacetTitle,\n    eachView: function (view, facet) {\n      basicFunnel(deepAssign({}, params, {\n        chart: view,\n        options: {\n          data: facet.data\n        }\n      }));\n    }\n  });\n  return params;\n}\n/**\n * 分面漏斗\n * @param chart\n * @param options\n */\nexport function facetFunnel(params) {\n  return flow(field, geometry)(params);\n}","map":{"version":3,"names":["deepAssign","flow","basicFunnel","field","params","chart","options","_b","data","yField","scale","_a","sync","geometry","seriesField","isTransposed","showFacetTitle","facet","fields","padding","showTitle","eachView","view","facetFunnel"],"sources":["../../../../src/plots/funnel/geometries/facet.ts"],"sourcesContent":["import { Params } from '../../../core/adaptor';\nimport { deepAssign, flow } from '../../../utils';\nimport { FunnelOptions } from '../types';\nimport { basicFunnel } from './basic';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { seriesField, isTransposed, showFacetTitle } = options;\n\n  chart.facet('rect', {\n    fields: [seriesField],\n    padding: [isTransposed ? 0 : 32, 10, 0, 10],\n    showTitle: showFacetTitle,\n    eachView(view, facet) {\n      basicFunnel(\n        deepAssign({}, params, {\n          chart: view,\n          options: {\n            data: facet.data,\n          },\n        })\n      );\n    },\n  });\n\n  return params;\n}\n\n/**\n * 分面漏斗\n * @param chart\n * @param options\n */\nexport function facetFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry)(params);\n}\n"],"mappings":"AACA,SAASA,UAAU,EAAEC,IAAI,QAAQ,gBAAgB;AAEjD,SAASC,WAAW,QAAQ,SAAS;AAErC;;;;AAIA,SAASC,KAAKA,CAACC,MAA6B;;EAClC,IAAAC,KAAK,GAAcD,MAAM,CAAAC,KAApB;IAAEC,OAAO,GAAKF,MAAM,CAAAE,OAAX;EACd,IAAAC,EAAA,GAAsBD,OAAO,CAAAE,IAApB;IAATA,IAAI,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IAAEE,MAAM,GAAKH,OAAO,CAAAG,MAAZ;EACzB;EACAJ,KAAK,CAACG,IAAI,CAACA,IAAI,CAAC;EAChBH,KAAK,CAACK,KAAK,EAAAC,EAAA,OACTA,EAAA,CAACF,MAAM,IAAG;IACRG,IAAI,EAAE;GACP,E,IACD;EACF,OAAOR,MAAM;AACf;AAEA;;;;AAIA,SAASS,QAAQA,CAACT,MAA6B;EACrC,IAAAC,KAAK,GAAcD,MAAM,CAAAC,KAApB;IAAEC,OAAO,GAAKF,MAAM,CAAAE,OAAX;EACd,IAAAQ,WAAW,GAAmCR,OAAO,CAAAQ,WAA1C;IAAEC,YAAY,GAAqBT,OAAO,CAAAS,YAA5B;IAAEC,cAAc,GAAKV,OAAO,CAAAU,cAAZ;EAEjDX,KAAK,CAACY,KAAK,CAAC,MAAM,EAAE;IAClBC,MAAM,EAAE,CAACJ,WAAW,CAAC;IACrBK,OAAO,EAAE,CAACJ,YAAY,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3CK,SAAS,EAAEJ,cAAc;IACzBK,QAAQ,WAAAA,CAACC,IAAI,EAAEL,KAAK;MAClBf,WAAW,CACTF,UAAU,CAAC,EAAE,EAAEI,MAAM,EAAE;QACrBC,KAAK,EAAEiB,IAAI;QACXhB,OAAO,EAAE;UACPE,IAAI,EAAES,KAAK,CAACT;;OAEf,CAAC,CACH;IACH;GACD,CAAC;EAEF,OAAOJ,MAAM;AACf;AAEA;;;;;AAKA,OAAM,SAAUmB,WAAWA,CAACnB,MAA6B;EACvD,OAAOH,IAAI,CAACE,KAAK,EAAEU,QAAQ,CAAC,CAACT,MAAM,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}