{"ast":null,"code":"\"use strict\";\n\n/**\n * @fileOverview grid layout\n * @author shiwu.wyy@antfin.com\n * this algorithm refers to <cytoscape.js> - https://github.com/cytoscape/cytoscape.js/\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridLayout = void 0;\nvar util_1 = require(\"../util\");\nvar base_1 = require(\"./base\");\n/**\n * 网格布局\n */\nvar GridLayout = /** @class */function (_super) {\n  __extends(GridLayout, _super);\n  function GridLayout(options) {\n    var _this = _super.call(this) || this;\n    /** 布局起始点 */\n    _this.begin = [0, 0];\n    /** prevents node overlap, may overflow boundingBox if not enough space */\n    _this.preventOverlap = true;\n    /** extra spacing around nodes when preventOverlap: true */\n    _this.preventOverlapPadding = 10;\n    /** uses all available space on false, uses minimal space on true */\n    _this.condense = false;\n    /** a sorting function to order the nodes; e.g. function(a, b){ return a.datapublic ('weight') - b.data('weight') } */\n    _this.sortBy = \"degree\";\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.row = 0;\n    _this.col = 0;\n    _this.cellWidth = 0;\n    _this.cellHeight = 0;\n    _this.cellUsed = {};\n    _this.id2manPos = {};\n    /** 迭代结束的回调函数 */\n    _this.onLayoutEnd = function () {};\n    _this.updateCfg(options);\n    return _this;\n  }\n  GridLayout.prototype.getDefaultCfg = function () {\n    return {\n      begin: [0, 0],\n      preventOverlap: true,\n      preventOverlapPadding: 10,\n      condense: false,\n      rows: undefined,\n      cols: undefined,\n      position: undefined,\n      sortBy: \"degree\",\n      nodeSize: 30\n    };\n  };\n  /**\n   * 执行布局\n   */\n  GridLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n      edges = self.edges,\n      begin = self.begin;\n    var n = nodes.length;\n    if (n === 0) {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return {\n        nodes: nodes,\n        edges: edges\n      };\n    }\n    if (n === 1) {\n      nodes[0].x = begin[0];\n      nodes[0].y = begin[1];\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return {\n        nodes: nodes,\n        edges: edges\n      };\n    }\n    var sortBy = self.sortBy,\n      width = self.width,\n      height = self.height;\n    var condense = self.condense,\n      preventOverlapPadding = self.preventOverlapPadding,\n      preventOverlap = self.preventOverlap,\n      paramNodeSpacing = self.nodeSpacing,\n      paramNodeSize = self.nodeSize;\n    var layoutNodes = [];\n    nodes.forEach(function (node) {\n      layoutNodes.push(node);\n    });\n    var nodeIdxMap = {};\n    layoutNodes.forEach(function (node, i) {\n      nodeIdxMap[node.id] = i;\n    });\n    if (sortBy === \"degree\" || !(0, util_1.isString)(sortBy) || layoutNodes[0][sortBy] === undefined) {\n      sortBy = \"degree\";\n      if ((0, util_1.isNaN)(nodes[0].degree)) {\n        var values_1 = (0, util_1.getDegree)(layoutNodes.length, nodeIdxMap, edges);\n        layoutNodes.forEach(function (node, i) {\n          node.degree = values_1[i].all;\n        });\n      }\n    }\n    // sort nodes by value\n    layoutNodes.sort(function (n1, n2) {\n      return n2[sortBy] - n1[sortBy];\n    });\n    if (!width && typeof window !== \"undefined\") {\n      width = window.innerWidth;\n    }\n    if (!height && typeof window !== \"undefined\") {\n      height = window.innerHeight;\n    }\n    var oRows = self.rows;\n    var oCols = self.cols != null ? self.cols : self.columns;\n    self.cells = n;\n    // if rows or columns were set in self, use those values\n    if (oRows != null && oCols != null) {\n      self.rows = oRows;\n      self.cols = oCols;\n    } else if (oRows != null && oCols == null) {\n      self.rows = oRows;\n      self.cols = Math.ceil(self.cells / self.rows);\n    } else if (oRows == null && oCols != null) {\n      self.cols = oCols;\n      self.rows = Math.ceil(self.cells / self.cols);\n    } else {\n      // otherwise use the automatic values and adjust accordingly\t      // otherwise use the automatic values and adjust accordingly\n      // width/height * splits^2 = cells where splits is number of times to split width\n      self.splits = Math.sqrt(self.cells * self.height / self.width);\n      self.rows = Math.round(self.splits);\n      self.cols = Math.round(self.width / self.height * self.splits);\n    }\n    self.rows = Math.max(self.rows, 1);\n    self.cols = Math.max(self.cols, 1);\n    if (self.cols * self.rows > self.cells) {\n      // otherwise use the automatic values and adjust accordingly\n      // if rounding was up, see if we can reduce rows or columns\n      var sm = self.small();\n      var lg = self.large();\n      // reducing the small side takes away the most cells, so try it first\n      if ((sm - 1) * lg >= self.cells) {\n        self.small(sm - 1);\n      } else if ((lg - 1) * sm >= self.cells) {\n        self.large(lg - 1);\n      }\n    } else {\n      // if rounding was too low, add rows or columns\n      while (self.cols * self.rows < self.cells) {\n        var sm = self.small();\n        var lg = self.large();\n        // try to add to larger side first (adds less in multiplication)\n        if ((lg + 1) * sm >= self.cells) {\n          self.large(lg + 1);\n        } else {\n          self.small(sm + 1);\n        }\n      }\n    }\n    self.cellWidth = width / self.cols;\n    self.cellHeight = height / self.rows;\n    if (condense) {\n      self.cellWidth = 0;\n      self.cellHeight = 0;\n    }\n    if (preventOverlap || paramNodeSpacing) {\n      var nodeSpacing_1 = (0, util_1.getFuncByUnknownType)(10, paramNodeSpacing);\n      var nodeSize_1 = (0, util_1.getFuncByUnknownType)(30, paramNodeSize, false);\n      layoutNodes.forEach(function (node) {\n        if (!node.x || !node.y) {\n          // for bb\n          node.x = 0;\n          node.y = 0;\n        }\n        var res = nodeSize_1(node) || 30;\n        var nodeW;\n        var nodeH;\n        if ((0, util_1.isArray)(res)) {\n          nodeW = res[0];\n          nodeH = res[1];\n        } else {\n          nodeW = res;\n          nodeH = res;\n        }\n        var p = nodeSpacing_1 !== undefined ? nodeSpacing_1(node) : preventOverlapPadding;\n        var w = nodeW + p;\n        var h = nodeH + p;\n        self.cellWidth = Math.max(self.cellWidth, w);\n        self.cellHeight = Math.max(self.cellHeight, h);\n      });\n    }\n    self.cellUsed = {}; // e.g. 'c-0-2' => true\n    // to keep track of current cell position\n    self.row = 0;\n    self.col = 0;\n    // get a cache of all the manual positions\n    self.id2manPos = {};\n    for (var i = 0; i < layoutNodes.length; i++) {\n      var node = layoutNodes[i];\n      var rcPos = void 0;\n      if (self.position) {\n        rcPos = self.position(node);\n      }\n      if (rcPos && (rcPos.row !== undefined || rcPos.col !== undefined)) {\n        // must have at least row or col def'd\n        var pos = {\n          row: rcPos.row,\n          col: rcPos.col\n        };\n        if (pos.col === undefined) {\n          // find unused col\n          pos.col = 0;\n          while (self.used(pos.row, pos.col)) {\n            pos.col++;\n          }\n        } else if (pos.row === undefined) {\n          // find unused row\n          pos.row = 0;\n          while (self.used(pos.row, pos.col)) {\n            pos.row++;\n          }\n        }\n        self.id2manPos[node.id] = pos;\n        self.use(pos.row, pos.col);\n      }\n      self.getPos(node);\n    }\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      edges: edges,\n      nodes: layoutNodes\n    };\n  };\n  GridLayout.prototype.small = function (val) {\n    var self = this;\n    var res;\n    var rows = self.rows || 5;\n    var cols = self.cols || 5;\n    if (val == null) {\n      res = Math.min(rows, cols);\n    } else {\n      var min = Math.min(rows, cols);\n      if (min === self.rows) {\n        self.rows = val;\n      } else {\n        self.cols = val;\n      }\n    }\n    return res;\n  };\n  GridLayout.prototype.large = function (val) {\n    var self = this;\n    var res;\n    var rows = self.rows || 5;\n    var cols = self.cols || 5;\n    if (val == null) {\n      res = Math.max(rows, cols);\n    } else {\n      var max = Math.max(rows, cols);\n      if (max === self.rows) {\n        self.rows = val;\n      } else {\n        self.cols = val;\n      }\n    }\n    return res;\n  };\n  GridLayout.prototype.used = function (row, col) {\n    var self = this;\n    return self.cellUsed[\"c-\".concat(row, \"-\").concat(col)] || false;\n  };\n  GridLayout.prototype.use = function (row, col) {\n    var self = this;\n    self.cellUsed[\"c-\".concat(row, \"-\").concat(col)] = true;\n  };\n  GridLayout.prototype.moveToNextCell = function () {\n    var self = this;\n    var cols = self.cols || 5;\n    self.col++;\n    if (self.col >= cols) {\n      self.col = 0;\n      self.row++;\n    }\n  };\n  GridLayout.prototype.getPos = function (node) {\n    var self = this;\n    var begin = self.begin,\n      cellWidth = self.cellWidth,\n      cellHeight = self.cellHeight;\n    var x;\n    var y;\n    // see if we have a manual position set\n    var rcPos = self.id2manPos[node.id];\n    if (rcPos) {\n      x = rcPos.col * cellWidth + cellWidth / 2 + begin[0];\n      y = rcPos.row * cellHeight + cellHeight / 2 + begin[1];\n    } else {\n      // otherwise set automatically\n      while (self.used(self.row, self.col)) {\n        self.moveToNextCell();\n      }\n      x = self.col * cellWidth + cellWidth / 2 + begin[0];\n      y = self.row * cellHeight + cellHeight / 2 + begin[1];\n      self.use(self.row, self.col);\n      self.moveToNextCell();\n    }\n    node.x = x;\n    node.y = y;\n  };\n  GridLayout.prototype.getType = function () {\n    return \"grid\";\n  };\n  return GridLayout;\n}(base_1.Base);\nexports.GridLayout = GridLayout;","map":{"version":3,"names":["require","util_1","base_1","GridLayout","_super","__extends","options","_this","call","begin","preventOverlap","preventOverlapPadding","condense","sortBy","nodes","edges","width","height","row","col","cellWidth","cellHeight","cellUsed","id2manPos","onLayoutEnd","updateCfg","prototype","getDefaultCfg","rows","undefined","cols","position","nodeSize","execute","self","n","length","x","y","paramNodeSpacing","nodeSpacing","paramNodeSize","layoutNodes","forEach","node","push","nodeIdxMap","i","id","isString","isNaN","degree","values_1","getDegree","all","sort","n1","n2","window","innerWidth","innerHeight","oRows","oCols","columns","cells","Math","ceil","splits","sqrt","round","max","sm","small","lg","large","nodeSpacing_1","getFuncByUnknownType","nodeSize_1","res","nodeW","nodeH","isArray","p","w","h","rcPos","pos","used","use","getPos","val","min","concat","moveToNextCell","getType","Base","exports"],"sources":["../../src/layout/grid.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}