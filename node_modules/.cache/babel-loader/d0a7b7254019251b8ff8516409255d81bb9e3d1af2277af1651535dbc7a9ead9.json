{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport * as chart from './chart';\nimport { emptyCenterBar1 } from './chart';\nimport { addListOption, changeTextColor, getDiv, getValue, selectTxt } from './base';\nimport { color, compareColor, typeColors, localhost } from './config';\nimport { GaodeMap, LineLayer, PointLayer, Popup, Scene } from \"@antv/l7\";\nimport { bars, bars2, bars3, feeTransFrom, liquid, pie, words, words2 } from \"./chart\";\nimport axios from \"axios\";\n// 引入HTML2Canvas库\nimport html2canvas from 'html2canvas';\n\n/**\n * 全局变量\n * */\nlet scene, l1, l2, l3, l4, dChart;\nlet yljgml = '盐酸坦索罗辛缓释胶囊'; // 医药目录名称\nlet jzid = \"MDTRT_ID_1\"; // 就诊ID\nlet ybjgmls = [\"麻醉中检测\", \"一体式吸氧\", \"低流量吸氧\"]; // 选中的医药目录名称列表\n\nexport default {\n  name: \"app\",\n  components: {},\n  data() {\n    return {\n      visL: 1,\n      visR: 1,\n      jzid: '',\n      /**\n       * 左第一页\n       * */\n      tzxl1: [],\n      // 人员信息特征序列\n      checkboxGroup1: ['性别', '民族', '年龄'],\n      // 初始化人员信息分类特征序列\n      colors1: [\n      // '#89DAC8', '#EAC1CA', '#F4F4B5', '#CF6D73', '#CBE0E0',\n      // '#B4EEF4', '#99C08F', '#93DCF2', '#B5F4B5', '#B5F4F4',\n      typeColors[0], typeColors[1], typeColors[2], typeColors[3], typeColors[4], typeColors[5], typeColors[6], typeColors[7], typeColors[8], typeColors[9]],\n      // 分类色系\n      sxValues1: [],\n      sxValueRange1: {},\n      // 人员信息筛选内容范围\n      sxValuesMin1: 0,\n      sxValuesMax1: 1,\n      fzbsJzid: [],\n      // 当前标记的分组就诊ID\n      fzbsVis: false,\n      // 是否显示当前分组的就诊ID\n      fzbsValue: 0,\n      // 当前标记的分组的分组组号码\n      ryxxflL: [0, 1, 2, 3, 4],\n      // 人员信息分类序列\n      ryxxflGroup: [1],\n      // 已选择人员信息分类\n      r1ElseChartVis: false,\n      /**\n       * 左第二页\n       * */\n      tzxl2: [],\n      // 行为识别特征序列\n      checkboxGroup2: ['全自费占比', '超限价自费占比', '符合范围占比', '先行自付占比'],\n      // 初始化行为识别特征序列\n      colors2: [\n      // '#89DAC8', '#EAC1CA', '#F4F4B5', '#CF6D73', '#CBE0E0',\n      // '#B4EEF4', '#99C08F', '#93DCF2', '#B5F4B5', '#B5F4F4',\n      typeColors[0], typeColors[1], typeColors[2], typeColors[3], typeColors[4], typeColors[5], typeColors[6], typeColors[7], typeColors[8], typeColors[9]],\n      // 分类色系\n      sxValues2: [],\n      sxValueRange2: {},\n      // 行为识别筛选内容范围\n      sxValuesMin2: 0,\n      sxValuesMax2: 1,\n      fzbsflL: [1, 2, 3, 4],\n      // 人员信息分类序列\n      fzbsflGroup: [1],\n      // 已选择人员信息分类\n      r2ElseChartVis: false,\n      /**\n       * 右第三页\n       * */\n      jzid1: [],\n      jzid2: []\n    };\n  },\n  methods: {\n    messageF(text) {\n      this.$notify({\n        title: '成功',\n        message: text,\n        type: 'success'\n      });\n    },\n    selectTxt(div) {\n      return selectTxt(div);\n    },\n    /**\n     * 菜单选取\n     * */\n    leftMenuClick(ev) {\n      this.visL = Number(ev);\n      if (Number(ev) !== 1) {\n        this.r1ElseChartVis = false;\n        this.fzbsVis = false;\n      } else if (Number(ev) !== 2) {\n        this.r2ElseChartVis = false;\n      }\n    },\n    rightMenuClick(ev) {\n      this.visR = Number(ev);\n    },\n    /**\n     * 左第一页\n     * */\n    tzxl1SelInit() {\n      fetch(localhost + '/tzxl1').then(res => res.json()).then(data => {\n        this.tzxl1 = data['tzxl1'];\n        this.tzxled1();\n      });\n    },\n    // 人员信息分类特征序列下拉框初始化\n    tzxl1Selected() {},\n    // 选择特征序列后\n    tzxled1() {\n      fetch(localhost + 'tzxled1').then(res => res.json()).then(data => {\n        this.checkboxGroup1 = data['tzxl1'];\n      });\n    },\n    changeTextColor(id) {\n      changeTextColor(id);\n      if (id.indexOf('color1_') !== -1) {\n        this.colors1[Number(id.replace('color1_', '')) - 1] = getValue(id);\n      } else if (id.indexOf('color2_') !== -1) {\n        this.colors2[Number(id.replace('color2_', '')) - 1] = getValue(id);\n      }\n    },\n    colors1Init() {\n      for (let i in this.colors1) {\n        let id = 'color1_' + (Number(i) + 1).toString();\n        getDiv(id).value = this.colors1[i];\n        changeTextColor(id);\n      }\n    },\n    // 人员信息分类编码色系初始化\n    classify1() {\n      fetch(localhost + '/classify1', {\n        method: 'post',\n        body: JSON.stringify({\n          'headers': this.checkboxGroup1,\n          'classifyNum': getValue('classifyNum'),\n          'randomState': getValue('randomState'),\n          'classifyType': getValue('classifyType')\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.messageF(data['message']);\n        this.sxHeader1Init();\n        this.data1Gl();\n        this.r1Init();\n        this.ryxxflGroup = [];\n        this.ryxxflL = [];\n        for (let i = 0; i < Number(getValue('classifyNum')); i += 1) {\n          this.ryxxflL.push(i);\n        }\n      });\n    },\n    // 人员信息分类\n    sxHeader1Init() {\n      fetch(localhost + 'sxHeader1').then(res => res.json()).then(data => {\n        addListOption('sxHeader1', data['headers']);\n        this.sxValues1 = [];\n        this.sxValueRange1 = {};\n        this.sxValuesMin1 = 0;\n        this.sxValuesMax1 = 1;\n        for (let i in data['headers']) {\n          let header = data['headers'][i];\n          fetch(localhost + header + '/sxValues1').then(res => res.json()).then(data => {\n            this.sxValueRange1[header] = [data['min'], data['max']];\n          });\n        }\n        this.sxValue1Init();\n      });\n    },\n    // 人员信息筛选字段\n    sxValue1Init() {\n      fetch(localhost + selectTxt('sxHeader1') + '/sxValue1').then(res => res.json()).then(data => {\n        addListOption('sxValue1', data['values']);\n        this.sxValues1Init();\n      });\n    },\n    // 人员信息筛选值\n    sxValues1Init() {\n      let header = selectTxt('sxHeader1');\n      this.sxValues1 = this.sxValueRange1[header];\n      this.sxValuesMin1 = this.sxValues1[0];\n      this.sxValuesMax1 = this.sxValues1[1];\n    },\n    // 范围更新\n    sxValues1Change() {\n      let header = selectTxt('sxHeader1');\n      this.sxValueRange1[header] = this.sxValues1;\n    },\n    // 筛选范围修改\n    data1Gl() {\n      fetch(localhost + '/data1Gl', {\n        method: 'post',\n        body: JSON.stringify({\n          'sxValueRange': this.sxValueRange1\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.messageF(data['message']);\n        this.r1Init();\n      });\n    },\n    // 人员信息聚类数据过滤\n    sxValuesChangeWith_data1Gl() {\n      this.sxValues1Change();\n      this.data1Gl();\n    },\n    // 滑块过滤\n    r1Init() {\n      fetch(localhost + 'r1').then(res => res.json()).then(data => {\n        this.fzbsJzid = [];\n        l1.show();\n        l2.hide();\n        l3.hide();\n        l4.hide();\n        l1.setData(data);\n      });\n    },\n    // 人员信息聚类画像更新\n    clickR1Point(ev, flag) {\n      this.r1ElseChartVis = true;\n      if (flag) {\n        scene.setCenter([ev.feature['x'], ev.feature['y']]); // 设置视野中心\n      }\n\n      fetch(localhost + ev.feature['就诊ID'] + '/' + 'readFzbs').then(res => res.json()).then(data => {\n        let group = data['group'];\n        let div = `<span >${ev.feature['就诊ID']}</span>` + `<br>` + `<div>分组标识: </div><input id=\"fzbs\"/><button id=\"fzbsEnter\"\">确认</button>` + `<br>` + `<div id=\"R1chart3\" style=\"width: 200px; height: 200px\"></div>`;\n        scene.addPopup(new Popup({\n          offsets: [0, 0],\n          closeButton: false\n        }).setLnglat(ev.lngLat).setHTML(div));\n        dChart = chart.radar('R1chart3', compareColor, ev['chart3']);\n        dChart.render();\n        /**\n         * 其余图表\n         * */\n        this.jzid = ev.feature['就诊ID'];\n        let fa = getDiv('R1chart1');\n        let texts = ['报销平均频率', '报销最大频率', '报销最大金额', '小额多次'];\n        for (let i = 0; i < 2; i += 1) {\n          for (let j = 0; j < 2; j += 1) {\n            let child = document.createElement('div');\n            child.id = 'R1chart1_' + (i * 2 + j).toString();\n            child.style.position = 'absolute';\n            child.style.width = '49%';\n            child.style.height = '49%';\n            child.style.left = (i * 50).toString() + '%';\n            child.style.top = (j * 50).toString() + '%';\n            fa.appendChild(child);\n            dChart = liquid(child.id, color, ev['chart1'][texts[Number(i * 2 + j)]], texts[Number(i * 2 + j)]);\n            dChart.render();\n          }\n        }\n        dChart = feeTransFrom('R1chart2', compareColor, ev['chart2']);\n        dChart.on('click', e => {\n          yljgml = e['item']['_cfg']['id'];\n          this.rank1();\n        });\n        getDiv('fzbs').value = group;\n        document.getElementById('fzbsEnter').onclick = function () {\n          fetch(localhost + ev.feature['就诊ID'] + '/' + getValue('fzbs') + '/addFzbs').then(res => res.json()).then(() => {});\n        };\n        /**\n         * 更新分组就诊ID列表\n         * */\n        l1.on('dblclick', () => {\n          this.fzbsVis = true;\n          if (this.fzbsJzid.indexOf(ev.feature['就诊ID']) === -1) {\n            this.fzbsJzid.push(ev.feature['就诊ID']);\n          }\n        });\n      });\n    },\n    // 点击图层中的点\n    classify1Socre() {\n      fetch(localhost + '/classify1Score', {\n        method: 'post',\n        body: JSON.stringify({\n          'headers': this.checkboxGroup1,\n          'classifyNum': getValue('classifyNum'),\n          'randomState': getValue('randomState')\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        dChart = chart.line1('r2_1', compareColor, data['score']);\n        dChart.render();\n        let div = getDiv('r2_2');\n        let clsNum = 2;\n        for (let i = 0; i < 2; i++) {\n          for (let j = 0; j < 5; j++) {\n            let idStr = clsNum.toString();\n            let child = document.createElement('div');\n            child.style.position = 'absolute';\n            child.style.width = '19%';\n            child.style.height = '49%';\n            child.style.left = (j * 20).toString() + '%';\n            child.style.top = (i * 50).toString() + '%';\n            child.style.borderWidth = '1px';\n            child.style.borderStyle = 'groove';\n            let content = document.createElement('div');\n            content.style.position = 'absolute';\n            content.style.width = '100%';\n            content.style.height = '90%';\n            content.style.left = '0';\n            content.style.top = '10%';\n            content.id = 'r2_2_' + idStr;\n            let title = document.createElement('div');\n            title.innerHTML = '分类数为' + idStr;\n            title.style.position = 'absolute';\n            title.style.width = '100%';\n            title.style.height = '10%';\n            title.style.left = '0';\n            title.style.top = '0';\n            child.appendChild(content);\n            child.appendChild(title);\n            div.appendChild(child);\n            dChart = chart.scatter1(content.id, this.colors1, data['datas'][idStr]);\n            dChart.render();\n            clsNum += 1;\n          }\n        }\n      });\n    },\n    // 人员信息聚类分数识别\n    handleClose_fzbsJzid(tag) {\n      this.fzbsJzid.splice(this.fzbsJzid.indexOf(tag), 1);\n    },\n    // 删除当前分组的就诊ID\n    fzbj() {\n      fetch(localhost + '/fzbj', {\n        method: 'post',\n        body: JSON.stringify({\n          'jzid': this.fzbsJzid,\n          'fzbsValue': this.fzbsValue\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.messageF(data['message']);\n        this.fzbsJzid = [];\n      });\n    },\n    //分组标记\n    rankHeaders1() {\n      fetch(localhost + 'rankHeaders1').then(res => res.json()).then(data => {\n        addListOption('rankHeaders1', data['rankHeaders1']);\n        this.rank1();\n      });\n    },\n    // 更新rank字段\n    rank1() {\n      fetch(localhost + '/rank1', {\n        method: 'post',\n        body: JSON.stringify({\n          'yljgml': yljgml,\n          'ratio': selectTxt('rankHeaders1'),\n          'L': this.ryxxflGroup\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        getDiv('t_rank1').innerHTML = yljgml + selectTxt('rankHeaders1') + '排行画像';\n        dChart = chart.bar1('rank1', color, data);\n        dChart.render();\n        dChart.on('click', ev => {\n          let id = ev['data']['data']['name'];\n          fetch(localhost + id + '/rank1Click', {\n            method: 'post',\n            body: JSON.stringify({\n              'ybjgmls': ybjgmls\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(res => res.json()).then(data => {\n            this.clickR1Point(data, true);\n          });\n        });\n        dChart.on('dblclick', ev => {\n          let id = ev['data']['data']['name'];\n          this.fzbsVis = true;\n          if (this.fzbsJzid.indexOf(id) === -1) {\n            this.fzbsJzid.push(id);\n          }\n        });\n      });\n    },\n    // 排名视图1\n\n    /**\n     * 左第二页\n     * */\n    tzxl2SelInit() {\n      fetch(localhost + '/tzxl2').then(res => res.json()).then(data => {\n        this.tzxl2 = data['tzxl2'];\n        this.tzxled2();\n      });\n    },\n    //行为识别特征序列下拉框初始化\n    tzxl2Selected() {},\n    // 选择特征序列后\n    tzxled2() {\n      fetch(localhost + 'tzxled2').then(res => res.json()).then(data => {\n        this.checkboxGroup2 = data['tzxl2'];\n      });\n    },\n    colors2Init() {\n      for (let i in this.colors2) {\n        let id = 'color2_' + (Number(i) + 1).toString();\n        getDiv(id).value = this.colors2[i];\n        changeTextColor(id);\n      }\n    },\n    // 行为识别分组分类编码色系初始化\n    classify2() {\n      fetch(localhost + '/classify2', {\n        method: 'post',\n        body: JSON.stringify({\n          'headers': this.checkboxGroup2,\n          'defineType': selectTxt('defineType'),\n          'defineFun': selectTxt('defineFun')\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.messageF(data['message']);\n        this.fzbsflL = data['fzbsflL'];\n        this.fzbsflGroup = [this.fzbsflL[0]];\n        this.sxHeader2Init();\n        this.data2Gl();\n        this.r2Init();\n        /**\n         * 簇类对比\n         * */\n        this.r3_rela();\n      });\n    },\n    // 行为识别\n    sxHeader2Init() {\n      fetch(localhost + 'sxHeader2').then(res => res.json()).then(data => {\n        addListOption('sxHeader2', data['headers']);\n        for (let i in data['headers']) {\n          let header = data['headers'][i];\n          fetch(localhost + header + '/sxValues2').then(res => res.json()).then(data => {\n            this.sxValueRange2[header] = [data['min'], data['max']];\n          });\n        }\n        this.sxValue2Init();\n      });\n    },\n    // 行为识别筛选字段\n    sxValue2Init() {\n      fetch(localhost + selectTxt('sxHeader2') + '/sxValue2').then(res => res.json()).then(data => {\n        addListOption('sxValue2', data['values']);\n        this.sxValues2Init();\n      });\n    },\n    // 行为识别筛选值\n    sxValues2Init() {\n      let header = selectTxt('sxHeader2');\n      this.sxValues2 = this.sxValueRange2[header];\n      this.sxValuesMin2 = this.sxValues2[0];\n      this.sxValuesMax2 = this.sxValues2[1];\n    },\n    // 范围更新\n    sxValues2Change() {\n      let header = selectTxt('sxHeader2');\n      this.sxValueRange2[header] = this.sxValues2;\n    },\n    // 筛选范围修改\n    data2Gl() {\n      fetch(localhost + '/data2Gl', {\n        method: 'post',\n        body: JSON.stringify({\n          'sxValueRange': this.sxValueRange2\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.messageF(data['message']);\n        this.r2Init();\n      });\n    },\n    // 行为识别数据过滤\n    sxValuesChangeWith_data2Gl() {\n      this.sxValues2Change();\n      this.data2Gl();\n    },\n    // 滑块过滤\n    r2Init() {\n      fetch(localhost + 'r2').then(res => res.json()).then(data => {\n        l1.hide();\n        l2.show();\n        l3.hide();\n        l4.hide();\n        l2.setData(data);\n      });\n    },\n    // 行为识别画像更新\n    clickR2Point(ev, flag) {\n      this.r2ElseChartVis = true;\n      if (flag) {\n        scene.setCenter([ev.feature['x'], ev.feature['y']]);\n      }\n      /**\n       * R2chart1\n       * */\n      getDiv('tR2chart1').innerHTML = jzid + ' 报销医药画像';\n      dChart = bars3('R2chart1', compareColor, ev['s1']);\n      dChart.render();\n      dChart.on('plot:click', ev => {\n        yljgml = ev['data']['data']['name1'];\n        fetch(localhost + jzid + '/' + yljgml + '/rank2Click_s2').then(res => res.json()).then(data => {\n          getDiv('tR2chart2').innerHTML = jzid + yljgml + '费用占比';\n          dChart = pie('R2chart2', typeColors, data['s2']);\n          dChart.render();\n        });\n      });\n      /**\n       * R2chart1\n       * */\n      getDiv('tR2chart2').innerHTML = jzid + yljgml + '费用占比';\n      getDiv('tR2chart2').style.fontSize = '14px';\n      dChart = pie('R2chart2', typeColors, ev['s2']);\n      dChart.render();\n      scene.addPopup(new Popup({\n        offsets: [0, 0],\n        closeButton: false\n      }).setLnglat(ev.lngLat).setHTML(`<span>${ev.feature['就诊ID']}</span>` + `<div>分组标识: </div><input id=\"fzbs\"/><button id=\"fzbsEnter\">校正</button>`));\n      getDiv('fzbs').value = ev.feature['分组标识'];\n      document.getElementById('fzbsEnter').onclick = function () {\n        fetch(localhost + ev.feature['就诊ID'] + '/' + getValue('fzbs') + '/initFzbs').then(res => res.json()).then(() => {});\n      };\n    },\n    rankHeaders2() {\n      fetch(localhost + 'rankHeaders2').then(res => res.json()).then(data => {\n        addListOption('rankHeaders2', data['rankHeaders2']);\n        this.rank2();\n      });\n    },\n    // 更新rank字段\n    rank2() {\n      fetch(localhost + '/rank2', {\n        method: 'post',\n        body: JSON.stringify({\n          'ratio': selectTxt('rankHeaders2'),\n          'L': this.fzbsflGroup\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        getDiv('t_rank2').innerHTML = selectTxt('rankHeaders2') + '排行画像';\n        dChart = chart.bar1('rank2', color, data);\n        dChart.render();\n        dChart.on('click', ev => {\n          let id = ev['data']['data']['name'];\n          fetch(localhost + id + '/' + yljgml + '/rank2Click').then(res => res.json()).then(data => {\n            this.clickR2Point(data, true);\n          });\n        });\n      });\n    },\n    // 排名视图2\n\n    /**\n     * 左第三页\n     * */\n    r3_rela() {\n      fetch(localhost + 'r3_rela').then(res => res.json()).then(data => {\n        addListOption('r3_rela', data['r3_rela']);\n        this.r3_size();\n      });\n    },\n    // r3的关系下拉框加载\n    r3_size() {\n      fetch(localhost + 'r3_size').then(res => res.json()).then(data => {\n        addListOption('r3_size', data['r3_size']);\n        fetch(localhost + selectTxt('r3_rela') + '/' + selectTxt('r3_size') + '/r3').then(res => res.json()).then(data => {\n          l3 = new PointLayer({}).source(data['s1'], {\n            parser: {\n              type: 'json',\n              x: 'x',\n              y: 'y'\n            }\n          }).shape('circle').size(selectTxt('r3_size'), [4, 10]).color('分组标识', this.colors2).active(true).style({\n            opacity: 0.9,\n            strokeWidth: 0\n          });\n          scene.addLayer(l3);\n          l4 = new LineLayer({\n            blend: 'normal'\n          }).source(data['s2'], {\n            parser: {\n              type: 'json',\n              x: 'x1',\n              y: 'y1',\n              x1: 'x2',\n              y1: 'y2'\n            }\n          }).size('size', [0.5, 2]).shape('line').color('color', this.colors2).animate(false).style({\n            opacity: 0.05\n          });\n          scene.addLayer(l4);\n          l3.hide();\n          l4.hide();\n          let div;\n          l3.on('mousemove', ev => {\n            let id = ev.feature['就诊ID'];\n            div = new Popup({\n              offsets: [0, 0],\n              closeButton: false\n            }).setLnglat(ev.lngLat).setHTML(`<div>就诊ID: ${id}</div>`);\n            scene.addPopup(div);\n          });\n          l3.on('click', ev => {\n            let id = ev.feature['就诊ID'];\n            if (this.jzid1.indexOf(id) === -1) {\n              this.jzid1.push(id);\n            }\n            this.r3l();\n            this.relaHeat(this.jzid1, 'l3_heat1');\n            fetch(localhost + '/bzmcWords', {\n              method: 'post',\n              body: JSON.stringify({\n                'jzidL': this.jzid1\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(res => res.json()).then(data => {\n              console.log(data);\n              dChart = words2('l3_words1', color, data);\n              dChart.render();\n            });\n          });\n          l3.on('contextmenu', ev => {\n            let id = ev.feature['就诊ID'];\n            if (this.jzid2.indexOf(id) === -1) {\n              this.jzid2.push(id);\n            }\n            this.r3r();\n            this.relaHeat(this.jzid2, 'l3_heat2');\n            fetch(localhost + '/bzmcWords', {\n              method: 'post',\n              body: JSON.stringify({\n                'jzidL': this.jzid2\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(res => res.json()).then(data => {\n              dChart = words2('l3_words2', color, data);\n              dChart.render();\n            });\n          });\n          l3.on('dblclick', ev => {\n            let id = ev.feature['就诊ID'];\n            if (this.jzid2.indexOf(id) === -1) {\n              this.jzid2.push(id);\n            }\n            this.r3r();\n            this.relaHeat(this.jzid2, 'l3_heat2');\n            fetch(localhost + '/bzmcWords', {\n              method: 'post',\n              body: JSON.stringify({\n                'jzidL': this.jzid2\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(res => res.json()).then(data => {\n              dChart = words('l3_words2', color, data);\n              dChart.render();\n            });\n          });\n        });\n      });\n    },\n    // r3的size下拉框加载\n    r3Init() {\n      fetch(localhost + selectTxt('r3_rela') + '/' + selectTxt('r3_size') + '/r3').then(res => res.json()).then(data => {\n        l1.hide();\n        l2.hide();\n        l3.show();\n        l4.show();\n        l3.setData(data['s1']);\n        l4.setData(data['s2']);\n        this.jzid1 = [];\n        this.jzid2 = [];\n      });\n    },\n    // 簇类对比画像更新\n    handleClose1(tag) {\n      this.jzid1.splice(this.jzid1.indexOf(tag), 1);\n      this.r3l();\n      this.relaHeat(this.jzid1, 'l3_heat1');\n    },\n    // 簇类1就诊ID删除\n    handleClose2(tag) {\n      this.jzid2.splice(this.jzid2.indexOf(tag), 1);\n      this.r3r();\n      this.relaHeat(this.jzid2, 'l3_heat2');\n    },\n    // 簇类2就诊ID删除\n    l3_scatter1() {\n      fetch(localhost + '/l3_scatter', {\n        method: 'post',\n        body: JSON.stringify({\n          'jzid': this.jzid1\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        dChart = chart.scatter2('l3_scatter1', ['#aaa', color[0]], data);\n        dChart.render();\n      });\n    },\n    l3_scatter2() {\n      fetch(localhost + '/l3_scatter', {\n        method: 'post',\n        body: JSON.stringify({\n          'jzid': this.jzid2\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        dChart = chart.scatter2('l3_scatter2', ['#aaa', color[0]], data);\n        dChart.render();\n      });\n    },\n    relaHeat(jzidL, id) {\n      fetch(localhost + '/relaHeat', {\n        method: 'post',\n        body: JSON.stringify({\n          'jzidL': jzidL\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        dChart = chart.headerMap(id, color, data);\n        dChart.render();\n      });\n    },\n    /**\n     * 右第三页\n     * */\n\n    relationHeader() {\n      return selectTxt('relationHeader');\n    },\n    r3() {\n      this.r3l();\n      this.r3r();\n    },\n    r3l() {\n      /**\n       * 簇类1\n       * */\n      this.r3_1(this.jzid1, 'dr3_1l');\n      this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l');\n      this.r3_3(this.jzid1, 'dr3_3l');\n      this.r3_4(this.jzid1, 'dr3_4l', 'tr3_4l');\n      this.l3_scatter1();\n    },\n    r3r() {\n      /**\n       * 簇类2\n       * */\n      this.r3_1(this.jzid2, 'dr3_1r');\n      this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r');\n      this.r3_3(this.jzid2, 'dr3_3r');\n      this.r3_4(this.jzid2, 'dr3_4r', 'tr3_4r');\n      this.l3_scatter2();\n    },\n    r3_1(jzidL, id) {\n      fetch(localhost + '/r3_1', {\n        method: 'post',\n        body: JSON.stringify({\n          'relationHeader': this.relationHeader(),\n          'jzidL': jzidL\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        dChart = emptyCenterBar1(id, compareColor, data);\n        dChart.render();\n        dChart.on('plot:click', ev => {\n          let kdks = ev['data']['data']['name2'];\n          this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l', kdks);\n          this.r3_3(this.jzid1, 'dr3_3l', kdks);\n          this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r', kdks);\n          this.r3_3(this.jzid2, 'dr3_3r', kdks);\n        });\n      });\n    },\n    r3_2(jzidL, id, tId, kdks = '麻醉苏醒室') {\n      let relationValue = kdks;\n      fetch(localhost + '/r3_2', {\n        method: 'post',\n        body: JSON.stringify({\n          'relationHeader': this.relationHeader(),\n          'relationValue': relationValue,\n          'ybjgmls': ybjgmls,\n          'jzidL': jzidL\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        getDiv(tId).innerHTML = relationValue + '医药开具数量情况';\n        dChart = words(id, compareColor, data);\n        dChart.render();\n        // 增加医药目录名称数量\n        dChart.on('click', ev => {\n          ybjgmls.push(ev['data']['data']['text']);\n          yljgml = ev['data']['data']['text'];\n          this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l', kdks);\n          this.r3_3(this.jzid1, 'dr3_3l', kdks);\n          this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r', kdks);\n          this.r3_3(this.jzid2, 'dr3_3r', kdks);\n          this.rank1();\n        });\n        // 删除医药目录\n        dChart.on('contextmenu', ev => {\n          for (let i in ybjgmls) if (ybjgmls[i] === ev['data']['data']['text']) delete ybjgmls[i];\n        });\n      });\n    },\n    r3_3(jzidL, id, kdks = '麻醉苏醒室') {\n      fetch(localhost + '/r3_3', {\n        method: 'post',\n        body: JSON.stringify({\n          'relationHeader': this.relationHeader(),\n          'relationValue': kdks,\n          'ybjgmls': ybjgmls,\n          'jzidL': jzidL\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        dChart = bars(id, color, data);\n        dChart.render();\n        dChart.on('plot:click', ev => {\n          yljgml = ev['data']['data']['name2'];\n          jzid = ev['data']['data']['name1'];\n          this.r3_4(this.jzid1, 'dr3_4l', 'tr3_4l');\n          this.r3_4(this.jzid2, 'dr3_4r', 'tr3_4r');\n          this.rank1();\n        });\n      });\n    },\n    r3_4(jzidL, id, tId) {\n      fetch(localhost + '/r3_4', {\n        method: 'post',\n        body: JSON.stringify({\n          'yljgml': yljgml,\n          'jzidL': jzidL\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        getDiv(tId).innerHTML = yljgml + '支付/报销费用对比';\n        dChart = bars2(id, compareColor, data);\n        dChart.render();\n        dChart.on('plot:click', ev => {\n          jzid = ev['data']['data']['name1'];\n        });\n      });\n    },\n    clear_yljgml() {\n      ybjgmls = [];\n      this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l');\n      this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r');\n    },\n    /**\n     * 数据下载\n     * */\n    downloadCsv() {\n      let csvName;\n      if (this.visL === 1) {\n        csvName = '_data1';\n      } else if (this.visL === 2) {\n        csvName = '_data2';\n      }\n      let url = localhost + 'download/' + csvName;\n      axios.get(url).then(response => {\n        // 创建a标签\n        let a = document.createElement(\"a\");\n        a.download = 'data.csv';\n        // 创建二进制对象\n        const blob = new Blob([response.data]);\n        const downloadURL = (window.URL || window.webkitURL).createObjectURL(blob);\n        a.href = downloadURL;\n        // 模拟点击\n        a.click();\n        //释放资源并删除创建的a标签\n        URL.revokeObjectURL(downloadURL); // a.href\n        document.body.removeChild(a);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    /**\n     * 画像保存\n     * */\n    divSave(e) {\n      function save(divId, name) {\n        // 获取要保存为png的div元素\n        const divElement = document.getElementById(divId);\n        // 使用html2canvas将div转换为canvas\n        html2canvas(divElement).then(canvas => {\n          // 创建一个新的canvas元素\n          const newCanvas = document.createElement('canvas');\n          newCanvas.width = canvas.width;\n          newCanvas.height = canvas.height;\n\n          // 将canvas上的内容绘制到新的canvas上\n          const ctx = newCanvas.getContext('2d');\n          ctx.drawImage(canvas, 0, 0);\n\n          // 将新的canvas转换为png格式的图片\n          newCanvas.toBlob(blob => {\n            // 创建一个下载链接\n            const downloadLink = document.createElement('a');\n            downloadLink.href = URL.createObjectURL(blob);\n            downloadLink.download = name + '.png';\n\n            // 模拟点击下载链接\n            downloadLink.click();\n\n            // 释放URL对象\n            URL.revokeObjectURL(downloadLink.href);\n          }, 'image/png');\n        });\n      }\n      if (e === 'R1chart1') {\n        save(e, this.jzid + \"_行为指标\");\n      } else if (e === 'R1chart2') {\n        save(e, this.jzid + \"_费用转移\");\n      } else if (e === 'R2chart1') {\n        save(e, getDiv('tR2chart1').innerHTML);\n      } else if (e === 'R2chart2') {\n        save(e, getDiv('tR2chart2').innerHTML);\n      }\n    }\n  },\n  mounted() {\n    /**\n     * 左第一页\n     * */\n    this.tzxl1SelInit();\n    this.colors1Init();\n    addListOption('classifyType', ['kmeans', 'tsne']);\n    this.sxHeader1Init();\n    scene = new Scene({\n      id: 'r1',\n      map: new GaodeMap({\n        style: 'xxx',\n        center: [0, 0],\n        zoom: 2\n      })\n    });\n    fetch(localhost + 'r1').then(res => res.json()).then(data => {\n      l1 = new PointLayer({}).source(data, {\n        parser: {\n          type: 'json',\n          x: 'x',\n          y: 'y'\n        }\n      }).shape('circle').size(5).color('人员信息分类', this.colors1).active(true).style({\n        opacity: 0.8,\n        strokeWidth: 0\n      });\n      scene.addLayer(l1);\n      l1.on('click', ev => {\n        fetch(localhost + ev.feature['就诊ID'] + '/rank1Click', {\n          method: 'post',\n          body: JSON.stringify({\n            'ybjgmls': ybjgmls\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => res.json()).then(data => {\n          this.clickR1Point(data, false);\n        });\n      });\n      l1.hide();\n    });\n    this.rankHeaders1();\n\n    /**\n     * 左第二页\n     * */\n    this.tzxl2SelInit();\n    this.colors2Init();\n    addListOption('defineType', ['BaggingClassifier', 'XGBClassifier', 'ExtraTreesClassifier', 'RandomForestClassifier']);\n    addListOption('defineFun', ['分组识别', '非分组识别']);\n    this.sxHeader2Init();\n    fetch(localhost + 'r2').then(res => res.json()).then(data => {\n      l2 = new PointLayer({}).source(data, {\n        parser: {\n          type: 'json',\n          x: 'x',\n          y: 'y'\n        }\n      }).shape('circle').size(5).color('分组标识', this.colors2).active(true).style({\n        opacity: 0.8,\n        strokeWidth: 0\n      });\n      scene.addLayer(l2);\n      l2.on('click', ev => {\n        let id = ev.feature['就诊ID'];\n        fetch(localhost + id + '/' + yljgml + '/rank2Click').then(res => res.json()).then(data => {\n          this.clickR2Point(data, false);\n        });\n      });\n      l2.hide();\n    });\n    fetch(localhost + 'fzbsUnique').then(res => res.json()).then(data => {\n      this.fzbsflL = data['fzbsflL'];\n      this.fzbsflGroup = [this.fzbsflL[0]];\n      this.rankHeaders2();\n    });\n\n    /**\n     * 左第三页\n     * */\n    this.r3_rela();\n\n    /**\n     * 右第三页\n     * */\n    addListOption('relationHeader', ['开单科室名称', '定点医药机构名称', '医药机构目录名称', '病种名称']);\n    this.r3();\n  }\n};","map":{"version":3,"names":["chart","emptyCenterBar1","addListOption","changeTextColor","getDiv","getValue","selectTxt","color","compareColor","typeColors","localhost","GaodeMap","LineLayer","PointLayer","Popup","Scene","bars","bars2","bars3","feeTransFrom","liquid","pie","words","words2","axios","html2canvas","scene","l1","l2","l3","l4","dChart","yljgml","jzid","ybjgmls","name","components","data","visL","visR","tzxl1","checkboxGroup1","colors1","sxValues1","sxValueRange1","sxValuesMin1","sxValuesMax1","fzbsJzid","fzbsVis","fzbsValue","ryxxflL","ryxxflGroup","r1ElseChartVis","tzxl2","checkboxGroup2","colors2","sxValues2","sxValueRange2","sxValuesMin2","sxValuesMax2","fzbsflL","fzbsflGroup","r2ElseChartVis","jzid1","jzid2","methods","messageF","text","$notify","title","message","type","div","leftMenuClick","ev","Number","rightMenuClick","tzxl1SelInit","fetch","then","res","json","tzxled1","tzxl1Selected","id","indexOf","replace","colors1Init","i","toString","value","classify1","method","body","JSON","stringify","headers","sxHeader1Init","data1Gl","r1Init","push","header","sxValue1Init","sxValues1Init","sxValues1Change","sxValuesChangeWith_data1Gl","show","hide","setData","clickR1Point","flag","setCenter","feature","group","addPopup","offsets","closeButton","setLnglat","lngLat","setHTML","radar","render","fa","texts","j","child","document","createElement","style","position","width","height","left","top","appendChild","on","e","rank1","getElementById","onclick","classify1Socre","line1","clsNum","idStr","borderWidth","borderStyle","content","innerHTML","scatter1","handleClose_fzbsJzid","tag","splice","fzbj","rankHeaders1","bar1","tzxl2SelInit","tzxled2","tzxl2Selected","colors2Init","classify2","sxHeader2Init","data2Gl","r2Init","r3_rela","sxValue2Init","sxValues2Init","sxValues2Change","sxValuesChangeWith_data2Gl","clickR2Point","fontSize","rankHeaders2","rank2","r3_size","source","parser","x","y","shape","size","active","opacity","strokeWidth","addLayer","blend","x1","y1","animate","r3l","relaHeat","console","log","r3r","r3Init","handleClose1","handleClose2","l3_scatter1","scatter2","l3_scatter2","jzidL","headerMap","relationHeader","r3","r3_1","r3_2","r3_3","r3_4","kdks","tId","relationValue","clear_yljgml","downloadCsv","csvName","url","get","response","a","download","blob","Blob","downloadURL","window","URL","webkitURL","createObjectURL","href","click","revokeObjectURL","removeChild","catch","error","divSave","save","divId","divElement","canvas","newCanvas","ctx","getContext","drawImage","toBlob","downloadLink","mounted","map","center","zoom"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/src/yibao/js/index.js"],"sourcesContent":["import * as chart from './chart'\nimport {emptyCenterBar1} from './chart'\nimport {addListOption, changeTextColor, getDiv, getValue, selectTxt} from './base'\nimport {color, compareColor, typeColors, localhost} from './config'\nimport {GaodeMap, LineLayer, PointLayer, Popup, Scene} from \"@antv/l7\";\nimport {bars, bars2, bars3, feeTransFrom, liquid, pie, words, words2} from \"./chart\";\nimport axios from \"axios\";\n// 引入HTML2Canvas库\nimport html2canvas from 'html2canvas';\n\n\n/**\n * 全局变量\n * */\nlet scene, l1, l2, l3, l4, dChart\n\nlet yljgml = '盐酸坦索罗辛缓释胶囊' // 医药目录名称\nlet jzid = \"MDTRT_ID_1\" // 就诊ID\nlet ybjgmls = [\n    \"麻醉中检测\",\n    \"一体式吸氧\",\n    \"低流量吸氧\"\n] // 选中的医药目录名称列表\n\n\nexport default {\n    name: \"app\",\n    components: {},\n    data() {\n        return {\n            visL: 1,\n            visR: 1,\n\n\n            jzid: '',\n\n            /**\n             * 左第一页\n             * */\n            tzxl1: [], // 人员信息特征序列\n            checkboxGroup1: ['性别', '民族', '年龄'], // 初始化人员信息分类特征序列\n            colors1: [\n                // '#89DAC8', '#EAC1CA', '#F4F4B5', '#CF6D73', '#CBE0E0',\n                // '#B4EEF4', '#99C08F', '#93DCF2', '#B5F4B5', '#B5F4F4',\n                typeColors[0], typeColors[1], typeColors[2], typeColors[3], typeColors[4],\n                typeColors[5], typeColors[6], typeColors[7], typeColors[8], typeColors[9],\n            ], // 分类色系\n            sxValues1: [],\n            sxValueRange1: {}, // 人员信息筛选内容范围\n            sxValuesMin1: 0,\n            sxValuesMax1: 1,\n            fzbsJzid: [], // 当前标记的分组就诊ID\n            fzbsVis: false, // 是否显示当前分组的就诊ID\n            fzbsValue: 0, // 当前标记的分组的分组组号码\n            ryxxflL: [0, 1, 2, 3, 4], // 人员信息分类序列\n            ryxxflGroup: [1], // 已选择人员信息分类\n            r1ElseChartVis: false,\n\n\n            /**\n             * 左第二页\n             * */\n            tzxl2: [], // 行为识别特征序列\n            checkboxGroup2: ['全自费占比', '超限价自费占比', '符合范围占比', '先行自付占比'], // 初始化行为识别特征序列\n            colors2: [\n                // '#89DAC8', '#EAC1CA', '#F4F4B5', '#CF6D73', '#CBE0E0',\n                // '#B4EEF4', '#99C08F', '#93DCF2', '#B5F4B5', '#B5F4F4',\n                typeColors[0], typeColors[1], typeColors[2], typeColors[3], typeColors[4],\n                typeColors[5], typeColors[6], typeColors[7], typeColors[8], typeColors[9],\n            ], // 分类色系\n            sxValues2: [],\n            sxValueRange2: {}, // 行为识别筛选内容范围\n            sxValuesMin2: 0,\n            sxValuesMax2: 1,\n            fzbsflL: [1, 2, 3, 4], // 人员信息分类序列\n            fzbsflGroup: [1], // 已选择人员信息分类\n            r2ElseChartVis: false,\n\n\n            /**\n             * 右第三页\n             * */\n            jzid1: [],\n            jzid2: [],\n\n\n        }\n    },\n    methods: {\n        messageF(text) {\n            this.$notify({\n                title: '成功',\n                message: text,\n                type: 'success'\n            });\n        },\n        selectTxt(div) {\n            return selectTxt(div)\n        },\n\n        /**\n         * 菜单选取\n         * */\n        leftMenuClick(ev) {\n            this.visL = Number(ev)\n            if (Number(ev) !== 1) {\n                this.r1ElseChartVis = false\n                this.fzbsVis = false\n            } else if (Number(ev) !== 2) {\n                this.r2ElseChartVis = false\n            }\n        },\n        rightMenuClick(ev) {\n            this.visR = Number(ev)\n        },\n\n\n        /**\n         * 左第一页\n         * */\n        tzxl1SelInit() {\n            fetch(localhost + '/tzxl1')\n                .then((res) => res.json())\n                .then((data) => {\n                    this.tzxl1 = data['tzxl1']\n                    this.tzxled1()\n                })\n        }, // 人员信息分类特征序列下拉框初始化\n        tzxl1Selected() {\n\n        }, // 选择特征序列后\n        tzxled1() {\n            fetch(localhost + 'tzxled1')\n                .then((res) => res.json())\n                .then((data) => {\n                    this.checkboxGroup1 = data['tzxl1']\n                })\n        },\n        changeTextColor(id) {\n            changeTextColor(id)\n            if (id.indexOf('color1_') !== -1) {\n                this.colors1[Number(id.replace('color1_', '')) - 1] = getValue(id)\n            } else if (id.indexOf('color2_') !== -1) {\n                this.colors2[Number(id.replace('color2_', '')) - 1] = getValue(id)\n            }\n        },\n        colors1Init() {\n            for (let i in this.colors1) {\n                let id = 'color1_' + (Number(i) + 1).toString()\n                getDiv(id).value = this.colors1[i]\n                changeTextColor(id)\n            }\n        }, // 人员信息分类编码色系初始化\n        classify1() {\n            fetch(localhost + '/classify1', {\n                method: 'post',\n                body: JSON.stringify({\n                    'headers': this.checkboxGroup1,\n                    'classifyNum': getValue('classifyNum'),\n                    'randomState': getValue('randomState'),\n                    'classifyType': getValue('classifyType'),\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    this.messageF(data['message'])\n                    this.sxHeader1Init()\n                    this.data1Gl()\n                    this.r1Init()\n                    this.ryxxflGroup = []\n                    this.ryxxflL = []\n                    for (let i = 0; i < Number(getValue('classifyNum')); i += 1) {\n                        this.ryxxflL.push(i)\n                    }\n                })\n        }, // 人员信息分类\n        sxHeader1Init() {\n            fetch(localhost + 'sxHeader1')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('sxHeader1', data['headers'])\n                    this.sxValues1 = []\n                    this.sxValueRange1 = {}\n                    this.sxValuesMin1 = 0\n                    this.sxValuesMax1 = 1\n                    for (let i in data['headers']) {\n                        let header = data['headers'][i]\n                        fetch(localhost + header + '/sxValues1')\n                            .then((res) => res.json())\n                            .then((data) => {\n                                this.sxValueRange1[header] = [data['min'], data['max']]\n                            })\n                    }\n                    this.sxValue1Init()\n                })\n        }, // 人员信息筛选字段\n        sxValue1Init() {\n            fetch(localhost + selectTxt('sxHeader1') + '/sxValue1')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('sxValue1', data['values'])\n                    this.sxValues1Init()\n                })\n        }, // 人员信息筛选值\n        sxValues1Init() {\n            let header = selectTxt('sxHeader1')\n            this.sxValues1 = this.sxValueRange1[header]\n            this.sxValuesMin1 = this.sxValues1[0]\n            this.sxValuesMax1 = this.sxValues1[1]\n        }, // 范围更新\n        sxValues1Change() {\n            let header = selectTxt('sxHeader1')\n            this.sxValueRange1[header] = this.sxValues1\n        }, // 筛选范围修改\n        data1Gl() {\n            fetch(localhost + '/data1Gl', {\n                method: 'post',\n                body: JSON.stringify({\n                    'sxValueRange': this.sxValueRange1,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    this.messageF(data['message'])\n                    this.r1Init()\n                })\n        }, // 人员信息聚类数据过滤\n        sxValuesChangeWith_data1Gl() {\n            this.sxValues1Change()\n            this.data1Gl()\n        }, // 滑块过滤\n        r1Init() {\n            fetch(localhost + 'r1')\n                .then((res) => res.json())\n                .then((data) => {\n                    this.fzbsJzid = []\n                    l1.show()\n                    l2.hide()\n                    l3.hide()\n                    l4.hide()\n                    l1.setData(data)\n                })\n        }, // 人员信息聚类画像更新\n        clickR1Point(ev, flag) {\n            this.r1ElseChartVis = true\n            if (flag) {\n                scene.setCenter([ev.feature['x'], ev.feature['y']]) // 设置视野中心\n            }\n            fetch(localhost + ev.feature['就诊ID'] + '/' + 'readFzbs')\n                .then((res) => res.json())\n                .then((data) => {\n                    let group = data['group']\n                    let div = `<span >${ev.feature['就诊ID']}</span>` + `<br>` +\n                        `<div>分组标识: </div><input id=\"fzbs\"/><button id=\"fzbsEnter\"\">确认</button>` + `<br>` +\n                        `<div id=\"R1chart3\" style=\"width: 200px; height: 200px\"></div>`\n                    scene.addPopup(new Popup({\n                            offsets: [0, 0],\n                            closeButton: false\n                        })\n                            .setLnglat(ev.lngLat)\n                            .setHTML(div)\n                    )\n                    dChart = chart.radar('R1chart3', compareColor, ev['chart3'])\n                    dChart.render()\n                    /**\n                     * 其余图表\n                     * */\n                    this.jzid = ev.feature['就诊ID']\n                    let fa = getDiv('R1chart1')\n                    let texts = ['报销平均频率', '报销最大频率', '报销最大金额', '小额多次']\n                    for (let i = 0; i < 2; i += 1) {\n                        for (let j = 0; j < 2; j += 1) {\n                            let child = document.createElement('div')\n                            child.id = 'R1chart1_' + (i * 2 + j).toString()\n                            child.style.position = 'absolute'\n                            child.style.width = '49%'\n                            child.style.height = '49%'\n                            child.style.left = (i * 50).toString() + '%'\n                            child.style.top = (j * 50).toString() + '%'\n                            fa.appendChild(child)\n                            dChart = liquid(child.id, color, ev['chart1'][texts[\n                                Number(i * 2 + j)\n                                ]], texts[Number(i * 2 + j)])\n                            dChart.render()\n                        }\n                    }\n                    dChart = feeTransFrom('R1chart2', compareColor, ev['chart2'])\n                    dChart.on('click', (e) => {\n                        yljgml = e['item']['_cfg']['id']\n                        this.rank1()\n                    })\n                    getDiv('fzbs').value = group\n                    document.getElementById('fzbsEnter').onclick = function () {\n                        fetch(localhost + ev.feature['就诊ID'] + '/' + getValue('fzbs') + '/addFzbs')\n                            .then((res) => res.json())\n                            .then(() => {\n\n                            })\n                    }\n                    /**\n                     * 更新分组就诊ID列表\n                     * */\n                    l1.on('dblclick', () => {\n                        this.fzbsVis = true\n                        if (this.fzbsJzid.indexOf(ev.feature['就诊ID']) === -1) {\n                            this.fzbsJzid.push(ev.feature['就诊ID'])\n                        }\n                    })\n                })\n        }, // 点击图层中的点\n        classify1Socre() {\n            fetch(localhost + '/classify1Score', {\n                method: 'post',\n                body: JSON.stringify({\n                    'headers': this.checkboxGroup1,\n                    'classifyNum': getValue('classifyNum'),\n                    'randomState': getValue('randomState'),\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    dChart = chart.line1('r2_1', compareColor, data['score'])\n                    dChart.render()\n\n                    let div = getDiv('r2_2')\n                    let clsNum = 2\n                    for (let i = 0; i < 2; i++) {\n                        for (let j = 0; j < 5; j++) {\n                            let idStr = (clsNum).toString()\n                            let child = document.createElement('div')\n                            child.style.position = 'absolute'\n                            child.style.width = '19%'\n                            child.style.height = '49%'\n                            child.style.left = (j * 20).toString() + '%'\n                            child.style.top = (i * 50).toString() + '%'\n                            child.style.borderWidth = '1px'\n                            child.style.borderStyle = 'groove'\n                            let content = document.createElement('div')\n                            content.style.position = 'absolute'\n                            content.style.width = '100%'\n                            content.style.height = '90%'\n                            content.style.left = '0'\n                            content.style.top = '10%'\n                            content.id = 'r2_2_' + idStr\n                            let title = document.createElement('div')\n                            title.innerHTML = '分类数为' + idStr\n                            title.style.position = 'absolute'\n                            title.style.width = '100%'\n                            title.style.height = '10%'\n                            title.style.left = '0'\n                            title.style.top = '0'\n                            child.appendChild(content)\n                            child.appendChild(title)\n                            div.appendChild(child)\n                            dChart = chart.scatter1(content.id, this.colors1, data['datas'][idStr])\n                            dChart.render()\n                            clsNum += 1\n                        }\n                    }\n                })\n        }, // 人员信息聚类分数识别\n        handleClose_fzbsJzid(tag) {\n            this.fzbsJzid.splice(this.fzbsJzid.indexOf(tag), 1)\n        }, // 删除当前分组的就诊ID\n        fzbj() {\n            fetch(localhost + '/fzbj', {\n                method: 'post',\n                body: JSON.stringify({\n                    'jzid': this.fzbsJzid,\n                    'fzbsValue': this.fzbsValue\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    this.messageF(data['message'])\n                    this.fzbsJzid = []\n                })\n        }, //分组标记\n        rankHeaders1() {\n            fetch(localhost + 'rankHeaders1')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('rankHeaders1', data['rankHeaders1'])\n                    this.rank1()\n                })\n        }, // 更新rank字段\n        rank1() {\n            fetch(localhost + '/rank1', {\n                method: 'post',\n                body: JSON.stringify({\n                    'yljgml': yljgml,\n                    'ratio': selectTxt('rankHeaders1'),\n                    'L': this.ryxxflGroup\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    getDiv('t_rank1').innerHTML = yljgml + selectTxt('rankHeaders1') + '排行画像'\n                    dChart = chart.bar1('rank1', color, data)\n                    dChart.render()\n                    dChart.on('click', (ev) => {\n                        let id = ev['data']['data']['name']\n                        fetch(localhost + id + '/rank1Click', {\n                            method: 'post',\n                            body: JSON.stringify({\n                                'ybjgmls': ybjgmls,\n                            }),\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        })\n                            .then((res) => res.json())\n                            .then((data) => {\n                                this.clickR1Point(data, true)\n                            })\n                    })\n                    dChart.on('dblclick', (ev) => {\n                        let id = ev['data']['data']['name']\n                        this.fzbsVis = true\n                        if (this.fzbsJzid.indexOf(id) === -1) {\n                            this.fzbsJzid.push(id)\n                        }\n                    })\n                })\n        }, // 排名视图1\n\n\n        /**\n         * 左第二页\n         * */\n        tzxl2SelInit() {\n            fetch(localhost + '/tzxl2')\n                .then((res) => res.json())\n                .then((data) => {\n                    this.tzxl2 = data['tzxl2']\n                    this.tzxled2()\n                })\n        }, //行为识别特征序列下拉框初始化\n        tzxl2Selected() {\n\n        }, // 选择特征序列后\n        tzxled2() {\n            fetch(localhost + 'tzxled2')\n                .then((res) => res.json())\n                .then((data) => {\n                    this.checkboxGroup2 = data['tzxl2']\n                })\n        },\n        colors2Init() {\n            for (let i in this.colors2) {\n                let id = 'color2_' + (Number(i) + 1).toString()\n                getDiv(id).value = this.colors2[i]\n                changeTextColor(id)\n            }\n        }, // 行为识别分组分类编码色系初始化\n        classify2() {\n            fetch(localhost + '/classify2', {\n                method: 'post',\n                body: JSON.stringify({\n                    'headers': this.checkboxGroup2,\n                    'defineType': selectTxt('defineType'),\n                    'defineFun': selectTxt('defineFun'),\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    this.messageF(data['message'])\n                    this.fzbsflL = data['fzbsflL']\n                    this.fzbsflGroup = [this.fzbsflL[0]]\n                    this.sxHeader2Init()\n                    this.data2Gl()\n                    this.r2Init()\n                    /**\n                     * 簇类对比\n                     * */\n                    this.r3_rela()\n                })\n        }, // 行为识别\n        sxHeader2Init() {\n            fetch(localhost + 'sxHeader2')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('sxHeader2', data['headers'])\n                    for (let i in data['headers']) {\n                        let header = data['headers'][i]\n                        fetch(localhost + header + '/sxValues2')\n                            .then((res) => res.json())\n                            .then((data) => {\n                                this.sxValueRange2[header] = [data['min'], data['max']]\n                            })\n                    }\n                    this.sxValue2Init()\n                })\n        }, // 行为识别筛选字段\n        sxValue2Init() {\n            fetch(localhost + selectTxt('sxHeader2') + '/sxValue2')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('sxValue2', data['values'])\n                    this.sxValues2Init()\n                })\n        }, // 行为识别筛选值\n        sxValues2Init() {\n            let header = selectTxt('sxHeader2')\n            this.sxValues2 = this.sxValueRange2[header]\n            this.sxValuesMin2 = this.sxValues2[0]\n            this.sxValuesMax2 = this.sxValues2[1]\n        }, // 范围更新\n        sxValues2Change() {\n            let header = selectTxt('sxHeader2')\n            this.sxValueRange2[header] = this.sxValues2\n        }, // 筛选范围修改\n        data2Gl() {\n            fetch(localhost + '/data2Gl', {\n                method: 'post',\n                body: JSON.stringify({\n                    'sxValueRange': this.sxValueRange2,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    this.messageF(data['message'])\n                    this.r2Init()\n                })\n        }, // 行为识别数据过滤\n        sxValuesChangeWith_data2Gl() {\n            this.sxValues2Change()\n            this.data2Gl()\n        }, // 滑块过滤\n        r2Init() {\n            fetch(localhost + 'r2')\n                .then((res) => res.json())\n                .then((data) => {\n                    l1.hide()\n                    l2.show()\n                    l3.hide()\n                    l4.hide()\n                    l2.setData(data)\n                })\n        }, // 行为识别画像更新\n        clickR2Point(ev, flag) {\n            this.r2ElseChartVis = true\n            if (flag) {\n                scene.setCenter([ev.feature['x'], ev.feature['y']])\n            }\n            /**\n             * R2chart1\n             * */\n            getDiv('tR2chart1').innerHTML = jzid + ' 报销医药画像'\n            dChart = bars3('R2chart1', compareColor, ev['s1'])\n            dChart.render()\n            dChart.on('plot:click', (ev) => {\n                yljgml = ev['data']['data']['name1']\n                fetch(localhost + jzid + '/' + yljgml + '/rank2Click_s2')\n                    .then((res) => res.json())\n                    .then((data) => {\n                        getDiv('tR2chart2').innerHTML = jzid + yljgml + '费用占比'\n                        dChart = pie('R2chart2', typeColors, data['s2'])\n                        dChart.render()\n                    })\n\n            })\n            /**\n             * R2chart1\n             * */\n            getDiv('tR2chart2').innerHTML = jzid + yljgml + '费用占比'\n            getDiv('tR2chart2').style.fontSize = '14px'\n            dChart = pie('R2chart2', typeColors, ev['s2'])\n            dChart.render()\n            scene.addPopup(new Popup({\n                    offsets: [0, 0],\n                    closeButton: false\n                })\n                    .setLnglat(ev.lngLat)\n                    .setHTML(\n                        `<span>${ev.feature['就诊ID']}</span>` +\n                        `<div>分组标识: </div><input id=\"fzbs\"/><button id=\"fzbsEnter\">校正</button>`\n                    )\n            )\n            getDiv('fzbs').value = ev.feature['分组标识']\n            document.getElementById('fzbsEnter').onclick = function () {\n                fetch(localhost + ev.feature['就诊ID'] + '/' + getValue('fzbs') + '/initFzbs')\n                    .then((res) => res.json())\n                    .then(() => {\n                    })\n            }\n        },\n        rankHeaders2() {\n            fetch(localhost + 'rankHeaders2')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('rankHeaders2', data['rankHeaders2'])\n                    this.rank2()\n                })\n        }, // 更新rank字段\n        rank2() {\n            fetch(localhost + '/rank2', {\n                method: 'post',\n                body: JSON.stringify({\n                    'ratio': selectTxt('rankHeaders2'),\n                    'L': this.fzbsflGroup\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    getDiv('t_rank2').innerHTML = selectTxt('rankHeaders2') + '排行画像'\n                    dChart = chart.bar1('rank2', color, data)\n                    dChart.render()\n                    dChart.on('click', (ev) => {\n                        let id = ev['data']['data']['name']\n                        fetch(localhost + id + '/' + yljgml + '/rank2Click')\n                            .then((res) => res.json())\n                            .then((data) => {\n                                this.clickR2Point(data, true)\n                            })\n                    })\n                })\n        }, // 排名视图2\n\n\n        /**\n         * 左第三页\n         * */\n        r3_rela() {\n            fetch(localhost + 'r3_rela')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('r3_rela', data['r3_rela'])\n                    this.r3_size()\n                })\n        }, // r3的关系下拉框加载\n        r3_size() {\n            fetch(localhost + 'r3_size')\n                .then((res) => res.json())\n                .then((data) => {\n                    addListOption('r3_size', data['r3_size'])\n                    fetch(localhost + selectTxt('r3_rela') + '/' + selectTxt('r3_size') + '/r3')\n                        .then((res) => res.json())\n                        .then((data) => {\n                            l3 = new PointLayer({})\n                                .source(data['s1'], {\n                                    parser: {\n                                        type: 'json',\n                                        x: 'x',\n                                        y: 'y'\n                                    }\n                                })\n                                .shape('circle')\n                                .size(selectTxt('r3_size'), [4, 10])\n                                .color('分组标识', this.colors2)\n                                .active(true)\n                                .style({\n                                    opacity: 0.9,\n                                    strokeWidth: 0\n                                });\n                            scene.addLayer(l3)\n                            l4 = new LineLayer({\n                                blend: 'normal'\n                            }).source(data['s2'], {\n                                parser: {\n                                    type: 'json',\n                                    x: 'x1',\n                                    y: 'y1',\n                                    x1: 'x2',\n                                    y1: 'y2'\n                                }\n                            })\n                                .size('size', [0.5, 2])\n                                .shape('line')\n                                .color('color', this.colors2)\n                                .animate(false)\n                                .style({\n                                    opacity: 0.05\n                                });\n                            scene.addLayer(l4)\n                            l3.hide()\n                            l4.hide()\n                            let div\n                            l3.on('mousemove', (ev) => {\n                                let id = ev.feature['就诊ID']\n                                div = new Popup({\n                                    offsets: [0, 0],\n                                    closeButton: false\n                                })\n                                    .setLnglat(ev.lngLat)\n                                    .setHTML(`<div>就诊ID: ${id}</div>`)\n                                scene.addPopup(div)\n                            })\n                            l3.on('click', (ev) => {\n                                let id = ev.feature['就诊ID']\n                                if (this.jzid1.indexOf(id) === -1) {\n                                    this.jzid1.push(id)\n                                }\n                                this.r3l()\n                                this.relaHeat(this.jzid1, 'l3_heat1')\n                                fetch(localhost + '/bzmcWords', {\n                                    method: 'post',\n                                    body: JSON.stringify({\n                                        'jzidL': this.jzid1,\n                                    }),\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    }\n                                }).then((res) => res.json())\n                                    .then((data) => {\n                                        console.log(data)\n                                        dChart = words2('l3_words1', color, data)\n                                        dChart.render()\n                                    })\n                            })\n                            l3.on('contextmenu', (ev) => {\n                                let id = ev.feature['就诊ID']\n                                if (this.jzid2.indexOf(id) === -1) {\n                                    this.jzid2.push(id)\n                                }\n                                this.r3r()\n                                this.relaHeat(this.jzid2, 'l3_heat2')\n                                fetch(localhost + '/bzmcWords', {\n                                    method: 'post',\n                                    body: JSON.stringify({\n                                        'jzidL': this.jzid2,\n                                    }),\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    }\n                                }).then((res) => res.json())\n                                    .then((data) => {\n                                        dChart = words2('l3_words2', color, data)\n                                        dChart.render()\n                                    })\n                            })\n                            l3.on('dblclick', (ev) => {\n                                let id = ev.feature['就诊ID']\n                                if (this.jzid2.indexOf(id) === -1) {\n                                    this.jzid2.push(id)\n                                }\n                                this.r3r()\n                                this.relaHeat(this.jzid2, 'l3_heat2')\n                                fetch(localhost + '/bzmcWords', {\n                                    method: 'post',\n                                    body: JSON.stringify({\n                                        'jzidL': this.jzid2,\n                                    }),\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    }\n                                }).then((res) => res.json())\n                                    .then((data) => {\n                                        dChart = words('l3_words2', color, data)\n                                        dChart.render()\n                                    })\n                            })\n                        })\n                })\n        }, // r3的size下拉框加载\n        r3Init() {\n            fetch(localhost + selectTxt('r3_rela') + '/' + selectTxt('r3_size') + '/r3')\n                .then((res) => res.json())\n                .then((data) => {\n                    l1.hide()\n                    l2.hide()\n                    l3.show()\n                    l4.show()\n                    l3.setData(data['s1'])\n                    l4.setData(data['s2'])\n                    this.jzid1 = []\n                    this.jzid2 = []\n                })\n        }, // 簇类对比画像更新\n        handleClose1(tag) {\n            this.jzid1.splice(this.jzid1.indexOf(tag), 1);\n            this.r3l()\n            this.relaHeat(this.jzid1, 'l3_heat1')\n        }, // 簇类1就诊ID删除\n        handleClose2(tag) {\n            this.jzid2.splice(this.jzid2.indexOf(tag), 1);\n            this.r3r()\n            this.relaHeat(this.jzid2, 'l3_heat2')\n        }, // 簇类2就诊ID删除\n        l3_scatter1() {\n            fetch(localhost + '/l3_scatter', {\n                method: 'post',\n                body: JSON.stringify({\n                    'jzid': this.jzid1,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    dChart = chart.scatter2('l3_scatter1', ['#aaa', color[0]], data)\n                    dChart.render()\n                })\n        },\n        l3_scatter2() {\n            fetch(localhost + '/l3_scatter', {\n                method: 'post',\n                body: JSON.stringify({\n                    'jzid': this.jzid2,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    dChart = chart.scatter2('l3_scatter2', ['#aaa', color[0]], data)\n                    dChart.render()\n                })\n        },\n        relaHeat(jzidL, id) {\n            fetch(localhost + '/relaHeat', {\n                method: 'post',\n                body: JSON.stringify({\n                    'jzidL': jzidL,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    dChart = chart.headerMap(id, color, data)\n                    dChart.render()\n                })\n        },\n\n\n        /**\n         * 右第三页\n         * */\n\n        relationHeader() {\n            return selectTxt('relationHeader')\n        },\n        r3() {\n            this.r3l()\n            this.r3r()\n        },\n        r3l() {\n            /**\n             * 簇类1\n             * */\n            this.r3_1(this.jzid1, 'dr3_1l')\n            this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l')\n            this.r3_3(this.jzid1, 'dr3_3l')\n            this.r3_4(this.jzid1, 'dr3_4l', 'tr3_4l')\n            this.l3_scatter1()\n        },\n        r3r() {\n            /**\n             * 簇类2\n             * */\n            this.r3_1(this.jzid2, 'dr3_1r')\n            this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r')\n            this.r3_3(this.jzid2, 'dr3_3r')\n            this.r3_4(this.jzid2, 'dr3_4r', 'tr3_4r')\n            this.l3_scatter2()\n        },\n        r3_1(jzidL, id) {\n            fetch(localhost + '/r3_1', {\n                method: 'post',\n                body: JSON.stringify({\n                    'relationHeader': this.relationHeader(),\n                    'jzidL': jzidL,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    dChart = emptyCenterBar1(id, compareColor, data)\n                    dChart.render()\n                    dChart.on('plot:click', (ev) => {\n                        let kdks = ev['data']['data']['name2']\n                        this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l', kdks)\n                        this.r3_3(this.jzid1, 'dr3_3l', kdks)\n                        this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r', kdks)\n                        this.r3_3(this.jzid2, 'dr3_3r', kdks)\n                    })\n                });\n        },\n        r3_2(jzidL, id, tId, kdks = '麻醉苏醒室') {\n            let relationValue = kdks\n            fetch(localhost + '/r3_2', {\n                method: 'post',\n                body: JSON.stringify({\n                    'relationHeader': this.relationHeader(),\n                    'relationValue': relationValue,\n                    'ybjgmls': ybjgmls,\n                    'jzidL': jzidL,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    getDiv(tId).innerHTML = relationValue + '医药开具数量情况'\n                    dChart = words(id, compareColor, data)\n                    dChart.render()\n                    // 增加医药目录名称数量\n                    dChart.on('click', (ev) => {\n                        ybjgmls.push(ev['data']['data']['text'])\n                        yljgml = ev['data']['data']['text']\n                        this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l', kdks)\n                        this.r3_3(this.jzid1, 'dr3_3l', kdks)\n                        this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r', kdks)\n                        this.r3_3(this.jzid2, 'dr3_3r', kdks)\n                        this.rank1()\n                    })\n                    // 删除医药目录\n                    dChart.on('contextmenu', (ev) => {\n                        for (let i in ybjgmls)\n                            if (ybjgmls[i] === ev['data']['data']['text'])\n                                delete ybjgmls[i]\n                    })\n                });\n        },\n        r3_3(jzidL, id, kdks = '麻醉苏醒室') {\n            fetch(localhost + '/r3_3', {\n                method: 'post',\n                body: JSON.stringify({\n                    'relationHeader': this.relationHeader(),\n                    'relationValue': kdks,\n                    'ybjgmls': ybjgmls,\n                    'jzidL': jzidL,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    dChart = bars(id, color, data)\n                    dChart.render()\n                    dChart.on('plot:click', (ev) => {\n                        yljgml = ev['data']['data']['name2']\n                        jzid = ev['data']['data']['name1']\n                        this.r3_4(this.jzid1, 'dr3_4l', 'tr3_4l')\n                        this.r3_4(this.jzid2, 'dr3_4r', 'tr3_4r')\n                        this.rank1()\n                    })\n                });\n        },\n        r3_4(jzidL, id, tId) {\n            fetch(localhost + '/r3_4', {\n                method: 'post',\n                body: JSON.stringify({\n                    'yljgml': yljgml,\n                    'jzidL': jzidL\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => res.json())\n                .then((data) => {\n                    getDiv(tId).innerHTML = yljgml + '支付/报销费用对比'\n                    dChart = bars2(id, compareColor, data)\n                    dChart.render()\n                    dChart.on('plot:click', (ev) => {\n                        jzid = ev['data']['data']['name1']\n                    })\n                })\n        },\n        clear_yljgml() {\n            ybjgmls = []\n            this.r3_2(this.jzid1, 'dr3_2l', 'tr3_2l')\n            this.r3_2(this.jzid2, 'dr3_2r', 'tr3_2r')\n        },\n\n\n        /**\n         * 数据下载\n         * */\n        downloadCsv() {\n            let csvName\n            if (this.visL === 1) {\n                csvName = '_data1'\n            } else if (this.visL === 2) {\n                csvName = '_data2'\n            }\n            let url = localhost + 'download/' + csvName\n            axios.get(url).then(response => {\n                // 创建a标签\n                let a = document.createElement(\"a\");\n                a.download = 'data.csv';\n                // 创建二进制对象\n                const blob = new Blob([response.data]);\n                const downloadURL = (window.URL || window.webkitURL).createObjectURL(blob);\n                a.href = downloadURL;\n                // 模拟点击\n                a.click();\n                //释放资源并删除创建的a标签\n                URL.revokeObjectURL(downloadURL);// a.href\n                document.body.removeChild(a);\n            }).catch(error => {\n                console.log(error);\n            });\n        },\n\n        /**\n         * 画像保存\n         * */\n        divSave(e) {\n            function save(divId, name) {\n                // 获取要保存为png的div元素\n                const divElement = document.getElementById(divId);\n                // 使用html2canvas将div转换为canvas\n                html2canvas(divElement).then(canvas => {\n                    // 创建一个新的canvas元素\n                    const newCanvas = document.createElement('canvas');\n                    newCanvas.width = canvas.width;\n                    newCanvas.height = canvas.height;\n\n                    // 将canvas上的内容绘制到新的canvas上\n                    const ctx = newCanvas.getContext('2d');\n                    ctx.drawImage(canvas, 0, 0);\n\n                    // 将新的canvas转换为png格式的图片\n                    newCanvas.toBlob(blob => {\n                        // 创建一个下载链接\n                        const downloadLink = document.createElement('a');\n                        downloadLink.href = URL.createObjectURL(blob);\n                        downloadLink.download = name + '.png';\n\n                        // 模拟点击下载链接\n                        downloadLink.click();\n\n                        // 释放URL对象\n                        URL.revokeObjectURL(downloadLink.href);\n                    }, 'image/png');\n                });\n            }\n\n            if(e === 'R1chart1') {\n                save(e, this.jzid + \"_行为指标\")\n            } else if(e === 'R1chart2') {\n                save(e, this.jzid + \"_费用转移\")\n            } else if(e === 'R2chart1') {\n                save(e, getDiv('tR2chart1').innerHTML)\n            } else if(e === 'R2chart2') {\n                save(e, getDiv('tR2chart2').innerHTML)\n            }\n        },\n\n\n    },\n    mounted() {\n        /**\n         * 左第一页\n         * */\n        this.tzxl1SelInit()\n        this.colors1Init()\n        addListOption('classifyType', ['kmeans', 'tsne'])\n        this.sxHeader1Init()\n        scene = new Scene({\n            id: 'r1',\n            map: new GaodeMap({\n                style: 'xxx',\n                center: [0, 0],\n                zoom: 2\n            })\n        });\n        fetch(localhost + 'r1')\n            .then((res) => res.json())\n            .then((data) => {\n                l1 = new PointLayer({})\n                    .source(data, {\n                        parser: {\n                            type: 'json',\n                            x: 'x',\n                            y: 'y'\n                        }\n                    })\n                    .shape('circle')\n                    .size(5)\n                    .color('人员信息分类', this.colors1)\n                    .active(true)\n                    .style({\n                        opacity: 0.8,\n                        strokeWidth: 0\n                    });\n                scene.addLayer(l1)\n                l1.on('click', (ev) => {\n                    fetch(localhost + ev.feature['就诊ID'] + '/rank1Click', {\n                        method: 'post',\n                        body: JSON.stringify({\n                            'ybjgmls': ybjgmls,\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    })\n                        .then((res) => res.json())\n                        .then((data) => {\n                            this.clickR1Point(data, false)\n                        })\n                })\n                l1.hide()\n            })\n        this.rankHeaders1()\n\n        /**\n         * 左第二页\n         * */\n        this.tzxl2SelInit()\n        this.colors2Init()\n        addListOption('defineType', [\n            'BaggingClassifier',\n            'XGBClassifier',\n            'ExtraTreesClassifier',\n            'RandomForestClassifier'\n        ])\n        addListOption('defineFun', ['分组识别', '非分组识别'])\n        this.sxHeader2Init()\n        fetch(localhost + 'r2')\n            .then((res) => res.json())\n            .then((data) => {\n                l2 = new PointLayer({})\n                    .source(data, {\n                        parser: {\n                            type: 'json',\n                            x: 'x',\n                            y: 'y'\n                        }\n                    })\n                    .shape('circle')\n                    .size(5)\n                    .color('分组标识', this.colors2)\n                    .active(true)\n                    .style({\n                        opacity: 0.8,\n                        strokeWidth: 0\n                    });\n                scene.addLayer(l2)\n                l2.on('click', (ev) => {\n                    let id = ev.feature['就诊ID']\n                    fetch(localhost + id + '/' + yljgml + '/rank2Click')\n                        .then((res) => res.json())\n                        .then((data) => {\n                            this.clickR2Point(data, false)\n                        })\n                })\n                l2.hide()\n            })\n        fetch(localhost + 'fzbsUnique')\n            .then((res) => res.json())\n            .then((data) => {\n                this.fzbsflL = data['fzbsflL']\n                this.fzbsflGroup = [this.fzbsflL[0]]\n                this.rankHeaders2()\n            })\n\n\n        /**\n         * 左第三页\n         * */\n        this.r3_rela()\n\n\n        /**\n         * 右第三页\n         * */\n        addListOption('relationHeader', ['开单科室名称', '定点医药机构名称', '医药机构目录名称', '病种名称'])\n        this.r3()\n\n\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}