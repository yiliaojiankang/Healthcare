{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @fileOverview quadTree\n * @author shiwu.wyy@antfin.com\n */\nvar QuadTree = /** @class */function () {\n  // each quadtree represents a quadrant and an aggregate body\n  // that represents all bodies inside the quadrant\n  function QuadTree(param) {\n    /**\n     * (aggregated) body in this quad\n     * @type  {object}\n     */\n    this.body = null;\n    /**\n     * tree representing the northwest quadrant\n     * @type  {object}\n     */\n    this.quad = null;\n    this.NW = null;\n    this.NE = null;\n    this.SW = null;\n    this.SE = null;\n    /**\n     * threshold\n     * @type  {number}\n     */\n    this.theta = 0.5;\n    if (param != null) this.quad = param;\n  }\n  // insert a body(node) into the tree\n  QuadTree.prototype.insert = function (bo) {\n    // if this node does not contain a body, put the new body bo here\n    if (this.body == null) {\n      this.body = bo;\n      return;\n    }\n    // internal node\n    if (!this._isExternal()) {\n      // update mass info\n      this.body = this.body.add(bo);\n      // insert body into quadrant\n      this._putBody(bo);\n    } else {\n      // external node\n      // divide this region into four children\n      if (this.quad) {\n        this.NW = new QuadTree(this.quad.NW());\n        this.NE = new QuadTree(this.quad.NE());\n        this.SW = new QuadTree(this.quad.SW());\n        this.SE = new QuadTree(this.quad.SE());\n      }\n      // insert this body and bo\n      this._putBody(this.body);\n      this._putBody(bo);\n      // update the mass info\n      this.body = this.body.add(bo);\n    }\n  };\n  // inserts bo into a quad\n  // tslint:disable-next-line\n  QuadTree.prototype._putBody = function (bo) {\n    if (!this.quad) return;\n    if (bo.in(this.quad.NW()) && this.NW) this.NW.insert(bo);else if (bo.in(this.quad.NE()) && this.NE) this.NE.insert(bo);else if (bo.in(this.quad.SW()) && this.SW) this.SW.insert(bo);else if (bo.in(this.quad.SE()) && this.SE) this.SE.insert(bo);\n  };\n  // tslint:disable-next-line\n  QuadTree.prototype._isExternal = function () {\n    // four children are null\n    return this.NW == null && this.NE == null && this.SW == null && this.SE == null;\n  };\n  // update the forces\n  QuadTree.prototype.updateForce = function (bo) {\n    if (this.body == null || bo === this.body) {\n      return;\n    }\n    // if the current node is external\n    if (this._isExternal()) bo.addForce(this.body);\n    // internal nodes\n    else {\n      var s = this.quad ? this.quad.getLength() : 0;\n      var d = this.body.distanceTo(bo);\n      // b is far enough\n      if (s / d < this.theta) bo.addForce(this.body);else {\n        this.NW && this.NW.updateForce(bo);\n        this.NE && this.NE.updateForce(bo);\n        this.SW && this.SW.updateForce(bo);\n        this.SE && this.SE.updateForce(bo);\n      }\n    }\n  };\n  return QuadTree;\n}();\nexports.default = QuadTree;","map":{"version":3,"names":["QuadTree","param","body","quad","NW","NE","SW","SE","theta","prototype","insert","bo","_isExternal","add","_putBody","in","updateForce","addForce","s","getLength","d","distanceTo"],"sources":["../../../src/layout/forceAtlas2/quadTree.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}