{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oneHot = exports.getDistance = exports.getAllKeyValueMap = exports.default = void 0;\nvar _util = require(\"@antv/util\");\nvar _types = require(\"../types\");\nvar _vector = _interopRequireDefault(require(\"./vector\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * 获取数据中所有的属性及其对应的值\n * @param dataList 数据集\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nvar getAllKeyValueMap = function getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys) {\n  var keys = [];\n  // 指定了参与计算的keys时，使用指定的keys\n  if (involvedKeys === null || involvedKeys === void 0 ? void 0 : involvedKeys.length) {\n    keys = involvedKeys;\n  } else {\n    // 未指定抽取的keys时，提取数据中所有的key\n    dataList.forEach(function (data) {\n      keys = keys.concat(Object.keys(data));\n    });\n    keys = (0, _util.uniq)(keys);\n  }\n  // 获取所有值非空的key的value数组\n  var allKeyValueMap = {};\n  keys.forEach(function (key) {\n    var value = [];\n    dataList.forEach(function (data) {\n      if (data[key] !== undefined && data[key] !== '') {\n        value.push(data[key]);\n      }\n    });\n    if (value.length && !(uninvolvedKeys === null || uninvolvedKeys === void 0 ? void 0 : uninvolvedKeys.includes(key))) {\n      allKeyValueMap[key] = (0, _util.uniq)(value);\n    }\n  });\n  return allKeyValueMap;\n};\n/**\n * one-hot编码：数据特征提取\n * @param dataList 数据集\n * @param involvedKeys 参与计算的的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nexports.getAllKeyValueMap = getAllKeyValueMap;\nvar oneHot = function oneHot(dataList, involvedKeys, uninvolvedKeys) {\n  // 获取数据中所有的属性/特征及其对应的值\n  var allKeyValueMap = getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys);\n  var oneHotCode = [];\n  if (!Object.keys(allKeyValueMap).length) {\n    return oneHotCode;\n  }\n  // 获取所有的属性/特征值\n  var allValue = Object.values(allKeyValueMap);\n  // 是否所有属性/特征的值都是数值型\n  var isAllNumber = allValue.every(function (value) {\n    return value.every(function (item) {\n      return typeof item === 'number';\n    });\n  });\n  // 对数据进行one-hot编码\n  dataList.forEach(function (data, index) {\n    var code = [];\n    Object.keys(allKeyValueMap).forEach(function (key) {\n      var keyValue = data[key];\n      var allKeyValue = allKeyValueMap[key];\n      var valueIndex = allKeyValue.findIndex(function (value) {\n        return keyValue === value;\n      });\n      var subCode = [];\n      // 如果属性/特征所有的值都能转成数值型，不满足分箱，则直接用值（todo: 为了收敛更快，需做归一化处理）\n      if (isAllNumber) {\n        subCode.push(keyValue);\n      } else {\n        // 进行one-hot编码\n        for (var i = 0; i < allKeyValue.length; i++) {\n          if (i === valueIndex) {\n            subCode.push(1);\n          } else {\n            subCode.push(0);\n          }\n        }\n      }\n      code = code.concat(subCode);\n    });\n    oneHotCode[index] = code;\n  });\n  return oneHotCode;\n};\n/**\n * getDistance：获取两个元素之间的距离\n * @param item\n * @param otherItem\n * @param distanceType 距离类型\n * @param graphData 图数据\n */\nexports.oneHot = oneHot;\nvar getDistance = function getDistance(item, otherItem, distanceType, graphData) {\n  if (distanceType === void 0) {\n    distanceType = _types.DistanceType.EuclideanDistance;\n  }\n  var distance = 0;\n  switch (distanceType) {\n    case _types.DistanceType.EuclideanDistance:\n      distance = new _vector.default(item).euclideanDistance(new _vector.default(otherItem));\n      break;\n    default:\n      break;\n  }\n  return distance;\n};\nexports.getDistance = getDistance;\nvar _default = {\n  getAllKeyValueMap: getAllKeyValueMap,\n  oneHot: oneHot,\n  getDistance: getDistance\n};\nexports.default = _default;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","oneHot","getDistance","getAllKeyValueMap","default","_util","_types","_vector","_interopRequireDefault","obj","__esModule","dataList","involvedKeys","uninvolvedKeys","keys","length","forEach","data","concat","uniq","allKeyValueMap","key","undefined","push","includes","oneHotCode","allValue","values","isAllNumber","every","item","index","code","keyValue","allKeyValue","valueIndex","findIndex","subCode","i","otherItem","distanceType","graphData","DistanceType","EuclideanDistance","distance","euclideanDistance","_default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/algorithm/lib/utils/data-preprocessing.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oneHot = exports.getDistance = exports.getAllKeyValueMap = exports.default = void 0;\nvar _util = require(\"@antv/util\");\nvar _types = require(\"../types\");\nvar _vector = _interopRequireDefault(require(\"./vector\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * 获取数据中所有的属性及其对应的值\n * @param dataList 数据集\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nvar getAllKeyValueMap = function getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys) {\n  var keys = [];\n  // 指定了参与计算的keys时，使用指定的keys\n  if (involvedKeys === null || involvedKeys === void 0 ? void 0 : involvedKeys.length) {\n    keys = involvedKeys;\n  } else {\n    // 未指定抽取的keys时，提取数据中所有的key\n    dataList.forEach(function (data) {\n      keys = keys.concat(Object.keys(data));\n    });\n    keys = (0, _util.uniq)(keys);\n  }\n  // 获取所有值非空的key的value数组\n  var allKeyValueMap = {};\n  keys.forEach(function (key) {\n    var value = [];\n    dataList.forEach(function (data) {\n      if (data[key] !== undefined && data[key] !== '') {\n        value.push(data[key]);\n      }\n    });\n    if (value.length && !(uninvolvedKeys === null || uninvolvedKeys === void 0 ? void 0 : uninvolvedKeys.includes(key))) {\n      allKeyValueMap[key] = (0, _util.uniq)(value);\n    }\n  });\n  return allKeyValueMap;\n};\n/**\n * one-hot编码：数据特征提取\n * @param dataList 数据集\n * @param involvedKeys 参与计算的的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nexports.getAllKeyValueMap = getAllKeyValueMap;\nvar oneHot = function oneHot(dataList, involvedKeys, uninvolvedKeys) {\n  // 获取数据中所有的属性/特征及其对应的值\n  var allKeyValueMap = getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys);\n  var oneHotCode = [];\n  if (!Object.keys(allKeyValueMap).length) {\n    return oneHotCode;\n  }\n  // 获取所有的属性/特征值\n  var allValue = Object.values(allKeyValueMap);\n  // 是否所有属性/特征的值都是数值型\n  var isAllNumber = allValue.every(function (value) {\n    return value.every(function (item) {\n      return typeof item === 'number';\n    });\n  });\n  // 对数据进行one-hot编码\n  dataList.forEach(function (data, index) {\n    var code = [];\n    Object.keys(allKeyValueMap).forEach(function (key) {\n      var keyValue = data[key];\n      var allKeyValue = allKeyValueMap[key];\n      var valueIndex = allKeyValue.findIndex(function (value) {\n        return keyValue === value;\n      });\n      var subCode = [];\n      // 如果属性/特征所有的值都能转成数值型，不满足分箱，则直接用值（todo: 为了收敛更快，需做归一化处理）\n      if (isAllNumber) {\n        subCode.push(keyValue);\n      } else {\n        // 进行one-hot编码\n        for (var i = 0; i < allKeyValue.length; i++) {\n          if (i === valueIndex) {\n            subCode.push(1);\n          } else {\n            subCode.push(0);\n          }\n        }\n      }\n      code = code.concat(subCode);\n    });\n    oneHotCode[index] = code;\n  });\n  return oneHotCode;\n};\n/**\n * getDistance：获取两个元素之间的距离\n * @param item\n * @param otherItem\n * @param distanceType 距离类型\n * @param graphData 图数据\n */\nexports.oneHot = oneHot;\nvar getDistance = function getDistance(item, otherItem, distanceType, graphData) {\n  if (distanceType === void 0) {\n    distanceType = _types.DistanceType.EuclideanDistance;\n  }\n  var distance = 0;\n  switch (distanceType) {\n    case _types.DistanceType.EuclideanDistance:\n      distance = new _vector.default(item).euclideanDistance(new _vector.default(otherItem));\n      break;\n    default:\n      break;\n  }\n  return distance;\n};\nexports.getDistance = getDistance;\nvar _default = {\n  getAllKeyValueMap: getAllKeyValueMap,\n  oneHot: oneHot,\n  getDistance: getDistance\n};\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}