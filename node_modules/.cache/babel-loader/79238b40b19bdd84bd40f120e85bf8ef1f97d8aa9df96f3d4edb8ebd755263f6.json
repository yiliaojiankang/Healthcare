{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { GlobelPointFillTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/earthFill/earthFill_frag.glsl' */\nvar pointFillFrag = \"in vec4 v_data;\\nin vec4 v_color;\\nin float v_radius;\\n\\nlayout(std140) uniform commonUniform {\\n  float u_additive;\\n  float u_stroke_opacity : 1;\\n  float u_stroke_width : 2;\\n  float u_blur : 0.0;\\n};\\n#pragma include \\\"sdf_2d\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 outputColor;\\n\\nvoid main() {\\n  int shape = int(floor(v_data.w + 0.5));\\n\\n  vec4 strokeColor = u_stroke == vec4(0.0) ? v_color : u_stroke;\\n\\n  lowp float antialiasblur = v_data.z;\\n  float r = v_radius / (v_radius + u_stroke_width);\\n\\n  float outer_df;\\n  float inner_df;\\n  // 'circle', 'triangle', 'square', 'pentagon', 'hexagon', 'octogon', 'hexagram', 'rhombus', 'vesica'\\n  if (shape == 0) {\\n    outer_df = sdCircle(v_data.xy, 1.0);\\n    inner_df = sdCircle(v_data.xy, r);\\n  } else if (shape == 1) {\\n    outer_df = sdEquilateralTriangle(1.1 * v_data.xy);\\n    inner_df = sdEquilateralTriangle(1.1 / r * v_data.xy);\\n  } else if (shape == 2) {\\n    outer_df = sdBox(v_data.xy, vec2(1.));\\n    inner_df = sdBox(v_data.xy, vec2(r));\\n  } else if (shape == 3) {\\n    outer_df = sdPentagon(v_data.xy, 0.8);\\n    inner_df = sdPentagon(v_data.xy, r * 0.8);\\n  } else if (shape == 4) {\\n    outer_df = sdHexagon(v_data.xy, 0.8);\\n    inner_df = sdHexagon(v_data.xy, r * 0.8);\\n  } else if (shape == 5) {\\n    outer_df = sdOctogon(v_data.xy, 1.0);\\n    inner_df = sdOctogon(v_data.xy, r);\\n  } else if (shape == 6) {\\n    outer_df = sdHexagram(v_data.xy, 0.52);\\n    inner_df = sdHexagram(v_data.xy, r * 0.52);\\n  } else if (shape == 7) {\\n    outer_df = sdRhombus(v_data.xy, vec2(1.0));\\n    inner_df = sdRhombus(v_data.xy, vec2(r));\\n  } else if (shape == 8) {\\n    outer_df = sdVesica(v_data.xy, 1.1, 0.8);\\n    inner_df = sdVesica(v_data.xy, r * 1.1, r * 0.8);\\n  }\\n\\n  if(outer_df > antialiasblur + 0.018) discard;\\n\\n  float opacity_t = smoothstep(0.0, antialiasblur, outer_df);\\n\\n  float color_t = u_stroke_width < 0.01 ? 0.0 : smoothstep(\\n    antialiasblur,\\n    0.0,\\n    inner_df\\n  );\\n\\n  if(u_stroke_width < 0.01) {\\n    outputColor = vec4(v_color.rgb, v_color.a * u_opacity);\\n  } else {\\n    outputColor = mix(vec4(v_color.rgb, v_color.a * u_opacity), strokeColor * u_stroke_opacity, color_t);\\n  }\\n\\n  if(u_additive > 0.0) {\\n    outputColor *= opacity_t;\\n    outputColor = filterColorAlpha(outputColor, outputColor.a);\\n  } else {\\n    outputColor.a *= opacity_t;\\n    outputColor = filterColor(outputColor);\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/earthFill/earthFill_vert.glsl' */\nvar pointFillVert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in float a_Size;\\nlayout(location = 10) in float a_Shape;\\nlayout(location = 11) in vec3 a_Extrude;\\n\\nlayout(std140) uniform commonUniform {\\n  float u_additive;\\n  float u_stroke_opacity : 1;\\n  float u_stroke_width : 2;\\n  float u_blur : 0.0;\\n};\\nout vec4 v_data;\\nout vec4 v_color;\\nout float v_radius;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\n\\nvoid main() {\\n  vec3 extrude = a_Extrude;\\n  float shape_type = a_Shape;\\n  /*\\n  *  setPickingSize \\u8BBE\\u7F6E\\u62FE\\u53D6\\u5927\\u5C0F\\n  */\\n  float newSize = setPickingSize(a_Size);\\n  // float newSize = setPickingSize(a_Size) * 0.00001038445708445579;\\n\\n  // unpack color(vec2)\\n  v_color = a_Color;\\n\\n  // radius(16-bit)\\n  v_radius = newSize;\\n\\n  // anti-alias\\n  //  float antialiased_blur = -max(u_blur, antialiasblur);\\n  float antialiasblur = -max(2.0 / u_DevicePixelRatio / newSize, u_blur);\\n\\n  // TODP: /abs(extrude.x) \\u662F\\u4E3A\\u4E86\\u517C\\u5BB9\\u5730\\u7403\\u6A21\\u5F0F\\n  v_data = vec4(extrude.x/abs(extrude.x), extrude.y/abs(extrude.y), antialiasblur,shape_type);\\n\\n  gl_Position = u_ViewProjectionMatrix * vec4(a_Position + extrude * newSize * 0.1 + vec3(u_offsets,0.0), 1.0);\\n\\n  setPickingColor(a_PickingColor);\\n}\";\nimport { mat4, vec3 } from 'gl-matrix';\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar FillModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(FillModel, _BaseModel);\n  var _super = _createSuper(FillModel);\n  function FillModel() {\n    _classCallCheck(this, FillModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FillModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        _ref$strokeOpacity = _ref.strokeOpacity,\n        strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 0 : _ref$strokeWidth,\n        blend = _ref.blend,\n        _ref$blur = _ref.blur,\n        blur = _ref$blur === void 0 ? 0 : _ref$blur;\n      this.layer.getLayerConfig();\n      var commonOptions = {\n        u_additive: blend === 'additive' ? 1.0 : 0.0,\n        u_stroke_opacity: strokeOpacity,\n        u_stroke_width: strokeWidth,\n        u_blur: blur\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.initUniformsBuffer();\n              return _context.abrupt(\"return\", this.buildModels());\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.layer.triangulation = GlobelPointFillTriangulation;\n              _context2.next = 3;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointEarthFill',\n                vertexShader: pointFillVert,\n                fragmentShader: pointFillFrag,\n                triangulation: GlobelPointFillTriangulation,\n                inject: this.getInject(),\n                depth: {\n                  enable: true\n                },\n                blend: this.getBlend()\n              });\n            case 3:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }() // overwrite baseModel func\n  }, {\n    key: \"animateOption2Array\",\n    value: function animateOption2Array(option) {\n      return [option.enable ? 0 : 1.0, option.speed || 1, option.rings || 3, 0];\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      var _this = this;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'extrude',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Extrude',\n          shaderLocation: ShaderLocation.EXTRUDE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx) {\n            var _vertex = _slicedToArray(vertex, 3),\n              x = _vertex[0],\n              y = _vertex[1],\n              z = _vertex[2];\n            var n1 = vec3.fromValues(0, 0, 1);\n            var n2 = vec3.fromValues(x, 0, z);\n            var xzReg = x >= 0 ? vec3.angle(n1, n2) : Math.PI * 2 - vec3.angle(n1, n2);\n            var yReg = Math.PI * 2 - Math.asin(y / 100);\n            var m = mat4.create();\n            mat4.rotateY(m, m, xzReg);\n            mat4.rotateX(m, m, yReg);\n            var v1 = vec3.fromValues(1, 1, 0);\n            vec3.transformMat4(v1, v1, m);\n            vec3.normalize(v1, v1);\n            var v2 = vec3.fromValues(-1, 1, 0);\n            vec3.transformMat4(v2, v2, m);\n            vec3.normalize(v2, v2);\n            var v3 = vec3.fromValues(-1, -1, 0);\n            vec3.transformMat4(v3, v3, m);\n            vec3.normalize(v3, v3);\n            var v4 = vec3.fromValues(1, -1, 0);\n            vec3.transformMat4(v4, v4, m);\n            vec3.normalize(v4, v4);\n            var extrude = [].concat(_toConsumableArray(v1), _toConsumableArray(v2), _toConsumableArray(v3), _toConsumableArray(v4));\n            var extrudeIndex = attributeIdx % 4 * 3;\n            return [extrude[extrudeIndex], extrude[extrudeIndex + 1], extrude[extrudeIndex + 2]];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 5 : _feature$size;\n            return Array.isArray(size) ? [size[0]] : [size];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'shape',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Shape',\n          shaderLocation: ShaderLocation.SHAPE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$shape = feature.shape,\n              shape = _feature$shape === void 0 ? 2 : _feature$shape;\n            var shape2d = _this.layer.getLayerConfig().shape2d;\n            var shapeIndex = shape2d.indexOf(shape);\n            return [shapeIndex];\n          }\n        }\n      });\n    }\n  }]);\n  return FillModel;\n}(BaseModel);\nexport { FillModel as default };","map":{"version":3,"names":["_toConsumableArray","_slicedToArray","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","BaseModel","GlobelPointFillTriangulation","pointFillFrag","pointFillVert","mat4","vec3","ShaderLocation","FillModel","_BaseModel","_super","key","value","getCommonUniformsInfo","_ref","layer","getLayerConfig","_ref$strokeOpacity","strokeOpacity","_ref$strokeWidth","strokeWidth","blend","_ref$blur","blur","commonOptions","u_additive","u_stroke_opacity","u_stroke_width","u_blur","commonBufferInfo","getUniformsBufferInfo","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","initUniformsBuffer","abrupt","buildModels","stop","initModels","_buildModels","_callee2","model","_callee2$","_context2","triangulation","buildLayerModel","moduleName","vertexShader","fragmentShader","inject","getInject","depth","enable","getBlend","sent","animateOption2Array","option","speed","rings","registerBuiltinAttributes","_this","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","EXTRUDE","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","featureIdx","vertex","attributeIdx","_vertex","x","y","z","n1","fromValues","n2","xzReg","angle","Math","PI","yReg","asin","m","create","rotateY","rotateX","v1","transformMat4","normalize","v2","v3","v4","extrude","concat","extrudeIndex","SIZE","_feature$size","Array","isArray","SHAPE","_feature$shape","shape","shape2d","shapeIndex","indexOf","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/point/models/earthFill.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { GlobelPointFillTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/earthFill/earthFill_frag.glsl' */\nvar pointFillFrag = \"in vec4 v_data;\\nin vec4 v_color;\\nin float v_radius;\\n\\nlayout(std140) uniform commonUniform {\\n  float u_additive;\\n  float u_stroke_opacity : 1;\\n  float u_stroke_width : 2;\\n  float u_blur : 0.0;\\n};\\n#pragma include \\\"sdf_2d\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 outputColor;\\n\\nvoid main() {\\n  int shape = int(floor(v_data.w + 0.5));\\n\\n  vec4 strokeColor = u_stroke == vec4(0.0) ? v_color : u_stroke;\\n\\n  lowp float antialiasblur = v_data.z;\\n  float r = v_radius / (v_radius + u_stroke_width);\\n\\n  float outer_df;\\n  float inner_df;\\n  // 'circle', 'triangle', 'square', 'pentagon', 'hexagon', 'octogon', 'hexagram', 'rhombus', 'vesica'\\n  if (shape == 0) {\\n    outer_df = sdCircle(v_data.xy, 1.0);\\n    inner_df = sdCircle(v_data.xy, r);\\n  } else if (shape == 1) {\\n    outer_df = sdEquilateralTriangle(1.1 * v_data.xy);\\n    inner_df = sdEquilateralTriangle(1.1 / r * v_data.xy);\\n  } else if (shape == 2) {\\n    outer_df = sdBox(v_data.xy, vec2(1.));\\n    inner_df = sdBox(v_data.xy, vec2(r));\\n  } else if (shape == 3) {\\n    outer_df = sdPentagon(v_data.xy, 0.8);\\n    inner_df = sdPentagon(v_data.xy, r * 0.8);\\n  } else if (shape == 4) {\\n    outer_df = sdHexagon(v_data.xy, 0.8);\\n    inner_df = sdHexagon(v_data.xy, r * 0.8);\\n  } else if (shape == 5) {\\n    outer_df = sdOctogon(v_data.xy, 1.0);\\n    inner_df = sdOctogon(v_data.xy, r);\\n  } else if (shape == 6) {\\n    outer_df = sdHexagram(v_data.xy, 0.52);\\n    inner_df = sdHexagram(v_data.xy, r * 0.52);\\n  } else if (shape == 7) {\\n    outer_df = sdRhombus(v_data.xy, vec2(1.0));\\n    inner_df = sdRhombus(v_data.xy, vec2(r));\\n  } else if (shape == 8) {\\n    outer_df = sdVesica(v_data.xy, 1.1, 0.8);\\n    inner_df = sdVesica(v_data.xy, r * 1.1, r * 0.8);\\n  }\\n\\n  if(outer_df > antialiasblur + 0.018) discard;\\n\\n  float opacity_t = smoothstep(0.0, antialiasblur, outer_df);\\n\\n  float color_t = u_stroke_width < 0.01 ? 0.0 : smoothstep(\\n    antialiasblur,\\n    0.0,\\n    inner_df\\n  );\\n\\n  if(u_stroke_width < 0.01) {\\n    outputColor = vec4(v_color.rgb, v_color.a * u_opacity);\\n  } else {\\n    outputColor = mix(vec4(v_color.rgb, v_color.a * u_opacity), strokeColor * u_stroke_opacity, color_t);\\n  }\\n\\n  if(u_additive > 0.0) {\\n    outputColor *= opacity_t;\\n    outputColor = filterColorAlpha(outputColor, outputColor.a);\\n  } else {\\n    outputColor.a *= opacity_t;\\n    outputColor = filterColor(outputColor);\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/earthFill/earthFill_vert.glsl' */\nvar pointFillVert = \"layout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in float a_Size;\\nlayout(location = 10) in float a_Shape;\\nlayout(location = 11) in vec3 a_Extrude;\\n\\nlayout(std140) uniform commonUniform {\\n  float u_additive;\\n  float u_stroke_opacity : 1;\\n  float u_stroke_width : 2;\\n  float u_blur : 0.0;\\n};\\nout vec4 v_data;\\nout vec4 v_color;\\nout float v_radius;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\n\\nvoid main() {\\n  vec3 extrude = a_Extrude;\\n  float shape_type = a_Shape;\\n  /*\\n  *  setPickingSize \\u8BBE\\u7F6E\\u62FE\\u53D6\\u5927\\u5C0F\\n  */\\n  float newSize = setPickingSize(a_Size);\\n  // float newSize = setPickingSize(a_Size) * 0.00001038445708445579;\\n\\n  // unpack color(vec2)\\n  v_color = a_Color;\\n\\n  // radius(16-bit)\\n  v_radius = newSize;\\n\\n  // anti-alias\\n  //  float antialiased_blur = -max(u_blur, antialiasblur);\\n  float antialiasblur = -max(2.0 / u_DevicePixelRatio / newSize, u_blur);\\n\\n  // TODP: /abs(extrude.x) \\u662F\\u4E3A\\u4E86\\u517C\\u5BB9\\u5730\\u7403\\u6A21\\u5F0F\\n  v_data = vec4(extrude.x/abs(extrude.x), extrude.y/abs(extrude.y), antialiasblur,shape_type);\\n\\n  gl_Position = u_ViewProjectionMatrix * vec4(a_Position + extrude * newSize * 0.1 + vec3(u_offsets,0.0), 1.0);\\n\\n  setPickingColor(a_PickingColor);\\n}\";\nimport { mat4, vec3 } from 'gl-matrix';\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\nvar FillModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(FillModel, _BaseModel);\n  var _super = _createSuper(FillModel);\n  function FillModel() {\n    _classCallCheck(this, FillModel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FillModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        _ref$strokeOpacity = _ref.strokeOpacity,\n        strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 0 : _ref$strokeWidth,\n        blend = _ref.blend,\n        _ref$blur = _ref.blur,\n        blur = _ref$blur === void 0 ? 0 : _ref$blur;\n      this.layer.getLayerConfig();\n      var commonOptions = {\n        u_additive: blend === 'additive' ? 1.0 : 0.0,\n        u_stroke_opacity: strokeOpacity,\n        u_stroke_width: strokeWidth,\n        u_blur: blur\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.initUniformsBuffer();\n              return _context.abrupt(\"return\", this.buildModels());\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.layer.triangulation = GlobelPointFillTriangulation;\n              _context2.next = 3;\n              return this.layer.buildLayerModel({\n                moduleName: 'pointEarthFill',\n                vertexShader: pointFillVert,\n                fragmentShader: pointFillFrag,\n                triangulation: GlobelPointFillTriangulation,\n                inject: this.getInject(),\n                depth: {\n                  enable: true\n                },\n                blend: this.getBlend()\n              });\n            case 3:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }() // overwrite baseModel func\n  }, {\n    key: \"animateOption2Array\",\n    value: function animateOption2Array(option) {\n      return [option.enable ? 0 : 1.0, option.speed || 1, option.rings || 3, 0];\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      var _this = this;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'extrude',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Extrude',\n          shaderLocation: ShaderLocation.EXTRUDE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx) {\n            var _vertex = _slicedToArray(vertex, 3),\n              x = _vertex[0],\n              y = _vertex[1],\n              z = _vertex[2];\n            var n1 = vec3.fromValues(0, 0, 1);\n            var n2 = vec3.fromValues(x, 0, z);\n            var xzReg = x >= 0 ? vec3.angle(n1, n2) : Math.PI * 2 - vec3.angle(n1, n2);\n            var yReg = Math.PI * 2 - Math.asin(y / 100);\n            var m = mat4.create();\n            mat4.rotateY(m, m, xzReg);\n            mat4.rotateX(m, m, yReg);\n            var v1 = vec3.fromValues(1, 1, 0);\n            vec3.transformMat4(v1, v1, m);\n            vec3.normalize(v1, v1);\n            var v2 = vec3.fromValues(-1, 1, 0);\n            vec3.transformMat4(v2, v2, m);\n            vec3.normalize(v2, v2);\n            var v3 = vec3.fromValues(-1, -1, 0);\n            vec3.transformMat4(v3, v3, m);\n            vec3.normalize(v3, v3);\n            var v4 = vec3.fromValues(1, -1, 0);\n            vec3.transformMat4(v4, v4, m);\n            vec3.normalize(v4, v4);\n            var extrude = [].concat(_toConsumableArray(v1), _toConsumableArray(v2), _toConsumableArray(v3), _toConsumableArray(v4));\n            var extrudeIndex = attributeIdx % 4 * 3;\n            return [extrude[extrudeIndex], extrude[extrudeIndex + 1], extrude[extrudeIndex + 2]];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 5 : _feature$size;\n            return Array.isArray(size) ? [size[0]] : [size];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'shape',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Shape',\n          shaderLocation: ShaderLocation.SHAPE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 1,\n          update: function update(feature) {\n            var _feature$shape = feature.shape,\n              shape = _feature$shape === void 0 ? 2 : _feature$shape;\n            var shape2d = _this.layer.getLayerConfig().shape2d;\n            var shapeIndex = shape2d.indexOf(shape);\n            return [shapeIndex];\n          }\n        }\n      });\n    }\n  }]);\n  return FillModel;\n}(BaseModel);\nexport { FillModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}