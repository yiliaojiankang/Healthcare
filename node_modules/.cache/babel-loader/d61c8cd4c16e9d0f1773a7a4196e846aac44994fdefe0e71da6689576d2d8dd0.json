{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar TAU = Math.PI * 2;\nvar mapToEllipse = function (_a, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _a.x,\n    y = _a.y;\n  x *= rx;\n  y *= ry;\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\nvar approxUnitArc = function (ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\nvar vectorAngle = function (ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  var dot = ux * vx + uy * vy;\n  if (dot > 1) {\n    dot = 1;\n  }\n  if (dot < -1) {\n    dot = -1;\n  }\n  return sign * Math.acos(dot);\n};\nvar getArcCenter = function (px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n  if (radicant < 0) {\n    radicant = 0;\n  }\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n  return [centerx, centery, ang1, ang2];\n};\nvar arcToBezier = function (_a) {\n  var px = _a.px,\n    py = _a.py,\n    cx = _a.cx,\n    cy = _a.cy,\n    rx = _a.rx,\n    ry = _a.ry,\n    _b = _a.xAxisRotation,\n    xAxisRotation = _b === void 0 ? 0 : _b,\n    _c = _a.largeArcFlag,\n    largeArcFlag = _c === void 0 ? 0 : _c,\n    _d = _a.sweepFlag,\n    sweepFlag = _d === void 0 ? 0 : _d;\n  var curves = [];\n  if (rx === 0 || ry === 0) {\n    return [{\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      x: cx,\n      y: cy\n    }];\n  }\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n  if (pxp === 0 && pyp === 0) {\n    return [{\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      x: cx,\n      y: cy\n    }];\n  }\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  var _e = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n    centerx = _e[0],\n    centery = _e[1],\n    ang1 = _e[2],\n    ang2 = _e[3];\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n  var segments = Math.max(Math.ceil(ratio), 1);\n  ang2 /= segments;\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n  return curves.map(function (curve) {\n    var _a = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n      x1 = _a.x,\n      y1 = _a.y;\n    var _b = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n      x2 = _b.x,\n      y2 = _b.y;\n    var _c = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n      x = _c.x,\n      y = _c.y;\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      x: x,\n      y: y\n    };\n  });\n};\nexport function arcToCubic(x1, y1, rx, ry, angle, LAF, SF, x2, y2) {\n  var curves = arcToBezier({\n    px: x1,\n    py: y1,\n    cx: x2,\n    cy: y2,\n    rx: rx,\n    ry: ry,\n    xAxisRotation: angle,\n    largeArcFlag: LAF,\n    sweepFlag: SF\n  });\n  return curves.reduce(function (prev, cur) {\n    var x1 = cur.x1,\n      y1 = cur.y1,\n      x2 = cur.x2,\n      y2 = cur.y2,\n      x = cur.x,\n      y = cur.y;\n    prev.push(x1, y1, x2, y2, x, y);\n    return prev;\n  }, []);\n}","map":{"version":3,"names":["TAU","Math","PI","mapToEllipse","_a","rx","ry","cosphi","sinphi","centerx","centery","x","y","xp","yp","approxUnitArc","ang1","ang2","a","tan","x1","cos","y1","sin","x2","y2","vectorAngle","ux","uy","vx","vy","sign","dot","acos","getArcCenter","px","py","cx","cy","largeArcFlag","sweepFlag","pxp","pyp","rxsq","pow","rysq","pxpsq","pypsq","radicant","sqrt","centerxp","centeryp","vx1","vy1","vx2","vy2","arcToBezier","_b","xAxisRotation","_c","_d","curves","abs","lambda","_e","ratio","segments","max","ceil","i","push","map","curve","arcToCubic","angle","LAF","SF","reduce","prev","cur"],"sources":["../../src/process/arc-2-cubic.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}