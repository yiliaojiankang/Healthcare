{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { interval, point } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { deepAssign, findGeometry, flow, processIllegalData, transformLabel } from '../../utils';\nimport { getScaleMax, getStackedData } from './utils';\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var style = options.barStyle,\n    color = options.color,\n    tooltip = options.tooltip,\n    colorField = options.colorField,\n    type = options.type,\n    xField = options.xField,\n    yField = options.yField,\n    data = options.data,\n    shape = options.shape;\n  // 处理不合法的数据\n  var processData = processIllegalData(data, yField);\n  chart.data(processData);\n  var p = deepAssign({}, params, {\n    options: {\n      tooltip: tooltip,\n      seriesField: colorField,\n      interval: {\n        style: style,\n        color: color,\n        shape: shape || (type === 'line' ? 'line' : 'intervel')\n      },\n      // 柱子的一些样式设置：柱子最小宽度、柱子最大宽度、柱子背景\n      minColumnWidth: options.minBarWidth,\n      maxColumnWidth: options.maxBarWidth,\n      columnBackground: options.barBackground\n    }\n  });\n  interval(p);\n  if (type === 'line') {\n    point({\n      chart: chart,\n      options: {\n        xField: xField,\n        yField: yField,\n        seriesField: colorField,\n        point: {\n          shape: 'circle',\n          color: color\n        }\n      }\n    });\n  }\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a;\n  var options = params.options;\n  var yField = options.yField,\n    xField = options.xField,\n    data = options.data,\n    isStack = options.isStack,\n    isGroup = options.isGroup,\n    colorField = options.colorField,\n    maxAngle = options.maxAngle;\n  var actualData = isStack && !isGroup && colorField ? getStackedData(data, xField, yField) : data;\n  var processData = processIllegalData(actualData, yField);\n  return flow(scale((_a = {}, _a[yField] = {\n    min: 0,\n    max: getScaleMax(maxAngle, yField, processData)\n  }, _a)))(params);\n}\n/**\n * coordinate 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    innerRadius = options.innerRadius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  }).transpose();\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    xAxis = options.xAxis;\n  chart.axis(xField, xAxis);\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    yField = options.yField;\n  var intervalGeometry = findGeometry(chart, 'interval');\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    intervalGeometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    intervalGeometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign(__assign({}, transformLabel(cfg)), {\n        type: 'polar'\n      })\n    });\n  }\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(pattern('barStyle'), geometry, meta, axis, coordinate, interaction, animation, theme, tooltip, legend, annotation(), label)(params);\n}","map":{"version":3,"names":["animation","annotation","interaction","legend","scale","theme","tooltip","interval","point","pattern","deepAssign","findGeometry","flow","processIllegalData","transformLabel","getScaleMax","getStackedData","geometry","params","chart","options","style","barStyle","color","colorField","type","xField","yField","data","shape","processData","p","seriesField","minColumnWidth","minBarWidth","maxColumnWidth","maxBarWidth","columnBackground","barBackground","meta","isStack","isGroup","maxAngle","actualData","_a","min","max","coordinate","radius","innerRadius","startAngle","endAngle","cfg","transpose","axis","xAxis","label","intervalGeometry","callback","__rest","fields","__assign","adaptor"],"sources":["../../../src/plots/radial-bar/adaptor.ts"],"sourcesContent":["import { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { interval, point } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry, flow, processIllegalData, transformLabel } from '../../utils';\nimport { RadialBarOptions } from './types';\nimport { getScaleMax, getStackedData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { barStyle: style, color, tooltip, colorField, type, xField, yField, data, shape } = options;\n\n  // 处理不合法的数据\n  const processData = processIllegalData(data, yField);\n  chart.data(processData);\n\n  const p = deepAssign({}, params, {\n    options: {\n      tooltip,\n      seriesField: colorField,\n      interval: {\n        style,\n        color,\n        shape: shape || (type === 'line' ? 'line' : 'intervel'),\n      },\n      // 柱子的一些样式设置：柱子最小宽度、柱子最大宽度、柱子背景\n      minColumnWidth: options.minBarWidth,\n      maxColumnWidth: options.maxBarWidth,\n      columnBackground: options.barBackground,\n    },\n  });\n  interval(p);\n  if (type === 'line') {\n    point({\n      chart,\n      options: { xField, yField, seriesField: colorField, point: { shape: 'circle', color } },\n    });\n  }\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { options } = params;\n  const { yField, xField, data, isStack, isGroup, colorField, maxAngle } = options;\n\n  const actualData = isStack && !isGroup && colorField ? getStackedData(data, xField, yField) : data;\n  const processData = processIllegalData(actualData, yField);\n  return flow(\n    scale({\n      [yField]: {\n        min: 0,\n        max: getScaleMax(maxAngle, yField, processData),\n      },\n    })\n  )(params);\n}\n\n/**\n * coordinate 配置\n * @param params\n */\nfunction coordinate(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart\n    .coordinate({\n      type: 'polar',\n      cfg: {\n        radius,\n        innerRadius,\n        startAngle,\n        endAngle,\n      },\n    })\n    .transpose();\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { xField, xAxis } = options;\n  chart.axis(xField, xAxis);\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const intervalGeometry = findGeometry(chart, 'interval');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    intervalGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    intervalGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        ...transformLabel(cfg),\n        type: 'polar',\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RadialBarOptions>) {\n  return flow(\n    pattern('barStyle'),\n    geometry,\n    meta,\n    axis,\n    coordinate,\n    interaction,\n    animation,\n    theme,\n    tooltip,\n    legend,\n    annotation(),\n    label\n  )(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}