{"ast":null,"code":"import { animation, annotation, pattern, scale, theme, tooltip } from '../../adaptor/common';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { deepAssign, flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { X_FIELD, Y_FIELD } from '../tiny-line/constants';\nimport { getTinyData } from '../tiny-line/utils';\n/**\n * 字段\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    color = options.color,\n    areaStyle = options.areaStyle,\n    pointOptions = options.point,\n    lineOptions = options.line;\n  var pointState = pointOptions === null || pointOptions === void 0 ? void 0 : pointOptions.state;\n  var seriesData = getTinyData(data);\n  chart.data(seriesData);\n  var primary = deepAssign({}, params, {\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      area: {\n        color: color,\n        style: areaStyle\n      },\n      line: lineOptions,\n      point: pointOptions\n    }\n  });\n  var second = deepAssign({}, primary, {\n    options: {\n      tooltip: false\n    }\n  });\n  var pointParams = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: pointState\n    }\n  });\n  // area geometry 处理\n  area(primary);\n  line(second);\n  point(pointParams);\n  chart.axis(false);\n  chart.legend(false);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a, _b;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    data = options.data;\n  var seriesData = getTinyData(data);\n  return flow(scale((_a = {}, _a[X_FIELD] = xAxis, _a[Y_FIELD] = yAxis, _a), (_b = {}, _b[X_FIELD] = {\n    type: 'cat'\n  }, _b[Y_FIELD] = adjustYMetaByZero(seriesData, Y_FIELD), _b)))(params);\n}\n/**\n * 迷你面积图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(pattern('areaStyle'), geometry, meta, tooltip, theme, animation, annotation())(params);\n}","map":{"version":3,"names":["animation","annotation","pattern","scale","theme","tooltip","area","line","point","deepAssign","flow","adjustYMetaByZero","X_FIELD","Y_FIELD","getTinyData","geometry","params","chart","options","data","color","areaStyle","pointOptions","lineOptions","pointState","state","seriesData","primary","xField","yField","style","second","pointParams","axis","legend","meta","xAxis","yAxis","_a","_b","type","adaptor"],"sources":["../../../src/plots/tiny-area/adaptor.ts"],"sourcesContent":["import { animation, annotation, pattern, scale, theme, tooltip } from '../../adaptor/common';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { X_FIELD, Y_FIELD } from '../tiny-line/constants';\nimport { getTinyData } from '../tiny-line/utils';\nimport { TinyAreaOptions } from './types';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<TinyAreaOptions>): Params<TinyAreaOptions> {\n  const { chart, options } = params;\n  const { data, color, areaStyle, point: pointOptions, line: lineOptions } = options;\n  const pointState = pointOptions?.state;\n\n  const seriesData = getTinyData(data);\n\n  chart.data(seriesData);\n\n  const primary = deepAssign({}, params, {\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      area: { color, style: areaStyle },\n      line: lineOptions,\n      point: pointOptions,\n    },\n  });\n  const second = deepAssign({}, primary, { options: { tooltip: false } });\n  const pointParams = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n\n  // area geometry 处理\n  area(primary);\n  line(second);\n  point(pointParams);\n\n  chart.axis(false);\n  chart.legend(false);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<TinyAreaOptions>): Params<TinyAreaOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, data } = options;\n  const seriesData = getTinyData(data);\n\n  return flow(\n    scale(\n      {\n        [X_FIELD]: xAxis,\n        [Y_FIELD]: yAxis,\n      },\n      {\n        [X_FIELD]: {\n          type: 'cat',\n        },\n        [Y_FIELD]: adjustYMetaByZero(seriesData, Y_FIELD),\n      }\n    )\n  )(params);\n}\n\n/**\n * 迷你面积图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TinyAreaOptions>) {\n  return flow(pattern('areaStyle'), geometry, meta, tooltip, theme, animation, annotation())(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}