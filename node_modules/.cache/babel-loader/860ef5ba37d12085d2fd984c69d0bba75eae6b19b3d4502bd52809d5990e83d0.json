{"ast":null,"code":"import { isNil, each, isString } from './util';\nimport { getOffScreenContext } from './offscreen';\n/**\n * 获取文本的高度\n * @param text 文本\n * @param fontSize 字体大小\n * @param lineHeight 行高，可以为空\n */\nexport function getTextHeight(text, fontSize, lineHeight) {\n  var lineCount = 1;\n  if (isString(text)) {\n    lineCount = text.split('\\n').length;\n  }\n  if (lineCount > 1) {\n    var spaceingY = getLineSpaceing(fontSize, lineHeight);\n    return fontSize * lineCount + spaceingY * (lineCount - 1);\n  }\n  return fontSize;\n}\n/**\n * 获取行间距如果文本多行，需要获取文本间距\n * @param fontSize 字体大小\n * @param lineHeight 行高\n */\nexport function getLineSpaceing(fontSize, lineHeight) {\n  return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n}\n/**\n * 字体宽度\n * @param text 文本\n * @param font 字体\n */\nexport function getTextWidth(text, font) {\n  var context = getOffScreenContext(); // 获取离屏的 ctx 进行计算\n  var width = 0;\n  // null 或者 undefined 时，宽度为 0\n  if (isNil(text) || text === '') {\n    return width;\n  }\n  context.save();\n  context.font = font;\n  if (isString(text) && text.includes('\\n')) {\n    var textArr = text.split('\\n');\n    each(textArr, function (subText) {\n      var measureWidth = context.measureText(subText).width;\n      if (width < measureWidth) {\n        width = measureWidth;\n      }\n    });\n  } else {\n    width = context.measureText(text).width;\n  }\n  context.restore();\n  return width;\n}\nexport function assembleFont(attrs) {\n  var fontSize = attrs.fontSize,\n    fontFamily = attrs.fontFamily,\n    fontWeight = attrs.fontWeight,\n    fontStyle = attrs.fontStyle,\n    fontVariant = attrs.fontVariant;\n  return [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ').trim();\n}","map":{"version":3,"names":["isNil","each","isString","getOffScreenContext","getTextHeight","text","fontSize","lineHeight","lineCount","split","length","spaceingY","getLineSpaceing","getTextWidth","font","context","width","save","includes","textArr","subText","measureWidth","measureText","restore","assembleFont","attrs","fontFamily","fontWeight","fontStyle","fontVariant","join","trim"],"sources":["../../src/util/text.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,QAAQ;AAC9C,SAASC,mBAAmB,QAAQ,aAAa;AAGjD;;;;;;AAMA,OAAM,SAAUC,aAAaA,CAACC,IAAY,EAAEC,QAAgB,EAAEC,UAAmB;EAC/E,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIN,QAAQ,CAACG,IAAI,CAAC,EAAE;IAClBG,SAAS,GAAGH,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM;;EAErC,IAAIF,SAAS,GAAG,CAAC,EAAE;IACjB,IAAMG,SAAS,GAAGC,eAAe,CAACN,QAAQ,EAAEC,UAAU,CAAC;IACvD,OAAOD,QAAQ,GAAGE,SAAS,GAAGG,SAAS,IAAIH,SAAS,GAAG,CAAC,CAAC;;EAE3D,OAAOF,QAAQ;AACjB;AAEA;;;;;AAKA,OAAM,SAAUM,eAAeA,CAACN,QAAgB,EAAEC,UAAmB;EACnE,OAAOA,UAAU,GAAGA,UAAU,GAAGD,QAAQ,GAAGA,QAAQ,GAAG,IAAI;AAC7D;AAEA;;;;;AAKA,OAAM,SAAUO,YAAYA,CAACR,IAAY,EAAES,IAAY;EACrD,IAAMC,OAAO,GAAGZ,mBAAmB,EAAE,CAAC,CAAC;EACvC,IAAIa,KAAK,GAAG,CAAC;EACb;EACA,IAAIhB,KAAK,CAACK,IAAI,CAAC,IAAIA,IAAI,KAAK,EAAE,EAAE;IAC9B,OAAOW,KAAK;;EAEdD,OAAO,CAACE,IAAI,EAAE;EACdF,OAAO,CAACD,IAAI,GAAGA,IAAI;EACnB,IAAIZ,QAAQ,CAACG,IAAI,CAAC,IAAIA,IAAI,CAACa,QAAQ,CAAC,IAAI,CAAC,EAAE;IACzC,IAAMC,OAAO,GAAGd,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC;IAChCR,IAAI,CAACkB,OAAO,EAAE,UAACC,OAAO;MACpB,IAAMC,YAAY,GAAGN,OAAO,CAACO,WAAW,CAACF,OAAO,CAAC,CAACJ,KAAK;MACvD,IAAIA,KAAK,GAAGK,YAAY,EAAE;QACxBL,KAAK,GAAGK,YAAY;;IAExB,CAAC,CAAC;GACH,MAAM;IACLL,KAAK,GAAGD,OAAO,CAACO,WAAW,CAACjB,IAAI,CAAC,CAACW,KAAK;;EAEzCD,OAAO,CAACQ,OAAO,EAAE;EACjB,OAAOP,KAAK;AACd;AAEA,OAAM,SAAUQ,YAAYA,CAACC,KAAiB;EACpC,IAAAnB,QAAQ,GAAqDmB,KAAK,CAAAnB,QAA1D;IAAEoB,UAAU,GAAyCD,KAAK,CAAAC,UAA9C;IAAEC,UAAU,GAA6BF,KAAK,CAAAE,UAAlC;IAAEC,SAAS,GAAkBH,KAAK,CAAAG,SAAvB;IAAEC,WAAW,GAAKJ,KAAK,CAAAI,WAAV;EAChE,OAAO,CAACD,SAAS,EAAEC,WAAW,EAAEF,UAAU,EAAKrB,QAAQ,OAAI,EAAEoB,UAAU,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;AAC3F"},"metadata":{},"sourceType":"module","externalDependencies":[]}