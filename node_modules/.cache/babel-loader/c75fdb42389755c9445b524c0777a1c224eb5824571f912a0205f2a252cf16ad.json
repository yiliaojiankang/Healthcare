{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphWidth = 1200;\nvar graphHeight = 800;\nvar OVERLAP_QUOT = 10000000;\nvar MIN_DIST = 10;\nvar M_PI = 3.14159265358979323846;\nvar M_PI_2 = 1.57079632679489661923;\nvar PI_38 = M_PI * 0.375;\nvar PI_58 = M_PI * 0.625;\nvar nodeEdgeMap = new Map();\nvar CELL_W = 10;\nvar CELL_H = 10;\nvar T = 0.8;\nvar T_MIN = 0.1;\nvar R = 0.5;\nfunction distanceToNode(node1, node2, isHoriz) {\n  var x11 = node1.x - node1.size[0] / 2;\n  var y11 = node1.y - node1.size[1] / 2;\n  var x12 = node1.x + node1.size[0] / 2;\n  var y12 = node1.y + node1.size[1] / 2;\n  var x21 = node2.x - node2.size[0] / 2;\n  var y21 = node2.y - node2.size[1] / 2;\n  var x22 = node2.x + node2.size[0] / 2;\n  var y22 = node2.y + node2.size[1] / 2;\n  var cx1 = node1.x;\n  var cy1 = node1.y;\n  var cx2 = node2.x;\n  var cy2 = node2.y;\n  var dcx = cx2 - cx1;\n  // 两个节点间的方位角  \n  var qr = Math.atan2(dcx, cy2 - cy1);\n  var dx = 0;\n  var dy = 0;\n  var l1 = 0;\n  var l2 = 0;\n  if (qr > M_PI_2) {\n    dy = y11 - y22;\n    dx = x21 - x12;\n    l1 = parseFloat(dy ? (dy / Math.cos(qr)).toFixed(2) : dx.toFixed(2));\n    l2 = parseFloat(dx ? (dx / Math.sin(qr)).toFixed(2) : dy.toFixed(2));\n  } else if (0.0 < qr && qr <= M_PI_2) {\n    dy = y21 - y12;\n    dx = x21 - x12;\n    if (dy > dx) {\n      l1 = l2 = parseFloat(dy ? (dy / Math.cos(qr)).toFixed(2) : dx.toFixed(2));\n    } else {\n      l1 = l2 = parseFloat(dx ? (dx / Math.sin(qr)).toFixed(2) : dy.toFixed(2));\n    }\n  } else if (qr < -M_PI_2) {\n    dy = y11 - y22;\n    dx = -(x22 - x11);\n    if (dy > dx) {\n      l1 = l2 = parseFloat(dy ? (dy / Math.cos(qr)).toFixed(2) : dx.toFixed(2));\n    } else {\n      l1 = l2 = parseFloat(dx ? (dx / Math.sin(qr)).toFixed(2) : dy.toFixed(2));\n    }\n  } else {\n    dy = y21 - y12;\n    if (Math.abs(dcx) > (x12 - x11) / 2) {\n      dx = x11 - x22;\n    } else {\n      dx = dcx;\n    }\n    if (dy > dx) {\n      l1 = l2 = parseFloat(dy ? (dy / Math.cos(qr)).toFixed(2) : dx.toFixed(2));\n    } else {\n      l1 = l2 = parseFloat(dx && qr !== 0.0 ? (dx / Math.sin(qr)).toFixed(2) : dy.toFixed(2));\n    }\n  }\n  var aqr = parseFloat(qr.toFixed(2));\n  // 判断是否水平，角度\n  var newHoriz = isHoriz;\n  if (isHoriz) {\n    newHoriz = PI_38 < aqr && aqr < PI_58;\n  }\n  return {\n    distance: Math.abs(l1 < l2 ? l1 : l2),\n    isHoriz: newHoriz\n  };\n}\nfunction calcNodePair(nodeA, nodeB) {\n  // 确定两个节点间是否存在连线\n  var edges = nodeEdgeMap.get(nodeA.id) || [];\n  var isLinked = edges.find(function (edge) {\n    return edge.source === nodeB.id || edge.target === nodeB.id;\n  });\n  var areaA = nodeA.size[0] * nodeA.size[1];\n  var areaB = nodeB.size[0] * nodeB.size[1];\n  var node1 = areaA > areaB ? nodeB : nodeA;\n  var node2 = areaA > areaB ? nodeA : nodeB;\n  var x11 = node1.x - node1.size[0] / 2;\n  var y11 = node1.y - node1.size[1] / 2;\n  var x12 = node1.x + node1.size[0] / 2;\n  var y12 = node1.y + node1.size[1] / 2;\n  var x21 = node2.x - node2.size[0] / 2;\n  var y21 = node2.y - node2.size[1] / 2;\n  var x22 = node2.x + node2.size[0] / 2;\n  var y22 = node2.y + node2.size[1] / 2;\n  var cx1 = node1.x;\n  var cy1 = node1.y;\n  var cx2 = node2.x;\n  var cy2 = node2.y;\n  // Detect if nodes overlap  检查节点之间是否存在覆盖问题\n  var isoverlap = x12 >= x21 && x22 >= x11 && y12 >= y21 && y22 >= y11;\n  var e = 0;\n  var distance = 0;\n  if (isoverlap) {\n    distance = Math.sqrt(Math.pow(cx2 - cx1, 2) + Math.pow(cy2 - cy1, 2));\n    // calc area of overlap 计算重复区域的坐标和面积\n    var sx1 = x11 > x21 ? x11 : x21;\n    var sy1 = y11 > y21 ? y11 : y21;\n    var sx2 = x12 < x22 ? x12 : x22;\n    var sy2 = y12 < y22 ? y12 : y22;\n    var dsx = sx2 - sx1;\n    var dsy = sy2 - sy1;\n    var sov = dsx * dsy;\n    if (distance === 0.0) {\n      distance = 0.0000001;\n    }\n    e = MIN_DIST * 1 / distance * 100 + sov;\n    e *= OVERLAP_QUOT;\n  } else {\n    var isHoriz = false;\n    var res = distanceToNode(node1, node2, isHoriz);\n    distance = res.distance;\n    isHoriz = res.isHoriz;\n    if (distance <= MIN_DIST) {\n      if (distance !== 0) {\n        if (isLinked) {\n          e += MIN_DIST + OVERLAP_QUOT * 1 / distance;\n        } else {\n          e += MIN_DIST + OVERLAP_QUOT * MIN_DIST / distance;\n        }\n      } else {\n        e += OVERLAP_QUOT;\n      }\n    } else {\n      e += distance;\n      if (isLinked) {\n        e += distance * distance;\n      }\n    }\n  }\n  return e;\n}\nfunction calcEnergy(nodes) {\n  var energy = 0;\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.x < 0 || node.y < 0 || node.x > graphWidth || node.y > graphHeight) {\n      energy += 1000000000000;\n    }\n    for (var j = i + 1; j < nodes.length; j++) {\n      energy += calcNodePair(node, nodes[j]);\n    }\n  }\n  return energy;\n}\nfunction isCorrectPosition(node, newPosition, nodes, edges) {\n  var nodeIdxMap = new Map();\n  nodes.forEach(function (o, i) {\n    nodeIdxMap.set(o.id, o);\n  });\n  var relateEdges = edges.filter(function (edge) {\n    return edge.source === node.id || edge.target === node.id;\n  }) || [];\n  var relateNodes = [];\n  relateEdges.forEach(function (edge) {\n    var otherNodeId = edge.source === node.id ? edge.target : edge.source;\n    var otherNode = nodeIdxMap.get(otherNodeId);\n    if (otherNode) {\n      relateNodes.push(otherNode);\n    }\n  });\n  var flag = true;\n  for (var i = 0; i < relateNodes.length; i++) {\n    var item = relateNodes[i];\n    // 判断条件调整，节点的坐标不需要完全一致。可以根据节点间的夹角来判断\n    var delta = Math.atan((node.y - item.y) / (item.x - node.y)) * 180;\n    var newDelta = Math.atan((newPosition.y - item.y) / (item.x - newPosition.y)) * 180;\n    var isHor = delta < 30 || delta > 150;\n    var newIsHor = newDelta < 30 || newDelta > 150;\n    var isVer = delta > 70 && delta < 110;\n    var newIsVer = newDelta > 70 && newDelta < 110;\n    // 定义四个相似角度区间，0-15度，75-90度，90到105度，165到180度。\n    if (isHor && !newIsHor || delta * newDelta < 0) {\n      flag = false;\n      break;\n    } else if (isVer && !newIsVer || delta * newDelta < 0) {\n      flag = false;\n      break;\n    } else if ((item.x - node.x) * (item.x - newPosition.x) < 0) {\n      flag = false;\n      break;\n    } else if ((item.y - node.y) * (item.y - newPosition.y) < 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\nfunction shuffle(nodes, edges) {\n  var foundSmallerEnergy = false;\n  // 多次测试发现step为1时的效果最佳。\n  var step = 1;\n  var wstep = CELL_W * step;\n  var hstep = CELL_H * step;\n  var wsteps = [wstep, -wstep, 0, 0];\n  var hsteps = [0, 0, hstep, -hstep];\n  for (var i = 0; i < nodes.length; ++i) {\n    var node = nodes[i];\n    var nodeEnergy = calcNodeEnergy(node, nodes);\n    for (var ns = 0; ns < wsteps.length; ns++) {\n      // 判断新位置与其他连线节点的位置关系是否违规\n      var flag = isCorrectPosition(node, {\n        x: node.x + wsteps[ns],\n        y: node.y + hsteps[ns]\n      }, nodes, edges);\n      if (flag) {\n        // 节点朝上下左右四个方向移动，找到能量最小的那个位置\n        node.x += wsteps[ns];\n        node.y += hsteps[ns];\n        // 计算移动后节点的能量\n        var energy = calcNodeEnergy(node, nodes);\n        var rdm = Math.random();\n        if (energy < nodeEnergy) {\n          nodeEnergy = energy;\n          foundSmallerEnergy = true;\n        } else if (rdm < T && rdm > T_MIN) {\n          nodeEnergy = energy;\n          foundSmallerEnergy = true;\n        } else {\n          // 回归原位\n          node.x -= wsteps[ns];\n          node.y -= hsteps[ns];\n        }\n      }\n    }\n  }\n  if (T > T_MIN) {\n    T *= R;\n  }\n  // 重新计算图整体的能量\n  if (foundSmallerEnergy) {\n    return calcEnergy(nodes);\n  }\n  return 0;\n}\n// 计算节点的能量，\nfunction calcNodeEnergy(node, nodes) {\n  var e = 0.0;\n  if (node.x < 0 || node.y < 0 || node.x + node.size[0] + 20 > graphWidth || node.y + node.size[1] + 20 > graphHeight) {\n    e += 1000000000000.0;\n  }\n  for (var i = 0; i < nodes.length; ++i) {\n    if (node.id !== nodes[i].id) {\n      e += calcNodePair(node, nodes[i]);\n    }\n  }\n  return e;\n}\nfunction layout(nodes, edges) {\n  if (nodes.length === 0) {\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  }\n  nodes.forEach(function (node) {\n    var relateEdge = edges.filter(function (edge) {\n      return edge.source === node.id || edge.target === node.id;\n    });\n    nodeEdgeMap.set(node, relateEdge);\n  });\n  // 1. 初始化\n  // 将node按照连接数进行排序\n  nodes.sort(function (node1, node2) {\n    var _a, _b;\n    return ((_a = nodeEdgeMap.get(node1.id)) === null || _a === void 0 ? void 0 : _a.length) - ((_b = nodeEdgeMap.get(node2.id)) === null || _b === void 0 ? void 0 : _b.length);\n  });\n  // 2. 计算图能量\n  var minEnergy = calcEnergy(nodes);\n  var deSameCount = 20; // de=0 count\n  var de = 1; // energy delta\n  var prevEnergy = 0;\n  // 定义总的迭代次数。超过就停掉，防止死循环\n  var MAX_COUNT = 50;\n  var count = 0;\n  while (deSameCount > 0) {\n    count++;\n    if (count >= MAX_COUNT) {\n      break;\n    }\n    var ea = shuffle(nodes, edges);\n    if (ea !== 0) {\n      prevEnergy = ea;\n    }\n    de = prevEnergy - minEnergy;\n    minEnergy = prevEnergy;\n    if (de === 0) {\n      --deSameCount;\n    } else {\n      deSameCount = 20;\n    }\n  }\n  nodes.forEach(function (node) {\n    node.x = node.x - node.size[0] / 2;\n    node.y = node.y - node.size[1] / 2;\n  });\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n}\nexports.default = layout;","map":{"version":3,"names":["graphWidth","graphHeight","OVERLAP_QUOT","MIN_DIST","M_PI","M_PI_2","PI_38","PI_58","nodeEdgeMap","Map","CELL_W","CELL_H","T","T_MIN","R","distanceToNode","node1","node2","isHoriz","x11","x","size","y11","y","x12","y12","x21","y21","x22","y22","cx1","cy1","cx2","cy2","dcx","qr","Math","atan2","dx","dy","l1","l2","parseFloat","cos","toFixed","sin","abs","aqr","newHoriz","distance","calcNodePair","nodeA","nodeB","edges","get","id","isLinked","find","edge","source","target","areaA","areaB","isoverlap","e","sqrt","pow","sx1","sy1","sx2","sy2","dsx","dsy","sov","res","calcEnergy","nodes","energy","i","length","node","j","isCorrectPosition","newPosition","nodeIdxMap","forEach","o","set","relateEdges","filter","relateNodes","otherNodeId","otherNode","push","flag","item","delta","atan","newDelta","isHor","newIsHor","isVer","newIsVer","shuffle","foundSmallerEnergy","step","wstep","hstep","wsteps","hsteps","nodeEnergy","calcNodeEnergy","ns","rdm","random","layout","relateEdge","sort","_a","_b","minEnergy","deSameCount","de","prevEnergy","MAX_COUNT","count","ea","exports","default"],"sources":["../../../src/layout/er/mysqlWorkbench.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}