{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _dec, _dec2, _class, _class2, _descriptor;\n// lodashUtil\nimport { lodashUtil } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { gl } from \"../gl\";\nvar camelCase = lodashUtil.camelCase,\n  isNil = lodashUtil.isNil,\n  upperFirst = lodashUtil.upperFirst;\n/* babel-plugin-inline-import '../../../shaders/post-processing/quad.glsl' */\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport { TYPES } from \"../../../types\";\nimport { PassType } from \"../IMultiPassRenderer\";\n/**\n * 后处理 Pass 基类，通过 PostProcessor 驱动。\n *\n * 约定使用 u_Texture 传递渲染纹理。\n */\nvar BasePostProcessingPass = (_dec = injectable(), _dec2 = inject(TYPES.IShaderModuleService), _dec(_class = (_class2 = /*#__PURE__*/function () {\n  function BasePostProcessingPass() {\n    _classCallCheck(this, BasePostProcessingPass);\n    _initializerDefineProperty(this, \"shaderModuleService\", _descriptor, this);\n    _defineProperty(this, \"rendererService\", void 0);\n    _defineProperty(this, \"config\", void 0);\n    _defineProperty(this, \"quad\", quad);\n    /**\n     * 启用开关\n     */\n    _defineProperty(this, \"enabled\", true);\n    /**\n     * 是否渲染到屏幕\n     */\n    _defineProperty(this, \"renderToScreen\", false);\n    /**\n     * 渲染命令\n     */\n    _defineProperty(this, \"model\", void 0);\n    /**\n     * 效果名，便于在图层中引用\n     */\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"optionsToUpdate\", {});\n  }\n  _createClass(BasePostProcessingPass, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.name;\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(name) {\n      this.name = name;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return PassType.PostProcessing;\n    }\n  }, {\n    key: \"init\",\n    value: function init(layer, config) {\n      this.config = config;\n      this.rendererService = layer.getContainer().get(TYPES.IRendererService);\n      this.shaderModuleService = layer.getContainer().get(TYPES.IShaderModuleService);\n      var _this$rendererService = this.rendererService,\n        createAttribute = _this$rendererService.createAttribute,\n        createBuffer = _this$rendererService.createBuffer,\n        createModel = _this$rendererService.createModel;\n      var _this$setupShaders = this.setupShaders(),\n        vs = _this$setupShaders.vs,\n        fs = _this$setupShaders.fs,\n        uniforms = _this$setupShaders.uniforms;\n      this.model = createModel({\n        vs: vs,\n        fs: fs,\n        attributes: {\n          // 使用一个全屏三角形，相比 Quad 顶点数目更少\n          a_Position: createAttribute({\n            buffer: createBuffer({\n              data: [-4, -4, 4, -4, 0, 4],\n              type: gl.FLOAT\n            }),\n            size: 2\n          })\n        },\n        // @ts-ignore\n        uniforms: _objectSpread(_objectSpread({\n          // @ts-ignore\n          u_Texture: null\n        }, uniforms), this.config && this.convertOptionsToUniforms(this.config)),\n        depth: {\n          enable: false\n        },\n        count: 3,\n        blend: {\n          // copy pass 需要混合\n          enable: this.getName() === 'copy'\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(layer, tex) {\n      var _this = this;\n      var postProcessor = layer.multiPassRenderer.getPostProcessor();\n      var _this$rendererService2 = this.rendererService,\n        useFramebuffer = _this$rendererService2.useFramebuffer,\n        getViewportSize = _this$rendererService2.getViewportSize,\n        clear = _this$rendererService2.clear;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      useFramebuffer(this.renderToScreen ? null : postProcessor.getWriteFBO(), function () {\n        clear({\n          framebuffer: postProcessor.getWriteFBO(),\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0\n        });\n        var uniformOptions = _objectSpread({\n          u_BloomFinal: 0.0,\n          u_Texture: postProcessor.getReadFBO(),\n          // u_Texture: tex ? tex : postProcessor.getReadFBO(),\n          u_ViewportSize: [width, height]\n        }, _this.convertOptionsToUniforms(_this.optionsToUpdate));\n        if (tex) {\n          uniformOptions.u_BloomFinal = 1.0;\n          uniformOptions.u_Texture2 = tex;\n        }\n        _this.model.draw({\n          uniforms: uniformOptions\n        });\n      });\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"setEnabled\",\n    value: function setEnabled(enabled) {\n      this.enabled = enabled;\n    }\n  }, {\n    key: \"setRenderToScreen\",\n    value: function setRenderToScreen(renderToScreen) {\n      this.renderToScreen = renderToScreen;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(config) {\n      this.optionsToUpdate = _objectSpread(_objectSpread({}, this.optionsToUpdate), config);\n    }\n  }, {\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"convertOptionsToUniforms\",\n    value: function convertOptionsToUniforms(options) {\n      var uniforms = {};\n      Object.keys(options).forEach(function (optionName) {\n        // @ts-ignore\n        if (!isNil(options[optionName])) {\n          uniforms[\"u_\".concat(upperFirst(camelCase(optionName)))] =\n          // @ts-ignore\n          options[optionName];\n        }\n      });\n      return uniforms;\n    }\n  }]);\n  return BasePostProcessingPass;\n}(), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"shaderModuleService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);\nexport { BasePostProcessingPass as default };","map":{"version":3,"names":["_objectSpread","_initializerDefineProperty","_classCallCheck","_createClass","_defineProperty","_applyDecoratedDescriptor","_initializerWarningHelper","_dec","_dec2","_class","_class2","_descriptor","lodashUtil","inject","injectable","gl","camelCase","isNil","upperFirst","quad","TYPES","PassType","BasePostProcessingPass","IShaderModuleService","key","value","getName","name","setName","getType","PostProcessing","init","layer","config","rendererService","getContainer","get","IRendererService","shaderModuleService","_this$rendererService","createAttribute","createBuffer","createModel","_this$setupShaders","setupShaders","vs","fs","uniforms","model","attributes","a_Position","buffer","data","type","FLOAT","size","u_Texture","convertOptionsToUniforms","depth","enable","count","blend","render","tex","_this","postProcessor","multiPassRenderer","getPostProcessor","_this$rendererService2","useFramebuffer","getViewportSize","clear","_getViewportSize","width","height","renderToScreen","getWriteFBO","framebuffer","color","stencil","uniformOptions","u_BloomFinal","getReadFBO","u_ViewportSize","optionsToUpdate","u_Texture2","draw","isEnabled","enabled","setEnabled","setRenderToScreen","updateOptions","Error","options","Object","keys","forEach","optionName","concat","prototype","configurable","enumerable","writable","initializer","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-core/es/services/renderer/passes/BasePostProcessingPass.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _dec, _dec2, _class, _class2, _descriptor;\n// lodashUtil\nimport { lodashUtil } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { gl } from \"../gl\";\nvar camelCase = lodashUtil.camelCase,\n  isNil = lodashUtil.isNil,\n  upperFirst = lodashUtil.upperFirst;\n/* babel-plugin-inline-import '../../../shaders/post-processing/quad.glsl' */\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport { TYPES } from \"../../../types\";\nimport { PassType } from \"../IMultiPassRenderer\";\n/**\n * 后处理 Pass 基类，通过 PostProcessor 驱动。\n *\n * 约定使用 u_Texture 传递渲染纹理。\n */\nvar BasePostProcessingPass = (_dec = injectable(), _dec2 = inject(TYPES.IShaderModuleService), _dec(_class = (_class2 = /*#__PURE__*/function () {\n  function BasePostProcessingPass() {\n    _classCallCheck(this, BasePostProcessingPass);\n    _initializerDefineProperty(this, \"shaderModuleService\", _descriptor, this);\n    _defineProperty(this, \"rendererService\", void 0);\n    _defineProperty(this, \"config\", void 0);\n    _defineProperty(this, \"quad\", quad);\n    /**\n     * 启用开关\n     */\n    _defineProperty(this, \"enabled\", true);\n    /**\n     * 是否渲染到屏幕\n     */\n    _defineProperty(this, \"renderToScreen\", false);\n    /**\n     * 渲染命令\n     */\n    _defineProperty(this, \"model\", void 0);\n    /**\n     * 效果名，便于在图层中引用\n     */\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"optionsToUpdate\", {});\n  }\n  _createClass(BasePostProcessingPass, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.name;\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(name) {\n      this.name = name;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return PassType.PostProcessing;\n    }\n  }, {\n    key: \"init\",\n    value: function init(layer, config) {\n      this.config = config;\n      this.rendererService = layer.getContainer().get(TYPES.IRendererService);\n      this.shaderModuleService = layer.getContainer().get(TYPES.IShaderModuleService);\n      var _this$rendererService = this.rendererService,\n        createAttribute = _this$rendererService.createAttribute,\n        createBuffer = _this$rendererService.createBuffer,\n        createModel = _this$rendererService.createModel;\n      var _this$setupShaders = this.setupShaders(),\n        vs = _this$setupShaders.vs,\n        fs = _this$setupShaders.fs,\n        uniforms = _this$setupShaders.uniforms;\n      this.model = createModel({\n        vs: vs,\n        fs: fs,\n        attributes: {\n          // 使用一个全屏三角形，相比 Quad 顶点数目更少\n          a_Position: createAttribute({\n            buffer: createBuffer({\n              data: [-4, -4, 4, -4, 0, 4],\n              type: gl.FLOAT\n            }),\n            size: 2\n          })\n        },\n        // @ts-ignore\n        uniforms: _objectSpread(_objectSpread({\n          // @ts-ignore\n          u_Texture: null\n        }, uniforms), this.config && this.convertOptionsToUniforms(this.config)),\n        depth: {\n          enable: false\n        },\n        count: 3,\n        blend: {\n          // copy pass 需要混合\n          enable: this.getName() === 'copy'\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(layer, tex) {\n      var _this = this;\n      var postProcessor = layer.multiPassRenderer.getPostProcessor();\n      var _this$rendererService2 = this.rendererService,\n        useFramebuffer = _this$rendererService2.useFramebuffer,\n        getViewportSize = _this$rendererService2.getViewportSize,\n        clear = _this$rendererService2.clear;\n      var _getViewportSize = getViewportSize(),\n        width = _getViewportSize.width,\n        height = _getViewportSize.height;\n      useFramebuffer(this.renderToScreen ? null : postProcessor.getWriteFBO(), function () {\n        clear({\n          framebuffer: postProcessor.getWriteFBO(),\n          color: [0, 0, 0, 0],\n          depth: 1,\n          stencil: 0\n        });\n        var uniformOptions = _objectSpread({\n          u_BloomFinal: 0.0,\n          u_Texture: postProcessor.getReadFBO(),\n          // u_Texture: tex ? tex : postProcessor.getReadFBO(),\n          u_ViewportSize: [width, height]\n        }, _this.convertOptionsToUniforms(_this.optionsToUpdate));\n        if (tex) {\n          uniformOptions.u_BloomFinal = 1.0;\n          uniformOptions.u_Texture2 = tex;\n        }\n        _this.model.draw({\n          uniforms: uniformOptions\n        });\n      });\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"setEnabled\",\n    value: function setEnabled(enabled) {\n      this.enabled = enabled;\n    }\n  }, {\n    key: \"setRenderToScreen\",\n    value: function setRenderToScreen(renderToScreen) {\n      this.renderToScreen = renderToScreen;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(config) {\n      this.optionsToUpdate = _objectSpread(_objectSpread({}, this.optionsToUpdate), config);\n    }\n  }, {\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"convertOptionsToUniforms\",\n    value: function convertOptionsToUniforms(options) {\n      var uniforms = {};\n      Object.keys(options).forEach(function (optionName) {\n        // @ts-ignore\n        if (!isNil(options[optionName])) {\n          uniforms[\"u_\".concat(upperFirst(camelCase(optionName)))] =\n          // @ts-ignore\n          options[optionName];\n        }\n      });\n      return uniforms;\n    }\n  }]);\n  return BasePostProcessingPass;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"shaderModuleService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { BasePostProcessingPass as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}