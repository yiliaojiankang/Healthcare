{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { addViewAnimation, deepAssign, pick } from '../../utils';\n/**\n *\n * @param params 分面图 参数\n * @returns facet eachView 的回调设置每个 view 的展示\n */\nexport function execViewAdaptor(viewOfG2, options) {\n  var data = options.data,\n    coordinate = options.coordinate,\n    interactions = options.interactions,\n    annotations = options.annotations,\n    animation = options.animation,\n    tooltip = options.tooltip,\n    axes = options.axes,\n    meta = options.meta,\n    geometries = options.geometries;\n  // 1. data, optional\n  if (data) {\n    viewOfG2.data(data);\n  }\n  // 2. meta 配置\n  var scales = {};\n  if (axes) {\n    each(axes, function (axis, field) {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n  }\n  scales = deepAssign({}, meta, scales);\n  viewOfG2.scale(scales);\n  // 3. coordinate 配置 (默认由顶层决定)\n  if (coordinate) {\n    viewOfG2.coordinate(coordinate);\n  }\n  // 4. axis 轴配置 (默认由顶层决定，但可以通过 false 强制关闭)\n  if (axes === false) {\n    viewOfG2.axis(false);\n  } else {\n    each(axes, function (axis, field) {\n      viewOfG2.axis(field, axis);\n    });\n  }\n  each(geometries, function (geometry) {\n    // Geometry\n    var ext = geometryAdaptor({\n      chart: viewOfG2,\n      options: geometry\n    }).ext;\n    // Geometry adjust\n    var adjust = geometry.adjust;\n    if (adjust) {\n      ext.geometry.adjust(adjust);\n    }\n  });\n  // 5. interactions\n  each(interactions, function (interaction) {\n    if (interaction.enable === false) {\n      viewOfG2.removeInteraction(interaction.type);\n    } else {\n      viewOfG2.interaction(interaction.type, interaction.cfg);\n    }\n  });\n  // 6. annotations\n  each(annotations, function (annotation) {\n    viewOfG2.annotation()[annotation.type](__assign({}, annotation));\n  });\n  // 7. animation (先做动画)\n  addViewAnimation(viewOfG2, animation);\n  if (tooltip) {\n    // 8. tooltip\n    viewOfG2.interaction('tooltip');\n    viewOfG2.tooltip(tooltip);\n  } else if (tooltip === false) {\n    viewOfG2.removeInteraction('tooltip');\n  }\n}","map":{"version":3,"names":["each","geometry","geometryAdaptor","AXIS_META_CONFIG_KEYS","addViewAnimation","deepAssign","pick","execViewAdaptor","viewOfG2","options","data","coordinate","interactions","annotations","animation","tooltip","axes","meta","geometries","scales","axis","field","scale","ext","chart","adjust","interaction","enable","removeInteraction","type","cfg","annotation","__assign"],"sources":["../../../src/plots/facet/utils.ts"],"sourcesContent":["import { View } from '@antv/g2';\nimport { each } from '@antv/util';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { Axis, Interaction, Options } from '../../types';\nimport { addViewAnimation, deepAssign, pick } from '../../utils';\nimport { IView } from './types';\n\n/**\n *\n * @param params 分面图 参数\n * @returns facet eachView 的回调设置每个 view 的展示\n */\nexport function execViewAdaptor(viewOfG2: View, options: IView): void {\n  const { data, coordinate, interactions, annotations, animation, tooltip, axes, meta, geometries } = options;\n\n  // 1. data, optional\n  if (data) {\n    viewOfG2.data(data);\n  }\n\n  // 2. meta 配置\n  let scales: Record<string, any> = {};\n  if (axes) {\n    each(axes, (axis: Axis, field: string) => {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n  }\n\n  scales = deepAssign({}, meta, scales);\n  viewOfG2.scale(scales);\n\n  // 3. coordinate 配置 (默认由顶层决定)\n  if (coordinate) {\n    viewOfG2.coordinate(coordinate);\n  }\n\n  // 4. axis 轴配置 (默认由顶层决定，但可以通过 false 强制关闭)\n  if (axes === false) {\n    viewOfG2.axis(false);\n  } else {\n    each(axes, (axis: Axis, field: string) => {\n      viewOfG2.axis(field, axis);\n    });\n  }\n\n  each(geometries, (geometry) => {\n    // Geometry\n    const { ext } = geometryAdaptor({\n      chart: viewOfG2,\n      options: geometry,\n    });\n\n    // Geometry adjust\n    const { adjust } = geometry;\n    if (adjust) {\n      ext.geometry.adjust(adjust);\n    }\n  });\n\n  // 5. interactions\n  each(interactions, (interaction: Interaction) => {\n    if (interaction.enable === false) {\n      viewOfG2.removeInteraction(interaction.type);\n    } else {\n      viewOfG2.interaction(interaction.type, interaction.cfg);\n    }\n  });\n  // 6. annotations\n  each(annotations, (annotation) => {\n    viewOfG2.annotation()[annotation.type]({\n      ...annotation,\n    });\n  });\n\n  // 7. animation (先做动画)\n  addViewAnimation(viewOfG2, animation as Options['animation']);\n\n  if (tooltip) {\n    // 8. tooltip\n    viewOfG2.interaction('tooltip');\n    viewOfG2.tooltip(tooltip);\n  } else if (tooltip === false) {\n    viewOfG2.removeInteraction('tooltip');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}