{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { get, each } from '@antv/util';\nimport { intersect } from '../../../util/collision-detect';\nimport { getLabelBackgroundInfo } from '../util';\nimport { createWorker } from '../util/createWorker';\nimport { code as layoutCode } from './worker/hide-overlap';\nvar layout = function (items) {\n  var boxes = items.slice();\n  for (var i = 0; i < boxes.length; i++) {\n    var box1 = boxes[i];\n    if (box1.visible) {\n      for (var j = i + 1; j < boxes.length; j++) {\n        var box2 = boxes[j];\n        if (box1 !== box2 && box2.visible) {\n          if (intersect(box1, box2)) {\n            box2.visible = false;\n          }\n        }\n      }\n    }\n  }\n  return boxes;\n};\nvar cache = new Map();\nvar worker = createWorker(layoutCode);\n/**\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行隐藏（非移除）\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\nexport function hideOverlap(labelItems, labels, shapes, region) {\n  return __awaiter(this, void 0, void 0, function () {\n    var boxes, memoKey, cb, params, res, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          boxes = labels.map(function (d, idx) {\n            return __assign(__assign({}, getLabelBackgroundInfo(d, labelItems[idx], get(labelItems[idx], 'background.padding'))), {\n              visible: true\n            });\n          });\n          memoKey = JSON.stringify(boxes);\n          cb = function (items) {\n            cache.set(memoKey, items);\n            each(items, function (_a, idx) {\n              var visible = _a.visible;\n              var labelShape = labels[idx];\n              if (visible) {\n                labelShape === null || labelShape === void 0 ? void 0 : labelShape.show();\n              } else {\n                labelShape === null || labelShape === void 0 ? void 0 : labelShape.hide();\n              }\n            });\n            return items;\n          };\n          if (!cache.get(memoKey)) return [3 /*break*/, 1];\n          cb(cache.get(memoKey));\n          return [3 /*break*/, 7];\n        case 1:\n          if (!worker) return [3 /*break*/, 6];\n          _a.label = 2;\n        case 2:\n          _a.trys.push([2, 4,, 5]);\n          params = JSON.stringify({\n            type: 'hide-overlap',\n            items: boxes\n          });\n          return [4 /*yield*/, worker.post(params, function () {\n            return cb(layout(boxes));\n          })];\n        case 3:\n          res = _a.sent();\n          cb(Array.isArray(res.data) ? res.data : []);\n          return [3 /*break*/, 5];\n        case 4:\n          e_1 = _a.sent();\n          console.error(e_1);\n          cb(layout(boxes));\n          return [3 /*break*/, 5];\n        case 5:\n          return [3 /*break*/, 7];\n        case 6:\n          // Normal layout in main thread.\n          cb(layout(boxes));\n          _a.label = 7;\n        case 7:\n          return [2 /*return*/];\n      }\n    });\n  });\n}","map":{"version":3,"names":["get","each","intersect","getLabelBackgroundInfo","createWorker","code","layoutCode","layout","items","boxes","slice","i","length","box1","visible","j","box2","cache","Map","worker","hideOverlap","labelItems","labels","shapes","region","map","d","idx","__assign","memoKey","JSON","stringify","cb","set","_a","labelShape","show","hide","params","type","post","res","sent","Array","isArray","data","console","error","e_1"],"sources":["../../../../src/geometry/label/layout/hide-overlap.ts"],"sourcesContent":["import { get, each } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { intersect } from '../../../util/collision-detect';\nimport { LabelItem } from '../interface';\nimport { getLabelBackgroundInfo } from '../util';\nimport { createWorker } from '../util/createWorker';\nimport { code as layoutCode } from './worker/hide-overlap';\n\ntype Item = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  rotation?: number;\n  visible?: boolean;\n};\n\nconst layout = (items: Item[]): Item[] => {\n  const boxes = items.slice();\n  for (let i = 0; i < boxes.length; i++) {\n    const box1 = boxes[i];\n    if (box1.visible) {\n      for (let j = i + 1; j < boxes.length; j++) {\n        const box2 = boxes[j];\n        if (box1 !== box2 && box2.visible) {\n          if (intersect(box1, box2)) {\n            box2.visible = false;\n          }\n        }\n      }\n    }\n  }\n  return boxes;\n};\n\nconst cache: Map<string, any> = new Map();\nconst worker = createWorker(layoutCode);\n\n/**\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行隐藏（非移除）\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\nexport async function hideOverlap(\n  labelItems: LabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox\n) {\n  const boxes = labels.map((d, idx) => ({\n    ...getLabelBackgroundInfo(d, labelItems[idx], get(labelItems[idx], 'background.padding')),\n    visible: true,\n  }));\n  const memoKey = JSON.stringify(boxes);\n  const cb = (items: Item[]) => {\n    cache.set(memoKey, items);\n    each(items, ({ visible }, idx) => {\n      const labelShape = labels[idx];\n      if (visible) {\n        labelShape?.show();\n      } else {\n        labelShape?.hide();\n      }\n    });\n    return items;\n  };\n  if (cache.get(memoKey)) {\n    cb(cache.get(memoKey));\n  } else if (worker) {\n    // Do layout in worker.\n    try {\n      const params = JSON.stringify({ type: 'hide-overlap', items: boxes });\n      const res = await worker.post(params, () => cb(layout(boxes)));\n      cb(Array.isArray(res.data) ? res.data : []);\n    } catch (e) {\n      console.error(e);\n      cb(layout(boxes));\n    }\n  } else {\n    // Normal layout in main thread.\n    cb(layout(boxes));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}