{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { LineTriangulation, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { LinearDir, TextureBlend } from \"../../core/interface\";\n// import { LineTriangulation } from '../../core/triangulation';\n\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\n/* babel-plugin-inline-import '../shaders/line/line_frag.glsl' */\nvar line_frag = \"// #extension GL_OES_standard_derivatives : enable\\n#define Animate 0.0\\n#define LineTexture 1.0\\n\\nuniform sampler2D u_texture;\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_animate: [ 1., 2., 1.0, 0.2 ];\\n  vec4 u_dash_array;\\n  vec4 u_blur;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec2 u_textSize;\\n  float u_icon_step: 100;\\n  float u_heightfixed: 0.0;\\n  float u_vertexScale: 1.0;\\n  float u_raisingHeight: 0.0;\\n  float u_strokeWidth: 0.0;\\n  float u_textureBlend;\\n  float u_line_texture;\\n  float u_linearDir: 1.0;\\n  float u_linearColor: 0;\\n  float u_time;\\n};\\n\\nin vec4 v_color;\\nin vec4 v_stroke;\\n// dash\\nin vec4 v_dash_array;\\nin float v_d_distance_ratio;\\nin vec2 v_iconMapUV;\\nin vec4 v_texture_data;\\n\\nout vec4 outputColor;\\n#pragma include \\\"picking\\\"\\n\\n// [animate, duration, interval, trailLength],\\nvoid main() {\\n  if(u_dash_array!=vec4(0.0)){\\n    float dashLength = mod(v_d_distance_ratio, v_dash_array.x + v_dash_array.y + v_dash_array.z + v_dash_array.w);\\n    if(!(dashLength < v_dash_array.x || (dashLength > (v_dash_array.x + v_dash_array.y) && dashLength <  v_dash_array.x + v_dash_array.y + v_dash_array.z))) {\\n      // \\u865A\\u7EBF\\u90E8\\u5206\\n      discard;\\n    };\\n  }\\n  float animateSpeed = 0.0; // \\u8FD0\\u52A8\\u901F\\u5EA6\\n  float d_distance_ratio = v_texture_data.r; // \\u5F53\\u524D\\u70B9\\u4F4D\\u8DDD\\u79BB\\u5360\\u7EBF\\u603B\\u957F\\u7684\\u6BD4\\u4F8B\\n  if(u_linearDir < 1.0) {\\n    d_distance_ratio = v_texture_data.a;\\n  }\\n  if(u_linearColor == 1.0) { // \\u4F7F\\u7528\\u6E10\\u53D8\\u989C\\u8272\\n    outputColor = mix(u_sourceColor, u_targetColor, d_distance_ratio);\\n    outputColor.a *= v_color.a;\\n  } else { // \\u4F7F\\u7528 color \\u65B9\\u6CD5\\u4F20\\u5165\\u7684\\u989C\\u8272\\n     outputColor = v_color;\\n  }\\n  // anti-alias\\n  // float blur = 1.0 - smoothstep(u_blur, 1., length(v_normal.xy));\\n  if(u_animate.x == Animate) {\\n      animateSpeed = u_time / u_animate.y;\\n       float alpha =1.0 - fract( mod(1.0- d_distance_ratio, u_animate.z)* (1.0/ u_animate.z) + animateSpeed);\\n      alpha = (alpha + u_animate.w -1.0) / u_animate.w;\\n      alpha = smoothstep(0., 1., alpha);\\n      outputColor.a *= alpha;\\n  }\\n\\n  if(u_line_texture == LineTexture) { // while load texture\\n    float aDistance = v_texture_data.g;      // \\u5F53\\u524D\\u9876\\u70B9\\u7684\\u8DDD\\u79BB\\n    float d_texPixelLen = v_texture_data.b;  // \\u8D34\\u56FE\\u7684\\u50CF\\u7D20\\u957F\\u5EA6\\uFF0C\\u6839\\u636E\\u5730\\u56FE\\u5C42\\u7EA7\\u7F29\\u653E\\n    float u = fract(mod(aDistance, d_texPixelLen)/d_texPixelLen - animateSpeed);\\n    float v = v_texture_data.a;  // \\u7EBF\\u56FE\\u5C42\\u8D34\\u56FE\\u90E8\\u5206\\u7684 v \\u5750\\u6807\\u503C\\n\\n    // v = max(smoothstep(0.95, 1.0, v), v);\\n    vec2 uv= v_iconMapUV / u_textSize + vec2(u, v) / u_textSize * 64.;\\n     vec4 pattern = texture(SAMPLER_2D(u_texture), uv);\\n\\n    if(u_textureBlend == 0.0) { // normal\\n      pattern.a = 0.0;\\n      outputColor += pattern;\\n    } else { // replace\\n        pattern.a *= v_color.a;\\n        if(outputColor.a <= 0.0) {\\n          pattern.a = 0.0;\\n        }\\n        outputColor = pattern;\\n    }\\n  } \\n\\n  float v = v_texture_data.a;\\n  float strokeWidth = min(0.5, u_strokeWidth);\\n  // \\u7ED8\\u5236 border\\n  if(strokeWidth > 0.01) {\\n    float borderOuterWidth = strokeWidth / 2.0;\\n\\n\\n    if(v >= 1.0 - strokeWidth || v <= strokeWidth) {\\n      if(v > strokeWidth) { // \\u5916\\u4FA7\\n        float linear = smoothstep(0.0, 1.0, (v - (1.0 - strokeWidth))/strokeWidth);\\n        //  float linear = step(0.0, (v - (1.0 - borderWidth))/borderWidth);\\n        outputColor.rgb = mix(outputColor.rgb, v_stroke.rgb, linear);\\n      } else if(v <= strokeWidth) {\\n        float linear = smoothstep(0.0, 1.0, v/strokeWidth);\\n        outputColor.rgb = mix(v_stroke.rgb, outputColor.rgb, linear);\\n      }\\n    }\\n\\n    if(v < borderOuterWidth) {\\n      outputColor.a = mix(0.0, outputColor.a, v/borderOuterWidth);\\n    } else if(v > 1.0 - borderOuterWidth) {\\n      outputColor.a = mix(outputColor.a, 0.0, (v - (1.0 - borderOuterWidth))/borderOuterWidth);\\n    }\\n  }\\n\\n  // blur\\n  float blurV = v_texture_data.a;\\n  if(blurV < 0.5) {\\n    outputColor.a *= mix(u_blur.r, u_blur.g, blurV/0.5);\\n  } else {\\n    outputColor.a *= mix(u_blur.g, u_blur.b, (blurV - 0.5)/0.5);\\n  }\\n  \\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/line/line_vert.glsl' */\nvar line_vert = \"\\n#define Animate 0.0\\n\\nlayout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec2 a_Size;\\nlayout(location = 10) in vec3 a_DistanceAndIndexAndMiter;\\nlayout(location = 13) in vec4 a_Normal_Total_Distance;\\nlayout(location = 14) in vec2 a_iconMapUV;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_animate: [ 1., 2., 1.0, 0.2 ];\\n  vec4 u_dash_array;\\n  vec4 u_blur;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec2 u_textSize;\\n  float u_icon_step: 100;\\n  float u_heightfixed: 0.0;\\n  float u_vertexScale: 1.0;\\n  float u_raisingHeight: 0.0;\\n  float u_strokeWidth: 0.0;\\n  float u_textureBlend;\\n  float u_line_texture;\\n  float u_linearDir: 1.0;\\n  float u_linearColor: 0;\\n  float u_time;\\n};\\n\\n\\nout vec4 v_color;\\nout vec4 v_stroke;\\n//dash\\nout vec4 v_dash_array;\\nout float v_d_distance_ratio;\\n// texV \\u7EBF\\u56FE\\u5C42 - \\u8D34\\u56FE\\u90E8\\u5206\\u7684 v \\u5750\\u6807\\uFF08\\u7EBF\\u7684\\u5BBD\\u5EA6\\u65B9\\u5411\\uFF09\\nout vec2 v_iconMapUV;\\nout vec4 v_texture_data;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  vec2 a_DistanceAndIndex = a_DistanceAndIndexAndMiter.xy;\\n  float a_Miter = a_DistanceAndIndexAndMiter.z;\\n  vec3 a_Normal = a_Normal_Total_Distance.xyz;\\n  float a_Total_Distance = a_Normal_Total_Distance.w;\\n  //dash\\u8F93\\u51FA\\n  v_dash_array = pow(2.0, 20.0 - u_Zoom) * u_dash_array / a_Total_Distance;\\n  v_d_distance_ratio = a_DistanceAndIndex.x / a_Total_Distance;\\n\\n  // cal style mapping - \\u6570\\u636E\\u7EB9\\u7406\\u6620\\u5C04\\u90E8\\u5206\\u7684\\u8BA1\\u7B97\\n  float d_texPixelLen;    // \\u8D34\\u56FE\\u7684\\u50CF\\u7D20\\u957F\\u5EA6\\uFF0C\\u6839\\u636E\\u5730\\u56FE\\u5C42\\u7EA7\\u7F29\\u653E\\n  v_iconMapUV = a_iconMapUV;\\n  d_texPixelLen = project_float_pixel(u_icon_step);\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    d_texPixelLen *= 10.0;\\n  }\\n\\n  v_color = a_Color;\\n  v_color.a *= opacity;\\n  v_stroke = stroke;\\n\\n  vec3 size = a_Miter * setPickingSize(a_Size.x) * reverse_offset_normal(a_Normal);\\n  \\n  vec2 offset = project_pixel(size.xy);\\n\\n  float lineDistance = a_DistanceAndIndex.x;\\n  float currentLinePointRatio = lineDistance / a_Total_Distance;\\n \\n\\n  float lineOffsetWidth = length(offset + offset * sign(a_Miter)); // \\u7EBF\\u6A2A\\u5411\\u504F\\u79FB\\u7684\\u8DDD\\u79BB\\uFF08\\u5411\\u4E24\\u4FA7\\u504F\\u79FB\\u7684\\u548C\\uFF09\\n  float linePixelSize = project_pixel(a_Size.x) * 2.0;  // \\u5B9A\\u70B9\\u4F4D\\u7F6E\\u504F\\u79FB\\uFF0C\\u6309\\u5730\\u56FE\\u7B49\\u7EA7\\u7F29\\u653E\\u540E\\u7684\\u8DDD\\u79BB \\u5355\\u4FA7 * 2\\n  float texV = lineOffsetWidth/linePixelSize; // \\u7EBF\\u56FE\\u5C42\\u8D34\\u56FE\\u90E8\\u5206\\u7684 v \\u5750\\u6807\\u503C\\n  \\n  v_texture_data = vec4(currentLinePointRatio, lineDistance, d_texPixelLen, texV);\\n  // \\u8BBE\\u7F6E\\u6570\\u636E\\u96C6\\u7684\\u53C2\\u6570\\n\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0, 1.0));\\n\\n  // gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, a_Size.y, 1.0));\\n\\n  float h = float(a_Position.z) * u_vertexScale; // \\u7EBF\\u9876\\u70B9\\u7684\\u9AD8\\u5EA6 - \\u517C\\u5BB9\\u4E0D\\u5B58\\u5728\\u7B2C\\u4E09\\u4E2A\\u6570\\u503C\\u7684\\u60C5\\u51B5 vertex height\\n  float lineHeight = a_Size.y; // size \\u7B2C\\u4E8C\\u4E2A\\u53C2\\u6570\\u4EE3\\u8868\\u7684\\u9AD8\\u5EA6 [linewidth, lineheight]\\n\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) { // gaode2.x\\n    lineHeight *= 0.2; // \\u4FDD\\u6301\\u548C amap/mapbox \\u4E00\\u81F4\\u7684\\u6548\\u679C\\n    h *= 0.2;\\n    if(u_heightfixed < 1.0) {\\n      lineHeight = project_pixel(a_Size.y);\\n    }\\n    gl_Position = u_Mvp * (vec4(project_pos.xy + offset, lineHeight + h + u_raisingHeight, 1.0));\\n  } else {\\n    // mapbox -  amap\\n    \\n    // \\u517C\\u5BB9 mapbox \\u5728\\u7EBF\\u9AD8\\u5EA6\\u4E0A\\u7684\\u6548\\u679C\\u8868\\u73B0\\u57FA\\u672C\\u4E00\\u81F4\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n      // mapbox\\n      // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n      float mapboxZoomScale = 4.0/pow(2.0, 21.0 - u_Zoom);\\n      h *= mapboxZoomScale;\\n      h += u_raisingHeight * mapboxZoomScale;\\n      if(u_heightfixed > 0.0) {\\n        lineHeight *= mapboxZoomScale;\\n      }\\n      \\n    } else {\\n      // amap\\n      h += u_raisingHeight;\\n      // lineHeight \\u9876\\u70B9\\u504F\\u79FB\\u9AD8\\u5EA6\\n      if(u_heightfixed < 1.0) {\\n        lineHeight *= pow(2.0, 20.0 - u_Zoom);\\n      }\\n    }\\n\\n    gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, lineHeight + h, 1.0));\\n  }\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nvar lineStyleObj = {\n  solid: 0.0,\n  dash: 1.0\n};\nvar LineModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(LineModel, _BaseModel);\n  var _super = _createSuper(LineModel);\n  function LineModel() {\n    var _this;\n    _classCallCheck(this, LineModel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"textureEventFlag\", false);\n    _defineProperty(_assertThisInitialized(_this), \"texture\", _this.createTexture2D({\n      data: new Uint8Array([0, 0, 0, 0]),\n      width: 1,\n      height: 1\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"updateTexture\", function () {\n      var createTexture2D = _this.rendererService.createTexture2D;\n      if (_this.textures.length === 0) {\n        _this.textures = [_this.texture];\n      }\n      if (_this.texture) {\n        _this.texture.update({\n          data: _this.iconService.getCanvas()\n        });\n        _this.layer.render();\n        return;\n      }\n      _this.texture = createTexture2D({\n        data: _this.iconService.getCanvas(),\n        mag: gl.NEAREST,\n        min: gl.NEAREST,\n        premultiplyAlpha: false,\n        width: 1024,\n        height: _this.iconService.canvasHeight || 128\n      });\n    });\n    return _this;\n  }\n  _createClass(LineModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        sourceColor = _ref.sourceColor,\n        targetColor = _ref.targetColor,\n        _ref$textureBlend = _ref.textureBlend,\n        textureBlend = _ref$textureBlend === void 0 ? 'normal' : _ref$textureBlend,\n        _ref$lineType = _ref.lineType,\n        lineType = _ref$lineType === void 0 ? 'solid' : _ref$lineType,\n        _ref$dashArray = _ref.dashArray,\n        dashArray = _ref$dashArray === void 0 ? [10, 5, 0, 0] : _ref$dashArray,\n        _ref$lineTexture = _ref.lineTexture,\n        lineTexture = _ref$lineTexture === void 0 ? false : _ref$lineTexture,\n        _ref$iconStep = _ref.iconStep,\n        iconStep = _ref$iconStep === void 0 ? 100 : _ref$iconStep,\n        _ref$vertexHeightScal = _ref.vertexHeightScale,\n        vertexHeightScale = _ref$vertexHeightScal === void 0 ? 20.0 : _ref$vertexHeightScal,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 0.0 : _ref$strokeWidth,\n        _ref$raisingHeight = _ref.raisingHeight,\n        raisingHeight = _ref$raisingHeight === void 0 ? 0 : _ref$raisingHeight,\n        _ref$heightfixed = _ref.heightfixed,\n        heightfixed = _ref$heightfixed === void 0 ? false : _ref$heightfixed,\n        _ref$linearDir = _ref.linearDir,\n        linearDir = _ref$linearDir === void 0 ? LinearDir.VERTICAL : _ref$linearDir,\n        _ref$blur = _ref.blur,\n        blur = _ref$blur === void 0 ? [1, 1, 1, 0] : _ref$blur;\n      var u_dash_array = dashArray;\n      if (lineType !== 'dash') {\n        u_dash_array = [0, 0, 0, 0];\n      }\n      if (u_dash_array.length === 2) {\n        u_dash_array.push(0, 0);\n      }\n      if (this.rendererService.getDirty() && this.texture) {\n        this.texture.bind();\n      }\n      var _ref2 = this.layer.getLayerConfig(),\n        animateOption = _ref2.animateOption;\n      // 转化渐变色\n      var useLinearColor = 0; // 默认不生效\n      var sourceColorArr = [0, 0, 0, 0];\n      var targetColorArr = [0, 0, 0, 0];\n      if (sourceColor && targetColor) {\n        sourceColorArr = rgb2arr(sourceColor);\n        targetColorArr = rgb2arr(targetColor);\n        useLinearColor = 1;\n      }\n      var commonOptions = {\n        u_animate: this.animateOption2Array(animateOption),\n        u_dash_array: u_dash_array,\n        u_blur: blur,\n        u_sourceColor: sourceColorArr,\n        u_targetColor: targetColorArr,\n        u_textSize: [1024, this.iconService.canvasHeight || 128],\n        u_icon_step: iconStep,\n        // 是否固定高度\n        u_heightfixed: Number(heightfixed),\n        // 顶点高度 scale\n        u_vertexScale: vertexHeightScale,\n        u_raisingHeight: Number(raisingHeight),\n        // line border 参数\n        u_strokeWidth: strokeWidth,\n        u_textureBlend: textureBlend === TextureBlend.NORMAL ? 0.0 : 1.0,\n        u_line_texture: lineTexture ? 1.0 : 0.0,\n        // 传入线的标识\n        u_linearDir: linearDir === LinearDir.VERTICAL ? 1.0 : 0.0,\n        u_linearColor: useLinearColor,\n        u_time: this.layer.getLayerAnimateTime() || 0\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n    // public getAnimateUniforms(): IModelUniform {\n    //   const { animateOption } = this.layer.getLayerConfig() as ILayerConfig;\n    //   return {\n    //     u_animate: this.animateOption2Array(animateOption as IAnimateOption),\n    //     u_time: this.layer.getLayerAnimateTime(),\n    //   };\n    // }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.initUniformsBuffer();\n              // this.updateTexture();\n              // this.iconService.on('imageUpdate', this.updateTexture);\n              if (!this.textureEventFlag) {\n                this.textureEventFlag = true;\n                this.updateTexture();\n                this.iconService.on('imageUpdate', this.updateTexture);\n              }\n              return _context.abrupt(\"return\", this.buildModels());\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"clearModels\",\n    value: function clearModels() {\n      var _this$texture;\n      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n      this.iconService.off('imageUpdate', this.updateTexture);\n    }\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _ref3, _ref3$depth, depth, _this$getShaders, frag, vert, type, model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3 = this.layer.getLayerConfig(), _ref3$depth = _ref3.depth, depth = _ref3$depth === void 0 ? false : _ref3$depth;\n              _this$getShaders = this.getShaders(), frag = _this$getShaders.frag, vert = _this$getShaders.vert, type = _this$getShaders.type; // console.log(frag)\n              this.layer.triangulation = LineTriangulation;\n              _context2.next = 5;\n              return this.layer.buildLayerModel({\n                moduleName: 'line' + type,\n                vertexShader: vert,\n                fragmentShader: frag,\n                triangulation: LineTriangulation,\n                inject: this.getInject(),\n                depth: {\n                  enable: depth\n                }\n              });\n            case 5:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n    /**\n     * 根据参数获取不同的 shader 代码\n     * @returns\n     */\n  }, {\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        frag: line_frag,\n        vert: line_vert,\n        type: ''\n      };\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      var _this2 = this;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'distanceAndIndex',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_DistanceAndIndexAndMiter',\n          shaderLocation: 10,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal, vertexIndex) {\n            return vertexIndex === undefined ? [vertex[3], 10, vertex[4]] : [vertex[3], vertexIndex, vertex[4]];\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            return Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'normal_total_distance',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Normal_Total_Distance',\n          shaderLocation: ShaderLocation.NORMAL,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal) {\n            return [].concat(_toConsumableArray(normal), [vertex[5]]);\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'uv',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_iconMapUV',\n          shaderLocation: ShaderLocation.UV,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var iconMap = _this2.iconService.getIconMap();\n            var texture = feature.texture;\n            var _ref4 = iconMap[texture] || {\n                x: 0,\n                y: 0\n              },\n              x = _ref4.x,\n              y = _ref4.y;\n            return [x, y];\n          }\n        }\n      });\n    }\n  }]);\n  return LineModel;\n}(BaseModel);\nexport { LineModel as default };","map":{"version":3,"names":["_toConsumableArray","_asyncToGenerator","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_regeneratorRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AttributeType","gl","LineTriangulation","rgb2arr","BaseModel","LinearDir","TextureBlend","ShaderLocation","line_frag","line_vert","lineStyleObj","solid","dash","LineModel","_BaseModel","_super","_this","_len","length","args","Array","_key","concat","createTexture2D","data","Uint8Array","width","height","rendererService","textures","texture","update","iconService","getCanvas","layer","render","mag","NEAREST","min","premultiplyAlpha","canvasHeight","key","value","getCommonUniformsInfo","_ref","getLayerConfig","sourceColor","targetColor","_ref$textureBlend","textureBlend","_ref$lineType","lineType","_ref$dashArray","dashArray","_ref$lineTexture","lineTexture","_ref$iconStep","iconStep","_ref$vertexHeightScal","vertexHeightScale","_ref$strokeWidth","strokeWidth","_ref$raisingHeight","raisingHeight","_ref$heightfixed","heightfixed","_ref$linearDir","linearDir","VERTICAL","_ref$blur","blur","u_dash_array","push","getDirty","bind","_ref2","animateOption","useLinearColor","sourceColorArr","targetColorArr","commonOptions","u_animate","animateOption2Array","u_blur","u_sourceColor","u_targetColor","u_textSize","u_icon_step","u_heightfixed","Number","u_vertexScale","u_raisingHeight","u_strokeWidth","u_textureBlend","NORMAL","u_line_texture","u_linearDir","u_linearColor","u_time","getLayerAnimateTime","commonBufferInfo","getUniformsBufferInfo","_initModels","mark","_callee","wrap","_callee$","_context","prev","next","initUniformsBuffer","textureEventFlag","updateTexture","on","abrupt","buildModels","stop","initModels","clearModels","_this$texture","destroy","off","_buildModels","_callee2","_ref3","_ref3$depth","depth","_this$getShaders","frag","vert","type","model","_callee2$","_context2","getShaders","triangulation","buildLayerModel","moduleName","vertexShader","fragmentShader","inject","getInject","enable","sent","registerBuiltinAttributes","_this2","styleAttributeService","registerStyleAttribute","name","Attribute","descriptor","shaderLocation","buffer","usage","STATIC_DRAW","FLOAT","size","feature","featureIdx","vertex","attributeIdx","normal","vertexIndex","undefined","SIZE","DYNAMIC_DRAW","_feature$size","isArray","UV","iconMap","getIconMap","_ref4","x","y","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/line/models/line.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { LineTriangulation, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { LinearDir, TextureBlend } from \"../../core/interface\";\n// import { LineTriangulation } from '../../core/triangulation';\n\nimport { ShaderLocation } from \"../../core/CommonStyleAttribute\";\n/* babel-plugin-inline-import '../shaders/line/line_frag.glsl' */\nvar line_frag = \"// #extension GL_OES_standard_derivatives : enable\\n#define Animate 0.0\\n#define LineTexture 1.0\\n\\nuniform sampler2D u_texture;\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_animate: [ 1., 2., 1.0, 0.2 ];\\n  vec4 u_dash_array;\\n  vec4 u_blur;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec2 u_textSize;\\n  float u_icon_step: 100;\\n  float u_heightfixed: 0.0;\\n  float u_vertexScale: 1.0;\\n  float u_raisingHeight: 0.0;\\n  float u_strokeWidth: 0.0;\\n  float u_textureBlend;\\n  float u_line_texture;\\n  float u_linearDir: 1.0;\\n  float u_linearColor: 0;\\n  float u_time;\\n};\\n\\nin vec4 v_color;\\nin vec4 v_stroke;\\n// dash\\nin vec4 v_dash_array;\\nin float v_d_distance_ratio;\\nin vec2 v_iconMapUV;\\nin vec4 v_texture_data;\\n\\nout vec4 outputColor;\\n#pragma include \\\"picking\\\"\\n\\n// [animate, duration, interval, trailLength],\\nvoid main() {\\n  if(u_dash_array!=vec4(0.0)){\\n    float dashLength = mod(v_d_distance_ratio, v_dash_array.x + v_dash_array.y + v_dash_array.z + v_dash_array.w);\\n    if(!(dashLength < v_dash_array.x || (dashLength > (v_dash_array.x + v_dash_array.y) && dashLength <  v_dash_array.x + v_dash_array.y + v_dash_array.z))) {\\n      // \\u865A\\u7EBF\\u90E8\\u5206\\n      discard;\\n    };\\n  }\\n  float animateSpeed = 0.0; // \\u8FD0\\u52A8\\u901F\\u5EA6\\n  float d_distance_ratio = v_texture_data.r; // \\u5F53\\u524D\\u70B9\\u4F4D\\u8DDD\\u79BB\\u5360\\u7EBF\\u603B\\u957F\\u7684\\u6BD4\\u4F8B\\n  if(u_linearDir < 1.0) {\\n    d_distance_ratio = v_texture_data.a;\\n  }\\n  if(u_linearColor == 1.0) { // \\u4F7F\\u7528\\u6E10\\u53D8\\u989C\\u8272\\n    outputColor = mix(u_sourceColor, u_targetColor, d_distance_ratio);\\n    outputColor.a *= v_color.a;\\n  } else { // \\u4F7F\\u7528 color \\u65B9\\u6CD5\\u4F20\\u5165\\u7684\\u989C\\u8272\\n     outputColor = v_color;\\n  }\\n  // anti-alias\\n  // float blur = 1.0 - smoothstep(u_blur, 1., length(v_normal.xy));\\n  if(u_animate.x == Animate) {\\n      animateSpeed = u_time / u_animate.y;\\n       float alpha =1.0 - fract( mod(1.0- d_distance_ratio, u_animate.z)* (1.0/ u_animate.z) + animateSpeed);\\n      alpha = (alpha + u_animate.w -1.0) / u_animate.w;\\n      alpha = smoothstep(0., 1., alpha);\\n      outputColor.a *= alpha;\\n  }\\n\\n  if(u_line_texture == LineTexture) { // while load texture\\n    float aDistance = v_texture_data.g;      // \\u5F53\\u524D\\u9876\\u70B9\\u7684\\u8DDD\\u79BB\\n    float d_texPixelLen = v_texture_data.b;  // \\u8D34\\u56FE\\u7684\\u50CF\\u7D20\\u957F\\u5EA6\\uFF0C\\u6839\\u636E\\u5730\\u56FE\\u5C42\\u7EA7\\u7F29\\u653E\\n    float u = fract(mod(aDistance, d_texPixelLen)/d_texPixelLen - animateSpeed);\\n    float v = v_texture_data.a;  // \\u7EBF\\u56FE\\u5C42\\u8D34\\u56FE\\u90E8\\u5206\\u7684 v \\u5750\\u6807\\u503C\\n\\n    // v = max(smoothstep(0.95, 1.0, v), v);\\n    vec2 uv= v_iconMapUV / u_textSize + vec2(u, v) / u_textSize * 64.;\\n     vec4 pattern = texture(SAMPLER_2D(u_texture), uv);\\n\\n    if(u_textureBlend == 0.0) { // normal\\n      pattern.a = 0.0;\\n      outputColor += pattern;\\n    } else { // replace\\n        pattern.a *= v_color.a;\\n        if(outputColor.a <= 0.0) {\\n          pattern.a = 0.0;\\n        }\\n        outputColor = pattern;\\n    }\\n  } \\n\\n  float v = v_texture_data.a;\\n  float strokeWidth = min(0.5, u_strokeWidth);\\n  // \\u7ED8\\u5236 border\\n  if(strokeWidth > 0.01) {\\n    float borderOuterWidth = strokeWidth / 2.0;\\n\\n\\n    if(v >= 1.0 - strokeWidth || v <= strokeWidth) {\\n      if(v > strokeWidth) { // \\u5916\\u4FA7\\n        float linear = smoothstep(0.0, 1.0, (v - (1.0 - strokeWidth))/strokeWidth);\\n        //  float linear = step(0.0, (v - (1.0 - borderWidth))/borderWidth);\\n        outputColor.rgb = mix(outputColor.rgb, v_stroke.rgb, linear);\\n      } else if(v <= strokeWidth) {\\n        float linear = smoothstep(0.0, 1.0, v/strokeWidth);\\n        outputColor.rgb = mix(v_stroke.rgb, outputColor.rgb, linear);\\n      }\\n    }\\n\\n    if(v < borderOuterWidth) {\\n      outputColor.a = mix(0.0, outputColor.a, v/borderOuterWidth);\\n    } else if(v > 1.0 - borderOuterWidth) {\\n      outputColor.a = mix(outputColor.a, 0.0, (v - (1.0 - borderOuterWidth))/borderOuterWidth);\\n    }\\n  }\\n\\n  // blur\\n  float blurV = v_texture_data.a;\\n  if(blurV < 0.5) {\\n    outputColor.a *= mix(u_blur.r, u_blur.g, blurV/0.5);\\n  } else {\\n    outputColor.a *= mix(u_blur.g, u_blur.b, (blurV - 0.5)/0.5);\\n  }\\n  \\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/line/line_vert.glsl' */\nvar line_vert = \"\\n#define Animate 0.0\\n\\nlayout(location = 0) in vec3 a_Position;\\nlayout(location = 1) in vec4 a_Color;\\nlayout(location = 9) in vec2 a_Size;\\nlayout(location = 10) in vec3 a_DistanceAndIndexAndMiter;\\nlayout(location = 13) in vec4 a_Normal_Total_Distance;\\nlayout(location = 14) in vec2 a_iconMapUV;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_animate: [ 1., 2., 1.0, 0.2 ];\\n  vec4 u_dash_array;\\n  vec4 u_blur;\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec2 u_textSize;\\n  float u_icon_step: 100;\\n  float u_heightfixed: 0.0;\\n  float u_vertexScale: 1.0;\\n  float u_raisingHeight: 0.0;\\n  float u_strokeWidth: 0.0;\\n  float u_textureBlend;\\n  float u_line_texture;\\n  float u_linearDir: 1.0;\\n  float u_linearColor: 0;\\n  float u_time;\\n};\\n\\n\\nout vec4 v_color;\\nout vec4 v_stroke;\\n//dash\\nout vec4 v_dash_array;\\nout float v_d_distance_ratio;\\n// texV \\u7EBF\\u56FE\\u5C42 - \\u8D34\\u56FE\\u90E8\\u5206\\u7684 v \\u5750\\u6807\\uFF08\\u7EBF\\u7684\\u5BBD\\u5EA6\\u65B9\\u5411\\uFF09\\nout vec2 v_iconMapUV;\\nout vec4 v_texture_data;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  vec2 a_DistanceAndIndex = a_DistanceAndIndexAndMiter.xy;\\n  float a_Miter = a_DistanceAndIndexAndMiter.z;\\n  vec3 a_Normal = a_Normal_Total_Distance.xyz;\\n  float a_Total_Distance = a_Normal_Total_Distance.w;\\n  //dash\\u8F93\\u51FA\\n  v_dash_array = pow(2.0, 20.0 - u_Zoom) * u_dash_array / a_Total_Distance;\\n  v_d_distance_ratio = a_DistanceAndIndex.x / a_Total_Distance;\\n\\n  // cal style mapping - \\u6570\\u636E\\u7EB9\\u7406\\u6620\\u5C04\\u90E8\\u5206\\u7684\\u8BA1\\u7B97\\n  float d_texPixelLen;    // \\u8D34\\u56FE\\u7684\\u50CF\\u7D20\\u957F\\u5EA6\\uFF0C\\u6839\\u636E\\u5730\\u56FE\\u5C42\\u7EA7\\u7F29\\u653E\\n  v_iconMapUV = a_iconMapUV;\\n  d_texPixelLen = project_float_pixel(u_icon_step);\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) {\\n    d_texPixelLen *= 10.0;\\n  }\\n\\n  v_color = a_Color;\\n  v_color.a *= opacity;\\n  v_stroke = stroke;\\n\\n  vec3 size = a_Miter * setPickingSize(a_Size.x) * reverse_offset_normal(a_Normal);\\n  \\n  vec2 offset = project_pixel(size.xy);\\n\\n  float lineDistance = a_DistanceAndIndex.x;\\n  float currentLinePointRatio = lineDistance / a_Total_Distance;\\n \\n\\n  float lineOffsetWidth = length(offset + offset * sign(a_Miter)); // \\u7EBF\\u6A2A\\u5411\\u504F\\u79FB\\u7684\\u8DDD\\u79BB\\uFF08\\u5411\\u4E24\\u4FA7\\u504F\\u79FB\\u7684\\u548C\\uFF09\\n  float linePixelSize = project_pixel(a_Size.x) * 2.0;  // \\u5B9A\\u70B9\\u4F4D\\u7F6E\\u504F\\u79FB\\uFF0C\\u6309\\u5730\\u56FE\\u7B49\\u7EA7\\u7F29\\u653E\\u540E\\u7684\\u8DDD\\u79BB \\u5355\\u4FA7 * 2\\n  float texV = lineOffsetWidth/linePixelSize; // \\u7EBF\\u56FE\\u5C42\\u8D34\\u56FE\\u90E8\\u5206\\u7684 v \\u5750\\u6807\\u503C\\n  \\n  v_texture_data = vec4(currentLinePointRatio, lineDistance, d_texPixelLen, texV);\\n  // \\u8BBE\\u7F6E\\u6570\\u636E\\u96C6\\u7684\\u53C2\\u6570\\n\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0, 1.0));\\n\\n  // gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, a_Size.y, 1.0));\\n\\n  float h = float(a_Position.z) * u_vertexScale; // \\u7EBF\\u9876\\u70B9\\u7684\\u9AD8\\u5EA6 - \\u517C\\u5BB9\\u4E0D\\u5B58\\u5728\\u7B2C\\u4E09\\u4E2A\\u6570\\u503C\\u7684\\u60C5\\u51B5 vertex height\\n  float lineHeight = a_Size.y; // size \\u7B2C\\u4E8C\\u4E2A\\u53C2\\u6570\\u4EE3\\u8868\\u7684\\u9AD8\\u5EA6 [linewidth, lineheight]\\n\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_P20_2) { // gaode2.x\\n    lineHeight *= 0.2; // \\u4FDD\\u6301\\u548C amap/mapbox \\u4E00\\u81F4\\u7684\\u6548\\u679C\\n    h *= 0.2;\\n    if(u_heightfixed < 1.0) {\\n      lineHeight = project_pixel(a_Size.y);\\n    }\\n    gl_Position = u_Mvp * (vec4(project_pos.xy + offset, lineHeight + h + u_raisingHeight, 1.0));\\n  } else {\\n    // mapbox -  amap\\n    \\n    // \\u517C\\u5BB9 mapbox \\u5728\\u7EBF\\u9AD8\\u5EA6\\u4E0A\\u7684\\u6548\\u679C\\u8868\\u73B0\\u57FA\\u672C\\u4E00\\u81F4\\n    if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n      // mapbox\\n      // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n      float mapboxZoomScale = 4.0/pow(2.0, 21.0 - u_Zoom);\\n      h *= mapboxZoomScale;\\n      h += u_raisingHeight * mapboxZoomScale;\\n      if(u_heightfixed > 0.0) {\\n        lineHeight *= mapboxZoomScale;\\n      }\\n      \\n    } else {\\n      // amap\\n      h += u_raisingHeight;\\n      // lineHeight \\u9876\\u70B9\\u504F\\u79FB\\u9AD8\\u5EA6\\n      if(u_heightfixed < 1.0) {\\n        lineHeight *= pow(2.0, 20.0 - u_Zoom);\\n      }\\n    }\\n\\n    gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, lineHeight + h, 1.0));\\n  }\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nvar lineStyleObj = {\n  solid: 0.0,\n  dash: 1.0\n};\nvar LineModel = /*#__PURE__*/function (_BaseModel) {\n  _inherits(LineModel, _BaseModel);\n  var _super = _createSuper(LineModel);\n  function LineModel() {\n    var _this;\n    _classCallCheck(this, LineModel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"textureEventFlag\", false);\n    _defineProperty(_assertThisInitialized(_this), \"texture\", _this.createTexture2D({\n      data: new Uint8Array([0, 0, 0, 0]),\n      width: 1,\n      height: 1\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"updateTexture\", function () {\n      var createTexture2D = _this.rendererService.createTexture2D;\n      if (_this.textures.length === 0) {\n        _this.textures = [_this.texture];\n      }\n      if (_this.texture) {\n        _this.texture.update({\n          data: _this.iconService.getCanvas()\n        });\n        _this.layer.render();\n        return;\n      }\n      _this.texture = createTexture2D({\n        data: _this.iconService.getCanvas(),\n        mag: gl.NEAREST,\n        min: gl.NEAREST,\n        premultiplyAlpha: false,\n        width: 1024,\n        height: _this.iconService.canvasHeight || 128\n      });\n    });\n    return _this;\n  }\n  _createClass(LineModel, [{\n    key: \"getCommonUniformsInfo\",\n    value: function getCommonUniformsInfo() {\n      var _ref = this.layer.getLayerConfig(),\n        sourceColor = _ref.sourceColor,\n        targetColor = _ref.targetColor,\n        _ref$textureBlend = _ref.textureBlend,\n        textureBlend = _ref$textureBlend === void 0 ? 'normal' : _ref$textureBlend,\n        _ref$lineType = _ref.lineType,\n        lineType = _ref$lineType === void 0 ? 'solid' : _ref$lineType,\n        _ref$dashArray = _ref.dashArray,\n        dashArray = _ref$dashArray === void 0 ? [10, 5, 0, 0] : _ref$dashArray,\n        _ref$lineTexture = _ref.lineTexture,\n        lineTexture = _ref$lineTexture === void 0 ? false : _ref$lineTexture,\n        _ref$iconStep = _ref.iconStep,\n        iconStep = _ref$iconStep === void 0 ? 100 : _ref$iconStep,\n        _ref$vertexHeightScal = _ref.vertexHeightScale,\n        vertexHeightScale = _ref$vertexHeightScal === void 0 ? 20.0 : _ref$vertexHeightScal,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 0.0 : _ref$strokeWidth,\n        _ref$raisingHeight = _ref.raisingHeight,\n        raisingHeight = _ref$raisingHeight === void 0 ? 0 : _ref$raisingHeight,\n        _ref$heightfixed = _ref.heightfixed,\n        heightfixed = _ref$heightfixed === void 0 ? false : _ref$heightfixed,\n        _ref$linearDir = _ref.linearDir,\n        linearDir = _ref$linearDir === void 0 ? LinearDir.VERTICAL : _ref$linearDir,\n        _ref$blur = _ref.blur,\n        blur = _ref$blur === void 0 ? [1, 1, 1, 0] : _ref$blur;\n      var u_dash_array = dashArray;\n      if (lineType !== 'dash') {\n        u_dash_array = [0, 0, 0, 0];\n      }\n      if (u_dash_array.length === 2) {\n        u_dash_array.push(0, 0);\n      }\n      if (this.rendererService.getDirty() && this.texture) {\n        this.texture.bind();\n      }\n      var _ref2 = this.layer.getLayerConfig(),\n        animateOption = _ref2.animateOption;\n      // 转化渐变色\n      var useLinearColor = 0; // 默认不生效\n      var sourceColorArr = [0, 0, 0, 0];\n      var targetColorArr = [0, 0, 0, 0];\n      if (sourceColor && targetColor) {\n        sourceColorArr = rgb2arr(sourceColor);\n        targetColorArr = rgb2arr(targetColor);\n        useLinearColor = 1;\n      }\n      var commonOptions = {\n        u_animate: this.animateOption2Array(animateOption),\n        u_dash_array: u_dash_array,\n        u_blur: blur,\n        u_sourceColor: sourceColorArr,\n        u_targetColor: targetColorArr,\n        u_textSize: [1024, this.iconService.canvasHeight || 128],\n        u_icon_step: iconStep,\n        // 是否固定高度\n        u_heightfixed: Number(heightfixed),\n        // 顶点高度 scale\n        u_vertexScale: vertexHeightScale,\n        u_raisingHeight: Number(raisingHeight),\n        // line border 参数\n        u_strokeWidth: strokeWidth,\n        u_textureBlend: textureBlend === TextureBlend.NORMAL ? 0.0 : 1.0,\n        u_line_texture: lineTexture ? 1.0 : 0.0,\n        // 传入线的标识\n        u_linearDir: linearDir === LinearDir.VERTICAL ? 1.0 : 0.0,\n        u_linearColor: useLinearColor,\n        u_time: this.layer.getLayerAnimateTime() || 0\n      };\n      var commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n      return commonBufferInfo;\n    }\n    // public getAnimateUniforms(): IModelUniform {\n    //   const { animateOption } = this.layer.getLayerConfig() as ILayerConfig;\n    //   return {\n    //     u_animate: this.animateOption2Array(animateOption as IAnimateOption),\n    //     u_time: this.layer.getLayerAnimateTime(),\n    //   };\n    // }\n  }, {\n    key: \"initModels\",\n    value: function () {\n      var _initModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.initUniformsBuffer();\n              // this.updateTexture();\n              // this.iconService.on('imageUpdate', this.updateTexture);\n              if (!this.textureEventFlag) {\n                this.textureEventFlag = true;\n                this.updateTexture();\n                this.iconService.on('imageUpdate', this.updateTexture);\n              }\n              return _context.abrupt(\"return\", this.buildModels());\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initModels() {\n        return _initModels.apply(this, arguments);\n      }\n      return initModels;\n    }()\n  }, {\n    key: \"clearModels\",\n    value: function clearModels() {\n      var _this$texture;\n      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n      this.iconService.off('imageUpdate', this.updateTexture);\n    }\n  }, {\n    key: \"buildModels\",\n    value: function () {\n      var _buildModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _ref3, _ref3$depth, depth, _this$getShaders, frag, vert, type, model;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3 = this.layer.getLayerConfig(), _ref3$depth = _ref3.depth, depth = _ref3$depth === void 0 ? false : _ref3$depth;\n              _this$getShaders = this.getShaders(), frag = _this$getShaders.frag, vert = _this$getShaders.vert, type = _this$getShaders.type; // console.log(frag)\n              this.layer.triangulation = LineTriangulation;\n              _context2.next = 5;\n              return this.layer.buildLayerModel({\n                moduleName: 'line' + type,\n                vertexShader: vert,\n                fragmentShader: frag,\n                triangulation: LineTriangulation,\n                inject: this.getInject(),\n                depth: {\n                  enable: depth\n                }\n              });\n            case 5:\n              model = _context2.sent;\n              return _context2.abrupt(\"return\", [model]);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function buildModels() {\n        return _buildModels.apply(this, arguments);\n      }\n      return buildModels;\n    }()\n    /**\n     * 根据参数获取不同的 shader 代码\n     * @returns\n     */\n  }, {\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        frag: line_frag,\n        vert: line_vert,\n        type: ''\n      };\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {\n      var _this2 = this;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'distanceAndIndex',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_DistanceAndIndexAndMiter',\n          shaderLocation: 10,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 3,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal, vertexIndex) {\n            return vertexIndex === undefined ? [vertex[3], 10, vertex[4]] : [vertex[3], vertexIndex, vertex[4]];\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'size',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Size',\n          shaderLocation: ShaderLocation.SIZE,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var _feature$size = feature.size,\n              size = _feature$size === void 0 ? 1 : _feature$size;\n            return Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n          }\n        }\n      });\n\n      // point layer size;\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'normal_total_distance',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_Normal_Total_Distance',\n          shaderLocation: ShaderLocation.NORMAL,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.STATIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 4,\n          update: function update(feature, featureIdx, vertex, attributeIdx, normal) {\n            return [].concat(_toConsumableArray(normal), [vertex[5]]);\n          }\n        }\n      });\n      this.styleAttributeService.registerStyleAttribute({\n        name: 'uv',\n        type: AttributeType.Attribute,\n        descriptor: {\n          name: 'a_iconMapUV',\n          shaderLocation: ShaderLocation.UV,\n          buffer: {\n            // give the WebGL driver a hint that this buffer may change\n            usage: gl.DYNAMIC_DRAW,\n            data: [],\n            type: gl.FLOAT\n          },\n          size: 2,\n          update: function update(feature) {\n            var iconMap = _this2.iconService.getIconMap();\n            var texture = feature.texture;\n            var _ref4 = iconMap[texture] || {\n                x: 0,\n                y: 0\n              },\n              x = _ref4.x,\n              y = _ref4.y;\n            return [x, y];\n          }\n        }\n      });\n    }\n  }]);\n  return LineModel;\n}(BaseModel);\nexport { LineModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}