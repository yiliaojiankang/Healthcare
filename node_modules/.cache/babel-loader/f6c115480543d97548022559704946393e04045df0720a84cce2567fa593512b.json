{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n/**\n * 条形图\n */\nvar Bar = /** @class */function (_super) {\n  __extends(Bar, _super);\n  function Bar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'bar';\n    return _this;\n  }\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n  Bar.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   */\n  Bar.prototype.changeData = function (data) {\n    var _a, _b;\n    this.updateOption({\n      data: data\n    });\n    var _c = this,\n      chart = _c.chart,\n      options = _c.options;\n    var isPercent = options.isPercent;\n    var xField = options.xField,\n      yField = options.yField,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis;\n    _a = [yField, xField], xField = _a[0], yField = _a[1];\n    _b = [yAxis, xAxis], xAxis = _b[0], yAxis = _b[1];\n    var switchedFieldOptions = __assign(__assign({}, options), {\n      xField: xField,\n      yField: yField,\n      yAxis: yAxis,\n      xAxis: xAxis\n    });\n    meta({\n      chart: chart,\n      options: switchedFieldOptions\n    });\n    chart.changeData(getDataWhetherPercentage(data, xField, yField, xField, isPercent));\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n  Bar.prototype.getDefaultOptions = function () {\n    return Bar.getDefaultOptions();\n  };\n  /**\n   * 获取 条形图 的适配器\n   */\n  Bar.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Bar;\n}(Plot);\nexport { Bar };","map":{"version":3,"names":["Plot","getDataWhetherPercentage","adaptor","meta","DEFAULT_OPTIONS","Bar","_super","__extends","_this","apply","arguments","type","getDefaultOptions","prototype","changeData","data","updateOption","_c","chart","options","isPercent","xField","yField","xAxis","yAxis","_a","_b","switchedFieldOptions","__assign","getSchemaAdaptor"],"sources":["../../../src/plots/bar/index.ts"],"sourcesContent":["import { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { BarOptions } from './types';\n\nexport type { BarOptions };\n\n/**\n * 条形图\n */\nexport class Bar extends Plot<BarOptions> {\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<BarOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'bar';\n\n  /**\n   * @override\n   */\n  public changeData(data: BarOptions['data']) {\n    this.updateOption({ data });\n    const { chart, options } = this;\n    const { isPercent } = options;\n    let { xField, yField, xAxis, yAxis } = options;\n    [xField, yField] = [yField, xField];\n    [xAxis, yAxis] = [yAxis, xAxis];\n    const switchedFieldOptions = { ...options, xField, yField, yAxis, xAxis };\n    meta({ chart, options: switchedFieldOptions });\n    chart.changeData(getDataWhetherPercentage(data, xField, yField, xField, isPercent));\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Bar.getDefaultOptions();\n  }\n\n  /**\n   * 获取 条形图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BarOptions> {\n    return adaptor;\n  }\n}\n"],"mappings":";AACA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,OAAO,EAAEC,IAAI,QAAQ,WAAW;AACzC,SAASC,eAAe,QAAQ,aAAa;AAK7C;;;AAGA,IAAAC,GAAA,0BAAAC,MAAA;EAAyBC,SAAA,CAAAF,GAAA,EAAAC,MAAA;EAAzB,SAAAD,IAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IASE;IACgBF,KAAA,CAAAG,IAAI,GAAW,KAAK;;EA8BtC;EAvCE;;;;EAION,GAAA,CAAAO,iBAAiB,GAAxB;IACE,OAAOR,eAAe;EACxB,CAAC;EAKD;;;EAGOC,GAAA,CAAAQ,SAAA,CAAAC,UAAU,GAAjB,UAAkBC,IAAwB;;IACxC,IAAI,CAACC,YAAY,CAAC;MAAED,IAAI,EAAAA;IAAA,CAAE,CAAC;IACrB,IAAAE,EAAA,GAAqB,IAAI;MAAvBC,KAAK,GAAAD,EAAA,CAAAC,KAAA;MAAEC,OAAO,GAAAF,EAAA,CAAAE,OAAS;IACvB,IAAAC,SAAS,GAAKD,OAAO,CAAAC,SAAZ;IACX,IAAAC,MAAM,GAA2BF,OAAO,CAAAE,MAAlC;MAAEC,MAAM,GAAmBH,OAAO,CAAAG,MAA1B;MAAEC,KAAK,GAAYJ,OAAO,CAAAI,KAAnB;MAAEC,KAAK,GAAKL,OAAO,CAAAK,KAAZ;IAClCC,EAAA,GAAmB,CAACH,MAAM,EAAED,MAAM,CAAC,EAAlCA,MAAM,GAAAI,EAAA,KAAEH,MAAM,GAAAG,EAAA;IACfC,EAAA,GAAiB,CAACF,KAAK,EAAED,KAAK,CAAC,EAA9BA,KAAK,GAAAG,EAAA,KAAEF,KAAK,GAAAE,EAAA;IACb,IAAMC,oBAAoB,GAAAC,QAAA,CAAAA,QAAA,KAAQT,OAAO;MAAEE,MAAM,EAAAA,MAAA;MAAEC,MAAM,EAAAA,MAAA;MAAEE,KAAK,EAAAA,KAAA;MAAED,KAAK,EAAAA;IAAA,EAAE;IACzEpB,IAAI,CAAC;MAAEe,KAAK,EAAAA,KAAA;MAAEC,OAAO,EAAEQ;IAAoB,CAAE,CAAC;IAC9CT,KAAK,CAACJ,UAAU,CAACb,wBAAwB,CAACc,IAAI,EAAEM,MAAM,EAAEC,MAAM,EAAED,MAAM,EAAED,SAAS,CAAC,CAAC;EACrF,CAAC;EAED;;;EAGUf,GAAA,CAAAQ,SAAA,CAAAD,iBAAiB,GAA3B;IACE,OAAOP,GAAG,CAACO,iBAAiB,EAAE;EAChC,CAAC;EAED;;;EAGUP,GAAA,CAAAQ,SAAA,CAAAgB,gBAAgB,GAA1B;IACE,OAAO3B,OAAO;EAChB,CAAC;EACH,OAAAG,GAAC;AAAD,CAAC,CAxCwBL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}