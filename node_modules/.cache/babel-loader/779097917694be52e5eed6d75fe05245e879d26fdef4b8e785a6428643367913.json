{"ast":null,"code":"\"use strict\";\n\n/**\n * @fileOverview fruchterman layout\n * @author shiwu.wyy@antfin.com\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Force2Layout = void 0;\nvar base_1 = require(\"../base\");\nvar util_1 = require(\"../../util\");\nvar ForceNBody_1 = require(\"./ForceNBody\");\nvar proccessToFunc = function (value, defaultV) {\n  var func;\n  if (!value) {\n    func = function (d) {\n      return defaultV || 1;\n    };\n  } else if ((0, util_1.isNumber)(value)) {\n    func = function (d) {\n      return value;\n    };\n  } else {\n    func = value;\n  }\n  return func;\n};\n/**\n * graphin 中的 force 布局\n */\nvar Force2Layout = /** @class */function (_super) {\n  __extends(Force2Layout, _super);\n  function Force2Layout(options) {\n    var _this = _super.call(this) || this;\n    /** 停止迭代的最大迭代数 */\n    _this.maxIteration = 1000;\n    /** 是否启动 worker */\n    _this.workerEnabled = false;\n    /** 弹簧引力系数 */\n    _this.edgeStrength = 200;\n    /** 斥力系数 */\n    _this.nodeStrength = 1000;\n    /** 库伦系数 */\n    _this.coulombDisScale = 0.005;\n    /** 阻尼系数 */\n    _this.damping = 0.9;\n    /** 最大速度 */\n    _this.maxSpeed = 500;\n    /** 一次迭代的平均移动距离小于该值时停止迭代 */\n    _this.minMovement = 0.4;\n    /** 迭代中衰减 */\n    _this.interval = 0.02;\n    /** 斥力的一个系数 */\n    _this.factor = 1;\n    /** 理想边长 */\n    _this.linkDistance = 200;\n    /** 重力大小 */\n    _this.gravity = 0;\n    /** 节点聚类作用力系数 */\n    _this.clusterNodeStrength = 20;\n    /** 是否防止重叠 */\n    _this.preventOverlap = true;\n    /** 阈值的使用条件，mean 代表平均移动距离小于 minMovement 时停止迭代，max 代表最大移动距离大时 minMovement 时停时迭代。默认为 mean */\n    _this.distanceThresholdMode = 'mean';\n    /** 每次迭代结束的回调函数 */\n    _this.tick = function () {};\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.nodeMap = {};\n    _this.nodeIdxMap = {};\n    _this.judgingDistance = 0;\n    /** 默认的向心配置 */\n    _this.centripetalOptions = {\n      leaf: 2,\n      single: 2,\n      others: 1,\n      // eslint-disable-next-line\n      center: function (n) {\n        return {\n          x: _this.width / 2,\n          y: _this.height / 2\n        };\n      }\n    };\n    var getMass = options.getMass;\n    _this.propsGetMass = getMass;\n    _this.updateCfg(options);\n    return _this;\n  }\n  Force2Layout.prototype.getCentripetalOptions = function () {\n    var _a = this,\n      leafCluster = _a.leafCluster,\n      clustering = _a.clustering,\n      nodeClusterBy = _a.nodeClusterBy,\n      nodes = _a.nodes,\n      nodeMap = _a.nodeMap,\n      propsClusterNodeStrength = _a.clusterNodeStrength;\n    var getClusterNodeStrength = function (node) {\n      return typeof propsClusterNodeStrength === 'function' ? propsClusterNodeStrength(node) : propsClusterNodeStrength;\n    };\n    var centripetalOptions = {};\n    var sameTypeLeafMap;\n    // 如果传入了需要叶子节点聚类\n    if (leafCluster) {\n      sameTypeLeafMap = this.getSameTypeLeafMap() || {};\n      var relativeNodesType_1 = Array.from(new Set(nodes === null || nodes === void 0 ? void 0 : nodes.map(function (node) {\n        return node[nodeClusterBy];\n      }))) || [];\n      centripetalOptions = {\n        single: 100,\n        leaf: function (node, nodes, edges) {\n          // 找出与它关联的边的起点或终点出发的所有一度节点中同类型的叶子节点\n          var _a = sameTypeLeafMap[node.id] || {},\n            relativeLeafNodes = _a.relativeLeafNodes,\n            sameTypeLeafNodes = _a.sameTypeLeafNodes;\n          // 如果都是同一类型或者每种类型只有1个，则施加默认向心力\n          if ((sameTypeLeafNodes === null || sameTypeLeafNodes === void 0 ? void 0 : sameTypeLeafNodes.length) === (relativeLeafNodes === null || relativeLeafNodes === void 0 ? void 0 : relativeLeafNodes.length) || (relativeNodesType_1 === null || relativeNodesType_1 === void 0 ? void 0 : relativeNodesType_1.length) === 1) {\n            return 1;\n          }\n          return getClusterNodeStrength(node);\n        },\n        others: 1,\n        center: function (node, nodes, edges) {\n          var _a;\n          var degree = (((_a = node.data) === null || _a === void 0 ? void 0 : _a.layout) || {}).degree;\n          // 孤点默认给1个远离的中心点\n          if (!degree) {\n            return {\n              x: 100,\n              y: 100\n            };\n          }\n          var centerNode;\n          if (degree === 1) {\n            // 如果为叶子节点\n            // 找出与它关联的边的起点出发的所有一度节点中同类型的叶子节点\n            var _b = (sameTypeLeafMap[node.id] || {}).sameTypeLeafNodes,\n              sameTypeLeafNodes = _b === void 0 ? [] : _b;\n            if (sameTypeLeafNodes.length === 1) {\n              // 如果同类型的叶子节点只有1个，中心节点置为undefined\n              centerNode = undefined;\n            } else if (sameTypeLeafNodes.length > 1) {\n              // 找出同类型节点平均位置节点的距离最近的节点作为中心节点\n              centerNode = (0, util_1.getAvgNodePosition)(sameTypeLeafNodes);\n            }\n          } else {\n            centerNode = undefined;\n          }\n          return {\n            x: centerNode === null || centerNode === void 0 ? void 0 : centerNode.x,\n            y: centerNode === null || centerNode === void 0 ? void 0 : centerNode.y\n          };\n        }\n      };\n    }\n    // 如果传入了全局节点聚类\n    if (clustering) {\n      if (!sameTypeLeafMap) sameTypeLeafMap = this.getSameTypeLeafMap();\n      var clusters = Array.from(new Set(nodes.map(function (node, i) {\n        return node[nodeClusterBy];\n      }))).filter(function (item) {\n        return item !== undefined;\n      });\n      var centerNodeInfo_1 = {};\n      clusters.forEach(function (cluster) {\n        var sameTypeNodes = nodes.filter(function (item) {\n          return item[nodeClusterBy] === cluster;\n        }).map(function (node) {\n          return nodeMap[node.id];\n        });\n        // 找出同类型节点平均位置节点的距离最近的节点作为中心节点\n        centerNodeInfo_1[cluster] = (0, util_1.getAvgNodePosition)(sameTypeNodes);\n      });\n      centripetalOptions = {\n        single: function (node) {\n          return getClusterNodeStrength(node);\n        },\n        leaf: function (node) {\n          return getClusterNodeStrength(node);\n        },\n        others: function (node) {\n          return getClusterNodeStrength(node);\n        },\n        center: function (node, nodes, edges) {\n          // 找出同类型节点平均位置节点的距离最近的节点作为中心节点\n          var centerNode = centerNodeInfo_1[node[nodeClusterBy]];\n          return {\n            x: centerNode === null || centerNode === void 0 ? void 0 : centerNode.x,\n            y: centerNode === null || centerNode === void 0 ? void 0 : centerNode.y\n          };\n        }\n      };\n    }\n    this.centripetalOptions = __assign(__assign({}, this.centripetalOptions), centripetalOptions);\n    var _b = this.centripetalOptions,\n      leaf = _b.leaf,\n      single = _b.single,\n      others = _b.others;\n    if (leaf && typeof leaf !== 'function') this.centripetalOptions.leaf = function () {\n      return leaf;\n    };\n    if (single && typeof single !== 'function') this.centripetalOptions.single = function () {\n      return single;\n    };\n    if (others && typeof others !== 'function') this.centripetalOptions.others = function () {\n      return others;\n    };\n  };\n  Force2Layout.prototype.updateCfg = function (cfg) {\n    if (cfg) Object.assign(this, cfg);\n  };\n  Force2Layout.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 500,\n      gravity: 10,\n      enableTick: true,\n      animate: true\n    };\n  };\n  /**\n   * 执行布局\n   */\n  Force2Layout.prototype.execute = function () {\n    var self = this;\n    self.stop();\n    var nodes = self.nodes,\n      edges = self.edges,\n      defSpringLen = self.defSpringLen;\n    self.judgingDistance = 0;\n    if (!nodes || nodes.length === 0) {\n      self.onLayoutEnd([]);\n      return;\n    }\n    if (!self.width && typeof window !== 'undefined') {\n      self.width = window.innerWidth;\n    }\n    if (!self.height && typeof window !== 'undefined') {\n      self.height = window.innerHeight;\n    }\n    if (!self.center) {\n      self.center = [self.width / 2, self.height / 2];\n    }\n    var center = self.center;\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      self.onLayoutEnd([__assign({}, nodes[0])]);\n      return;\n    }\n    self.degreesMap = (0, util_1.getDegreeMap)(nodes, edges);\n    if (self.propsGetMass) {\n      self.getMass = self.propsGetMass;\n    } else {\n      self.getMass = function (d) {\n        var massWeight = 1;\n        if ((0, util_1.isNumber)(d.mass)) massWeight = d.mass;\n        var degree = self.degreesMap[d.id].all;\n        return !degree || degree < 5 ? massWeight : degree * 5 * massWeight;\n      };\n    }\n    // node size function\n    var nodeSize = self.nodeSize;\n    var nodeSizeFunc;\n    if (self.preventOverlap) {\n      var nodeSpacing_1 = self.nodeSpacing;\n      var nodeSpacingFunc_1;\n      if ((0, util_1.isNumber)(nodeSpacing_1)) {\n        nodeSpacingFunc_1 = function () {\n          return nodeSpacing_1;\n        };\n      } else if ((0, util_1.isFunction)(nodeSpacing_1)) {\n        nodeSpacingFunc_1 = nodeSpacing_1;\n      } else {\n        nodeSpacingFunc_1 = function () {\n          return 0;\n        };\n      }\n      if (!nodeSize) {\n        nodeSizeFunc = function (d) {\n          if (d.size) {\n            if ((0, util_1.isArray)(d.size)) {\n              return Math.max(d.size[0], d.size[1]) + nodeSpacingFunc_1(d);\n            } else if ((0, util_1.isObject)(d.size)) {\n              return Math.max(d.size.width, d.size.height) + nodeSpacingFunc_1(d);\n            }\n            return d.size + nodeSpacingFunc_1(d);\n          }\n          return 10 + nodeSpacingFunc_1(d);\n        };\n      } else if ((0, util_1.isArray)(nodeSize)) {\n        nodeSizeFunc = function (d) {\n          return Math.max(nodeSize[0], nodeSize[1]) + nodeSpacingFunc_1(d);\n        };\n      } else {\n        nodeSizeFunc = function (d) {\n          return nodeSize + nodeSpacingFunc_1(d);\n        };\n      }\n    }\n    self.nodeSize = nodeSizeFunc;\n    self.linkDistance = proccessToFunc(self.linkDistance, 1);\n    self.nodeStrength = proccessToFunc(self.nodeStrength, 1);\n    self.edgeStrength = proccessToFunc(self.edgeStrength, 1);\n    var nodeMap = {};\n    var nodeIdxMap = {};\n    nodes.forEach(function (node, i) {\n      if (!(0, util_1.isNumber)(node.x)) node.x = Math.random() * self.width;\n      if (!(0, util_1.isNumber)(node.y)) node.y = Math.random() * self.height;\n      var degree = self.degreesMap[node.id];\n      nodeMap[node.id] = __assign(__assign({}, node), {\n        data: __assign(__assign({}, node.data), {\n          size: self.nodeSize(node) || 30,\n          layout: {\n            inDegree: degree.in,\n            outDegree: degree.out,\n            degree: degree.all,\n            tDegree: degree.in,\n            sDegree: degree.out,\n            force: {\n              mass: self.getMass(node),\n              nodeStrength: self.nodeStrength(node, edges)\n            }\n          }\n        })\n      });\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap;\n    self.edgeInfos = [];\n    edges === null || edges === void 0 ? void 0 : edges.forEach(function (edge) {\n      var sourceNode = nodeMap[edge.source];\n      var targetNode = nodeMap[edge.target];\n      if (!sourceNode || !targetNode) {\n        elf.edgeInfos.push({});\n      } else {\n        self.edgeInfos.push({\n          edgeStrength: self.edgeStrength(edge),\n          linkDistance: defSpringLen ? defSpringLen(__assign(__assign({}, edge), {\n            source: sourceNode,\n            target: targetNode\n          }), sourceNode, targetNode) : self.linkDistance(edge, sourceNode, targetNode) || 1 + (nodeSize(sourceNode) + nodeSize(sourceNode) || 0) / 2\n        });\n      }\n    });\n    this.getCentripetalOptions();\n    self.onLayoutEnd = self.onLayoutEnd || function () {};\n    self.run();\n  };\n  Force2Layout.prototype.run = function () {\n    var self = this;\n    var maxIteration = self.maxIteration,\n      nodes = self.nodes,\n      edges = self.edges,\n      workerEnabled = self.workerEnabled,\n      minMovement = self.minMovement,\n      animate = self.animate,\n      nodeMap = self.nodeMap,\n      height = self.height;\n    self.currentMinY = 0;\n    self.currentMaxY = height;\n    if (!nodes) return;\n    var velArray = [];\n    nodes.forEach(function (_, i) {\n      velArray[2 * i] = 0;\n      velArray[2 * i + 1] = 0;\n    });\n    if (this.defSideCoe && typeof this.defSideCoe === 'function') {\n      var relatedEdges_1 = {};\n      edges.forEach(function (edge) {\n        var source = edge.source,\n          target = edge.target;\n        relatedEdges_1[source] = relatedEdges_1[source] || [];\n        relatedEdges_1[source].push(edge);\n        relatedEdges_1[target] = relatedEdges_1[target] || [];\n        relatedEdges_1[target].push(edge);\n      });\n      this.relatedEdges = relatedEdges_1;\n    }\n    var maxIter = maxIteration;\n    var silence = !animate;\n    if (workerEnabled || silence) {\n      var usedIter = 0;\n      for (var i = 0; (self.judgingDistance > minMovement || i < 1) && i < maxIter; i++) {\n        usedIter = i;\n        self.runOneStep(i, velArray);\n      }\n      self.onLayoutEnd(Object.values(nodeMap));\n    } else {\n      if (typeof window === 'undefined') return;\n      var iter_1 = 0;\n      // interval for render the result after each iteration\n      this.timeInterval = window.setInterval(function () {\n        if (!nodes) return;\n        self.runOneStep(iter_1, velArray);\n        iter_1++;\n        if (iter_1 >= maxIter || self.judgingDistance < minMovement) {\n          self.onLayoutEnd(Object.values(nodeMap));\n          window.clearInterval(self.timeInterval);\n        }\n      }, 0);\n    }\n  };\n  Force2Layout.prototype.runOneStep = function (iter, velArray) {\n    var _a;\n    var self = this;\n    var nodes = self.nodes,\n      edges = self.edges,\n      nodeMap = self.nodeMap,\n      monitor = self.monitor;\n    var accArray = [];\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    self.calRepulsive(accArray);\n    if (edges) self.calAttractive(accArray);\n    self.calGravity(accArray);\n    self.attractToSide(accArray);\n    var stepInterval = self.interval; // Math.max(0.02, self.interval - iter * 0.002);\n    self.updateVelocity(accArray, velArray, stepInterval);\n    self.updatePosition(velArray, stepInterval);\n    (_a = self.tick) === null || _a === void 0 ? void 0 : _a.call(self);\n    /** 如果需要监控信息，则提供给用户 */\n    if (monitor) {\n      var energy = this.calTotalEnergy(accArray);\n      monitor({\n        energy: energy,\n        nodes: nodes,\n        edges: edges,\n        iterations: iter\n      });\n    }\n  };\n  Force2Layout.prototype.calTotalEnergy = function (accArray) {\n    var _a = this,\n      nodes = _a.nodes,\n      nodeMap = _a.nodeMap;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return 0;\n    var energy = 0.0;\n    nodes.forEach(function (node, i) {\n      var vx = accArray[2 * i];\n      var vy = accArray[2 * i + 1];\n      var speed2 = vx * vx + vy * vy;\n      var _a = nodeMap[node.id].data.layout.force.mass,\n        mass = _a === void 0 ? 1 : _a;\n      energy += mass * speed2 * 0.5; // p = 1/2*(mv^2)\n    });\n\n    return energy;\n  };\n  // coulombs law\n  Force2Layout.prototype.calRepulsive = function (accArray) {\n    var self = this;\n    var nodes = self.nodes,\n      nodeMap = self.nodeMap,\n      factor = self.factor,\n      coulombDisScale = self.coulombDisScale;\n    var nodeSize = self.nodeSize;\n    (0, ForceNBody_1.forceNBody)(nodes, nodeMap, factor, coulombDisScale * coulombDisScale, accArray);\n  };\n  // hooks law\n  Force2Layout.prototype.calAttractive = function (accArray) {\n    var self = this;\n    var edges = self.edges,\n      nodeMap = self.nodeMap,\n      nodeIdxMap = self.nodeIdxMap,\n      edgeInfos = self.edgeInfos;\n    var nodeSize = self.nodeSize;\n    edges.forEach(function (edge, i) {\n      var source = (0, util_1.getEdgeTerminal)(edge, 'source');\n      var target = (0, util_1.getEdgeTerminal)(edge, 'target');\n      var sourceNode = nodeMap[source];\n      var targetNode = nodeMap[target];\n      if (!sourceNode || !targetNode) return;\n      var vecX = targetNode.x - sourceNode.x;\n      var vecY = targetNode.y - sourceNode.y;\n      if (!vecX && !vecY) {\n        vecX = Math.random() * 0.01;\n        vecY = Math.random() * 0.01;\n      }\n      var vecLength = Math.sqrt(vecX * vecX + vecY * vecY);\n      var direX = vecX / vecLength;\n      var direY = vecY / vecLength;\n      // @ts-ignore\n      var _a = edgeInfos[i] || {},\n        _b = _a.linkDistance,\n        linkDistance = _b === void 0 ? 200 : _b,\n        _c = _a.edgeStrength,\n        edgeStrength = _c === void 0 ? 200 : _c;\n      var diff = linkDistance - vecLength;\n      var param = diff * edgeStrength;\n      var massSource = sourceNode.data.layout.force.mass || 1;\n      var massTarget = targetNode.data.layout.force.mass || 1;\n      // 质量占比越大，对另一端影响程度越大\n      var sourceMassRatio = 1 / massSource;\n      var targetMassRatio = 1 / massTarget;\n      var disX = direX * param;\n      var disY = direY * param;\n      var sourceIdx = 2 * nodeIdxMap[source];\n      var targetIdx = 2 * nodeIdxMap[target];\n      accArray[sourceIdx] -= disX * sourceMassRatio;\n      accArray[sourceIdx + 1] -= disY * sourceMassRatio;\n      accArray[targetIdx] += disX * targetMassRatio;\n      accArray[targetIdx + 1] += disY * targetMassRatio;\n    });\n  };\n  // attract to center\n  Force2Layout.prototype.calGravity = function (accArray) {\n    var _a;\n    var self = this;\n    var nodes = self.nodes,\n      _b = self.edges,\n      edges = _b === void 0 ? [] : _b,\n      nodeMap = self.nodeMap,\n      width = self.width,\n      height = self.height,\n      center = self.center,\n      defaultGravity = self.gravity,\n      degreesMap = self.degreesMap,\n      centripetalOptions = self.centripetalOptions;\n    if (!nodes) return;\n    var nodeLength = nodes.length;\n    for (var i = 0; i < nodeLength; i++) {\n      var idx = 2 * i;\n      var node = nodeMap[nodes[i].id];\n      var _c = node.data.layout.force.mass,\n        mass = _c === void 0 ? 1 : _c;\n      var vecX = 0;\n      var vecY = 0;\n      var gravity = defaultGravity;\n      var _d = degreesMap[node.id],\n        inDegree = _d.in,\n        outDegree = _d.out,\n        degree = _d.all;\n      var forceCenter = (_a = self.getCenter) === null || _a === void 0 ? void 0 : _a.call(self, node, degree);\n      if (forceCenter) {\n        var centerX = forceCenter[0],\n          centerY = forceCenter[1],\n          strength = forceCenter[2];\n        vecX = node.x - centerX;\n        vecY = node.y - centerY;\n        gravity = strength;\n      } else {\n        vecX = node.x - center[0];\n        vecY = node.y - center[1];\n      }\n      if (gravity) {\n        accArray[idx] -= gravity * vecX / mass;\n        accArray[idx + 1] -= gravity * vecY / mass;\n      }\n      if (centripetalOptions) {\n        var leaf = centripetalOptions.leaf,\n          single = centripetalOptions.single,\n          others = centripetalOptions.others,\n          centriCenter = centripetalOptions.center;\n        var _e = (centriCenter === null || centriCenter === void 0 ? void 0 : centriCenter(node, nodes, edges, width, height)) || {\n            x: 0,\n            y: 0,\n            centerStrength: 0\n          },\n          centriX = _e.x,\n          centriY = _e.y,\n          centerStrength = _e.centerStrength;\n        if (!(0, util_1.isNumber)(centriX) || !(0, util_1.isNumber)(centriY)) continue;\n        var vx = (node.x - centriX) / mass;\n        var vy = (node.y - centriY) / mass;\n        if (centerStrength) {\n          accArray[idx] -= centerStrength * vx;\n          accArray[idx + 1] -= centerStrength * vy;\n        }\n        // 孤点\n        if (degree === 0) {\n          var singleStrength = single(node);\n          if (!singleStrength) continue;\n          accArray[idx] -= singleStrength * vx;\n          accArray[idx + 1] -= singleStrength * vy;\n          continue;\n        }\n        // 没有出度或没有入度，都认为是叶子节点\n        if (inDegree === 0 || outDegree === 0) {\n          var leafStrength = leaf(node, nodes, edges);\n          if (!leafStrength) continue;\n          accArray[idx] -= leafStrength * vx;\n          accArray[idx + 1] -= leafStrength * vy;\n          continue;\n        }\n        /** others */\n        var othersStrength = others(node);\n        if (!othersStrength) continue;\n        accArray[idx] -= othersStrength * vx;\n        accArray[idx + 1] -= othersStrength * vy;\n      }\n    }\n  };\n  /**\n   * Attract forces to the top and bottom.\n   * @param accArray\n   * @returns\n   */\n  Force2Layout.prototype.attractToSide = function (accArray) {\n    var _a = this,\n      defSideCoe = _a.defSideCoe,\n      height = _a.height,\n      nodes = _a.nodes,\n      relatedEdges = _a.relatedEdges,\n      _b = _a.currentMinY,\n      currentMinY = _b === void 0 ? 0 : _b,\n      _c = _a.currentMaxY,\n      currentMaxY = _c === void 0 ? this.height : _c;\n    if (!defSideCoe || typeof defSideCoe !== 'function' || !(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    nodes.forEach(function (node, i) {\n      var sideCoe = defSideCoe(node, relatedEdges[node.id] || []);\n      if (sideCoe === 0) return;\n      var targetY = sideCoe < 0 ? currentMinY : currentMaxY;\n      var strength = Math.abs(sideCoe);\n      accArray[2 * i + 1] -= strength * (node.y - targetY);\n    });\n  };\n  Force2Layout.prototype.updateVelocity = function (accArray, velArray, stepInterval) {\n    var self = this;\n    var nodes = self.nodes,\n      damping = self.damping,\n      maxSpeed = self.maxSpeed;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    nodes.forEach(function (_, i) {\n      var vx = (velArray[2 * i] + accArray[2 * i] * stepInterval) * damping || 0.01;\n      var vy = (velArray[2 * i + 1] + accArray[2 * i + 1] * stepInterval) * damping || 0.01;\n      var vLength = Math.sqrt(vx * vx + vy * vy);\n      if (vLength > maxSpeed) {\n        var param2 = maxSpeed / vLength;\n        vx = param2 * vx;\n        vy = param2 * vy;\n      }\n      velArray[2 * i] = vx;\n      velArray[2 * i + 1] = vy;\n    });\n  };\n  Force2Layout.prototype.updatePosition = function (velArray, stepInterval) {\n    var self = this;\n    var nodes = self.nodes,\n      distanceThresholdMode = self.distanceThresholdMode,\n      nodeMap = self.nodeMap;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n      this.judgingDistance = 0;\n      return;\n    }\n    var sum = 0;\n    if (distanceThresholdMode === 'max') self.judgingDistance = -Infinity;else if (distanceThresholdMode === 'min') self.judgingDistance = Infinity;\n    var currentMinY = Infinity;\n    var currentMaxY = -Infinity;\n    nodes.forEach(function (node, i) {\n      var mappedNode = nodeMap[node.id];\n      if ((0, util_1.isNumber)(node.fx) && (0, util_1.isNumber)(node.fy)) {\n        node.x = node.fx;\n        node.y = node.fy;\n        mappedNode.x = node.x;\n        mappedNode.y = node.y;\n        return;\n      }\n      var distX = velArray[2 * i] * stepInterval;\n      var distY = velArray[2 * i + 1] * stepInterval;\n      node.x += distX;\n      node.y += distY;\n      mappedNode.x = node.x;\n      mappedNode.y = node.y;\n      if (node.y < currentMinY) currentMinY = node.y;\n      if (node.y > currentMaxY) currentMaxY = node.y;\n      var distanceMagnitude = Math.sqrt(distX * distX + distY * distY);\n      switch (distanceThresholdMode) {\n        case 'max':\n          if (self.judgingDistance < distanceMagnitude) self.judgingDistance = distanceMagnitude;\n          break;\n        case 'min':\n          if (self.judgingDistance > distanceMagnitude) self.judgingDistance = distanceMagnitude;\n          break;\n        default:\n          sum = sum + distanceMagnitude;\n          break;\n      }\n    });\n    this.currentMinY = currentMinY;\n    this.currentMaxY = currentMaxY;\n    if (!distanceThresholdMode || distanceThresholdMode === 'mean') self.judgingDistance = sum / nodes.length;\n  };\n  Force2Layout.prototype.stop = function () {\n    if (this.timeInterval && typeof window !== 'undefined') {\n      window.clearInterval(this.timeInterval);\n    }\n  };\n  Force2Layout.prototype.destroy = function () {\n    var self = this;\n    self.stop();\n    self.tick = null;\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  };\n  Force2Layout.prototype.getType = function () {\n    return 'force2';\n  };\n  Force2Layout.prototype.getSameTypeLeafMap = function () {\n    var _a = this,\n      nodeClusterBy = _a.nodeClusterBy,\n      nodes = _a.nodes,\n      edges = _a.edges,\n      nodeMap = _a.nodeMap,\n      degreesMap = _a.degreesMap;\n    if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return;\n    // eslint-disable-next-line\n    var sameTypeLeafMap = {};\n    nodes.forEach(function (node, i) {\n      var degree = degreesMap[node.id].all;\n      if (degree === 1) {\n        sameTypeLeafMap[node.id] = (0, util_1.getCoreNodeAndRelativeLeafNodes)('leaf', node, edges, nodeClusterBy, degreesMap, nodeMap);\n      }\n    });\n    return sameTypeLeafMap;\n  };\n  return Force2Layout;\n}(base_1.Base);\nexports.Force2Layout = Force2Layout;","map":{"version":3,"names":["require","base_1","util_1","ForceNBody_1","proccessToFunc","value","defaultV","func","d","isNumber","Force2Layout","_super","__extends","options","_this","call","maxIteration","workerEnabled","edgeStrength","nodeStrength","coulombDisScale","damping","maxSpeed","minMovement","interval","factor","linkDistance","gravity","clusterNodeStrength","preventOverlap","distanceThresholdMode","tick","nodes","edges","width","height","nodeMap","nodeIdxMap","judgingDistance","centripetalOptions","leaf","single","others","center","n","x","y","getMass","propsGetMass","updateCfg","prototype","getCentripetalOptions","_a","leafCluster","clustering","nodeClusterBy","propsClusterNodeStrength","getClusterNodeStrength","node","sameTypeLeafMap","getSameTypeLeafMap","relativeNodesType_1","Array","from","Set","map","id","relativeLeafNodes","sameTypeLeafNodes","length","degree","data","layout","centerNode","_b","undefined","getAvgNodePosition","clusters","i","filter","item","centerNodeInfo_1","forEach","cluster","sameTypeNodes","__assign","cfg","Object","assign","getDefaultCfg","enableTick","animate","execute","self","stop","defSpringLen","onLayoutEnd","window","innerWidth","innerHeight","degreesMap","getDegreeMap","massWeight","mass","all","nodeSize","nodeSizeFunc","nodeSpacing_1","nodeSpacing","nodeSpacingFunc_1","isFunction","size","isArray","Math","max","isObject","random","inDegree","in","outDegree","out","tDegree","sDegree","force","edgeInfos","edge","sourceNode","source","targetNode","target","elf","push","run","currentMinY","currentMaxY","velArray","_","defSideCoe","relatedEdges_1","relatedEdges","maxIter","silence","usedIter","runOneStep","values","iter_1","timeInterval","setInterval","clearInterval","iter","monitor","accArray","calRepulsive","calAttractive","calGravity","attractToSide","stepInterval","updateVelocity","updatePosition","energy","calTotalEnergy","iterations","vx","vy","speed2","forceNBody","getEdgeTerminal","vecX","vecY","vecLength","sqrt","direX","direY","_c","diff","param","massSource","massTarget","sourceMassRatio","targetMassRatio","disX","disY","sourceIdx","targetIdx","defaultGravity","nodeLength","idx","_d","forceCenter","getCenter","centerX","centerY","strength","centriCenter","_e","centerStrength","centriX","centriY","singleStrength","leafStrength","othersStrength","sideCoe","targetY","abs","vLength","param2","sum","Infinity","mappedNode","fx","fy","distX","distY","distanceMagnitude","destroy","destroyed","getType","getCoreNodeAndRelativeLeafNodes","Base","exports"],"sources":["../../../src/layout/force2/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}