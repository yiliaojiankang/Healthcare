{"ast":null,"code":"import Graph from '.';\n/**\n * @description Convert a graph's node to JSON.\n * @description.zh-CN 转换图的节点为 JSON。\n * @param graph\n * @returns\n */\n\nvar nodeToJSON = function nodeToJSON(graph) {\n  return graph.nodes().map(function (n) {\n    var value = graph.node(n);\n    var parent = graph.parent(n);\n    var node = {\n      id: n,\n      value: value,\n      parent: parent\n    };\n    if (node.value === undefined) {\n      delete node.value;\n    }\n    if (node.parent === undefined) {\n      delete node.parent;\n    }\n    return node;\n  });\n};\n/**\n * @description Convert all graph's edges to JSON.\n * @description.zh-CN 转换图的所有边为 JSON。\n * @param graph\n * @returns\n */\n\nvar edgeToJSON = function edgeToJSON(graph) {\n  return graph.edges().map(function (edge) {\n    var value = graph.edge(edge);\n    var e = {\n      v: edge.v,\n      w: edge.w,\n      value: value,\n      name: edge.name\n    };\n    if (e.name === undefined) {\n      delete e.name;\n    }\n    if (e.value === undefined) {\n      delete e.value;\n    }\n    return e;\n  });\n};\n/**\n * @description Convert a graph to JSON.\n * @description.zh-CN 转换图为 JSON。\n * @param graph\n * @returns\n */\n\nexport var write = function write(graph) {\n  var json = {\n    options: {\n      directed: graph.isDirected(),\n      multigraph: graph.isMultigraph(),\n      compound: graph.isCompound()\n    },\n    nodes: nodeToJSON(graph),\n    edges: edgeToJSON(graph),\n    value: graph.graph()\n  };\n  if (json.value === undefined) {\n    delete json.value;\n  }\n  return json;\n};\n/**\n * @description read a graph from JSON.\n * @description.zh-CN 从 JSON 读取图。\n * @param json\n * @returns\n */\n\nexport var read = function read(json) {\n  var graph = new Graph(json.options);\n  if (json.value !== undefined) {\n    graph.setGraph(json.value);\n  }\n  json.nodes.forEach(function (entry) {\n    graph.setNode(entry.id, entry.value);\n    if (entry.parent) {\n      graph.setParent(entry.id, entry.parent);\n    }\n  });\n  json.edges.forEach(function (entry) {\n    graph.setEdge(entry.v, entry.w, entry.value, entry.name);\n  });\n  return graph;\n};","map":{"version":3,"names":["Graph","nodeToJSON","graph","nodes","map","n","value","node","parent","id","undefined","edgeToJSON","edges","edge","e","v","w","name","write","json","options","directed","isDirected","multigraph","isMultigraph","compound","isCompound","read","setGraph","forEach","entry","setNode","setParent","setEdge"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/graphlib/es/Graph/toJSON.js"],"sourcesContent":["import Graph from '.';\n/**\n * @description Convert a graph's node to JSON.\n * @description.zh-CN 转换图的节点为 JSON。\n * @param graph\n * @returns\n */\n\nvar nodeToJSON = function nodeToJSON(graph) {\n  return graph.nodes().map(function (n) {\n    var value = graph.node(n);\n    var parent = graph.parent(n);\n    var node = {\n      id: n,\n      value: value,\n      parent: parent\n    };\n\n    if (node.value === undefined) {\n      delete node.value;\n    }\n\n    if (node.parent === undefined) {\n      delete node.parent;\n    }\n\n    return node;\n  });\n};\n/**\n * @description Convert all graph's edges to JSON.\n * @description.zh-CN 转换图的所有边为 JSON。\n * @param graph\n * @returns\n */\n\n\nvar edgeToJSON = function edgeToJSON(graph) {\n  return graph.edges().map(function (edge) {\n    var value = graph.edge(edge);\n    var e = {\n      v: edge.v,\n      w: edge.w,\n      value: value,\n      name: edge.name\n    };\n\n    if (e.name === undefined) {\n      delete e.name;\n    }\n\n    if (e.value === undefined) {\n      delete e.value;\n    }\n\n    return e;\n  });\n};\n/**\n * @description Convert a graph to JSON.\n * @description.zh-CN 转换图为 JSON。\n * @param graph\n * @returns\n */\n\n\nexport var write = function write(graph) {\n  var json = {\n    options: {\n      directed: graph.isDirected(),\n      multigraph: graph.isMultigraph(),\n      compound: graph.isCompound()\n    },\n    nodes: nodeToJSON(graph),\n    edges: edgeToJSON(graph),\n    value: graph.graph()\n  };\n\n  if (json.value === undefined) {\n    delete json.value;\n  }\n\n  return json;\n};\n/**\n * @description read a graph from JSON.\n * @description.zh-CN 从 JSON 读取图。\n * @param json\n * @returns\n */\n\nexport var read = function read(json) {\n  var graph = new Graph(json.options);\n\n  if (json.value !== undefined) {\n    graph.setGraph(json.value);\n  }\n\n  json.nodes.forEach(function (entry) {\n    graph.setNode(entry.id, entry.value);\n\n    if (entry.parent) {\n      graph.setParent(entry.id, entry.parent);\n    }\n  });\n  json.edges.forEach(function (entry) {\n    graph.setEdge(entry.v, entry.w, entry.value, entry.name);\n  });\n  return graph;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}