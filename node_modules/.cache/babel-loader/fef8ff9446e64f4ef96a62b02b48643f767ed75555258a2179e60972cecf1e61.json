{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const {\n    maxRows = 15,\n    maxColumns = 10,\n    maxNumSize = 8\n  } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const {\n    rows,\n    columns\n  } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}","map":{"version":3,"names":["indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","options","maxRows","maxColumns","maxNumSize","constructor","name","inspectData","rows","columns","maxI","Math","min","maxJ","result","i","line","j","push","formatNumber","get","join","length","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","slice"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/layout/node_modules/ml-matrix/src/inspect.js"],"sourcesContent":["const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}