{"ast":null,"code":"import { size, valuesOfKey } from '@antv/util';\nimport { isBetween } from '../../../utils';\n/**\n * 右侧 View 进行 slider 过滤\n * 由于双轴图是多 View , 需要监听左侧 Slider 的 change 事件来同步右侧 View\n * @param { View } view 右侧视图\n * @param { number[] } sliderValue 滑块当前值\n * @returns void\n */\nexport var doSliderFilter = function (view, sliderValue) {\n  var min = sliderValue[0],\n    max = sliderValue[1];\n  var data = view.getOptions().data;\n  var xScale = view.getXScale();\n  var dataSize = size(data);\n  if (!xScale || !dataSize) {\n    return;\n  }\n  var isHorizontal = true;\n  var values = valuesOfKey(data, xScale.field);\n  var xValues = isHorizontal ? values : values.reverse();\n  var xTickCount = size(xValues);\n  var minIndex = Math.floor(min * (xTickCount - 1));\n  var maxIndex = Math.floor(max * (xTickCount - 1));\n  // 增加 x 轴的过滤器\n  view.filter(xScale.field, function (value) {\n    var idx = xValues.indexOf(value);\n    return idx > -1 ? isBetween(idx, minIndex, maxIndex) : true;\n  });\n  view.getRootView().render(true);\n};","map":{"version":3,"names":["size","valuesOfKey","isBetween","doSliderFilter","view","sliderValue","min","max","data","getOptions","xScale","getXScale","dataSize","isHorizontal","values","field","xValues","reverse","xTickCount","minIndex","Math","floor","maxIndex","filter","value","idx","indexOf","getRootView","render"],"sources":["../../../../src/plots/dual-axes/util/render-sider.ts"],"sourcesContent":["import { View } from '@antv/g2';\nimport { size, valuesOfKey } from '@antv/util';\nimport { isBetween } from '../../../utils';\n\n/**\n * 右侧 View 进行 slider 过滤\n * 由于双轴图是多 View , 需要监听左侧 Slider 的 change 事件来同步右侧 View\n * @param { View } view 右侧视图\n * @param { number[] } sliderValue 滑块当前值\n * @returns void\n */\nexport const doSliderFilter = (view: View, sliderValue: [number, number]) => {\n  const [min, max] = sliderValue;\n  const data = view.getOptions().data;\n  const xScale = view.getXScale();\n  const dataSize = size(data);\n  if (!xScale || !dataSize) {\n    return;\n  }\n  const isHorizontal = true;\n  const values = valuesOfKey(data, xScale.field);\n  const xValues = isHorizontal ? values : values.reverse();\n  const xTickCount = size(xValues);\n  const minIndex = Math.floor(min * (xTickCount - 1));\n  const maxIndex = Math.floor(max * (xTickCount - 1));\n\n  // 增加 x 轴的过滤器\n  view.filter(xScale.field, (value: any) => {\n    const idx: number = xValues.indexOf(value);\n    return idx > -1 ? isBetween(idx, minIndex, maxIndex) : true;\n  });\n  view.getRootView().render(true);\n};\n"],"mappings":"AACA,SAASA,IAAI,EAAEC,WAAW,QAAQ,YAAY;AAC9C,SAASC,SAAS,QAAQ,gBAAgB;AAE1C;;;;;;;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAAA,CAACC,IAAU,EAAEC,WAA6B;EAC/D,IAAAC,GAAG,GAASD,WAAW,GAApB;IAAEE,GAAG,GAAIF,WAAW,GAAf;EACf,IAAMG,IAAI,GAAGJ,IAAI,CAACK,UAAU,EAAE,CAACD,IAAI;EACnC,IAAME,MAAM,GAAGN,IAAI,CAACO,SAAS,EAAE;EAC/B,IAAMC,QAAQ,GAAGZ,IAAI,CAACQ,IAAI,CAAC;EAC3B,IAAI,CAACE,MAAM,IAAI,CAACE,QAAQ,EAAE;IACxB;;EAEF,IAAMC,YAAY,GAAG,IAAI;EACzB,IAAMC,MAAM,GAAGb,WAAW,CAACO,IAAI,EAAEE,MAAM,CAACK,KAAK,CAAC;EAC9C,IAAMC,OAAO,GAAGH,YAAY,GAAGC,MAAM,GAAGA,MAAM,CAACG,OAAO,EAAE;EACxD,IAAMC,UAAU,GAAGlB,IAAI,CAACgB,OAAO,CAAC;EAChC,IAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACf,GAAG,IAAIY,UAAU,GAAG,CAAC,CAAC,CAAC;EACnD,IAAMI,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACd,GAAG,IAAIW,UAAU,GAAG,CAAC,CAAC,CAAC;EAEnD;EACAd,IAAI,CAACmB,MAAM,CAACb,MAAM,CAACK,KAAK,EAAE,UAACS,KAAU;IACnC,IAAMC,GAAG,GAAWT,OAAO,CAACU,OAAO,CAACF,KAAK,CAAC;IAC1C,OAAOC,GAAG,GAAG,CAAC,CAAC,GAAGvB,SAAS,CAACuB,GAAG,EAAEN,QAAQ,EAAEG,QAAQ,CAAC,GAAG,IAAI;EAC7D,CAAC,CAAC;EACFlB,IAAI,CAACuB,WAAW,EAAE,CAACC,MAAM,CAAC,IAAI,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}