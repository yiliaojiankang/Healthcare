{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __spreadArrays } from \"tslib\";\nimport { catmullRom2Bezier } from '@antv/path-util';\nimport { Category, Linear } from '@antv/scale';\nimport { each, head, isEqual, map } from '@antv/util';\n/**\n * 点数组转 path\n * @param points\n */\nfunction pointsToPath(points) {\n  return map(points, function (p, idx) {\n    var command = idx === 0 ? 'M' : 'L';\n    var x = p[0],\n      y = p[1];\n    return [command, x, y];\n  });\n}\n/**\n * 将点连接成路径 path\n * @param points\n */\nexport function getLinePath(points) {\n  return pointsToPath(points);\n}\n/**\n * 将点连成平滑的曲线\n * @param points\n */\nexport function getSmoothLinePath(points) {\n  if (points.length <= 2) {\n    // 两点以内直接绘制成路径\n    return getLinePath(points);\n  }\n  var data = [];\n  each(points, function (p) {\n    // 当前点和上一个点一样的时候，忽略掉\n    if (!isEqual(p, data.slice(data.length - 2))) {\n      data.push(p[0], p[1]);\n    }\n  });\n  // const constraint = [ // 范围\n  //   [ 0, 0 ],\n  //   [ 1, 1 ],\n  // ];\n  var path = catmullRom2Bezier(data, false);\n  var _a = head(points),\n    x = _a[0],\n    y = _a[1];\n  path.unshift(['M', x, y]);\n  return path;\n}\n/**\n * 将数据转成 path，利用 scale 的归一化能力\n * @param data\n * @param width\n * @param height\n * @param smooth\n */\nexport function dataToPath(data, width, height, smooth) {\n  if (smooth === void 0) {\n    smooth = true;\n  }\n  // 利用 scale 来获取 y 上的映射\n  var y = new Linear({\n    values: data\n  });\n  var x = new Category({\n    values: map(data, function (v, idx) {\n      return idx;\n    })\n  });\n  var points = map(data, function (v, idx) {\n    return [x.scale(idx) * width, height - y.scale(v) * height];\n  });\n  return smooth ? getSmoothLinePath(points) : getLinePath(points);\n}\n/**\n * 获得 area 面积的横向连接线的 px 位置\n * @param data\n * @param width\n * @param height\n */\nexport function getAreaLineY(data, height) {\n  var y = new Linear({\n    values: data\n  });\n  // 当曲线全部为负数时，取最大值，当曲线全部为正数时，取最小值，当曲线有正有负，则取零点\n  var lineY = y.max < 0 ? y.max : Math.max(0, y.min);\n  return height - y.scale(lineY) * height;\n}\n/**\n * 线 path 转 area path\n * @param path\n * @param width\n * @param height\n */\nexport function linePathToAreaPath(path, width, height, data) {\n  var areaPath = __spreadArrays(path);\n  var lineYPx = getAreaLineY(data, height);\n  areaPath.push(['L', width, lineYPx]);\n  areaPath.push(['L', 0, lineYPx]);\n  areaPath.push(['Z']);\n  return areaPath;\n}","map":{"version":3,"names":["catmullRom2Bezier","Category","Linear","each","head","isEqual","map","pointsToPath","points","p","idx","command","x","y","getLinePath","getSmoothLinePath","length","data","slice","push","path","_a","unshift","dataToPath","width","height","smooth","values","v","scale","getAreaLineY","lineY","max","Math","min","linePathToAreaPath","areaPath","__spreadArrays","lineYPx"],"sources":["../../src/trend/path.ts"],"sourcesContent":[null],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,aAAa;AAC9C,SAASC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,GAAG,QAAQ,YAAY;AAIrD;;;;AAIA,SAASC,YAAYA,CAACC,MAAe;EACnC,OAAOF,GAAG,CAACE,MAAM,EAAE,UAACC,CAAQ,EAAEC,GAAW;IACvC,IAAMC,OAAO,GAAGD,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG;IAC9B,IAAAE,CAAC,GAAOH,CAAC,GAAR;MAAEI,CAAC,GAAIJ,CAAC,GAAL;IACX,OAAO,CAACE,OAAO,EAAEC,CAAC,EAAEC,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ;AAEA;;;;AAIA,OAAM,SAAUC,WAAWA,CAACN,MAAe;EACzC,OAAOD,YAAY,CAACC,MAAM,CAAC;AAC7B;AAEA;;;;AAIA,OAAM,SAAUO,iBAAiBA,CAACP,MAAe;EAC/C,IAAIA,MAAM,CAACQ,MAAM,IAAI,CAAC,EAAE;IACtB;IACA,OAAOF,WAAW,CAACN,MAAM,CAAC;;EAG5B,IAAMS,IAAI,GAAG,EAAE;EAEfd,IAAI,CAACK,MAAM,EAAE,UAACC,CAAC;IACb;IACA,IAAI,CAACJ,OAAO,CAACI,CAAC,EAAEQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;MAC5CC,IAAI,CAACE,IAAI,CAACV,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzB,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA,IAAMW,IAAI,GAAGpB,iBAAiB,CAACiB,IAAI,EAAE,KAAK,CAAC;EACrC,IAAAI,EAAA,GAASjB,IAAI,CAACI,MAAM,CAAC;IAApBI,CAAC,GAAAS,EAAA;IAAER,CAAC,GAAAQ,EAAA,GAAgB;EAC3BD,IAAI,CAACE,OAAO,CAAC,CAAC,GAAG,EAAEV,CAAC,EAAEC,CAAC,CAAC,CAAC;EAEzB,OAAOO,IAAI;AACb;AAEA;;;;;;;AAOA,OAAM,SAAUG,UAAUA,CAACN,IAAc,EAAEO,KAAa,EAAEC,MAAc,EAAEC,MAAsB;EAAtB,IAAAA,MAAA;IAAAA,MAAA,OAAsB;EAAA;EAC9F;EACA,IAAMb,CAAC,GAAG,IAAIX,MAAM,CAAC;IACnByB,MAAM,EAAEV;GACT,CAAC;EAEF,IAAML,CAAC,GAAG,IAAIX,QAAQ,CAAC;IACrB0B,MAAM,EAAErB,GAAG,CAACW,IAAI,EAAE,UAACW,CAAC,EAAElB,GAAG;MAAK,OAAAA,GAAG;IAAH,CAAG;GAClC,CAAC;EAEF,IAAMF,MAAM,GAAGF,GAAG,CAACW,IAAI,EAAE,UAACW,CAAS,EAAElB,GAAW;IAC9C,OAAO,CAACE,CAAC,CAACiB,KAAK,CAACnB,GAAG,CAAC,GAAGc,KAAK,EAAEC,MAAM,GAAGZ,CAAC,CAACgB,KAAK,CAACD,CAAC,CAAC,GAAGH,MAAM,CAAqB;EACjF,CAAC,CAAC;EAEF,OAAOC,MAAM,GAAGX,iBAAiB,CAACP,MAAM,CAAC,GAAGM,WAAW,CAACN,MAAM,CAAC;AACjE;AAEA;;;;;;AAMA,OAAM,SAAUsB,YAAYA,CAACb,IAAc,EAAEQ,MAAc;EACzD,IAAMZ,CAAC,GAAG,IAAIX,MAAM,CAAC;IACnByB,MAAM,EAAEV;GACT,CAAC;EACF;EACA,IAAMc,KAAK,GAAGlB,CAAC,CAACmB,GAAG,GAAG,CAAC,GAAGnB,CAAC,CAACmB,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,EAAEnB,CAAC,CAACqB,GAAG,CAAC;EACpD,OAAOT,MAAM,GAAGZ,CAAC,CAACgB,KAAK,CAACE,KAAK,CAAC,GAAGN,MAAM;AACzC;AAEA;;;;;;AAMA,OAAM,SAAUU,kBAAkBA,CAACf,IAAa,EAAEI,KAAa,EAAEC,MAAc,EAAER,IAAc;EAC7F,IAAMmB,QAAQ,GAAAC,cAAA,CAAOjB,IAAI,CAAC;EAE1B,IAAMkB,OAAO,GAAGR,YAAY,CAACb,IAAI,EAAEQ,MAAM,CAAC;EAE1CW,QAAQ,CAACjB,IAAI,CAAC,CAAC,GAAG,EAAEK,KAAK,EAAEc,OAAO,CAAC,CAAC;EACpCF,QAAQ,CAACjB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAEmB,OAAO,CAAC,CAAC;EAChCF,QAAQ,CAACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpB,OAAOiB,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}