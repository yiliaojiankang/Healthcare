{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { each, isNil, isObject } from '@antv/util';\nimport { AXIS_META_CONFIG_KEYS } from '../constant';\nimport { addViewAnimation, deepAssign, pick } from '../utils';\n/**\n * 通用 legend 配置, 适用于带 colorField 或 seriesField 的图表\n * @param params\n */\nexport function legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend,\n    colorField = options.colorField,\n    seriesField = options.seriesField;\n  if (legend === false) {\n    chart.legend(false);\n  } else if (colorField || seriesField) {\n    chart.legend(colorField || seriesField, legend);\n  }\n  return params;\n}\n/**\n * 通用 tooltip 配置\n * @param params\n */\nexport function tooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip;\n  if (tooltip !== undefined) {\n    chart.tooltip(tooltip);\n  }\n  return params;\n}\n/**\n * Interaction 配置\n * @param params\n */\nexport function interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  var interactions = options.interactions;\n  each(interactions, function (i) {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n  return params;\n}\n/**\n * 动画\n * @param params\n */\nexport function animation(params) {\n  var chart = params.chart,\n    options = params.options;\n  var animation = options.animation;\n  // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n  addViewAnimation(chart, animation);\n  return params;\n}\n/**\n * 设置全局主题配置\n * @param params\n */\nexport function theme(params) {\n  var chart = params.chart,\n    options = params.options;\n  var theme = options.theme;\n  // 存在主题才设置主题\n  if (theme) {\n    chart.theme(theme);\n  }\n  return params;\n}\n/**\n * 状态 state 配置\n * @param params\n */\nexport function state(params) {\n  var chart = params.chart,\n    options = params.options;\n  var state = options.state;\n  if (state) {\n    each(chart.geometries, function (geometry) {\n      geometry.state(state);\n    });\n  }\n  return params;\n}\n/**\n * 处理缩略轴的 adaptor\n * @param params\n */\nexport function slider(params) {\n  var chart = params.chart,\n    options = params.options;\n  var slider = options.slider;\n  chart.option('slider', slider);\n  return params;\n}\n/**\n * 处理缩略轴的 adaptor\n * @param params\n */\nexport function scrollbar(params) {\n  var chart = params.chart,\n    options = params.options;\n  var scrollbar = options.scrollbar;\n  chart.option('scrollbar', scrollbar);\n  return params;\n}\n/**\n * scale 的 adaptor\n * @param axes\n */\nexport function scale(axes, meta) {\n  return function (params) {\n    var chart = params.chart,\n      options = params.options;\n    // 1. 轴配置中的 scale 信息\n    var scales = {};\n    each(axes, function (axis, field) {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n    // 2. meta 直接是 scale 的信息\n    scales = deepAssign({}, meta, options.meta, scales);\n    chart.scale(scales);\n    return params;\n  };\n}\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(annotationOptions) {\n  return function (params) {\n    var chart = params.chart,\n      options = params.options;\n    var annotationController = chart.getController('annotation');\n    /** 自定义 annotation */\n    each(__spreadArray(__spreadArray([], options.annotations || [], true), annotationOptions || [], true), function (annotationOption) {\n      // @ts-ignore\n      annotationController.annotation(annotationOption);\n    });\n    return params;\n  };\n}\n/**\n * 自动设置 limitInPlot\n * @param params\n */\nexport function limitInPlot(params) {\n  var chart = params.chart,\n    options = params.options;\n  var yAxis = options.yAxis,\n    limitInPlot = options.limitInPlot;\n  var value = limitInPlot;\n  // 用户没有设置 limitInPlot，则自动根据 yAxis 是否有 min/max 来设置 limitInPlot\n  if (isObject(yAxis) && isNil(limitInPlot)) {\n    if (Object.values(pick(yAxis, ['min', 'max', 'minLimit', 'maxLimit'])).some(function (value) {\n      return !isNil(value);\n    })) {\n      value = true;\n    } else {\n      value = false;\n    }\n  }\n  chart.limitInPlot = value;\n  return params;\n}\n/**\n * 坐标系转换\n */\nexport function transformations(coordinateType) {\n  if (coordinateType === void 0) {\n    coordinateType = 'rect';\n  }\n  return function (params) {\n    var chart = params.chart,\n      options = params.options;\n    var coordinate = options.coordinate;\n    var actions = Array.from(coordinate || []).map(function (cfg) {\n      if (cfg.type === 'reflectX') return ['reflect', 'x'];\n      if (cfg.type === 'reflectY') return ['reflect', 'y'];\n      if (cfg.type === 'transpose') return ['transpose'];\n      return null;\n    }).filter(function (d) {\n      return !!d;\n    });\n    if (actions.length !== 0) {\n      chart.coordinate({\n        type: coordinateType,\n        actions: actions\n      });\n    }\n    return params;\n  };\n}\nexport { pattern } from './pattern';","map":{"version":3,"names":["each","isNil","isObject","AXIS_META_CONFIG_KEYS","addViewAnimation","deepAssign","pick","legend","params","chart","options","colorField","seriesField","tooltip","undefined","interaction","interactions","i","enable","removeInteraction","type","cfg","animation","theme","state","geometries","geometry","slider","option","scrollbar","scale","axes","meta","scales","axis","field","annotation","annotationOptions","annotationController","getController","__spreadArray","annotations","annotationOption","limitInPlot","yAxis","value","Object","values","some","transformations","coordinateType","coordinate","actions","Array","from","map","filter","d","length","pattern"],"sources":["../../src/adaptor/common.ts"],"sourcesContent":["import { Geometry, Types } from '@antv/g2';\nimport { each, isNil, isObject } from '@antv/util';\nimport { AXIS_META_CONFIG_KEYS } from '../constant';\nimport { Params } from '../core/adaptor';\nimport { Options } from '../types';\nimport { Axis } from '../types/axis';\nimport { Transformations } from '../types/coordinate';\nimport { Interaction } from '../types/interaction';\nimport { addViewAnimation, deepAssign, pick } from '../utils';\n\n/**\n * 通用 legend 配置, 适用于带 colorField 或 seriesField 的图表\n * @param params\n */\nexport function legend<O extends Pick<Options, 'legend'> & { colorField?: string; seriesField?: string }>(\n  params: Params<O>\n): Params<O> {\n  const { chart, options } = params;\n  const { legend, colorField, seriesField } = options;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (colorField || seriesField) {\n    chart.legend(colorField || seriesField, legend);\n  }\n\n  return params;\n}\n\n/**\n * 通用 tooltip 配置\n * @param params\n */\nexport function tooltip<O extends Pick<Options, 'tooltip'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip !== undefined) {\n    chart.tooltip(tooltip);\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置\n * @param params\n */\nexport function interaction<O extends Pick<Options, 'interactions'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { interactions } = options;\n\n  each(interactions, (i: Interaction) => {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 动画\n * @param params\n */\nexport function animation<O extends Pick<Options, 'animation'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { animation } = options;\n\n  // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n  addViewAnimation(chart, animation);\n\n  return params;\n}\n\n/**\n * 设置全局主题配置\n * @param params\n */\nexport function theme<O extends Pick<Options, 'theme'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { theme } = options;\n\n  // 存在主题才设置主题\n  if (theme) {\n    chart.theme(theme);\n  }\n  return params;\n}\n\n/**\n * 状态 state 配置\n * @param params\n */\nexport function state<O extends Options>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { state } = options;\n\n  if (state) {\n    each(chart.geometries, (geometry: Geometry) => {\n      geometry.state(state);\n    });\n  }\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor\n * @param params\n */\nexport function slider(params: Params<Options>): Params<Options> {\n  const { chart, options } = params;\n  const { slider } = options;\n\n  chart.option('slider', slider);\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor\n * @param params\n */\nexport function scrollbar(params: Params<Options>): Params<Options> {\n  const { chart, options } = params;\n  const { scrollbar } = options;\n\n  chart.option('scrollbar', scrollbar);\n\n  return params;\n}\n\n/**\n * scale 的 adaptor\n * @param axes\n */\nexport function scale(axes: Record<string, Axis>, meta?: Options['meta']) {\n  return function <O extends Pick<Options, 'meta'>>(params: Params<O>): Params<O> {\n    const { chart, options } = params;\n\n    // 1. 轴配置中的 scale 信息\n    let scales: Record<string, any> = {};\n    each(axes, (axis: Axis, field: string) => {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n\n    // 2. meta 直接是 scale 的信息\n    scales = deepAssign({}, meta, options.meta, scales);\n\n    chart.scale(scales);\n\n    return params;\n  };\n}\n\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(annotationOptions?: Options['annotations']) {\n  return function <O extends Pick<Options, 'annotations'>>(params: Params<O>): Params<O> {\n    const { chart, options } = params;\n\n    const annotationController = chart.getController('annotation');\n\n    /** 自定义 annotation */\n    each([...(options.annotations || []), ...(annotationOptions || [])], (annotationOption) => {\n      // @ts-ignore\n      annotationController.annotation(annotationOption);\n    });\n\n    return params;\n  };\n}\n\n/**\n * 自动设置 limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<Options>): Params<Options> {\n  const { chart, options } = params;\n  const { yAxis, limitInPlot } = options;\n\n  let value = limitInPlot;\n\n  // 用户没有设置 limitInPlot，则自动根据 yAxis 是否有 min/max 来设置 limitInPlot\n  if (isObject(yAxis) && isNil(limitInPlot)) {\n    if (Object.values(pick(yAxis, ['min', 'max', 'minLimit', 'maxLimit'])).some((value) => !isNil(value))) {\n      value = true;\n    } else {\n      value = false;\n    }\n  }\n  chart.limitInPlot = value;\n\n  return params;\n}\n\n/**\n * 坐标系转换\n */\nexport function transformations(coordinateType: Types.CoordinateOption['type'] = 'rect') {\n  return (params: Params<Options & { coordinate: Transformations }>) => {\n    const { chart, options } = params;\n    const { coordinate } = options;\n\n    const actions: Types.CoordinateActions[] = Array.from(coordinate || [])\n      .map((cfg) => {\n        if (cfg.type === 'reflectX') return ['reflect', 'x'] as Types.CoordinateActions;\n        if (cfg.type === 'reflectY') return ['reflect', 'y'] as Types.CoordinateActions;\n        if (cfg.type === 'transpose') return ['transpose'] as Types.CoordinateActions;\n\n        return null;\n      })\n      .filter((d) => !!d);\n\n    if (actions.length !== 0) {\n      chart.coordinate({ type: coordinateType, actions });\n    }\n\n    return params;\n  };\n}\n\nexport { pattern } from './pattern';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}