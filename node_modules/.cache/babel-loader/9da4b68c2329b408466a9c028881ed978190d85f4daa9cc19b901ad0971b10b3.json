{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { getTheme } from '@antv/g2';\nimport { isNil, isObject } from '@antv/util';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry } from './base';\n/**\n * 柱形图其他的 adaptor\n * @param params\n */\nfunction otherAdaptor(params) {\n  var chart = params.chart,\n    options = params.options,\n    ext = params.ext;\n  var seriesField = options.seriesField,\n    isGroup = options.isGroup,\n    isStack = options.isStack,\n    marginRatio = options.marginRatio,\n    widthRatio = options.widthRatio,\n    groupField = options.groupField,\n    theme = options.theme;\n  /**\n   * adjust\n   */\n  var adjust = [];\n  if (seriesField) {\n    // group\n    if (isGroup) {\n      adjust.push({\n        type: 'dodge',\n        dodgeBy: groupField || seriesField,\n        marginRatio: marginRatio\n      });\n    }\n    // stack\n    if (isStack) {\n      adjust.push({\n        type: 'stack',\n        marginRatio: marginRatio\n      });\n    }\n  }\n  if (adjust.length && (ext === null || ext === void 0 ? void 0 : ext.geometry)) {\n    var g = ext === null || ext === void 0 ? void 0 : ext.geometry;\n    g.adjust(adjust);\n  }\n  // widthRatio\n  if (!isNil(widthRatio)) {\n    chart.theme(deepAssign({}, isObject(theme) ? theme : getTheme(theme), {\n      // columWidthRatio 配置覆盖 theme 中的配置\n      columnWidthRatio: widthRatio\n    }));\n  }\n  return params;\n}\nexport function interval(params) {\n  var options = params.options;\n  var xField = options.xField,\n    yField = options.yField,\n    interval = options.interval,\n    seriesField = options.seriesField,\n    tooltip = options.tooltip,\n    minColumnWidth = options.minColumnWidth,\n    maxColumnWidth = options.maxColumnWidth,\n    columnBackground = options.columnBackground,\n    dodgePadding = options.dodgePadding,\n    intervalPadding = options.intervalPadding,\n    useDeferredLabel = options.useDeferredLabel;\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField]),\n    fields = _a.fields,\n    formatter = _a.formatter;\n  // 保障一定要存在 interval 映射\n  var ext = (interval ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'interval',\n      colorField: seriesField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, interval),\n      args: {\n        dodgePadding: dodgePadding,\n        intervalPadding: intervalPadding,\n        minColumnWidth: minColumnWidth,\n        maxColumnWidth: maxColumnWidth,\n        background: columnBackground,\n        useDeferredLabel: useDeferredLabel\n      }\n    }\n  })) : params).ext;\n  return otherAdaptor(__assign(__assign({}, params), {\n    ext: ext\n  }));\n}","map":{"version":3,"names":["getTheme","isNil","isObject","deepAssign","getTooltipMapping","geometry","otherAdaptor","params","chart","options","ext","seriesField","isGroup","isStack","marginRatio","widthRatio","groupField","theme","adjust","push","type","dodgeBy","length","g","columnWidthRatio","interval","xField","yField","tooltip","minColumnWidth","maxColumnWidth","columnBackground","dodgePadding","intervalPadding","useDeferredLabel","_a","fields","formatter","colorField","tooltipFields","mapping","__assign","args","background"],"sources":["../../../src/adaptor/geometries/interval.ts"],"sourcesContent":["import { Geometry, getTheme, ShapeAttrs } from '@antv/g2';\nimport { isNil, isObject } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry, GeometryOptions, MappingOptions } from './base';\n\nexport interface IntervalGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField: string;\n  /** y 轴字段 */\n  readonly yField: string;\n  /** 拆分字段，在分组柱状图下同 groupField、colorField，在堆积柱状图下同 stackField、colorField  */\n  readonly seriesField?: string;\n  /** 是否分组柱形图 */\n  readonly isGroup?: boolean;\n  /** 是否堆积柱状图 */\n  readonly isStack?: boolean;\n  /** 柱状图宽度占比 [0-1] */\n  readonly widthRatio?: number;\n  /** 分组间柱子之间的组间间距(像素级)，仅对分组柱状图适用 */\n  readonly intervalPadding?: number;\n  /** 分组中柱子之间的间距 [0-1]，仅对分组柱状图适用 */\n  readonly marginRatio?: number;\n  /** 分组中柱子之间的组内间距(像素级)，仅对分组柱状图适用 */\n  readonly dodgePadding?: number;\n  /** 柱状图最小宽度（像素） */\n  readonly minColumnWidth?: number;\n  /** 柱状图最大宽度（像素） */\n  readonly maxColumnWidth?: number;\n  /** 柱子的背景样式设置 */\n  readonly columnBackground?: { style: ShapeAttrs };\n  /** 柱子视觉通道配置（含 color、shape、size、style、tooltip） */\n  readonly interval?: MappingOptions;\n  /** 分组字段，优先级高于 seriesField , isGroup: true 时会根据 groupField 进行分组。*/\n  readonly groupField?: string;\n}\n\n/**\n * 柱形图其他的 adaptor\n * @param params\n */\nfunction otherAdaptor<O extends IntervalGeometryOptions>(params: Params<O>): Params<O> {\n  const { chart, options, ext } = params;\n  const { seriesField, isGroup, isStack, marginRatio, widthRatio, groupField, theme } = options;\n\n  /**\n   * adjust\n   */\n  const adjust = [];\n  if (seriesField) {\n    // group\n    if (isGroup) {\n      adjust.push({\n        type: 'dodge',\n        dodgeBy: groupField || seriesField,\n        marginRatio,\n      });\n    }\n    // stack\n    if (isStack) {\n      adjust.push({\n        type: 'stack',\n        marginRatio,\n      });\n    }\n  }\n\n  if (adjust.length && ext?.geometry) {\n    const g = ext?.geometry as Geometry;\n    g.adjust(adjust);\n  }\n\n  // widthRatio\n  if (!isNil(widthRatio)) {\n    chart.theme(\n      deepAssign({}, isObject(theme) ? theme : getTheme(theme), {\n        // columWidthRatio 配置覆盖 theme 中的配置\n        columnWidthRatio: widthRatio,\n      })\n    );\n  }\n\n  return params;\n}\n\nexport function interval<O extends IntervalGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const {\n    xField,\n    yField,\n    interval,\n    seriesField,\n    tooltip,\n    minColumnWidth,\n    maxColumnWidth,\n    columnBackground,\n    dodgePadding,\n    intervalPadding,\n    useDeferredLabel,\n  } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField]);\n\n  // 保障一定要存在 interval 映射\n  const { ext } = interval\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'interval',\n            colorField: seriesField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...interval,\n            },\n            args: {\n              dodgePadding,\n              intervalPadding,\n              minColumnWidth,\n              maxColumnWidth,\n              background: columnBackground,\n              useDeferredLabel,\n            },\n          },\n        })\n      )\n    : params;\n\n  return otherAdaptor({\n    ...params,\n    ext,\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}