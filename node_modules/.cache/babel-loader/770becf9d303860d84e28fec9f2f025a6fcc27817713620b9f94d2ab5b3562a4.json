{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { aProjectFlat, Satistics } from '@antv/l7-utils';\nimport { hexbin } from 'd3-hexbin';\nvar R_EARTH = 6378000;\nexport function pointToHexbin(data, option) {\n  var dataArray = data.dataArray;\n  var _option$size = option.size,\n    size = _option$size === void 0 ? 10 : _option$size,\n    _option$method = option.method,\n    method = _option$method === void 0 ? 'sum' : _option$method;\n  var pixlSize = size / (2 * Math.PI * R_EARTH) * (256 << 20) / 2;\n  var screenPoints = dataArray.map(function (point) {\n    var _aProjectFlat = aProjectFlat(point.coordinates),\n      _aProjectFlat2 = _slicedToArray(_aProjectFlat, 2),\n      x = _aProjectFlat2[0],\n      y = _aProjectFlat2[1];\n    return _objectSpread(_objectSpread({}, point), {}, {\n      coordinates: [x, y]\n    });\n  });\n  var newHexbin = hexbin().radius(pixlSize).x(function (d) {\n    return d.coordinates[0];\n  }).y(function (d) {\n    return d.coordinates[1];\n  });\n  var hexbinBins = newHexbin(screenPoints);\n  var result = {\n    dataArray: hexbinBins.map(function (hex, index) {\n      var _ref;\n      if (option.field && method) {\n        var columns = Satistics.getColumn(hex, option.field);\n        hex[method] = Satistics.statMap[method](columns);\n      }\n      return _ref = {}, _defineProperty(_ref, option.method, hex[method]), _defineProperty(_ref, \"count\", hex.length), _defineProperty(_ref, \"rawData\", hex), _defineProperty(_ref, \"coordinates\", [hex.x, hex.y]), _defineProperty(_ref, \"_id\", index), _ref;\n    }),\n    radius: pixlSize,\n    xOffset: pixlSize,\n    yOffset: pixlSize,\n    type: 'hexagon'\n  };\n  return result;\n}","map":{"version":3,"names":["_defineProperty","_objectSpread","_slicedToArray","aProjectFlat","Satistics","hexbin","R_EARTH","pointToHexbin","data","option","dataArray","_option$size","size","_option$method","method","pixlSize","Math","PI","screenPoints","map","point","_aProjectFlat","coordinates","_aProjectFlat2","x","y","newHexbin","radius","d","hexbinBins","result","hex","index","_ref","field","columns","getColumn","statMap","length","xOffset","yOffset","type"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/transform/hexagon.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { aProjectFlat, Satistics } from '@antv/l7-utils';\nimport { hexbin } from 'd3-hexbin';\nvar R_EARTH = 6378000;\nexport function pointToHexbin(data, option) {\n  var dataArray = data.dataArray;\n  var _option$size = option.size,\n    size = _option$size === void 0 ? 10 : _option$size,\n    _option$method = option.method,\n    method = _option$method === void 0 ? 'sum' : _option$method;\n  var pixlSize = size / (2 * Math.PI * R_EARTH) * (256 << 20) / 2;\n  var screenPoints = dataArray.map(function (point) {\n    var _aProjectFlat = aProjectFlat(point.coordinates),\n      _aProjectFlat2 = _slicedToArray(_aProjectFlat, 2),\n      x = _aProjectFlat2[0],\n      y = _aProjectFlat2[1];\n    return _objectSpread(_objectSpread({}, point), {}, {\n      coordinates: [x, y]\n    });\n  });\n  var newHexbin = hexbin().radius(pixlSize).x(function (d) {\n    return d.coordinates[0];\n  }).y(function (d) {\n    return d.coordinates[1];\n  });\n  var hexbinBins = newHexbin(screenPoints);\n  var result = {\n    dataArray: hexbinBins.map(function (hex, index) {\n      var _ref;\n      if (option.field && method) {\n        var columns = Satistics.getColumn(hex, option.field);\n        hex[method] = Satistics.statMap[method](columns);\n      }\n      return _ref = {}, _defineProperty(_ref, option.method, hex[method]), _defineProperty(_ref, \"count\", hex.length), _defineProperty(_ref, \"rawData\", hex), _defineProperty(_ref, \"coordinates\", [hex.x, hex.y]), _defineProperty(_ref, \"_id\", index), _ref;\n    }),\n    radius: pixlSize,\n    xOffset: pixlSize,\n    yOffset: pixlSize,\n    type: 'hexagon'\n  };\n  return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}