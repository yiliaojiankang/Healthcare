{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar List = /** @class */function (_super) {\n  __extends(List, _super);\n  function List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  List.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'list',\n      cols: null,\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this)\n    });\n  };\n  List.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  List.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  List.prototype.beforeEachView = function (view, facet) {};\n  List.prototype.generateFacets = function (data) {\n    var _this = this;\n    var fields = this.cfg.fields;\n    var cols = this.cfg.cols;\n    var _a = __read(fields, 1),\n      columnField = _a[0];\n    if (!columnField) {\n      throw new Error('No `fields` specified!');\n    }\n    var colValues = this.getFieldValues(data, columnField);\n    var count = colValues.length;\n    cols = cols || count; // 每行有几列数据\n    // 总共有几行\n    var rows = this.getPageCount(count, cols);\n    var rst = [];\n    colValues.forEach(function (val, index) {\n      // 当前 index 在那个行列\n      var _a = _this.getRowCol(index, cols),\n        row = _a.row,\n        col = _a.col;\n      var conditions = [{\n        field: columnField,\n        value: val,\n        values: colValues\n      }];\n      var facetData = filter(data, _this.getFacetDataFilter(conditions));\n      var facet = {\n        type: _this.cfg.type,\n        data: facetData,\n        region: _this.getRegion(rows, cols, col, row),\n        columnValue: val,\n        rowValue: val,\n        columnField: columnField,\n        rowField: null,\n        columnIndex: col,\n        rowIndex: row,\n        columnValuesLength: cols,\n        rowValuesLength: rows,\n        total: count\n      };\n      rst.push(facet);\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  List.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1 && facet.columnValuesLength * facet.rowIndex + facet.columnIndex + 1 + facet.columnValuesLength <= facet.total) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  List.prototype.getYAxisOption = function (y, axes, option, facet) {\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    }\n    return option;\n  };\n  /**\n   * facet title\n   */\n  List.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet) {\n      var columnValue = facet.columnValue,\n        view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      var config = deepMix({\n        position: ['50%', '0%'],\n        content: formatter ? formatter(columnValue) : columnValue\n      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n      view.annotation().text(config);\n    });\n  };\n  /**\n   * 计算分页数\n   * @param total\n   * @param pageSize\n   */\n  List.prototype.getPageCount = function (total, pageSize) {\n    return Math.floor((total + pageSize - 1) / pageSize);\n  };\n  /**\n   * 索引值在哪一页\n   * @param index\n   * @param pageSize\n   */\n  List.prototype.getRowCol = function (index, pageSize) {\n    var row = Math.floor(index / pageSize);\n    var col = index % pageSize;\n    return {\n      row: row,\n      col: col\n    };\n  };\n  return List;\n}(Facet);\nexport default List;","map":{"version":3,"names":["deepMix","each","filter","get","DIRECTION","getFactTitleConfig","Facet","List","_super","__extends","prototype","getDefaultCfg","call","type","cols","showTitle","title","getDefaultTitleCfg","render","cfg","renderTitle","afterEachView","view","facet","processAxis","beforeEachView","generateFacets","data","_this","fields","_a","__read","columnField","Error","colValues","getFieldValues","count","length","rows","getPageCount","rst","forEach","val","index","getRowCol","row","col","conditions","field","value","values","facetData","getFacetDataFilter","region","getRegion","columnValue","rowValue","rowField","columnIndex","rowIndex","columnValuesLength","rowValuesLength","total","push","getXAxisOption","x","axes","option","__assign","label","getYAxisOption","y","facets","formatter","config","position","content","TOP","annotation","text","pageSize","Math","floor"],"sources":["../../src/facet/list.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, ListCfg, ListData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class List extends Facet<ListCfg, ListData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'list',\n      cols: null, // 默认显示一列\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected afterEachView(view: View, facet: ListData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: ListData) {}\n\n  protected generateFacets(data: Datum[]): ListData[] {\n    const { fields } = this.cfg;\n    let { cols } = this.cfg;\n\n    const [columnField] = fields;\n    if (!columnField) {\n      throw new Error('No `fields` specified!');\n    }\n\n    const colValues = this.getFieldValues(data, columnField);\n\n    const count = colValues.length;\n    cols = cols || count; // 每行有几列数据\n\n    // 总共有几行\n    const rows = this.getPageCount(count, cols);\n    const rst = [];\n\n    colValues.forEach((val, index) => {\n      // 当前 index 在那个行列\n      const { row, col } = this.getRowCol(index, cols);\n\n      const conditions = [{ field: columnField, value: val, values: colValues }];\n\n      const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n      const facet: ListData = {\n        type: this.cfg.type,\n        data: facetData,\n        region: this.getRegion(rows, cols, col, row),\n\n        columnValue: val,\n        rowValue: val,\n        columnField,\n        rowField: null,\n        columnIndex: col,\n        rowIndex: row,\n        columnValuesLength: cols,\n        rowValuesLength: rows,\n\n        total: count,\n      };\n\n      rst.push(facet);\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: ListData): object {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (\n      facet.rowIndex !== facet.rowValuesLength - 1 &&\n      facet.columnValuesLength * facet.rowIndex + facet.columnIndex + 1 + facet.columnValuesLength <= facet.total\n    ) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: ListData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: ListData) => {\n      const { columnValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      const config = deepMix(\n        {\n          position: ['50%', '0%'] as [string, string],\n          content: formatter ? formatter(columnValue) : columnValue,\n        },\n        getFactTitleConfig(DIRECTION.TOP),\n        this.cfg.title\n      );\n\n      view.annotation().text(config);\n    });\n  }\n\n  /**\n   * 计算分页数\n   * @param total\n   * @param pageSize\n   */\n  private getPageCount(total: number, pageSize: number): number {\n    return Math.floor((total + pageSize - 1) / pageSize);\n  }\n\n  /**\n   * 索引值在哪一页\n   * @param index\n   * @param pageSize\n   */\n  private getRowCol(index: number, pageSize: number) {\n    const row = Math.floor(index / pageSize);\n    const col = index % pageSize;\n\n    return { row, col };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}