{"ast":null,"code":"import { get, isArray, isNumber, map } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { deepAssign, flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE, FUNNEL_PERCENT } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var _b = options.data,\n    data = _b === void 0 ? [] : _b,\n    yField = options.yField;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    xField = options.xField,\n    yField = options.yField,\n    color = options.color,\n    compareField = options.compareField,\n    isTransposed = options.isTransposed,\n    tooltip = options.tooltip,\n    maxSize = options.maxSize,\n    minSize = options.minSize,\n    label = options.label,\n    funnelStyle = options.funnelStyle,\n    state = options.state,\n    showFacetTitle = options.showFacetTitle;\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView: function (view, facet) {\n      var index = isTransposed ? facet.rowIndex : facet.columnIndex;\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]]\n        });\n      }\n      var formatterData = transformData(facet.data, data, {\n        yField: yField,\n        maxSize: maxSize,\n        minSize: minSize\n      });\n      view.data(formatterData);\n      // 绘制图形\n      var _a = getTooltipMapping(tooltip, [xField, yField, compareField]),\n        fields = _a.fields,\n        formatter = _a.formatter;\n      var defaultFacetLabel = isTransposed ? {\n        offset: index === 0 ? 10 : -23,\n        position: index === 0 ? 'bottom' : 'top'\n      } : {\n        offset: 10,\n        position: 'left',\n        style: {\n          textAlign: index === 0 ? 'end' : 'start'\n        }\n      };\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color: color,\n            style: funnelStyle\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state: state\n        }\n      });\n    }\n  });\n  return params;\n}\nexport function compareConversionTag(params) {\n  // @ts-ignore\n  var chart = params.chart,\n    index = params.index,\n    options = params.options;\n  var conversionTag = options.conversionTag,\n    isTransposed = options.isTransposed;\n  (isNumber(index) ? [chart] : chart.views).forEach(function (view, viewIndex) {\n    // 获取形状位置，再转化为需要的转化率位置\n    var dataArray = get(view, ['geometries', '0', 'dataArray'], []);\n    var size = get(view, ['options', 'data', 'length']);\n    var x = map(dataArray, function (item) {\n      return get(item, ['0', 'nextPoints', '0', 'x']) * size - 0.5;\n    });\n    var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n      var ratio = (index || viewIndex) === 0 ? -1 : 1;\n      return deepAssign({}, initLineOption, {\n        start: [x[datumIndex - 1] || datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n        end: [x[datumIndex - 1] || datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n        text: isTransposed ? {\n          style: {\n            textAlign: 'start'\n          }\n        } : {\n          offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n          style: {\n            textAlign: (index || viewIndex) === 0 ? 'end' : 'start'\n          }\n        }\n      });\n    };\n    conversionTagComponent(getLineCoordinate)(deepAssign({}, {\n      chart: view,\n      options: options\n    }));\n  });\n}\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params) {\n  var chart = params.chart;\n  // @ts-ignore\n  chart.once('beforepaint', function () {\n    return compareConversionTag(params);\n  });\n  return params;\n}\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params) {\n  return flow(field, geometry, conversionTag)(params);\n}","map":{"version":3,"names":["get","isArray","isNumber","map","geometry","baseGeometry","deepAssign","flow","getTooltipMapping","FUNNEL_CONVERSATION","FUNNEL_MAPPING_VALUE","FUNNEL_PERCENT","conversionTagComponent","transformData","field","params","chart","options","_b","data","yField","scale","_a","sync","xField","color","compareField","isTransposed","tooltip","maxSize","minSize","label","funnelStyle","state","showFacetTitle","facet","fields","transpose","padding","showTitle","eachView","view","index","rowIndex","columnIndex","coordinate","type","actions","formatterData","formatter","defaultFacetLabel","offset","position","style","textAlign","colorField","tooltipFields","concat","mapping","shape","compareConversionTag","conversionTag","views","forEach","viewIndex","dataArray","size","x","item","getLineCoordinate","datum","datumIndex","initLineOption","ratio","start","end","text","offsetX","once","compareFunnel"],"sources":["../../../../src/plots/funnel/geometries/compare.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { get, isArray, isNumber, map } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { Params } from '../../../core/adaptor';\nimport { Data, Datum } from '../../../types/common';\nimport { deepAssign, flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE, FUNNEL_PERCENT } from '../constant';\nimport { FunnelOptions } from '../types';\nimport { conversionTagComponent, transformData } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    xField,\n    yField,\n    color,\n    compareField,\n    isTransposed,\n    tooltip,\n    maxSize,\n    minSize,\n    label,\n    funnelStyle,\n    state,\n    showFacetTitle,\n  } = options;\n\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView(view, facet) {\n      const index = isTransposed ? facet.rowIndex : facet.columnIndex;\n\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]],\n        });\n      }\n\n      const formatterData = transformData(facet.data, data, {\n        yField,\n        maxSize,\n        minSize,\n      });\n\n      view.data(formatterData);\n\n      // 绘制图形\n      const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, compareField]);\n\n      const defaultFacetLabel = isTransposed\n        ? {\n            offset: index === 0 ? 10 : -23,\n            position: (index === 0 ? 'bottom' : 'top') as Types.IntervalGeometryLabelPosition,\n          }\n        : {\n            offset: 10,\n            position: 'left' as Types.IntervalGeometryLabelPosition,\n            style: {\n              textAlign: index === 0 ? 'end' : 'start',\n            },\n          };\n\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color,\n            style: funnelStyle,\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state,\n        },\n      });\n    },\n  });\n\n  return params;\n}\n\nexport function compareConversionTag(params: Params<FunnelOptions>) {\n  // @ts-ignore\n  const { chart, index, options } = params;\n  const { conversionTag, isTransposed } = options;\n  (isNumber(index) ? [chart] : chart.views).forEach((view, viewIndex) => {\n    // 获取形状位置，再转化为需要的转化率位置\n    const dataArray = get(view, ['geometries', '0', 'dataArray'], []);\n    const size = get(view, ['options', 'data', 'length']);\n    const x = map(dataArray, (item) => get(item, ['0', 'nextPoints', '0', 'x']) * size - 0.5);\n\n    const getLineCoordinate = (\n      datum: Datum,\n      datumIndex: number,\n      data: Data,\n      initLineOption: Record<string, any>\n    ): Types.LineOption => {\n      const ratio = (index || viewIndex) === 0 ? -1 : 1;\n      return deepAssign({}, initLineOption, {\n        start: [x[datumIndex - 1] || datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n        end: [x[datumIndex - 1] || datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n        text: isTransposed\n          ? {\n              style: {\n                textAlign: 'start',\n              },\n            }\n          : {\n              offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n              style: {\n                textAlign: (index || viewIndex) === 0 ? 'end' : 'start',\n              },\n            },\n      });\n    };\n\n    conversionTagComponent(getLineCoordinate)(\n      deepAssign(\n        {},\n        {\n          chart: view,\n          options,\n        }\n      )\n    );\n  });\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart } = params;\n  // @ts-ignore\n  chart.once('beforepaint', () => compareConversionTag(params));\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, conversionTag)(params);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}