{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getIntervalRectPath, getRectPoints, getRectWithCornerRadius } from './util';\n/** Interval 的 shape 工厂 */\nvar IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints: function (pointInfo) {\n    return getRectPoints(pointInfo);\n  }\n});\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, false, true);\n    var group = container;\n    var backgroundCfg = cfg === null || cfg === void 0 ? void 0 : cfg.background;\n    if (backgroundCfg) {\n      group = container.addGroup({\n        name: 'interval-group'\n      });\n      var backgroundStyle = getBackgroundRectStyle(cfg);\n      var backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points), this.coordinate);\n      group.addShape('path', {\n        attrs: __assign(__assign({}, backgroundStyle), {\n          path: backgroundPath\n        }),\n        capture: false,\n        zIndex: -1,\n        name: BACKGROUND_SHAPE\n      });\n    }\n    var path;\n    if (style.radius && this.coordinate.isRect) {\n      path = getRectWithCornerRadius(this.parsePoints(cfg.points), this.coordinate, style.radius);\n    } else {\n      path = this.parsePath(getIntervalRectPath(cfg.points, style.lineCap, this.coordinate));\n    }\n    var shape = group.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return backgroundCfg ? group : shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color,\n      isInPolar = markerCfg.isInPolar;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color\n        }\n      };\n    }\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});\nexport default IntervalShapeFactory;","map":{"version":3,"names":["registerShape","registerShapeFactory","BACKGROUND_SHAPE","getBackgroundRectStyle","getStyle","getBackgroundRectPath","getIntervalRectPath","getRectPoints","getRectWithCornerRadius","IntervalShapeFactory","defaultShapeType","getDefaultPoints","pointInfo","draw","cfg","container","style","group","backgroundCfg","background","addGroup","name","backgroundStyle","backgroundPath","parsePoints","points","coordinate","addShape","attrs","__assign","path","capture","zIndex","radius","isRect","parsePath","lineCap","shape","getMarker","markerCfg","color","isInPolar","symbol","r","fill"],"sources":["../../../../src/geometry/shape/interval/index.ts"],"sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getIntervalRectPath, getRectPoints, getRectWithCornerRadius } from './util';\n\n/** Interval 的 shape 工厂 */\nconst IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return getRectPoints(pointInfo);\n  },\n});\n\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    let group = container;\n\n    const backgroundCfg = cfg?.background;\n    if (backgroundCfg) {\n      group = container.addGroup({\n        name: 'interval-group',\n      });\n      const backgroundStyle = getBackgroundRectStyle(cfg);\n      const backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points) as Point[], this.coordinate);\n      group.addShape('path', {\n        attrs: {\n          ...backgroundStyle,\n          path: backgroundPath,\n        },\n        capture: false,\n        zIndex: -1,\n        name: BACKGROUND_SHAPE,\n      });\n    }\n\n    let path;\n    if (style.radius && this.coordinate.isRect) {\n      path = getRectWithCornerRadius(this.parsePoints(cfg.points), this.coordinate, style.radius);\n    } else {\n      path = this.parsePath(getIntervalRectPath(cfg.points as Point[], style.lineCap, this.coordinate));\n    }\n\n    const shape = group.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return backgroundCfg ? group : shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color, isInPolar } = markerCfg;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color,\n        },\n      };\n    }\n\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n\nexport default IntervalShapeFactory;\n"],"mappings":";AAGA,SAASA,aAAa,EAAEC,oBAAoB,QAAQ,SAAS;AAC7D,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,sBAAsB,EAAEC,QAAQ,QAAQ,mBAAmB;AACpE,SAASC,qBAAqB,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,uBAAuB,QAAQ,QAAQ;AAE3G;AACA,IAAMC,oBAAoB,GAAGR,oBAAoB,CAAC,UAAU,EAAE;EAC5DS,gBAAgB,EAAE,MAAM;EACxBC,gBAAgB,EAAhB,SAAAA,CAAiBC,SAAqB;IACpC,OAAOL,aAAa,CAACK,SAAS,CAAC;EACjC;CACD,CAAC;AAEF;AACAZ,aAAa,CAAC,UAAU,EAAE,MAAM,EAAE;EAChCa,IAAI,EAAJ,SAAAA,CAAKC,GAAc,EAAEC,SAAiB;IACpC,IAAMC,KAAK,GAAGZ,QAAQ,CAACU,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;IACxC,IAAIG,KAAK,GAAGF,SAAS;IAErB,IAAMG,aAAa,GAAGJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEK,UAAU;IACrC,IAAID,aAAa,EAAE;MACjBD,KAAK,GAAGF,SAAS,CAACK,QAAQ,CAAC;QACzBC,IAAI,EAAE;OACP,CAAC;MACF,IAAMC,eAAe,GAAGnB,sBAAsB,CAACW,GAAG,CAAC;MACnD,IAAMS,cAAc,GAAGlB,qBAAqB,CAACS,GAAG,EAAE,IAAI,CAACU,WAAW,CAACV,GAAG,CAACW,MAAM,CAAY,EAAE,IAAI,CAACC,UAAU,CAAC;MAC3GT,KAAK,CAACU,QAAQ,CAAC,MAAM,EAAE;QACrBC,KAAK,EAAAC,QAAA,CAAAA,QAAA,KACAP,eAAe;UAClBQ,IAAI,EAAEP;QAAc,EACrB;QACDQ,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,CAAC,CAAC;QACVX,IAAI,EAAEnB;OACP,CAAC;;IAGJ,IAAI4B,IAAI;IACR,IAAId,KAAK,CAACiB,MAAM,IAAI,IAAI,CAACP,UAAU,CAACQ,MAAM,EAAE;MAC1CJ,IAAI,GAAGtB,uBAAuB,CAAC,IAAI,CAACgB,WAAW,CAACV,GAAG,CAACW,MAAM,CAAC,EAAE,IAAI,CAACC,UAAU,EAAEV,KAAK,CAACiB,MAAM,CAAC;KAC5F,MAAM;MACLH,IAAI,GAAG,IAAI,CAACK,SAAS,CAAC7B,mBAAmB,CAACQ,GAAG,CAACW,MAAiB,EAAET,KAAK,CAACoB,OAAO,EAAE,IAAI,CAACV,UAAU,CAAC,CAAC;;IAGnG,IAAMW,KAAK,GAAGpB,KAAK,CAACU,QAAQ,CAAC,MAAM,EAAE;MACnCC,KAAK,EAAAC,QAAA,CAAAA,QAAA,KACAb,KAAK;QACRc,IAAI,EAAAA;MAAA,EACL;MACDT,IAAI,EAAE;KACP,CAAC;IAEF,OAAOH,aAAa,GAAGD,KAAK,GAAGoB,KAAK;EACtC,CAAC;EACDC,SAAS,EAAT,SAAAA,CAAUC,SAAyB;IACzB,IAAAC,KAAK,GAAgBD,SAAS,CAAAC,KAAzB;MAAEC,SAAS,GAAKF,SAAS,CAAAE,SAAd;IACxB,IAAIA,SAAS,EAAE;MACb,OAAO;QACLC,MAAM,EAAE,QAAQ;QAChB1B,KAAK,EAAE;UACL2B,CAAC,EAAE,GAAG;UACNC,IAAI,EAAEJ;;OAET;;IAGH,OAAO;MACLE,MAAM,EAAE,QAAQ;MAChB1B,KAAK,EAAE;QACL2B,CAAC,EAAE,CAAC;QACJC,IAAI,EAAEJ;;KAET;EACH;CACD,CAAC;AAEF,eAAe/B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}