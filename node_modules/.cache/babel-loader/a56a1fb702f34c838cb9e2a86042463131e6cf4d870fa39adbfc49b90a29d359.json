{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { TYPES } from '@antv/l7-core';\nimport { lodashUtil } from '@antv/l7-utils';\nimport { TileLayerService } from \"../service/TileLayerService\";\nimport { TilePickService } from \"../service/TilePickService\";\nimport { getTileFactory } from \"../tile\";\nimport { ProxyFuncs } from \"../utils/constants\";\nvar debounce = lodashUtil.debounce;\nvar BaseTileLayer = /*#__PURE__*/function () {\n  // 瓦片是否加载成功\n\n  function BaseTileLayer(parent) {\n    var _this = this;\n    _classCallCheck(this, BaseTileLayer);\n    // 瓦片数据管理器\n    _defineProperty(this, \"initedTileset\", false);\n    _defineProperty(this, \"mapchange\", function () {\n      var _this$tilesetManager;\n      // 图层不可见时，不触发加载瓦片\n      if (_this.parent.isVisible() === false) {\n        return;\n      }\n      var _this$getCurrentView = _this.getCurrentView(),\n        latLonBounds = _this$getCurrentView.latLonBounds,\n        zoom = _this$getCurrentView.zoom;\n      if (_this.mapService.version === 'GAODE1.x') {\n        var _this$parent$getLayer = _this.parent.getLayerConfig(),\n          visible = _this$parent$getLayer.visible;\n        if (zoom < 2 && visible) {\n          _this.parent.updateLayerConfig({\n            visible: false\n          });\n          _this.layerService.reRender();\n        } else if (zoom >= 2 && !visible) {\n          _this.parent.updateLayerConfig({\n            visible: true\n          });\n          _this.layerService.reRender();\n        }\n      }\n      if (_this.lastViewStates && _this.lastViewStates.zoom === zoom && _this.lastViewStates.latLonBounds.toString() === latLonBounds.toString()) {\n        return;\n      }\n      _this.lastViewStates = {\n        zoom: zoom,\n        latLonBounds: latLonBounds\n      };\n      (_this$tilesetManager = _this.tilesetManager) === null || _this$tilesetManager === void 0 || _this$tilesetManager.throttleUpdate(zoom, latLonBounds);\n    });\n    //  防抖操作\n    _defineProperty(this, \"viewchange\", debounce(this.mapchange, 24));\n    this.parent = parent;\n    var container = this.parent.getContainer();\n    this.rendererService = container.get(TYPES.IRendererService);\n    this.layerService = container.get(TYPES.ILayerService);\n    this.mapService = container.get(TYPES.IMapService);\n    this.pickingService = container.get(TYPES.IPickingService);\n\n    // 初始化瓦片管理服务\n    this.tileLayerService = new TileLayerService({\n      rendererService: this.rendererService,\n      layerService: this.layerService,\n      parent: parent\n    });\n    // 初始化拾取服务\n    this.tilePickService = new TilePickService({\n      tileLayerService: this.tileLayerService,\n      layerService: this.layerService,\n      parent: parent\n    });\n\n    // 重置\n    this.parent.setLayerPickService(this.tilePickService);\n    this.proxy(parent);\n    this.initTileSetManager();\n  }\n  _createClass(BaseTileLayer, [{\n    key: \"initTileSetManager\",\n    value: function initTileSetManager() {\n      var _this$tilesetManager2;\n      var source = this.parent.getSource();\n      this.tilesetManager = source.tileset;\n      if (!this.initedTileset) {\n        this.bindTilesetEvent();\n        this.initedTileset = true;\n      }\n\n      // 图层不可见时，不触发加载瓦片\n      if (this.parent.isVisible() === false) {\n        return;\n      }\n      var _this$getCurrentView2 = this.getCurrentView(),\n        latLonBounds = _this$getCurrentView2.latLonBounds,\n        zoom = _this$getCurrentView2.zoom;\n      (_this$tilesetManager2 = this.tilesetManager) === null || _this$tilesetManager2 === void 0 || _this$tilesetManager2.update(zoom, latLonBounds);\n    }\n  }, {\n    key: \"getCurrentView\",\n    value: function getCurrentView() {\n      var bounds = this.mapService.getBounds();\n      var latLonBounds = [bounds[0][0], bounds[0][1], bounds[1][0], bounds[1][1]];\n      var zoom = this.mapService.getZoom();\n      return {\n        latLonBounds: latLonBounds,\n        zoom: zoom\n      };\n    }\n  }, {\n    key: \"bindTilesetEvent\",\n    value: function bindTilesetEvent() {\n      var _this2 = this;\n      // 瓦片数据加载成功\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      this.tilesetManager.on('tile-loaded', function (tile) {\n        // 将事件抛出，图层上可以监听使用\n      });\n\n      // 瓦片数据从缓存删除或被执行重新加载\n      this.tilesetManager.on('tile-unload', function (tile) {\n        // 将事件抛出，图层上可以监听使用\n        _this2.tileUnLoad(tile);\n      });\n\n      // 瓦片数据加载失败\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      this.tilesetManager.on('tile-error', function (error, tile) {\n        // 将事件抛出，图层上可以监听使用\n        _this2.tileError(error);\n      });\n\n      // 瓦片显隐状态更新\n      this.tilesetManager.on('tile-update', function () {\n        _this2.tileUpdate();\n      });\n\n      // 地图视野发生改变\n      this.mapService.on('zoomend', this.mapchange);\n      this.mapService.on('moveend', this.viewchange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.tileLayerService.render();\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.tileLayerService.getLayers();\n    }\n  }, {\n    key: \"getTiles\",\n    value: function getTiles() {\n      return this.tileLayerService.getTiles();\n    }\n  }, {\n    key: \"getTile\",\n    value: function getTile(key) {\n      return this.tileLayerService.getTile(key);\n    }\n  }, {\n    key: \"tileLoaded\",\n    value:\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function tileLoaded(tile) {\n      //\n    }\n  }, {\n    key: \"tileError\",\n    value: function tileError(error) {\n      console.warn('error:', error);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$tilesetManager3;\n      this.mapService.off('zoomend', this.mapchange);\n      this.mapService.off('moveend', this.viewchange);\n      (_this$tilesetManager3 = this.tilesetManager) === null || _this$tilesetManager3 === void 0 || _this$tilesetManager3.destroy();\n      this.tileLayerService.destroy();\n    }\n    // 重新加载\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this$tilesetManager4;\n      // 瓦片重新加载\n      this.tilesetManager.clear();\n      var _this$getCurrentView3 = this.getCurrentView(),\n        latLonBounds = _this$getCurrentView3.latLonBounds,\n        zoom = _this$getCurrentView3.zoom;\n      (_this$tilesetManager4 = this.tilesetManager) === null || _this$tilesetManager4 === void 0 || _this$tilesetManager4.update(zoom, latLonBounds);\n    }\n  }, {\n    key: \"tileUnLoad\",\n    value: function tileUnLoad(tile) {\n      this.tileLayerService.removeTile(tile.key);\n    }\n  }, {\n    key: \"tileUpdate\",\n    value: function () {\n      var _tileUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n        var minZoom, maxZoom, tiles;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.tilesetManager) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              minZoom = this.parent.getMinZoom();\n              maxZoom = this.parent.getMaxZoom();\n              tiles = this.tilesetManager.tiles.filter(function (tile) {\n                return tile.isLoaded;\n              }) // 过滤未加载完成的\n              .filter(function (tile) {\n                return tile.isVisibleChange;\n              }) // 过滤未发生变化的\n              .filter(function (tile) {\n                return tile.data;\n              }) //\n              .filter(function (tile) {\n                return tile.z >= minZoom && tile.z < maxZoom;\n              }); // 过滤不可见见\n              _context2.next = 7;\n              return Promise.all(tiles.map( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tile) {\n                  var tileInstance, tileLayer;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (_this3.tileLayerService.hasTile(tile.key)) {\n                          _context.next = 9;\n                          break;\n                        }\n                        tileInstance = getTileFactory(_this3.parent);\n                        tileLayer = new tileInstance(tile, _this3.parent);\n                        _context.next = 5;\n                        return tileLayer.initTileLayer();\n                      case 5:\n                        _this3.tilePickService.setPickState();\n                        if (tileLayer.getLayers().length !== 0) {\n                          _this3.tileLayerService.addTile(tileLayer);\n                          _this3.tileLayerService.updateTileVisible(tile);\n                          _this3.layerService.reRender();\n                        }\n                        _context.next = 12;\n                        break;\n                      case 9:\n                        // 已加载瓦片\n                        _this3.tileLayerService.updateTileVisible(tile);\n                        _this3.tilePickService.setPickState();\n                        _this3.layerService.reRender();\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }()));\n            case 7:\n              if (this.tilesetManager.isLoaded) {\n                // 将事件抛出，图层上可以使用瓦片\n                this.parent.emit('tiles-loaded', this.tilesetManager.currentTiles);\n              }\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function tileUpdate() {\n        return _tileUpdate.apply(this, arguments);\n      }\n      return tileUpdate;\n    }() // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  }, {\n    key: \"setPickState\",\n    value: function setPickState(layers) {\n      return;\n    }\n  }, {\n    key: \"pickRender\",\n    value: function pickRender(target) {\n      this.tilePickService.pickRender(target);\n    }\n  }, {\n    key: \"selectFeature\",\n    value: function selectFeature(pickedColors) {\n      this.tilePickService.selectFeature(pickedColors);\n    }\n  }, {\n    key: \"highlightPickedFeature\",\n    value: function highlightPickedFeature(pickedColors) {\n      this.tilePickService.highlightPickedFeature(pickedColors);\n    }\n\n    /**\n     * 实现 TileLayer 对子图层方法的代理\n     * @param parent\n     */\n  }, {\n    key: \"proxy\",\n    value: function proxy(parent) {\n      var _this4 = this;\n      ProxyFuncs.forEach(function (func) {\n        // @ts-ignore\n        var oldStyleFunc = parent[func].bind(parent);\n        // @ts-ignore\n        parent[func] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          oldStyleFunc.apply(void 0, args);\n          _this4.getLayers().map(function (child) {\n            // @ts-ignore\n            child[func].apply(child, args);\n          });\n          // Tip: 目前在更新 RasterData 的 colorTexture 的时候需要额外优化\n          if (func === 'style') {\n            _this4.getTiles().forEach(function (tile) {\n              return tile.styleUpdate.apply(tile, args);\n            });\n          }\n          return parent;\n        };\n      });\n    }\n  }]);\n  return BaseTileLayer;\n}();\nexport { BaseTileLayer as default };","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","_defineProperty","_regeneratorRuntime","TYPES","lodashUtil","TileLayerService","TilePickService","getTileFactory","ProxyFuncs","debounce","BaseTileLayer","parent","_this","_this$tilesetManager","isVisible","_this$getCurrentView","getCurrentView","latLonBounds","zoom","mapService","version","_this$parent$getLayer","getLayerConfig","visible","updateLayerConfig","layerService","reRender","lastViewStates","toString","tilesetManager","throttleUpdate","mapchange","container","getContainer","rendererService","get","IRendererService","ILayerService","IMapService","pickingService","IPickingService","tileLayerService","tilePickService","setLayerPickService","proxy","initTileSetManager","key","value","_this$tilesetManager2","source","getSource","tileset","initedTileset","bindTilesetEvent","_this$getCurrentView2","update","bounds","getBounds","getZoom","_this2","on","tile","tileUnLoad","error","tileError","tileUpdate","viewchange","render","getLayers","getTiles","getTile","tileLoaded","console","warn","destroy","_this$tilesetManager3","off","reload","_this$tilesetManager4","clear","_this$getCurrentView3","removeTile","_tileUpdate","mark","_callee2","_this3","minZoom","maxZoom","tiles","wrap","_callee2$","_context2","prev","next","abrupt","getMinZoom","getMaxZoom","filter","isLoaded","isVisibleChange","data","z","Promise","all","map","_ref","_callee","tileInstance","tileLayer","_callee$","_context","hasTile","initTileLayer","setPickState","length","addTile","updateTileVisible","stop","_x","apply","arguments","emit","currentTiles","layers","pickRender","target","selectFeature","pickedColors","highlightPickedFeature","_this4","forEach","func","oldStyleFunc","bind","_len","args","Array","_key","child","styleUpdate","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-layers/es/tile/core/BaseLayer.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { TYPES } from '@antv/l7-core';\nimport { lodashUtil } from '@antv/l7-utils';\nimport { TileLayerService } from \"../service/TileLayerService\";\nimport { TilePickService } from \"../service/TilePickService\";\nimport { getTileFactory } from \"../tile\";\nimport { ProxyFuncs } from \"../utils/constants\";\nvar debounce = lodashUtil.debounce;\nvar BaseTileLayer = /*#__PURE__*/function () {\n  // 瓦片是否加载成功\n\n  function BaseTileLayer(parent) {\n    var _this = this;\n    _classCallCheck(this, BaseTileLayer);\n    // 瓦片数据管理器\n    _defineProperty(this, \"initedTileset\", false);\n    _defineProperty(this, \"mapchange\", function () {\n      var _this$tilesetManager;\n      // 图层不可见时，不触发加载瓦片\n      if (_this.parent.isVisible() === false) {\n        return;\n      }\n      var _this$getCurrentView = _this.getCurrentView(),\n        latLonBounds = _this$getCurrentView.latLonBounds,\n        zoom = _this$getCurrentView.zoom;\n      if (_this.mapService.version === 'GAODE1.x') {\n        var _this$parent$getLayer = _this.parent.getLayerConfig(),\n          visible = _this$parent$getLayer.visible;\n        if (zoom < 2 && visible) {\n          _this.parent.updateLayerConfig({\n            visible: false\n          });\n          _this.layerService.reRender();\n        } else if (zoom >= 2 && !visible) {\n          _this.parent.updateLayerConfig({\n            visible: true\n          });\n          _this.layerService.reRender();\n        }\n      }\n      if (_this.lastViewStates && _this.lastViewStates.zoom === zoom && _this.lastViewStates.latLonBounds.toString() === latLonBounds.toString()) {\n        return;\n      }\n      _this.lastViewStates = {\n        zoom: zoom,\n        latLonBounds: latLonBounds\n      };\n      (_this$tilesetManager = _this.tilesetManager) === null || _this$tilesetManager === void 0 || _this$tilesetManager.throttleUpdate(zoom, latLonBounds);\n    });\n    //  防抖操作\n    _defineProperty(this, \"viewchange\", debounce(this.mapchange, 24));\n    this.parent = parent;\n    var container = this.parent.getContainer();\n    this.rendererService = container.get(TYPES.IRendererService);\n    this.layerService = container.get(TYPES.ILayerService);\n    this.mapService = container.get(TYPES.IMapService);\n    this.pickingService = container.get(TYPES.IPickingService);\n\n    // 初始化瓦片管理服务\n    this.tileLayerService = new TileLayerService({\n      rendererService: this.rendererService,\n      layerService: this.layerService,\n      parent: parent\n    });\n    // 初始化拾取服务\n    this.tilePickService = new TilePickService({\n      tileLayerService: this.tileLayerService,\n      layerService: this.layerService,\n      parent: parent\n    });\n\n    // 重置\n    this.parent.setLayerPickService(this.tilePickService);\n    this.proxy(parent);\n    this.initTileSetManager();\n  }\n  _createClass(BaseTileLayer, [{\n    key: \"initTileSetManager\",\n    value: function initTileSetManager() {\n      var _this$tilesetManager2;\n      var source = this.parent.getSource();\n      this.tilesetManager = source.tileset;\n      if (!this.initedTileset) {\n        this.bindTilesetEvent();\n        this.initedTileset = true;\n      }\n\n      // 图层不可见时，不触发加载瓦片\n      if (this.parent.isVisible() === false) {\n        return;\n      }\n      var _this$getCurrentView2 = this.getCurrentView(),\n        latLonBounds = _this$getCurrentView2.latLonBounds,\n        zoom = _this$getCurrentView2.zoom;\n      (_this$tilesetManager2 = this.tilesetManager) === null || _this$tilesetManager2 === void 0 || _this$tilesetManager2.update(zoom, latLonBounds);\n    }\n  }, {\n    key: \"getCurrentView\",\n    value: function getCurrentView() {\n      var bounds = this.mapService.getBounds();\n      var latLonBounds = [bounds[0][0], bounds[0][1], bounds[1][0], bounds[1][1]];\n      var zoom = this.mapService.getZoom();\n      return {\n        latLonBounds: latLonBounds,\n        zoom: zoom\n      };\n    }\n  }, {\n    key: \"bindTilesetEvent\",\n    value: function bindTilesetEvent() {\n      var _this2 = this;\n      // 瓦片数据加载成功\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      this.tilesetManager.on('tile-loaded', function (tile) {\n        // 将事件抛出，图层上可以监听使用\n      });\n\n      // 瓦片数据从缓存删除或被执行重新加载\n      this.tilesetManager.on('tile-unload', function (tile) {\n        // 将事件抛出，图层上可以监听使用\n        _this2.tileUnLoad(tile);\n      });\n\n      // 瓦片数据加载失败\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      this.tilesetManager.on('tile-error', function (error, tile) {\n        // 将事件抛出，图层上可以监听使用\n        _this2.tileError(error);\n      });\n\n      // 瓦片显隐状态更新\n      this.tilesetManager.on('tile-update', function () {\n        _this2.tileUpdate();\n      });\n\n      // 地图视野发生改变\n      this.mapService.on('zoomend', this.mapchange);\n      this.mapService.on('moveend', this.viewchange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.tileLayerService.render();\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.tileLayerService.getLayers();\n    }\n  }, {\n    key: \"getTiles\",\n    value: function getTiles() {\n      return this.tileLayerService.getTiles();\n    }\n  }, {\n    key: \"getTile\",\n    value: function getTile(key) {\n      return this.tileLayerService.getTile(key);\n    }\n  }, {\n    key: \"tileLoaded\",\n    value:\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function tileLoaded(tile) {\n      //\n    }\n  }, {\n    key: \"tileError\",\n    value: function tileError(error) {\n      console.warn('error:', error);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$tilesetManager3;\n      this.mapService.off('zoomend', this.mapchange);\n      this.mapService.off('moveend', this.viewchange);\n      (_this$tilesetManager3 = this.tilesetManager) === null || _this$tilesetManager3 === void 0 || _this$tilesetManager3.destroy();\n      this.tileLayerService.destroy();\n    }\n    // 重新加载\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this$tilesetManager4;\n      // 瓦片重新加载\n      this.tilesetManager.clear();\n      var _this$getCurrentView3 = this.getCurrentView(),\n        latLonBounds = _this$getCurrentView3.latLonBounds,\n        zoom = _this$getCurrentView3.zoom;\n      (_this$tilesetManager4 = this.tilesetManager) === null || _this$tilesetManager4 === void 0 || _this$tilesetManager4.update(zoom, latLonBounds);\n    }\n  }, {\n    key: \"tileUnLoad\",\n    value: function tileUnLoad(tile) {\n      this.tileLayerService.removeTile(tile.key);\n    }\n  }, {\n    key: \"tileUpdate\",\n    value: function () {\n      var _tileUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n        var minZoom, maxZoom, tiles;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.tilesetManager) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              minZoom = this.parent.getMinZoom();\n              maxZoom = this.parent.getMaxZoom();\n              tiles = this.tilesetManager.tiles.filter(function (tile) {\n                return tile.isLoaded;\n              }) // 过滤未加载完成的\n              .filter(function (tile) {\n                return tile.isVisibleChange;\n              }) // 过滤未发生变化的\n              .filter(function (tile) {\n                return tile.data;\n              }) //\n              .filter(function (tile) {\n                return tile.z >= minZoom && tile.z < maxZoom;\n              }); // 过滤不可见见\n              _context2.next = 7;\n              return Promise.all(tiles.map( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tile) {\n                  var tileInstance, tileLayer;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (_this3.tileLayerService.hasTile(tile.key)) {\n                          _context.next = 9;\n                          break;\n                        }\n                        tileInstance = getTileFactory(_this3.parent);\n                        tileLayer = new tileInstance(tile, _this3.parent);\n                        _context.next = 5;\n                        return tileLayer.initTileLayer();\n                      case 5:\n                        _this3.tilePickService.setPickState();\n                        if (tileLayer.getLayers().length !== 0) {\n                          _this3.tileLayerService.addTile(tileLayer);\n                          _this3.tileLayerService.updateTileVisible(tile);\n                          _this3.layerService.reRender();\n                        }\n                        _context.next = 12;\n                        break;\n                      case 9:\n                        // 已加载瓦片\n                        _this3.tileLayerService.updateTileVisible(tile);\n                        _this3.tilePickService.setPickState();\n                        _this3.layerService.reRender();\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }()));\n            case 7:\n              if (this.tilesetManager.isLoaded) {\n                // 将事件抛出，图层上可以使用瓦片\n                this.parent.emit('tiles-loaded', this.tilesetManager.currentTiles);\n              }\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function tileUpdate() {\n        return _tileUpdate.apply(this, arguments);\n      }\n      return tileUpdate;\n    }() // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  }, {\n    key: \"setPickState\",\n    value: function setPickState(layers) {\n      return;\n    }\n  }, {\n    key: \"pickRender\",\n    value: function pickRender(target) {\n      this.tilePickService.pickRender(target);\n    }\n  }, {\n    key: \"selectFeature\",\n    value: function selectFeature(pickedColors) {\n      this.tilePickService.selectFeature(pickedColors);\n    }\n  }, {\n    key: \"highlightPickedFeature\",\n    value: function highlightPickedFeature(pickedColors) {\n      this.tilePickService.highlightPickedFeature(pickedColors);\n    }\n\n    /**\n     * 实现 TileLayer 对子图层方法的代理\n     * @param parent\n     */\n  }, {\n    key: \"proxy\",\n    value: function proxy(parent) {\n      var _this4 = this;\n      ProxyFuncs.forEach(function (func) {\n        // @ts-ignore\n        var oldStyleFunc = parent[func].bind(parent);\n        // @ts-ignore\n        parent[func] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          oldStyleFunc.apply(void 0, args);\n          _this4.getLayers().map(function (child) {\n            // @ts-ignore\n            child[func].apply(child, args);\n          });\n          // Tip: 目前在更新 RasterData 的 colorTexture 的时候需要额外优化\n          if (func === 'style') {\n            _this4.getTiles().forEach(function (tile) {\n              return tile.styleUpdate.apply(tile, args);\n            });\n          }\n          return parent;\n        };\n      });\n    }\n  }]);\n  return BaseTileLayer;\n}();\nexport { BaseTileLayer as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}