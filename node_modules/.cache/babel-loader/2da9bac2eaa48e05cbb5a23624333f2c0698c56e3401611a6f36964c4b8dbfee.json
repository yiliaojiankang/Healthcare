{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\n// https://github.com/HarryStevens/d3-regression#readme Version 1.3.10. Copyright 2022 Harry Stevens.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.d3 = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  // Adapted from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\n  function points(data, x, y, sort) {\n    data = data.filter(function (d, i) {\n      var u = x(d, i),\n        v = y(d, i);\n      return u != null && isFinite(u) && v != null && isFinite(v);\n    });\n    if (sort) {\n      data.sort(function (a, b) {\n        return x(a) - x(b);\n      });\n    }\n    var n = data.length,\n      X = new Float64Array(n),\n      Y = new Float64Array(n); // extract values, calculate means\n\n    var ux = 0,\n      uy = 0,\n      xv,\n      yv,\n      d;\n    for (var i = 0; i < n;) {\n      d = data[i];\n      X[i] = xv = +x(d, i, data);\n      Y[i] = yv = +y(d, i, data);\n      ++i;\n      ux += (xv - ux) / i;\n      uy += (yv - uy) / i;\n    } // mean center the data\n\n    for (var _i = 0; _i < n; ++_i) {\n      X[_i] -= ux;\n      Y[_i] -= uy;\n    }\n    return [X, Y, ux, uy];\n  }\n  function visitPoints(data, x, y, cb) {\n    var iterations = 0;\n    for (var i = 0, n = data.length; i < n; i++) {\n      var d = data[i],\n        dx = +x(d, i, data),\n        dy = +y(d, i, data);\n      if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n        cb(dx, dy, iterations++);\n      }\n    }\n  }\n\n  // return the coefficient of determination, or R squared.\n\n  function determination(data, x, y, uY, predict) {\n    var SSE = 0,\n      SST = 0;\n    visitPoints(data, x, y, function (dx, dy) {\n      var sse = dy - predict(dx),\n        sst = dy - uY;\n      SSE += sse * sse;\n      SST += sst * sst;\n    });\n    return 1 - SSE / SST;\n  }\n\n  // Returns the angle of a line in degrees.\n  function angle(line) {\n    return Math.atan2(line[1][1] - line[0][1], line[1][0] - line[0][0]) * 180 / Math.PI;\n  } // Returns the midpoint of a line.\n\n  function midpoint(line) {\n    return [(line[0][0] + line[1][0]) / 2, (line[0][1] + line[1][1]) / 2];\n  }\n\n  // returns a smooth line.\n\n  function interpose(xmin, xmax, predict) {\n    var l = Math.log(xmax - xmin) * Math.LOG10E + 1 | 0;\n    var precision = 1 * Math.pow(10, -l / 2 - 1),\n      maxIter = 1e4;\n    var points = [px(xmin), px(xmax)],\n      iter = 0;\n    while (find(points) && iter < maxIter) {}\n    return points;\n    function px(x) {\n      return [x, predict(x)];\n    }\n    function find(points) {\n      iter++;\n      var n = points.length;\n      var found = false;\n      for (var i = 0; i < n - 1; i++) {\n        var p0 = points[i],\n          p1 = points[i + 1],\n          m = midpoint([p0, p1]),\n          mp = px(m[0]),\n          a0 = angle([p0, m]),\n          a1 = angle([p0, mp]),\n          a = Math.abs(a0 - a1);\n        if (a > precision) {\n          points.splice(i + 1, 0, mp);\n          found = true;\n        }\n      }\n      return found;\n    }\n  }\n\n  // Ordinary Least Squares from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/ols.js\n  function ols(uX, uY, uXY, uX2) {\n    var delta = uX2 - uX * uX,\n      slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,\n      intercept = uY - slope * uX;\n    return [intercept, slope];\n  }\n  function exponential() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      domain;\n    function exponential(data) {\n      var n = 0,\n        Y = 0,\n        YL = 0,\n        XY = 0,\n        XYL = 0,\n        X2Y = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var ly = Math.log(dy),\n          xy = dx * dy;\n        ++n;\n        Y += (dy - Y) / n;\n        XY += (xy - XY) / n;\n        X2Y += (dx * xy - X2Y) / n;\n        YL += (dy * ly - YL) / n;\n        XYL += (xy * ly - XYL) / n;\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var _ols = ols(XY / Y, YL / Y, XYL / Y, X2Y / Y),\n        _ols2 = _slicedToArray(_ols, 2),\n        a = _ols2[0],\n        b = _ols2[1];\n      a = Math.exp(a);\n      var fn = function fn(x) {\n          return a * Math.exp(b * x);\n        },\n        out = interpose(xmin, xmax, fn);\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n    exponential.domain = function (arr) {\n      return arguments.length ? (domain = arr, exponential) : domain;\n    };\n    exponential.x = function (fn) {\n      return arguments.length ? (x = fn, exponential) : x;\n    };\n    exponential.y = function (fn) {\n      return arguments.length ? (y = fn, exponential) : y;\n    };\n    return exponential;\n  }\n  function linear() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      domain;\n    function linear(data) {\n      var n = 0,\n        X = 0,\n        // sum of x\n        Y = 0,\n        // sum of y\n        XY = 0,\n        // sum of x * y\n        X2 = 0,\n        // sum of x * x\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n;\n        X += (dx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (dx * dy - XY) / n;\n        X2 += (dx * dx - X2) / n;\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var _ols = ols(X, Y, XY, X2),\n        _ols2 = _slicedToArray(_ols, 2),\n        intercept = _ols2[0],\n        slope = _ols2[1],\n        fn = function fn(x) {\n          return slope * x + intercept;\n        },\n        out = [[xmin, fn(xmin)], [xmax, fn(xmax)]];\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n    linear.domain = function (arr) {\n      return arguments.length ? (domain = arr, linear) : domain;\n    };\n    linear.x = function (fn) {\n      return arguments.length ? (x = fn, linear) : x;\n    };\n    linear.y = function (fn) {\n      return arguments.length ? (y = fn, linear) : y;\n    };\n    return linear;\n  }\n\n  // Returns the medium value of an array of numbers.\n  function median(arr) {\n    arr.sort(function (a, b) {\n      return a - b;\n    });\n    var i = arr.length / 2;\n    return i % 1 === 0 ? (arr[i - 1] + arr[i]) / 2 : arr[Math.floor(i)];\n  }\n  var maxiters = 2,\n    epsilon = 1e-12;\n  function loess() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      bandwidth = .3;\n    function loess(data) {\n      var _points = points(data, x, y, true),\n        _points2 = _slicedToArray(_points, 4),\n        xv = _points2[0],\n        yv = _points2[1],\n        ux = _points2[2],\n        uy = _points2[3],\n        n = xv.length,\n        bw = Math.max(2, ~~(bandwidth * n)),\n        yhat = new Float64Array(n),\n        residuals = new Float64Array(n),\n        robustWeights = new Float64Array(n).fill(1);\n      for (var iter = -1; ++iter <= maxiters;) {\n        var interval = [0, bw - 1];\n        for (var i = 0; i < n; ++i) {\n          var dx = xv[i],\n            i0 = interval[0],\n            i1 = interval[1],\n            edge = dx - xv[i0] > xv[i1] - dx ? i0 : i1;\n          var W = 0,\n            X = 0,\n            Y = 0,\n            XY = 0,\n            X2 = 0,\n            denom = 1 / Math.abs(xv[edge] - dx || 1); // Avoid singularity\n\n          for (var k = i0; k <= i1; ++k) {\n            var xk = xv[k],\n              yk = yv[k],\n              w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],\n              xkw = xk * w;\n            W += w;\n            X += xkw;\n            Y += yk * w;\n            XY += yk * xkw;\n            X2 += xk * xkw;\n          } // Linear regression fit\n\n          var _ols = ols(X / W, Y / W, XY / W, X2 / W),\n            _ols2 = _slicedToArray(_ols, 2),\n            a = _ols2[0],\n            b = _ols2[1];\n          yhat[i] = a + b * dx;\n          residuals[i] = Math.abs(yv[i] - yhat[i]);\n          updateInterval(xv, i + 1, interval);\n        }\n        if (iter === maxiters) {\n          break;\n        }\n        var medianResidual = median(residuals);\n        if (Math.abs(medianResidual) < epsilon) break;\n        for (var _i = 0, arg, _w; _i < n; ++_i) {\n          arg = residuals[_i] / (6 * medianResidual); // Default to epsilon (rather than zero) for large deviations\n          // Keeping weights tiny but non-zero prevents singularites\n\n          robustWeights[_i] = arg >= 1 ? epsilon : (_w = 1 - arg * arg) * _w;\n        }\n      }\n      return output(xv, yhat, ux, uy);\n    }\n    loess.bandwidth = function (bw) {\n      return arguments.length ? (bandwidth = bw, loess) : bandwidth;\n    };\n    loess.x = function (fn) {\n      return arguments.length ? (x = fn, loess) : x;\n    };\n    loess.y = function (fn) {\n      return arguments.length ? (y = fn, loess) : y;\n    };\n    return loess;\n  } // Weighting kernel for local regression\n\n  function tricube(x) {\n    return (x = 1 - x * x * x) * x * x;\n  } // Advance sliding window interval of nearest neighbors\n\n  function updateInterval(xv, i, interval) {\n    var val = xv[i],\n      left = interval[0],\n      right = interval[1] + 1;\n    if (right >= xv.length) return; // Step right if distance to new right edge is <= distance to old left edge\n    // Step when distance is equal to ensure movement over duplicate x values\n\n    while (i > left && xv[right] - val <= val - xv[left]) {\n      interval[0] = ++left;\n      interval[1] = right;\n      ++right;\n    }\n  } // Generate smoothed output points\n  // Average points with repeated x values\n\n  function output(xv, yhat, ux, uy) {\n    var n = xv.length,\n      out = [];\n    var i = 0,\n      cnt = 0,\n      prev = [],\n      v;\n    for (; i < n; ++i) {\n      v = xv[i] + ux;\n      if (prev[0] === v) {\n        // Average output values via online update\n        prev[1] += (yhat[i] - prev[1]) / ++cnt;\n      } else {\n        // Add new output point\n        cnt = 0;\n        prev[1] += uy;\n        prev = [v, yhat[i]];\n        out.push(prev);\n      }\n    }\n    prev[1] += uy;\n    return out;\n  }\n  function logarithmic() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      base = Math.E,\n      domain;\n    function logarithmic(data) {\n      var n = 0,\n        X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity,\n        lb = Math.log(base);\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx) / lb;\n        ++n;\n        X += (lx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (lx * dy - XY) / n;\n        X2 += (lx * lx - X2) / n;\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var _ols = ols(X, Y, XY, X2),\n        _ols2 = _slicedToArray(_ols, 2),\n        intercept = _ols2[0],\n        slope = _ols2[1],\n        fn = function fn(x) {\n          return slope * Math.log(x) / lb + intercept;\n        },\n        out = interpose(xmin, xmax, fn);\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n    logarithmic.domain = function (arr) {\n      return arguments.length ? (domain = arr, logarithmic) : domain;\n    };\n    logarithmic.x = function (fn) {\n      return arguments.length ? (x = fn, logarithmic) : x;\n    };\n    logarithmic.y = function (fn) {\n      return arguments.length ? (y = fn, logarithmic) : y;\n    };\n    logarithmic.base = function (n) {\n      return arguments.length ? (base = n, logarithmic) : base;\n    };\n    return logarithmic;\n  }\n  function quad() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      domain;\n    function quadratic(data) {\n      var _points = points(data, x, y),\n        _points2 = _slicedToArray(_points, 4),\n        xv = _points2[0],\n        yv = _points2[1],\n        ux = _points2[2],\n        uy = _points2[3],\n        n = xv.length;\n      var X2 = 0,\n        X3 = 0,\n        X4 = 0,\n        XY = 0,\n        X2Y = 0,\n        i,\n        dx,\n        dy,\n        x2;\n      for (i = 0; i < n;) {\n        dx = xv[i];\n        dy = yv[i++];\n        x2 = dx * dx;\n        X2 += (x2 - X2) / i;\n        X3 += (x2 * dx - X3) / i;\n        X4 += (x2 * x2 - X4) / i;\n        XY += (dx * dy - XY) / i;\n        X2Y += (x2 * dy - X2Y) / i;\n      }\n      var Y = 0,\n        n0 = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        n0++;\n        Y += (dy - Y) / n0;\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var X2X2 = X4 - X2 * X2,\n        d = X2 * X2X2 - X3 * X3,\n        a = (X2Y * X2 - XY * X3) / d,\n        b = (XY * X2X2 - X2Y * X3) / d,\n        c = -a * X2,\n        fn = function fn(x) {\n          x = x - ux;\n          return a * x * x + b * x + c + uy;\n        };\n      var out = interpose(xmin, xmax, fn);\n      out.a = a;\n      out.b = b - 2 * a * ux;\n      out.c = c - b * ux + a * ux * ux + uy;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n    quadratic.domain = function (arr) {\n      return arguments.length ? (domain = arr, quadratic) : domain;\n    };\n    quadratic.x = function (fn) {\n      return arguments.length ? (x = fn, quadratic) : x;\n    };\n    quadratic.y = function (fn) {\n      return arguments.length ? (y = fn, quadratic) : y;\n    };\n    return quadratic;\n  }\n\n  // Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246\n  // License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE\n  // ...with ideas from vega-statistics by Jeffrey Heer\n  // Source: https://github.com/vega/vega/blob/f21cb8792b4e0cbe2b1a3fd44b0f5db370dbaadb/packages/vega-statistics/src/regression/poly.js\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n\n  function polynomial() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      order = 3,\n      domain;\n    function polynomial(data) {\n      // Use more efficient methods for lower orders\n      if (order === 1) {\n        var o = linear().x(x).y(y).domain(domain)(data);\n        o.coefficients = [o.b, o.a];\n        delete o.a;\n        delete o.b;\n        return o;\n      }\n      if (order === 2) {\n        var _o = quad().x(x).y(y).domain(domain)(data);\n        _o.coefficients = [_o.c, _o.b, _o.a];\n        delete _o.a;\n        delete _o.b;\n        delete _o.c;\n        return _o;\n      }\n      var _points = points(data, x, y),\n        _points2 = _slicedToArray(_points, 4),\n        xv = _points2[0],\n        yv = _points2[1],\n        ux = _points2[2],\n        uy = _points2[3],\n        n = xv.length,\n        lhs = [],\n        rhs = [],\n        k = order + 1;\n      var Y = 0,\n        n0 = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n0;\n        Y += (dy - Y) / n0;\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var i, j, l, v, c;\n      for (i = 0; i < k; ++i) {\n        for (l = 0, v = 0; l < n; ++l) {\n          v += Math.pow(xv[l], i) * yv[l];\n        }\n        lhs.push(v);\n        c = new Float64Array(k);\n        for (j = 0; j < k; ++j) {\n          for (l = 0, v = 0; l < n; ++l) {\n            v += Math.pow(xv[l], i + j);\n          }\n          c[j] = v;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n      var coef = gaussianElimination(rhs),\n        fn = function fn(x) {\n          x -= ux;\n          var y = uy + coef[0] + coef[1] * x + coef[2] * x * x;\n          for (i = 3; i < k; ++i) {\n            y += coef[i] * Math.pow(x, i);\n          }\n          return y;\n        },\n        out = interpose(xmin, xmax, fn);\n      out.coefficients = uncenter(k, coef, -ux, uy);\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n    polynomial.domain = function (arr) {\n      return arguments.length ? (domain = arr, polynomial) : domain;\n    };\n    polynomial.x = function (fn) {\n      return arguments.length ? (x = fn, polynomial) : x;\n    };\n    polynomial.y = function (fn) {\n      return arguments.length ? (y = fn, polynomial) : y;\n    };\n    polynomial.order = function (n) {\n      return arguments.length ? (order = n, polynomial) : order;\n    };\n    return polynomial;\n  }\n  function uncenter(k, a, x, y) {\n    var z = Array(k);\n    var i, j, v, c; // initialize to zero\n\n    for (i = 0; i < k; ++i) {\n      z[i] = 0;\n    } // polynomial expansion\n\n    for (i = k - 1; i >= 0; --i) {\n      v = a[i];\n      c = 1;\n      z[i] += v;\n      for (j = 1; j <= i; ++j) {\n        c *= (i + 1 - j) / j; // binomial coefficent\n\n        z[i - j] += v * Math.pow(x, j) * c;\n      }\n    } // bias term\n\n    z[0] += y;\n    return z;\n  } // Given an array for a two-dimensional matrix and the polynomial order,\n  // solve A * x = b using Gaussian elimination.\n\n  function gaussianElimination(matrix) {\n    var n = matrix.length - 1,\n      coef = [];\n    var i, j, k, r, t;\n    for (i = 0; i < n; ++i) {\n      r = i; // max row\n\n      for (j = i + 1; j < n; ++j) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {\n          r = j;\n        }\n      }\n      for (k = i; k < n + 1; ++k) {\n        t = matrix[k][i];\n        matrix[k][i] = matrix[k][r];\n        matrix[k][r] = t;\n      }\n      for (j = i + 1; j < n; ++j) {\n        for (k = n; k >= i; k--) {\n          matrix[k][j] -= matrix[k][i] * matrix[i][j] / matrix[i][i];\n        }\n      }\n    }\n    for (j = n - 1; j >= 0; --j) {\n      t = 0;\n      for (k = j + 1; k < n; ++k) {\n        t += matrix[k][j] * coef[k];\n      }\n      coef[j] = (matrix[n][j] - t) / matrix[j][j];\n    }\n    return coef;\n  }\n  function power() {\n    var x = function x(d) {\n        return d[0];\n      },\n      y = function y(d) {\n        return d[1];\n      },\n      domain;\n    function power(data) {\n      var n = 0,\n        X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        YS = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx),\n          ly = Math.log(dy);\n        ++n;\n        X += (lx - X) / n;\n        Y += (ly - Y) / n;\n        XY += (lx * ly - XY) / n;\n        X2 += (lx * lx - X2) / n;\n        YS += (dy - YS) / n;\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var _ols = ols(X, Y, XY, X2),\n        _ols2 = _slicedToArray(_ols, 2),\n        a = _ols2[0],\n        b = _ols2[1];\n      a = Math.exp(a);\n      var fn = function fn(x) {\n          return a * Math.pow(x, b);\n        },\n        out = interpose(xmin, xmax, fn);\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, YS, fn);\n      return out;\n    }\n    power.domain = function (arr) {\n      return arguments.length ? (domain = arr, power) : domain;\n    };\n    power.x = function (fn) {\n      return arguments.length ? (x = fn, power) : x;\n    };\n    power.y = function (fn) {\n      return arguments.length ? (y = fn, power) : y;\n    };\n    return power;\n  }\n  exports.regressionExp = exponential;\n  exports.regressionLinear = linear;\n  exports.regressionLoess = loess;\n  exports.regressionLog = logarithmic;\n  exports.regressionPoly = polynomial;\n  exports.regressionPow = power;\n  exports.regressionQuad = quad;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","self","d3","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","Array","isArray","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","TypeError","points","data","x","y","sort","filter","d","u","v","isFinite","a","b","n","X","Float64Array","Y","ux","uy","xv","yv","visitPoints","cb","iterations","dx","dy","determination","uY","predict","SSE","SST","sse","sst","angle","line","Math","atan2","PI","midpoint","interpose","xmin","xmax","l","log","LOG10E","precision","pow","maxIter","px","iter","find","found","p0","p1","m","mp","a0","a1","abs","splice","ols","uX","uXY","uX2","delta","slope","intercept","exponential","domain","YL","XY","XYL","X2Y","Infinity","ly","xy","_ols","_ols2","exp","fn","out","rSquared","arguments","linear","X2","median","floor","maxiters","epsilon","loess","bandwidth","_points","_points2","bw","max","yhat","residuals","robustWeights","fill","interval","i0","i1","edge","W","denom","k","xk","yk","w","tricube","xkw","updateInterval","medianResidual","arg","_w","output","val","left","right","cnt","prev","logarithmic","base","E","lb","lx","quad","quadratic","X3","X4","x2","n0","X2X2","c","polynomial","order","o","coefficients","_o","lhs","rhs","j","coef","gaussianElimination","uncenter","z","matrix","r","t","power","YS","regressionExp","regressionLinear","regressionLoess","regressionLog","regressionPoly","regressionPow","regressionQuad","Object","defineProperty"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/d3-regression/dist/d3-regression.js"],"sourcesContent":["// https://github.com/HarryStevens/d3-regression#readme Version 1.3.10. Copyright 2022 Harry Stevens.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.d3 = {}));\n}(this, (function (exports) { 'use strict';\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  // Adapted from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\n  function points(data, x, y, sort) {\n    data = data.filter(function (d, i) {\n      var u = x(d, i),\n          v = y(d, i);\n      return u != null && isFinite(u) && v != null && isFinite(v);\n    });\n\n    if (sort) {\n      data.sort(function (a, b) {\n        return x(a) - x(b);\n      });\n    }\n\n    var n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n); // extract values, calculate means\n\n    var ux = 0,\n        uy = 0,\n        xv,\n        yv,\n        d;\n\n    for (var i = 0; i < n;) {\n      d = data[i];\n      X[i] = xv = +x(d, i, data);\n      Y[i] = yv = +y(d, i, data);\n      ++i;\n      ux += (xv - ux) / i;\n      uy += (yv - uy) / i;\n    } // mean center the data\n\n\n    for (var _i = 0; _i < n; ++_i) {\n      X[_i] -= ux;\n      Y[_i] -= uy;\n    }\n\n    return [X, Y, ux, uy];\n  }\n  function visitPoints(data, x, y, cb) {\n    var iterations = 0;\n\n    for (var i = 0, n = data.length; i < n; i++) {\n      var d = data[i],\n          dx = +x(d, i, data),\n          dy = +y(d, i, data);\n\n      if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n        cb(dx, dy, iterations++);\n      }\n    }\n  }\n\n  // return the coefficient of determination, or R squared.\n\n  function determination(data, x, y, uY, predict) {\n    var SSE = 0,\n        SST = 0;\n    visitPoints(data, x, y, function (dx, dy) {\n      var sse = dy - predict(dx),\n          sst = dy - uY;\n      SSE += sse * sse;\n      SST += sst * sst;\n    });\n    return 1 - SSE / SST;\n  }\n\n  // Returns the angle of a line in degrees.\n  function angle(line) {\n    return Math.atan2(line[1][1] - line[0][1], line[1][0] - line[0][0]) * 180 / Math.PI;\n  } // Returns the midpoint of a line.\n\n  function midpoint(line) {\n    return [(line[0][0] + line[1][0]) / 2, (line[0][1] + line[1][1]) / 2];\n  }\n\n  // returns a smooth line.\n\n  function interpose(xmin, xmax, predict) {\n    var l = Math.log(xmax - xmin) * Math.LOG10E + 1 | 0;\n    var precision = 1 * Math.pow(10, -l / 2 - 1),\n        maxIter = 1e4;\n    var points = [px(xmin), px(xmax)],\n        iter = 0;\n\n    while (find(points) && iter < maxIter) {\n    }\n\n    return points;\n\n    function px(x) {\n      return [x, predict(x)];\n    }\n\n    function find(points) {\n      iter++;\n      var n = points.length;\n      var found = false;\n\n      for (var i = 0; i < n - 1; i++) {\n        var p0 = points[i],\n            p1 = points[i + 1],\n            m = midpoint([p0, p1]),\n            mp = px(m[0]),\n            a0 = angle([p0, m]),\n            a1 = angle([p0, mp]),\n            a = Math.abs(a0 - a1);\n\n        if (a > precision) {\n          points.splice(i + 1, 0, mp);\n          found = true;\n        }\n      }\n\n      return found;\n    }\n  }\n\n  // Ordinary Least Squares from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/ols.js\n  function ols(uX, uY, uXY, uX2) {\n    var delta = uX2 - uX * uX,\n        slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,\n        intercept = uY - slope * uX;\n    return [intercept, slope];\n  }\n\n  function exponential () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function exponential(data) {\n      var n = 0,\n          Y = 0,\n          YL = 0,\n          XY = 0,\n          XYL = 0,\n          X2Y = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var ly = Math.log(dy),\n            xy = dx * dy;\n        ++n;\n        Y += (dy - Y) / n;\n        XY += (xy - XY) / n;\n        X2Y += (dx * xy - X2Y) / n;\n        YL += (dy * ly - YL) / n;\n        XYL += (xy * ly - XYL) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(XY / Y, YL / Y, XYL / Y, X2Y / Y),\n          _ols2 = _slicedToArray(_ols, 2),\n          a = _ols2[0],\n          b = _ols2[1];\n\n      a = Math.exp(a);\n\n      var fn = function fn(x) {\n        return a * Math.exp(b * x);\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    exponential.domain = function (arr) {\n      return arguments.length ? (domain = arr, exponential) : domain;\n    };\n\n    exponential.x = function (fn) {\n      return arguments.length ? (x = fn, exponential) : x;\n    };\n\n    exponential.y = function (fn) {\n      return arguments.length ? (y = fn, exponential) : y;\n    };\n\n    return exponential;\n  }\n\n  function linear () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function linear(data) {\n      var n = 0,\n          X = 0,\n          // sum of x\n      Y = 0,\n          // sum of y\n      XY = 0,\n          // sum of x * y\n      X2 = 0,\n          // sum of x * x\n      xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n;\n        X += (dx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (dx * dy - XY) / n;\n        X2 += (dx * dx - X2) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          intercept = _ols2[0],\n          slope = _ols2[1],\n          fn = function fn(x) {\n        return slope * x + intercept;\n      },\n          out = [[xmin, fn(xmin)], [xmax, fn(xmax)]];\n\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    linear.domain = function (arr) {\n      return arguments.length ? (domain = arr, linear) : domain;\n    };\n\n    linear.x = function (fn) {\n      return arguments.length ? (x = fn, linear) : x;\n    };\n\n    linear.y = function (fn) {\n      return arguments.length ? (y = fn, linear) : y;\n    };\n\n    return linear;\n  }\n\n  // Returns the medium value of an array of numbers.\n  function median(arr) {\n    arr.sort(function (a, b) {\n      return a - b;\n    });\n    var i = arr.length / 2;\n    return i % 1 === 0 ? (arr[i - 1] + arr[i]) / 2 : arr[Math.floor(i)];\n  }\n\n  var maxiters = 2,\n      epsilon = 1e-12;\n  function loess () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        bandwidth = .3;\n\n    function loess(data) {\n      var _points = points(data, x, y, true),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length,\n          bw = Math.max(2, ~~(bandwidth * n)),\n          yhat = new Float64Array(n),\n          residuals = new Float64Array(n),\n          robustWeights = new Float64Array(n).fill(1);\n\n      for (var iter = -1; ++iter <= maxiters;) {\n        var interval = [0, bw - 1];\n\n        for (var i = 0; i < n; ++i) {\n          var dx = xv[i],\n              i0 = interval[0],\n              i1 = interval[1],\n              edge = dx - xv[i0] > xv[i1] - dx ? i0 : i1;\n          var W = 0,\n              X = 0,\n              Y = 0,\n              XY = 0,\n              X2 = 0,\n              denom = 1 / Math.abs(xv[edge] - dx || 1); // Avoid singularity\n\n          for (var k = i0; k <= i1; ++k) {\n            var xk = xv[k],\n                yk = yv[k],\n                w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],\n                xkw = xk * w;\n            W += w;\n            X += xkw;\n            Y += yk * w;\n            XY += yk * xkw;\n            X2 += xk * xkw;\n          } // Linear regression fit\n\n\n          var _ols = ols(X / W, Y / W, XY / W, X2 / W),\n              _ols2 = _slicedToArray(_ols, 2),\n              a = _ols2[0],\n              b = _ols2[1];\n\n          yhat[i] = a + b * dx;\n          residuals[i] = Math.abs(yv[i] - yhat[i]);\n          updateInterval(xv, i + 1, interval);\n        }\n\n        if (iter === maxiters) {\n          break;\n        }\n\n        var medianResidual = median(residuals);\n        if (Math.abs(medianResidual) < epsilon) break;\n\n        for (var _i = 0, arg, _w; _i < n; ++_i) {\n          arg = residuals[_i] / (6 * medianResidual); // Default to epsilon (rather than zero) for large deviations\n          // Keeping weights tiny but non-zero prevents singularites\n\n          robustWeights[_i] = arg >= 1 ? epsilon : (_w = 1 - arg * arg) * _w;\n        }\n      }\n\n      return output(xv, yhat, ux, uy);\n    }\n\n    loess.bandwidth = function (bw) {\n      return arguments.length ? (bandwidth = bw, loess) : bandwidth;\n    };\n\n    loess.x = function (fn) {\n      return arguments.length ? (x = fn, loess) : x;\n    };\n\n    loess.y = function (fn) {\n      return arguments.length ? (y = fn, loess) : y;\n    };\n\n    return loess;\n  } // Weighting kernel for local regression\n\n  function tricube(x) {\n    return (x = 1 - x * x * x) * x * x;\n  } // Advance sliding window interval of nearest neighbors\n\n\n  function updateInterval(xv, i, interval) {\n    var val = xv[i],\n        left = interval[0],\n        right = interval[1] + 1;\n    if (right >= xv.length) return; // Step right if distance to new right edge is <= distance to old left edge\n    // Step when distance is equal to ensure movement over duplicate x values\n\n    while (i > left && xv[right] - val <= val - xv[left]) {\n      interval[0] = ++left;\n      interval[1] = right;\n      ++right;\n    }\n  } // Generate smoothed output points\n  // Average points with repeated x values\n\n\n  function output(xv, yhat, ux, uy) {\n    var n = xv.length,\n        out = [];\n    var i = 0,\n        cnt = 0,\n        prev = [],\n        v;\n\n    for (; i < n; ++i) {\n      v = xv[i] + ux;\n\n      if (prev[0] === v) {\n        // Average output values via online update\n        prev[1] += (yhat[i] - prev[1]) / ++cnt;\n      } else {\n        // Add new output point\n        cnt = 0;\n        prev[1] += uy;\n        prev = [v, yhat[i]];\n        out.push(prev);\n      }\n    }\n\n    prev[1] += uy;\n    return out;\n  }\n\n  function logarithmic () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        base = Math.E,\n        domain;\n\n    function logarithmic(data) {\n      var n = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity,\n          lb = Math.log(base);\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx) / lb;\n        ++n;\n        X += (lx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (lx * dy - XY) / n;\n        X2 += (lx * lx - X2) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          intercept = _ols2[0],\n          slope = _ols2[1],\n          fn = function fn(x) {\n        return slope * Math.log(x) / lb + intercept;\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    logarithmic.domain = function (arr) {\n      return arguments.length ? (domain = arr, logarithmic) : domain;\n    };\n\n    logarithmic.x = function (fn) {\n      return arguments.length ? (x = fn, logarithmic) : x;\n    };\n\n    logarithmic.y = function (fn) {\n      return arguments.length ? (y = fn, logarithmic) : y;\n    };\n\n    logarithmic.base = function (n) {\n      return arguments.length ? (base = n, logarithmic) : base;\n    };\n\n    return logarithmic;\n  }\n\n  function quad () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function quadratic(data) {\n      var _points = points(data, x, y),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length;\n\n      var X2 = 0,\n          X3 = 0,\n          X4 = 0,\n          XY = 0,\n          X2Y = 0,\n          i,\n          dx,\n          dy,\n          x2;\n\n      for (i = 0; i < n;) {\n        dx = xv[i];\n        dy = yv[i++];\n        x2 = dx * dx;\n        X2 += (x2 - X2) / i;\n        X3 += (x2 * dx - X3) / i;\n        X4 += (x2 * x2 - X4) / i;\n        XY += (dx * dy - XY) / i;\n        X2Y += (x2 * dy - X2Y) / i;\n      }\n\n      var Y = 0,\n          n0 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        n0++;\n        Y += (dy - Y) / n0;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var X2X2 = X4 - X2 * X2,\n          d = X2 * X2X2 - X3 * X3,\n          a = (X2Y * X2 - XY * X3) / d,\n          b = (XY * X2X2 - X2Y * X3) / d,\n          c = -a * X2,\n          fn = function fn(x) {\n        x = x - ux;\n        return a * x * x + b * x + c + uy;\n      };\n\n      var out = interpose(xmin, xmax, fn);\n      out.a = a;\n      out.b = b - 2 * a * ux;\n      out.c = c - b * ux + a * ux * ux + uy;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    quadratic.domain = function (arr) {\n      return arguments.length ? (domain = arr, quadratic) : domain;\n    };\n\n    quadratic.x = function (fn) {\n      return arguments.length ? (x = fn, quadratic) : x;\n    };\n\n    quadratic.y = function (fn) {\n      return arguments.length ? (y = fn, quadratic) : y;\n    };\n\n    return quadratic;\n  }\n\n  // Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246\n  // License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE\n  // ...with ideas from vega-statistics by Jeffrey Heer\n  // Source: https://github.com/vega/vega/blob/f21cb8792b4e0cbe2b1a3fd44b0f5db370dbaadb/packages/vega-statistics/src/regression/poly.js\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n\n  function polynomial () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        order = 3,\n        domain;\n\n    function polynomial(data) {\n      // Use more efficient methods for lower orders\n      if (order === 1) {\n        var o = linear().x(x).y(y).domain(domain)(data);\n        o.coefficients = [o.b, o.a];\n        delete o.a;\n        delete o.b;\n        return o;\n      }\n\n      if (order === 2) {\n        var _o = quad().x(x).y(y).domain(domain)(data);\n\n        _o.coefficients = [_o.c, _o.b, _o.a];\n        delete _o.a;\n        delete _o.b;\n        delete _o.c;\n        return _o;\n      }\n\n      var _points = points(data, x, y),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length,\n          lhs = [],\n          rhs = [],\n          k = order + 1;\n\n      var Y = 0,\n          n0 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n0;\n        Y += (dy - Y) / n0;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var i, j, l, v, c;\n\n      for (i = 0; i < k; ++i) {\n        for (l = 0, v = 0; l < n; ++l) {\n          v += Math.pow(xv[l], i) * yv[l];\n        }\n\n        lhs.push(v);\n        c = new Float64Array(k);\n\n        for (j = 0; j < k; ++j) {\n          for (l = 0, v = 0; l < n; ++l) {\n            v += Math.pow(xv[l], i + j);\n          }\n\n          c[j] = v;\n        }\n\n        rhs.push(c);\n      }\n\n      rhs.push(lhs);\n\n      var coef = gaussianElimination(rhs),\n          fn = function fn(x) {\n        x -= ux;\n        var y = uy + coef[0] + coef[1] * x + coef[2] * x * x;\n\n        for (i = 3; i < k; ++i) {\n          y += coef[i] * Math.pow(x, i);\n        }\n\n        return y;\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.coefficients = uncenter(k, coef, -ux, uy);\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    polynomial.domain = function (arr) {\n      return arguments.length ? (domain = arr, polynomial) : domain;\n    };\n\n    polynomial.x = function (fn) {\n      return arguments.length ? (x = fn, polynomial) : x;\n    };\n\n    polynomial.y = function (fn) {\n      return arguments.length ? (y = fn, polynomial) : y;\n    };\n\n    polynomial.order = function (n) {\n      return arguments.length ? (order = n, polynomial) : order;\n    };\n\n    return polynomial;\n  }\n\n  function uncenter(k, a, x, y) {\n    var z = Array(k);\n    var i, j, v, c; // initialize to zero\n\n    for (i = 0; i < k; ++i) {\n      z[i] = 0;\n    } // polynomial expansion\n\n\n    for (i = k - 1; i >= 0; --i) {\n      v = a[i];\n      c = 1;\n      z[i] += v;\n\n      for (j = 1; j <= i; ++j) {\n        c *= (i + 1 - j) / j; // binomial coefficent\n\n        z[i - j] += v * Math.pow(x, j) * c;\n      }\n    } // bias term\n\n\n    z[0] += y;\n    return z;\n  } // Given an array for a two-dimensional matrix and the polynomial order,\n  // solve A * x = b using Gaussian elimination.\n\n\n  function gaussianElimination(matrix) {\n    var n = matrix.length - 1,\n        coef = [];\n    var i, j, k, r, t;\n\n    for (i = 0; i < n; ++i) {\n      r = i; // max row\n\n      for (j = i + 1; j < n; ++j) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {\n          r = j;\n        }\n      }\n\n      for (k = i; k < n + 1; ++k) {\n        t = matrix[k][i];\n        matrix[k][i] = matrix[k][r];\n        matrix[k][r] = t;\n      }\n\n      for (j = i + 1; j < n; ++j) {\n        for (k = n; k >= i; k--) {\n          matrix[k][j] -= matrix[k][i] * matrix[i][j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (j = n - 1; j >= 0; --j) {\n      t = 0;\n\n      for (k = j + 1; k < n; ++k) {\n        t += matrix[k][j] * coef[k];\n      }\n\n      coef[j] = (matrix[n][j] - t) / matrix[j][j];\n    }\n\n    return coef;\n  }\n\n  function power () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function power(data) {\n      var n = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0,\n          YS = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx),\n            ly = Math.log(dy);\n        ++n;\n        X += (lx - X) / n;\n        Y += (ly - Y) / n;\n        XY += (lx * ly - XY) / n;\n        X2 += (lx * lx - X2) / n;\n        YS += (dy - YS) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          a = _ols2[0],\n          b = _ols2[1];\n\n      a = Math.exp(a);\n\n      var fn = function fn(x) {\n        return a * Math.pow(x, b);\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, YS, fn);\n      return out;\n    }\n\n    power.domain = function (arr) {\n      return arguments.length ? (domain = arr, power) : domain;\n    };\n\n    power.x = function (fn) {\n      return arguments.length ? (x = fn, power) : x;\n    };\n\n    power.y = function (fn) {\n      return arguments.length ? (y = fn, power) : y;\n    };\n\n    return power;\n  }\n\n  exports.regressionExp = exponential;\n  exports.regressionLinear = linear;\n  exports.regressionLoess = loess;\n  exports.regressionLog = logarithmic;\n  exports.regressionPoly = polynomial;\n  exports.regressionPow = power;\n  exports.regressionQuad = quad;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}