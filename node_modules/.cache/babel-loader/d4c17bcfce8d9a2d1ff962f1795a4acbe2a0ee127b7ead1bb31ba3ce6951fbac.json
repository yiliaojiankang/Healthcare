{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action } from '@antv/g2';\nimport { each, filter, get, map } from '@antv/util';\nimport { conversionTag as basicConversionTag } from '../geometries/basic';\nimport { CONVERSION_TAG_NAME, transformData } from '../geometries/common';\nimport { compareConversionTag } from '../geometries/compare';\n/**\n * Funnel 转化率跟随 legend 变化事件\n */\nvar ConversionTagAction = /** @class */function (_super) {\n  __extends(ConversionTagAction, _super);\n  function ConversionTagAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.rendering = false;\n    return _this;\n  }\n  ConversionTagAction.prototype.change = function (options) {\n    var _this = this;\n    // 防止多次重复渲染\n    if (!this.rendering) {\n      var seriesField = options.seriesField,\n        compareField = options.compareField;\n      var conversionTag_1 = compareField ? compareConversionTag : basicConversionTag;\n      var view = this.context.view;\n      // 兼容分面漏斗图\n      var views = seriesField || compareField ? view.views : [view];\n      map(views, function (v, index) {\n        // 防止影响其他 annotations 被去除\n        var annotationController = v.getController('annotation');\n        var annotations = filter(get(annotationController, ['option'], []), function (_a) {\n          var name = _a.name;\n          return name !== CONVERSION_TAG_NAME;\n        });\n        annotationController.clear(true);\n        each(annotations, function (annotation) {\n          if (typeof annotation === 'object') {\n            v.annotation()[annotation.type](annotation);\n          }\n        });\n        var data = get(v, ['filteredData'], v.getOptions().data);\n        conversionTag_1({\n          chart: v,\n          index: index,\n          options: __assign(__assign({}, options), {\n            // @ts-ignore\n            filteredData: transformData(data, data, options)\n          })\n        });\n        v.filterData(data);\n        _this.rendering = true;\n        v.render(true);\n      });\n    }\n    this.rendering = false;\n  };\n  return ConversionTagAction;\n}(Action);\nexport { ConversionTagAction };","map":{"version":3,"names":["Action","each","filter","get","map","conversionTag","basicConversionTag","CONVERSION_TAG_NAME","transformData","compareConversionTag","ConversionTagAction","_super","__extends","_this","apply","arguments","rendering","prototype","change","options","seriesField","compareField","conversionTag_1","view","context","views","v","index","annotationController","getController","annotations","_a","name","clear","annotation","type","data","getOptions","chart","__assign","filteredData","filterData","render"],"sources":["../../../../src/plots/funnel/interactions/funnel-conversion-tag.ts"],"sourcesContent":["import { Action } from '@antv/g2';\nimport { each, filter, get, map } from '@antv/util';\nimport { conversionTag as basicConversionTag } from '../geometries/basic';\nimport { CONVERSION_TAG_NAME, transformData } from '../geometries/common';\nimport { compareConversionTag } from '../geometries/compare';\nimport { FunnelOptions } from '../types';\n\n/**\n * Funnel 转化率跟随 legend 变化事件\n */\nexport class ConversionTagAction extends Action {\n  private rendering = false;\n  public change(options: FunnelOptions) {\n    // 防止多次重复渲染\n    if (!this.rendering) {\n      const { seriesField, compareField } = options;\n      const conversionTag = compareField ? compareConversionTag : basicConversionTag;\n      const { view } = this.context;\n      // 兼容分面漏斗图\n      const views = seriesField || compareField ? view.views : [view];\n      map(views, (v, index) => {\n        // 防止影响其他 annotations 被去除\n        const annotationController = v.getController('annotation');\n\n        const annotations = filter(\n          get(annotationController, ['option'], []),\n          ({ name }) => name !== CONVERSION_TAG_NAME\n        );\n\n        annotationController.clear(true);\n\n        each(annotations, (annotation) => {\n          if (typeof annotation === 'object') {\n            v.annotation()[annotation.type](annotation);\n          }\n        });\n\n        const data = get(v, ['filteredData'], v.getOptions().data);\n\n        conversionTag({\n          chart: v,\n          index,\n          options: {\n            ...options,\n            // @ts-ignore\n            filteredData: transformData(data, data, options),\n          },\n        });\n\n        v.filterData(data);\n        this.rendering = true;\n        v.render(true);\n      });\n    }\n    this.rendering = false;\n  }\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AACnD,SAASC,aAAa,IAAIC,kBAAkB,QAAQ,qBAAqB;AACzE,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,sBAAsB;AACzE,SAASC,oBAAoB,QAAQ,uBAAuB;AAG5D;;;AAGA,IAAAC,mBAAA,0BAAAC,MAAA;EAAyCC,SAAA,CAAAF,mBAAA,EAAAC,MAAA;EAAzC,SAAAD,oBAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACUF,KAAA,CAAAG,SAAS,GAAG,KAAK;;EA6C3B;EA5CSN,mBAAA,CAAAO,SAAA,CAAAC,MAAM,GAAb,UAAcC,OAAsB;IAApC,IAAAN,KAAA;IACE;IACA,IAAI,CAAC,IAAI,CAACG,SAAS,EAAE;MACX,IAAAI,WAAW,GAAmBD,OAAO,CAAAC,WAA1B;QAAEC,YAAY,GAAKF,OAAO,CAAAE,YAAZ;MACjC,IAAMC,eAAa,GAAGD,YAAY,GAAGZ,oBAAoB,GAAGH,kBAAkB;MACtE,IAAAiB,IAAI,GAAK,IAAI,CAACC,OAAO,CAAAD,IAAjB;MACZ;MACA,IAAME,KAAK,GAAGL,WAAW,IAAIC,YAAY,GAAGE,IAAI,CAACE,KAAK,GAAG,CAACF,IAAI,CAAC;MAC/DnB,GAAG,CAACqB,KAAK,EAAE,UAACC,CAAC,EAAEC,KAAK;QAClB;QACA,IAAMC,oBAAoB,GAAGF,CAAC,CAACG,aAAa,CAAC,YAAY,CAAC;QAE1D,IAAMC,WAAW,GAAG5B,MAAM,CACxBC,GAAG,CAACyB,oBAAoB,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EACzC,UAACG,EAAQ;cAANC,IAAI,GAAAD,EAAA,CAAAC,IAAA;UAAO,OAAAA,IAAI,KAAKzB,mBAAmB;QAA5B,CAA4B,CAC3C;QAEDqB,oBAAoB,CAACK,KAAK,CAAC,IAAI,CAAC;QAEhChC,IAAI,CAAC6B,WAAW,EAAE,UAACI,UAAU;UAC3B,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;YAClCR,CAAC,CAACQ,UAAU,EAAE,CAACA,UAAU,CAACC,IAAI,CAAC,CAACD,UAAU,CAAC;;QAE/C,CAAC,CAAC;QAEF,IAAME,IAAI,GAAGjC,GAAG,CAACuB,CAAC,EAAE,CAAC,cAAc,CAAC,EAAEA,CAAC,CAACW,UAAU,EAAE,CAACD,IAAI,CAAC;QAE1Dd,eAAa,CAAC;UACZgB,KAAK,EAAEZ,CAAC;UACRC,KAAK,EAAAA,KAAA;UACLR,OAAO,EAAAoB,QAAA,CAAAA,QAAA,KACFpB,OAAO;YACV;YACAqB,YAAY,EAAEhC,aAAa,CAAC4B,IAAI,EAAEA,IAAI,EAAEjB,OAAO;UAAC;SAEnD,CAAC;QAEFO,CAAC,CAACe,UAAU,CAACL,IAAI,CAAC;QAClBvB,KAAI,CAACG,SAAS,GAAG,IAAI;QACrBU,CAAC,CAACgB,MAAM,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC;;IAEJ,IAAI,CAAC1B,SAAS,GAAG,KAAK;EACxB,CAAC;EACH,OAAAN,mBAAC;AAAD,CAAC,CA9CwCV,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}