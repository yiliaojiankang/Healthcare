{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n * 抽取pathSegment中的关键点\n * M,L,A,Q,H,V一个端点\n * Q, S抽取一个端点，一个控制点\n * C抽取一个端点，两个控制点\n */\nfunction _getSegmentPoints(segment) {\n  var points = [];\n  switch (segment[0]) {\n    case 'M':\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'L':\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'A':\n      points.push([segment[6], segment[7]]);\n      break;\n    case 'Q':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'T':\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'C':\n      points.push([segment[5], segment[6]]);\n      points.push([segment[1], segment[2]]);\n      points.push([segment[3], segment[4]]);\n      break;\n    case 'S':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'H':\n      points.push([segment[1], segment[1]]);\n      break;\n    case 'V':\n      points.push([segment[1], segment[1]]);\n      break;\n    default:\n  }\n  return points;\n}\n// 将两个点均分成count个点\nfunction _splitPoints(points, former, count) {\n  var result = [].concat(points);\n  var index;\n  var t = 1 / (count + 1);\n  var formerEnd = _getSegmentPoints(former)[0];\n  for (var i = 1; i <= count; i++) {\n    t *= i;\n    index = Math.floor(points.length * t);\n    if (index === 0) {\n      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    } else {\n      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    }\n  }\n  return result;\n}\nexport default function formatPath(fromPath, toPath) {\n  if (fromPath.length <= 1) {\n    return fromPath;\n  }\n  var points;\n  for (var i = 0; i < toPath.length; i++) {\n    if (fromPath[i][0] !== toPath[i][0]) {\n      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\n      points = _getSegmentPoints(fromPath[i]);\n      switch (toPath[i][0]) {\n        case 'M':\n          fromPath[i] = ['M'].concat(points[0]);\n          break;\n        case 'L':\n          fromPath[i] = ['L'].concat(points[0]);\n          break;\n        case 'A':\n          fromPath[i] = [].concat(toPath[i]);\n          fromPath[i][6] = points[0][0];\n          fromPath[i][7] = points[0][1];\n          break;\n        case 'Q':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n        case 'T':\n          fromPath[i] = ['T'].concat(points[0]);\n          break;\n        case 'C':\n          if (points.length < 3) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 2);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n        case 'S':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n        default:\n          fromPath[i] = toPath[i];\n      }\n    }\n  }\n  return fromPath;\n}","map":{"version":3,"names":["_getSegmentPoints","segment","points","push","_splitPoints","former","count","result","concat","index","t","formerEnd","i","Math","floor","length","unshift","splice","formatPath","fromPath","toPath","reduce","arr"],"sources":["../src/format-path.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}