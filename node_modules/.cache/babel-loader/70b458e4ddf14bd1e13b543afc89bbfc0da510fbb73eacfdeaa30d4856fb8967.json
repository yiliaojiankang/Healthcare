{"ast":null,"code":"import { degreesToRadians, radiansToDegrees } from '@turf/helpers';\nimport { calDistance } from \"../geo\";\n// arc\nexport function greatCircleLineAtOffset(source, target, offset, thetaOffset, mapVersion) {\n  var segmentNumber = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 30;\n  var autoFit = arguments.length > 6 ? arguments[6] : undefined;\n  var pointOffset = offset;\n  if (autoFit) {\n    // Tip: 自动偏移到线的节点位置\n    // greatcircle 暂时不支持配置 segmentNumber 和 thetaOffset\n    pointOffset = Math.round(offset * 29) / 29;\n  }\n  return interpolate(source, target, pointOffset, mapVersion);\n}\nfunction midPoint(source, target) {\n  var center = [target[0] - source[0], target[1] - source[1]]; // target - source;\n  var r = calDistance(center, [0, 0]);\n  var theta = Math.atan2(center[1], center[0]);\n  var thetaOffset = 0.314;\n  var r2 = r / 2.0 / Math.cos(thetaOffset);\n  var theta2 = theta + thetaOffset;\n  var mid = [r2 * Math.cos(theta2) + source[0], r2 * Math.sin(theta2) + source[1]];\n  return mid;\n}\nfunction bezier3(arr, t) {\n  var ut = 1 - t;\n  return (arr[0] * ut + arr[1] * t) * ut + (arr[1] * ut + arr[2] * t) * t;\n}\nfunction getAngularDist(source, target) {\n  var delta = [source[0] - target[0], source[1] - target[1]];\n  var sinHalfDelta = [Math.sin(delta[0] / 2.0), Math.sin(delta[1] / 2.0)]; // Math.sin(delta / 2.0);\n  var a = sinHalfDelta[1] * sinHalfDelta[1] + Math.cos(source[1]) * Math.cos(target[1]) * sinHalfDelta[0] * sinHalfDelta[0];\n  return 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1.0 - a));\n}\nexport function interpolate(s, t, offset, mapVersion) {\n  var source = [degreesToRadians(s[0]), degreesToRadians(s[1])];\n  var target = [degreesToRadians(t[0]), degreesToRadians(t[1])];\n  if (mapVersion === 'GAODE2.x') {\n    // gaode2.x\n    var mid = midPoint(source, target);\n    var x = [source[0], mid[0], target[0]];\n    var y = [source[1], mid[1], target[1]];\n    return [bezier3(x, offset), bezier3(y, offset), 0];\n  } else {\n    var angularDist = getAngularDist(source, target);\n    if (Math.abs(angularDist - Math.PI) < 0.001) {\n      return [(1.0 - offset) * source[0] + offset * target[0], (1.0 - offset) * source[1] + offset * target[1]];\n    }\n    var a = Math.sin((1.0 - offset) * angularDist) / Math.sin(angularDist);\n    var b = Math.sin(offset * angularDist) / Math.sin(angularDist);\n    var sinSource = [Math.sin(source[0]), Math.sin(source[1])];\n    var cosSource = [Math.cos(source[0]), Math.cos(source[1])];\n    var sinTarget = [Math.sin(target[0]), Math.sin(target[1])];\n    var cosTarget = [Math.cos(target[0]), Math.cos(target[1])];\n    var _x = a * cosSource[1] * cosSource[0] + b * cosTarget[1] * cosTarget[0];\n    var _y = a * cosSource[1] * sinSource[0] + b * cosTarget[1] * sinTarget[0];\n    var z = a * sinSource[1] + b * sinTarget[1];\n    return [radiansToDegrees(Math.atan2(_y, _x)), radiansToDegrees(Math.atan2(z, Math.sqrt(_x * _x + _y * _y)))];\n  }\n}","map":{"version":3,"names":["degreesToRadians","radiansToDegrees","calDistance","greatCircleLineAtOffset","source","target","offset","thetaOffset","mapVersion","segmentNumber","arguments","length","undefined","autoFit","pointOffset","Math","round","interpolate","midPoint","center","r","theta","atan2","r2","cos","theta2","mid","sin","bezier3","arr","t","ut","getAngularDist","delta","sinHalfDelta","a","sqrt","s","x","y","angularDist","abs","PI","b","sinSource","cosSource","sinTarget","cosTarget","_x","_y","z"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-utils/es/lineAtOffset/greatCircle.js"],"sourcesContent":["import { degreesToRadians, radiansToDegrees } from '@turf/helpers';\nimport { calDistance } from \"../geo\";\n// arc\nexport function greatCircleLineAtOffset(source, target, offset, thetaOffset, mapVersion) {\n  var segmentNumber = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 30;\n  var autoFit = arguments.length > 6 ? arguments[6] : undefined;\n  var pointOffset = offset;\n  if (autoFit) {\n    // Tip: 自动偏移到线的节点位置\n    // greatcircle 暂时不支持配置 segmentNumber 和 thetaOffset\n    pointOffset = Math.round(offset * 29) / 29;\n  }\n  return interpolate(source, target, pointOffset, mapVersion);\n}\nfunction midPoint(source, target) {\n  var center = [target[0] - source[0], target[1] - source[1]]; // target - source;\n  var r = calDistance(center, [0, 0]);\n  var theta = Math.atan2(center[1], center[0]);\n  var thetaOffset = 0.314;\n  var r2 = r / 2.0 / Math.cos(thetaOffset);\n  var theta2 = theta + thetaOffset;\n  var mid = [r2 * Math.cos(theta2) + source[0], r2 * Math.sin(theta2) + source[1]];\n  return mid;\n}\nfunction bezier3(arr, t) {\n  var ut = 1 - t;\n  return (arr[0] * ut + arr[1] * t) * ut + (arr[1] * ut + arr[2] * t) * t;\n}\nfunction getAngularDist(source, target) {\n  var delta = [source[0] - target[0], source[1] - target[1]];\n  var sinHalfDelta = [Math.sin(delta[0] / 2.0), Math.sin(delta[1] / 2.0)]; // Math.sin(delta / 2.0);\n  var a = sinHalfDelta[1] * sinHalfDelta[1] + Math.cos(source[1]) * Math.cos(target[1]) * sinHalfDelta[0] * sinHalfDelta[0];\n  return 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1.0 - a));\n}\nexport function interpolate(s, t, offset, mapVersion) {\n  var source = [degreesToRadians(s[0]), degreesToRadians(s[1])];\n  var target = [degreesToRadians(t[0]), degreesToRadians(t[1])];\n  if (mapVersion === 'GAODE2.x') {\n    // gaode2.x\n    var mid = midPoint(source, target);\n    var x = [source[0], mid[0], target[0]];\n    var y = [source[1], mid[1], target[1]];\n    return [bezier3(x, offset), bezier3(y, offset), 0];\n  } else {\n    var angularDist = getAngularDist(source, target);\n    if (Math.abs(angularDist - Math.PI) < 0.001) {\n      return [(1.0 - offset) * source[0] + offset * target[0], (1.0 - offset) * source[1] + offset * target[1]];\n    }\n    var a = Math.sin((1.0 - offset) * angularDist) / Math.sin(angularDist);\n    var b = Math.sin(offset * angularDist) / Math.sin(angularDist);\n    var sinSource = [Math.sin(source[0]), Math.sin(source[1])];\n    var cosSource = [Math.cos(source[0]), Math.cos(source[1])];\n    var sinTarget = [Math.sin(target[0]), Math.sin(target[1])];\n    var cosTarget = [Math.cos(target[0]), Math.cos(target[1])];\n    var _x = a * cosSource[1] * cosSource[0] + b * cosTarget[1] * cosTarget[0];\n    var _y = a * cosSource[1] * sinSource[0] + b * cosTarget[1] * sinTarget[0];\n    var z = a * sinSource[1] + b * sinTarget[1];\n    return [radiansToDegrees(Math.atan2(_y, _x)), radiansToDegrees(Math.atan2(z, Math.sqrt(_x * _x + _y * _y)))];\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}