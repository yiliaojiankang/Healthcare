{"ast":null,"code":"var ANIMATIONS_MAP = {};\n/**\n * 根据名称获取对应的动画执行函数\n * @param type 动画函数名称\n */\nexport function getAnimation(type) {\n  return ANIMATIONS_MAP[type.toLowerCase()];\n}\n/**\n * 注册动画执行函数\n * @param type 动画执行函数名称\n * @param animation 动画执行函数\n */\nexport function registerAnimation(type, animation) {\n  ANIMATIONS_MAP[type.toLowerCase()] = animation;\n}","map":{"version":3,"names":["ANIMATIONS_MAP","getAnimation","type","toLowerCase","registerAnimation","animation"],"sources":["../../../src/animate/animation/index.ts"],"sourcesContent":["import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/** @ignore */\ninterface AnimationMap {\n  [key: string]: Animation;\n}\n\ntype Animation = (element: IGroup | IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) => void;\n\nconst ANIMATIONS_MAP: AnimationMap = {};\n\n/**\n * 根据名称获取对应的动画执行函数\n * @param type 动画函数名称\n */\nexport function getAnimation(type: string) {\n  return ANIMATIONS_MAP[type.toLowerCase()];\n}\n\n/**\n * 注册动画执行函数\n * @param type 动画执行函数名称\n * @param animation 动画执行函数\n */\nexport function registerAnimation(type: string, animation: Animation) {\n  ANIMATIONS_MAP[type.toLowerCase()] = animation;\n}\n"],"mappings":"AAWA,IAAMA,cAAc,GAAiB,EAAE;AAEvC;;;;AAIA,OAAM,SAAUC,YAAYA,CAACC,IAAY;EACvC,OAAOF,cAAc,CAACE,IAAI,CAACC,WAAW,EAAE,CAAC;AAC3C;AAEA;;;;;AAKA,OAAM,SAAUC,iBAAiBA,CAACF,IAAY,EAAEG,SAAoB;EAClEL,cAAc,CAACE,IAAI,CAACC,WAAW,EAAE,CAAC,GAAGE,SAAS;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}