{"ast":null,"code":"import { each, isNil } from '@antv/util';\n// 求以a为次幂，结果为b的基数，如 x^^a = b;求x\n// 虽然数学上 b 不支持负数，但是这里需要支持 负数\nexport function calBase(a, b) {\n  var e = Math.E;\n  var value;\n  if (b >= 0) {\n    value = Math.pow(e, Math.log(b) / a); // 使用换底公式求底\n  } else {\n    value = Math.pow(e, Math.log(-b) / a) * -1; // 使用换底公式求底\n  }\n\n  return value;\n}\nexport function log(a, b) {\n  if (a === 1) {\n    return 1;\n  }\n  return Math.log(b) / Math.log(a);\n}\nexport function getLogPositiveMin(values, base, max) {\n  if (isNil(max)) {\n    max = Math.max.apply(null, values);\n  }\n  var positiveMin = max;\n  each(values, function (value) {\n    if (value > 0 && value < positiveMin) {\n      positiveMin = value;\n    }\n  });\n  if (positiveMin === max) {\n    positiveMin = max / base;\n  }\n  if (positiveMin > 1) {\n    positiveMin = 1;\n  }\n  return positiveMin;\n}\nfunction digitLength(num) {\n  // Get digit length of e\n  var eSplit = num.toString().split(/[eE]/);\n  var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\n  return len > 0 ? len : 0;\n}\n/**\n * 高精度加法，解决 0.1 + 0.2 !== 0.3 的经典问题\n *\n * @param num1 加数\n * @param num2 被加数\n * @return {number} 返回值\n */\nexport function precisionAdd(num1, num2) {\n  var num1Digits = digitLength(num1);\n  var num2Digits = digitLength(num2);\n  var baseNum = Math.pow(10, Math.max(num1Digits, num2Digits));\n  return (num1 * baseNum + num2 * baseNum) / baseNum;\n}","map":{"version":3,"names":["each","isNil","calBase","a","b","e","Math","E","value","pow","log","getLogPositiveMin","values","base","max","apply","positiveMin","digitLength","num","eSplit","toString","split","len","length","precisionAdd","num1","num2","num1Digits","num2Digits","baseNum"],"sources":["../../src/util/math.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,YAAY;AAExC;AACA;AACA,OAAM,SAAUC,OAAOA,CAACC,CAAS,EAAEC,CAAS;EAC1C,IAAMC,CAAC,GAAGC,IAAI,CAACC,CAAC;EAChB,IAAIC,KAAK;EACT,IAAIJ,CAAC,IAAI,CAAC,EAAE;IACVI,KAAK,GAAGF,IAAI,CAACG,GAAG,CAACJ,CAAC,EAAEC,IAAI,CAACI,GAAG,CAACN,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC;GACvC,MAAM;IACLK,KAAK,GAAGF,IAAI,CAACG,GAAG,CAACJ,CAAC,EAAEC,IAAI,CAACI,GAAG,CAAC,CAACN,CAAC,CAAC,GAAGD,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;EAE9C,OAAOK,KAAK;AACd;AAEA,OAAM,SAAUE,GAAGA,CAACP,CAAS,EAAEC,CAAS;EACtC,IAAID,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;;EAEV,OAAOG,IAAI,CAACI,GAAG,CAACN,CAAC,CAAC,GAAGE,IAAI,CAACI,GAAG,CAACP,CAAC,CAAC;AAClC;AAEA,OAAM,SAAUQ,iBAAiBA,CAACC,MAAM,EAAEC,IAAI,EAAEC,GAAY;EAC1D,IAAIb,KAAK,CAACa,GAAG,CAAC,EAAE;IACdA,GAAG,GAAGR,IAAI,CAACQ,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEH,MAAM,CAAC;;EAEpC,IAAII,WAAW,GAAGF,GAAG;EACrBd,IAAI,CAACY,MAAM,EAAE,UAACJ,KAAK;IACjB,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGQ,WAAW,EAAE;MACpCA,WAAW,GAAGR,KAAK;;EAEvB,CAAC,CAAC;EACF,IAAIQ,WAAW,KAAKF,GAAG,EAAE;IACvBE,WAAW,GAAGF,GAAG,GAAGD,IAAI;;EAE1B,IAAIG,WAAW,GAAG,CAAC,EAAE;IACnBA,WAAW,GAAG,CAAC;;EAEjB,OAAOA,WAAW;AACpB;AAEA,SAASC,WAAWA,CAACC,GAAW;EAC9B;EACA,IAAMC,MAAM,GAAGD,GAAG,CAACE,QAAQ,EAAE,CAACC,KAAK,CAAC,MAAM,CAAC;EAC3C,IAAMC,GAAG,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAEE,MAAM,GAAG,EAAEJ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EACtE,OAAOG,GAAG,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;AAC1B;AAEA;;;;;;;AAOA,OAAM,SAAUE,YAAYA,CAACC,IAAY,EAAEC,IAAY;EACrD,IAAMC,UAAU,GAAGV,WAAW,CAACQ,IAAI,CAAC;EACpC,IAAMG,UAAU,GAAGX,WAAW,CAACS,IAAI,CAAC;EACpC,IAAMG,OAAO,GAAGvB,IAAA,CAAAG,GAAA,GAAE,EAAIH,IAAI,CAACQ,GAAG,CAACa,UAAU,EAAEC,UAAU,CAAC;EACtD,OAAO,CAACH,IAAI,GAAGI,OAAO,GAAGH,IAAI,GAAGG,OAAO,IAAIA,OAAO;AACpD"},"metadata":{},"sourceType":"module","externalDependencies":[]}