{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { get, size, assign, each, isNumber } from '@antv/util';\nimport { ext } from '@antv/matrix-util';\nimport Trend from './trend';\nimport Handler from './handler';\nimport { isString } from '@antv/util';\nimport ControllerBtn, { TIME_TYPE } from './controllerBtn';\nimport { VALUE_CHANGE, TIMELINE_START, TIMEBAR_CONFIG_CHANGE, PLAY_PAUSE_BTN, NEXT_STEP_BTN, PRE_STEP_BTN, TIMELINE_END } from './constant';\nvar transform = ext.transform;\n/**\n * 一些默认的样式配置\n */\nexport var BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.05\n};\nvar SIMPLE_BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.15,\n  radius: 5\n};\nexport var FOREGROUND_STYLE = {\n  fill: '#5B8FF9',\n  opacity: 0.3,\n  cursor: 'grab'\n};\nexport var DEFAULT_HANDLER_WIDTH = 2;\nexport var HANDLER_STYLE = {\n  width: DEFAULT_HANDLER_WIDTH,\n  height: 24\n};\nexport var TEXT_STYLE = {\n  textBaseline: 'middle',\n  fill: '#000',\n  opacity: 0.45\n};\nexport var TICK_LABEL_STYLE = {\n  textAlign: 'center',\n  textBaseline: 'top',\n  fill: '#607889',\n  opacity: 0.35\n};\nexport var TICK_LINE_STYLE = {\n  lineWidth: 1,\n  stroke: '#ccc'\n};\nvar TrendTimeBar = /** @class */function () {\n  function TrendTimeBar(cfg) {\n    var _this = this;\n    this.prevX = 0;\n    this.onMouseDown = function (handler) {\n      return function (e) {\n        // 1. 记录点击的滑块\n        _this.currentHandler = handler;\n        var event = e.originalEvent;\n        // 2. 存储当前点击位置\n        event.stopPropagation();\n        event.preventDefault();\n        // 兼容移动端获取数据\n        _this.prevX = get(event, 'touches.0.pageX', event.pageX);\n        // 3. 开始滑动的时候，绑定 move 和 up 事件\n        var containerDOM = _this.canvas.get('container');\n        containerDOM.addEventListener('mousemove', _this.onMouseMove);\n        containerDOM.addEventListener('mouseup', _this.onMouseUp);\n        containerDOM.addEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.addEventListener('touchmove', _this.onMouseMove);\n        containerDOM.addEventListener('touchend', _this.onMouseUp);\n        containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n      };\n    };\n    this.onMouseMove = function (e) {\n      // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n      e.stopPropagation();\n      e.preventDefault();\n      var x = get(e, 'touches.0.pageX', e.pageX);\n      // 横向的 slider 只处理 x\n      var offsetX = x - _this.prevX;\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width);\n      // 更新 start end range 范围\n      _this.updateStartEnd(offsetXRange);\n      // 更新 ui\n      _this.updateUI();\n      _this.prevX = x;\n    };\n    this.onMouseUp = function () {\n      // 结束之后，取消绑定的事件\n      if (_this.currentHandler) {\n        _this.currentHandler = undefined;\n      }\n      var containerDOM = _this.canvas.get('container');\n      if (containerDOM) {\n        containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n        containerDOM.removeEventListener('mouseup', _this.onMouseUp);\n        // 防止滑动到 canvas 外部之后，状态丢失\n        containerDOM.removeEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n        containerDOM.removeEventListener('touchend', _this.onMouseUp);\n        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n      }\n    };\n    var _a = cfg.x,\n      x = _a === void 0 ? 0 : _a,\n      _b = cfg.y,\n      y = _b === void 0 ? 0 : _b,\n      _c = cfg.width,\n      width = _c === void 0 ? 100 : _c,\n      height = cfg.height,\n      _d = cfg.padding,\n      padding = _d === void 0 ? 10 : _d,\n      trendCfg = cfg.trendCfg,\n      _e = cfg.controllerCfg,\n      controllerCfg = _e === void 0 ? {\n        speed: 1\n      } : _e,\n      _f = cfg.backgroundStyle,\n      backgroundStyle = _f === void 0 ? {} : _f,\n      _g = cfg.foregroundStyle,\n      foregroundStyle = _g === void 0 ? {} : _g,\n      _h = cfg.handlerStyle,\n      handlerStyle = _h === void 0 ? {} : _h,\n      _j = cfg.textStyle,\n      textStyle = _j === void 0 ? {} : _j,\n      // 缩略轴的初始位置\n      _k = cfg.start,\n      // 缩略轴的初始位置\n      start = _k === void 0 ? 0 : _k,\n      _l = cfg.end,\n      end = _l === void 0 ? 1 : _l,\n      _m = cfg.minText,\n      minText = _m === void 0 ? '' : _m,\n      _o = cfg.maxText,\n      maxText = _o === void 0 ? '' : _o,\n      group = cfg.group,\n      graph = cfg.graph,\n      canvas = cfg.canvas,\n      _p = cfg.tick,\n      tick = _p === void 0 ? {\n        tickLabelStyle: {},\n        tickLineStyle: {},\n        tickLabelFormatter: function tickLabelFormatter(d) {\n          return d;\n        },\n        ticks: []\n      } : _p,\n      type = cfg.type;\n    this.graph = graph;\n    this.canvas = canvas;\n    this.group = group;\n    this.timeBarType = type;\n    // position size\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n    this.ticks = tick.ticks;\n    this.trendCfg = trendCfg;\n    this.controllerCfg = controllerCfg;\n    this.currentSpeed = controllerCfg.speed || 1;\n    this.tickLabelFormatter = tick.tickLabelFormatter;\n    // style\n    if (type === 'trend') {\n      this.backgroundStyle = __assign(__assign({}, BACKGROUND_STYLE), backgroundStyle);\n    } else if (type === 'simple') {\n      this.backgroundStyle = __assign(__assign({}, SIMPLE_BACKGROUND_STYLE), backgroundStyle);\n    }\n    this.foregroundStyle = __assign(__assign({}, FOREGROUND_STYLE), foregroundStyle);\n    this.handlerStyle = __assign(__assign({}, HANDLER_STYLE), handlerStyle);\n    this.textStyle = __assign(__assign({}, TEXT_STYLE), textStyle);\n    this.tickLabelStyle = __assign(__assign({}, TICK_LABEL_STYLE), tick.tickLabelStyle);\n    this.tickLineStyle = __assign(__assign({}, TICK_LINE_STYLE), tick.tickLineStyle);\n    this.currentMode = controllerCfg.defaultTimeType || TIME_TYPE.RANGE;\n    // 初始信息\n    this.start = start;\n    this.end = end;\n    this.minText = minText;\n    this.maxText = maxText;\n    // 初始化 fontFamily，如果有浏览器，取 body 上的字体，防止文字更新时局部渲染造成的重影\n    this.fontFamily = typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif';\n    this.renderSlider();\n  }\n  /**\n   * 更新配置\n   * @param cfg\n   */\n  TrendTimeBar.prototype.update = function (cfg) {\n    var x = cfg.x,\n      y = cfg.y,\n      width = cfg.width,\n      height = cfg.height,\n      minText = cfg.minText,\n      maxText = cfg.maxText,\n      start = cfg.start,\n      end = cfg.end;\n    // start、end 只能是 0~1 范围\n    this.start = Math.min(1, Math.max(start, 0));\n    this.end = Math.min(1, Math.max(end, 0));\n    // 如果传了则更新，没有传则不更新\n    // @ts-ignore\n    assign(this, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      minText: minText,\n      maxText: maxText\n    });\n    // 更新 ui，不自动绘制\n    this.updateUI();\n  };\n  TrendTimeBar.prototype.setText = function (minText, maxText) {\n    this.minTextShape.attr('text', minText);\n    this.maxTextShape.attr('text', maxText);\n  };\n  /**\n   * 初始化组件结构\n   * @private\n   */\n  TrendTimeBar.prototype.renderSlider = function () {\n    var _this = this;\n    var _a = this,\n      width = _a.width,\n      height = _a.height,\n      timeBarType = _a.timeBarType;\n    // 趋势图数据\n    if (timeBarType === 'trend' && size(get(this.trendCfg, 'data'))) {\n      var trendComponent = new Trend(__assign(__assign({\n        x: this.x,\n        y: this.y,\n        width: width,\n        height: height\n      }, this.trendCfg), {\n        group: this.group\n      }));\n      this.trendComponent = trendComponent;\n    }\n    var sliderGroup = this.group.addGroup({\n      name: 'slider-group'\n    });\n    // 1. 背景\n    sliderGroup.addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, this.backgroundStyle),\n      name: 'background'\n    });\n    var textGroup = this.group.addGroup();\n    // 2. 左右文字\n    if (timeBarType === 'trend') {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: height / 2 + this.y,\n          textAlign: 'right',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'min-text-shape'\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: height / 2 + this.y,\n          textAlign: 'left',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'max-text-shape'\n      });\n    } else {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'min-text-shape'\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'max-text-shape'\n      });\n    }\n    // 3. 前景 选中背景框\n    this.foregroundShape = this.group.addGroup().addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: this.y,\n        height: height\n      }, this.foregroundStyle),\n      name: 'foreground-shape'\n    });\n    this.foregroundShape.on('mousedown', function (e) {\n      e.target.attr('cursor', 'grabbing');\n    });\n    this.foregroundShape.on('mouseup', function (e) {\n      e.target.attr('cursor', _this.foregroundStyle.cursor || 'grab');\n    });\n    // 滑块相关的大小信息\n    var handlerWidth = get(this.handlerStyle, 'width', 2);\n    var handlerHeight = get(this.handlerStyle, 'height', 24);\n    var minHandleGroup = this.group.addGroup({\n      name: 'minHandlerShape'\n    });\n    // 4. 左右滑块\n    this.minHandlerShape = new Handler({\n      name: 'minHandlerShape',\n      group: minHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    });\n    var maxHandleGroup = this.group.addGroup({\n      name: 'maxHandlerShape'\n    });\n    this.maxHandlerShape = new Handler({\n      name: 'maxHandlerShape',\n      group: maxHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    });\n    // 缩略图下面的时间刻度\n    var tickData = this.ticks;\n    var interval = width / (tickData.length - 1);\n    this.tickPosList = [];\n    if (this.textList && this.textList.length) {\n      this.textList.forEach(function (text) {\n        text.destroy();\n      });\n    }\n    var lastX = -Infinity;\n    var rotate = this.tickLabelStyle.rotate;\n    delete this.tickLabelStyle.rotate;\n    this.textList = tickData.map(function (data, index) {\n      _this.tickPosList.push(_this.x + index * interval);\n      var label;\n      if (_this.tickLabelFormatter) {\n        label = _this.tickLabelFormatter(data);\n        if (!isString(label) && label) {\n          // return true\n          label = data.date;\n        }\n      } else {\n        label = data.date;\n      }\n      // 文本刻度\n      var textX = _this.x + index * interval,\n        textY = _this.y + height + 5;\n      var text = _this.group.addShape('text', {\n        attrs: __assign({\n          x: textX,\n          y: textY,\n          text: label,\n          fontFamily: _this.fontFamily || 'Arial, sans-serif'\n        }, _this.tickLabelStyle),\n        name: 'tick-label'\n      });\n      if (isNumber(rotate) && index !== tickData.length - 1) {\n        var matrix = transform([1, 0, 0, 0, 1, 0, 0, 0, 1], [['t', -textX, -textY], ['r', rotate], ['t', textX - 5, textY + 2]]);\n        text.attr({\n          textAlign: 'left',\n          matrix: matrix\n        });\n      }\n      if (index === 0) {\n        text.attr({\n          textAlign: 'left'\n        });\n      } else if (index !== tickData.length - 1) {\n        text.attr({\n          textAlign: 'right'\n        });\n      }\n      // 文本刻度上面的竖线\n      var line = _this.group.addShape('line', {\n        attrs: __assign({\n          x1: _this.x + index * interval,\n          y1: _this.y + height + 2,\n          x2: _this.x + index * interval,\n          y2: _this.y + height + 6\n        }, _this.tickLineStyle),\n        name: 'tick-line'\n      });\n      line.toBack();\n      var bbox = text.getBBox();\n      // 抽样，标签与标签间距不小于 10\n      if (bbox.minX > lastX) {\n        text.show();\n        line.show();\n        lastX = bbox.minX + bbox.width + 10;\n      } else {\n        text.hide();\n        line.hide();\n      }\n      return text;\n    });\n    // 渲染播放、快进和后退的控制按钮\n    this.controllerBtnGroup = new ControllerBtn(__assign({\n      group: this.group,\n      x: this.x,\n      y: this.y + height + 25,\n      width: width,\n      height: 35\n    }, this.controllerCfg));\n    // 初始化 minText 和 maxText，方便计算它们的 bbox\n    this.updateStartEnd(0);\n    // 根据 start end 更新 ui 的位置信息\n    this.updateUI();\n    // 移动到对应的位置\n    sliderGroup.move(this.x, this.y);\n    // 绑定事件鼠标事件\n    this.bindEvents();\n    if (this.currentMode === TIME_TYPE.SINGLE) {\n      this.minHandlerShape.hide();\n      this.foregroundShape.hide();\n      this.minTextShape.hide();\n    }\n  };\n  /**\n   * 绑定事件：\n   *  - 点击\n   *  - 滑动\n   *  - 拖拽\n   *  - 滚动\n   * @private\n   */\n  TrendTimeBar.prototype.bindEvents = function () {\n    var _this = this;\n    // 1. 左滑块的滑动\n    var minHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'minHandlerShape';\n    });\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.on('minHandlerShape-handler:mousedown', this.onMouseDown(this.minHandlerShape));\n      minHandleShapeGroup.on('minHandlerShape-handler:touchstart', this.onMouseDown(this.minHandlerShape));\n    }\n    var maxHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'maxHandlerShape';\n    });\n    // 2. 右滑块的滑动\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.on('maxHandlerShape-handler:mousedown', this.onMouseDown(this.maxHandlerShape));\n      maxHandleShapeGroup.on('maxHandlerShape-handler:touchstart', this.onMouseDown(this.maxHandlerShape));\n    }\n    // 3. 前景选中区域\n    this.foregroundShape.on('mousedown', this.onMouseDown(this.foregroundShape));\n    this.foregroundShape.on('touchstart', this.onMouseDown(this.foregroundShape));\n    // 播放区按钮控制\n    /** 播放/暂停事件 */\n    this.group.on(\"\".concat(PLAY_PAUSE_BTN, \":click\"), function () {\n      _this.isPlay = !_this.isPlay;\n      _this.currentHandler = _this.maxHandlerShape;\n      _this.changePlayStatus();\n    });\n    // 处理前进一步的事件\n    this.group.on(\"\".concat(NEXT_STEP_BTN, \":click\"), function () {\n      _this.currentHandler = _this.maxHandlerShape;\n      _this.updateStartEnd(0.01);\n      _this.updateUI();\n    });\n    // 处理后退一步的事件\n    this.group.on(\"\".concat(PRE_STEP_BTN, \":click\"), function () {\n      _this.currentHandler = _this.maxHandlerShape;\n      _this.updateStartEnd(-0.01);\n      _this.updateUI();\n    });\n    this.group.on(TIMEBAR_CONFIG_CHANGE, function (_a) {\n      var type = _a.type,\n        speed = _a.speed;\n      _this.currentSpeed = speed;\n      _this.currentMode = type;\n      if (type === TIME_TYPE.SINGLE) {\n        _this.minHandlerShape.hide();\n        _this.foregroundShape.hide();\n        _this.minTextShape.hide();\n      } else if (type === TIME_TYPE.RANGE) {\n        _this.minHandlerShape.show();\n        _this.foregroundShape.show();\n        _this.minTextShape.show();\n      }\n    });\n  };\n  /** 输入当前圆点位置，输出离哪个 tick 的位置最近 */\n  TrendTimeBar.prototype.adjustTickIndex = function (timeSelectX) {\n    for (var i = 0; i < this.tickPosList.length - 1; i++) {\n      if (this.tickPosList[i] <= timeSelectX && timeSelectX <= this.tickPosList[i + 1]) {\n        return Math.abs(this.tickPosList[i] - timeSelectX) < Math.abs(timeSelectX - this.tickPosList[i + 1]) ? i : i + 1;\n      }\n    }\n    return 0;\n  };\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n  TrendTimeBar.prototype.adjustOffsetRange = function (offsetRange) {\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.start;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case this.maxHandlerShape:\n        {\n          var min = 0 - this.end;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case this.foregroundShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      default:\n        return 0;\n    }\n  };\n  /**\n   * 更新起始、结束的控制块位置、文本、范围值（原始值）\n   * @param offsetRange\n   */\n  TrendTimeBar.prototype.updateStartEnd = function (offsetRange) {\n    var minData = this.ticks[this.adjustTickIndex(this.start * this.width)];\n    var maxData = this.ticks[this.adjustTickIndex(this.end * this.width)];\n    if (!this.currentHandler) {\n      this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData === null || minData === void 0 ? void 0 : minData.date;\n      this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData === null || maxData === void 0 ? void 0 : maxData.date;\n      return;\n    }\n    // 操作不同的组件，反馈不一样\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        // 拖动最小滑块时使用当前最大值设置最大值的文本，以便恢复到默认值\n        this.maxText = this.maxTextShape.attr('text');\n        this.start += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        break;\n      case this.maxHandlerShape:\n        // 拖动最大滑块时使用当前最小值设置最小值的文本，以便恢复到默认值\n        this.minText = this.minTextShape.attr('text');\n        this.end += offsetRange;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n      case this.foregroundShape:\n        this.start += offsetRange;\n        this.end += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n      default:\n        break;\n    }\n  };\n  /**\n   * 根据移动的比例来更新 ui，更新范围（0-1 范围的比例值）\n   * @private\n   */\n  TrendTimeBar.prototype.updateUI = function () {\n    var _this = this;\n    if (this.start < 0) {\n      this.start = 0;\n    }\n    if (this.start > 1) {\n      this.start = 1;\n    }\n    if (this.end > 1) {\n      this.end = 1;\n    }\n    if (this.end < 0) {\n      this.end = 0;\n    }\n    var min = this.x + this.start * this.width;\n    var max = this.x + this.end * this.width;\n    // 1. foreground\n    this.foregroundShape.attr('x', min);\n    this.foregroundShape.attr('width', max - min);\n    // 滑块相关的大小信息\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    // 设置文本\n    this.setText(this.minText, this.maxText);\n    var _a = this.dodgeText([min, max]),\n      minAttrs = _a[0],\n      maxAttrs = _a[1];\n    // 2. 左侧滑块和文字位置\n    this.minHandlerShape.setX(min - handlerWidth / 2);\n    each(minAttrs, function (v, k) {\n      return _this.minTextShape.attr(k, v);\n    });\n    // 3. 右侧滑块和文字位置\n    this.maxHandlerShape.setX(max - handlerWidth / 2);\n    each(maxAttrs, function (v, k) {\n      return _this.maxTextShape.attr(k, v);\n    });\n    if (this.currentMode === TIME_TYPE.RANGE) {\n      // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.start, this.end].sort()\n      });\n    } else if (this.currentMode === TIME_TYPE.SINGLE) {\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.end, this.end]\n      });\n    }\n  };\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n  TrendTimeBar.prototype.dodgeText = function (range) {\n    var _a, _b;\n    var TEXTPADDING = 2;\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var minTextShape = this.minTextShape;\n    var maxTextShape = this.maxTextShape;\n    var min = range[0],\n      max = range[1];\n    var sorted = false;\n    // 如果交换了位置，则对应的 min max 也交换\n    if (min > max) {\n      _a = [max, min], min = _a[0], max = _a[1];\n      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n      sorted = true;\n    }\n    // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n    var minBBox = minTextShape.getBBox();\n    var maxBBox = maxTextShape.getBBox();\n    var minAttrs = null;\n    var maxAttrs = null;\n    if (this.timeBarType === 'trend') {\n      minAttrs = min - minBBox.width < this.x + TEXTPADDING ? {\n        x: min + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      } : {\n        x: min - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      };\n      maxAttrs = max + maxBBox.width > this.x + this.width ? {\n        x: max - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      } : {\n        x: max + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      };\n    } else if (this.timeBarType === 'simple') {\n      minAttrs = minTextShape.attr('x') > minBBox.width // 左边滑块文本位置小于其宽度代表文字超过左边届\n      ? {\n        x: min,\n        textAlign: 'center'\n      } : {\n        x: min,\n        textAlign: 'left'\n      };\n      maxAttrs = maxTextShape.attr('x') > this.width - maxBBox.width // 有边滑块文本位置大于宽度代表文字超过右边界\n      ? {\n        x: max,\n        textAlign: 'right'\n      } : {\n        x: max,\n        textAlign: 'center'\n      };\n    }\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  };\n  TrendTimeBar.prototype.startPlay = function () {\n    var _this = this;\n    return typeof window !== 'undefined' ? window.requestAnimationFrame(function () {\n      var _a = _this,\n        ticks = _a.ticks,\n        width = _a.width;\n      var speed = _this.currentSpeed;\n      var tickInterval = width / ticks.length;\n      var offsetX = tickInterval / ((10 - speed) * 1000 / 60);\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width);\n      _this.updateStartEnd(offsetXRange);\n      _this.updateUI();\n      if (_this.isPlay) {\n        _this.playHandler = _this.startPlay();\n      }\n    }) : undefined;\n  };\n  TrendTimeBar.prototype.changePlayStatus = function (isSync) {\n    if (isSync === void 0) {\n      isSync = true;\n    }\n    this.controllerBtnGroup.playButton.update({\n      isPlay: this.isPlay\n    });\n    if (this.isPlay) {\n      // 开始播放\n      this.playHandler = this.startPlay();\n      this.graph.emit(TIMELINE_START, null);\n    } else {\n      // 结束播放\n      if (this.playHandler) {\n        if (typeof window !== 'undefined') window.cancelAnimationFrame(this.playHandler);\n        if (isSync) {\n          this.graph.emit(TIMELINE_END, null);\n        }\n      }\n    }\n  };\n  TrendTimeBar.prototype.destory = function () {\n    this.graph.off(VALUE_CHANGE, function () {});\n    var group = this.group;\n    var minHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'minHandlerShape';\n    });\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.off('minHandlerShape-handler:mousedown');\n      minHandleShapeGroup.off('minHandlerShape-handler:touchstart');\n      minHandleShapeGroup.destroy();\n    }\n    var maxHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'maxHandlerShape';\n    });\n    // 2. 右滑块的滑动\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.off('maxHandlerShape-handler:mousedown');\n      maxHandleShapeGroup.off('maxHandlerShape-handler:touchstart');\n      maxHandleShapeGroup.destroy();\n    }\n    // 3. 前景选中区域\n    this.foregroundShape.off('mousedown');\n    this.foregroundShape.off('touchstart');\n    this.foregroundShape.destroy();\n    group.off(\"\".concat(PLAY_PAUSE_BTN, \":click\"));\n    group.off(\"\".concat(NEXT_STEP_BTN, \":click\"));\n    group.off(\"\".concat(PRE_STEP_BTN, \":click\"));\n    group.off(TIMEBAR_CONFIG_CHANGE);\n    group.destroy();\n    if (this.trendComponent) {\n      this.trendComponent.destory();\n    }\n  };\n  return TrendTimeBar;\n}();\nexport default TrendTimeBar;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","get","size","each","isNumber","ext","Trend","Handler","isString","ControllerBtn","TIME_TYPE","VALUE_CHANGE","TIMELINE_START","TIMEBAR_CONFIG_CHANGE","PLAY_PAUSE_BTN","NEXT_STEP_BTN","PRE_STEP_BTN","TIMELINE_END","transform","BACKGROUND_STYLE","fill","opacity","SIMPLE_BACKGROUND_STYLE","radius","FOREGROUND_STYLE","cursor","DEFAULT_HANDLER_WIDTH","HANDLER_STYLE","width","height","TEXT_STYLE","textBaseline","TICK_LABEL_STYLE","textAlign","TICK_LINE_STYLE","lineWidth","stroke","TrendTimeBar","cfg","_this","prevX","onMouseDown","handler","e","currentHandler","event","originalEvent","stopPropagation","preventDefault","pageX","containerDOM","canvas","addEventListener","onMouseMove","onMouseUp","x","offsetX","offsetXRange","adjustOffsetRange","updateStartEnd","updateUI","undefined","removeEventListener","_a","_b","y","_c","_d","padding","trendCfg","_e","controllerCfg","speed","_f","backgroundStyle","_g","foregroundStyle","_h","handlerStyle","_j","textStyle","_k","start","_l","end","_m","minText","_o","maxText","group","graph","_p","tick","tickLabelStyle","tickLineStyle","tickLabelFormatter","d","ticks","type","timeBarType","currentSpeed","currentMode","defaultTimeType","RANGE","fontFamily","window","getComputedStyle","document","body","getPropertyValue","renderSlider","update","Math","min","max","setText","minTextShape","attr","maxTextShape","trendComponent","sliderGroup","addGroup","name","addShape","attrs","textGroup","text","silent","capture","foregroundShape","on","target","handlerWidth","handlerHeight","minHandleGroup","minHandlerShape","style","maxHandleGroup","maxHandlerShape","tickData","interval","tickPosList","textList","forEach","destroy","lastX","Infinity","rotate","map","data","index","push","label","date","textX","textY","matrix","line","x1","y1","x2","y2","toBack","bbox","getBBox","minX","show","hide","controllerBtnGroup","move","bindEvents","SINGLE","minHandleShapeGroup","find","maxHandleShapeGroup","concat","isPlay","changePlayStatus","adjustTickIndex","timeSelectX","abs","offsetRange","minData","maxData","dodgeText","minAttrs","maxAttrs","setX","v","k","emit","value","sort","range","TEXTPADDING","sorted","minBBox","maxBBox","startPlay","requestAnimationFrame","tickInterval","playHandler","isSync","playButton","cancelAnimationFrame","destory","off","g"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/g6-plugin/es/timeBar/trendTimeBar.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { get, size, assign, each, isNumber } from '@antv/util';\nimport { ext } from '@antv/matrix-util';\nimport Trend from './trend';\nimport Handler from './handler';\nimport { isString } from '@antv/util';\nimport ControllerBtn, { TIME_TYPE } from './controllerBtn';\nimport { VALUE_CHANGE, TIMELINE_START, TIMEBAR_CONFIG_CHANGE, PLAY_PAUSE_BTN, NEXT_STEP_BTN, PRE_STEP_BTN, TIMELINE_END } from './constant';\nvar transform = ext.transform;\n/**\n * 一些默认的样式配置\n */\nexport var BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.05\n};\nvar SIMPLE_BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.15,\n  radius: 5\n};\nexport var FOREGROUND_STYLE = {\n  fill: '#5B8FF9',\n  opacity: 0.3,\n  cursor: 'grab'\n};\nexport var DEFAULT_HANDLER_WIDTH = 2;\nexport var HANDLER_STYLE = {\n  width: DEFAULT_HANDLER_WIDTH,\n  height: 24\n};\nexport var TEXT_STYLE = {\n  textBaseline: 'middle',\n  fill: '#000',\n  opacity: 0.45\n};\nexport var TICK_LABEL_STYLE = {\n  textAlign: 'center',\n  textBaseline: 'top',\n  fill: '#607889',\n  opacity: 0.35\n};\nexport var TICK_LINE_STYLE = {\n  lineWidth: 1,\n  stroke: '#ccc'\n};\nvar TrendTimeBar = /** @class */function () {\n  function TrendTimeBar(cfg) {\n    var _this = this;\n    this.prevX = 0;\n    this.onMouseDown = function (handler) {\n      return function (e) {\n        // 1. 记录点击的滑块\n        _this.currentHandler = handler;\n        var event = e.originalEvent;\n        // 2. 存储当前点击位置\n        event.stopPropagation();\n        event.preventDefault();\n        // 兼容移动端获取数据\n        _this.prevX = get(event, 'touches.0.pageX', event.pageX);\n        // 3. 开始滑动的时候，绑定 move 和 up 事件\n        var containerDOM = _this.canvas.get('container');\n        containerDOM.addEventListener('mousemove', _this.onMouseMove);\n        containerDOM.addEventListener('mouseup', _this.onMouseUp);\n        containerDOM.addEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.addEventListener('touchmove', _this.onMouseMove);\n        containerDOM.addEventListener('touchend', _this.onMouseUp);\n        containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n      };\n    };\n    this.onMouseMove = function (e) {\n      // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n      e.stopPropagation();\n      e.preventDefault();\n      var x = get(e, 'touches.0.pageX', e.pageX);\n      // 横向的 slider 只处理 x\n      var offsetX = x - _this.prevX;\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width);\n      // 更新 start end range 范围\n      _this.updateStartEnd(offsetXRange);\n      // 更新 ui\n      _this.updateUI();\n      _this.prevX = x;\n    };\n    this.onMouseUp = function () {\n      // 结束之后，取消绑定的事件\n      if (_this.currentHandler) {\n        _this.currentHandler = undefined;\n      }\n      var containerDOM = _this.canvas.get('container');\n      if (containerDOM) {\n        containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n        containerDOM.removeEventListener('mouseup', _this.onMouseUp);\n        // 防止滑动到 canvas 外部之后，状态丢失\n        containerDOM.removeEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n        containerDOM.removeEventListener('touchend', _this.onMouseUp);\n        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n      }\n    };\n    var _a = cfg.x,\n      x = _a === void 0 ? 0 : _a,\n      _b = cfg.y,\n      y = _b === void 0 ? 0 : _b,\n      _c = cfg.width,\n      width = _c === void 0 ? 100 : _c,\n      height = cfg.height,\n      _d = cfg.padding,\n      padding = _d === void 0 ? 10 : _d,\n      trendCfg = cfg.trendCfg,\n      _e = cfg.controllerCfg,\n      controllerCfg = _e === void 0 ? {\n        speed: 1\n      } : _e,\n      _f = cfg.backgroundStyle,\n      backgroundStyle = _f === void 0 ? {} : _f,\n      _g = cfg.foregroundStyle,\n      foregroundStyle = _g === void 0 ? {} : _g,\n      _h = cfg.handlerStyle,\n      handlerStyle = _h === void 0 ? {} : _h,\n      _j = cfg.textStyle,\n      textStyle = _j === void 0 ? {} : _j,\n      // 缩略轴的初始位置\n      _k = cfg.start,\n      // 缩略轴的初始位置\n      start = _k === void 0 ? 0 : _k,\n      _l = cfg.end,\n      end = _l === void 0 ? 1 : _l,\n      _m = cfg.minText,\n      minText = _m === void 0 ? '' : _m,\n      _o = cfg.maxText,\n      maxText = _o === void 0 ? '' : _o,\n      group = cfg.group,\n      graph = cfg.graph,\n      canvas = cfg.canvas,\n      _p = cfg.tick,\n      tick = _p === void 0 ? {\n        tickLabelStyle: {},\n        tickLineStyle: {},\n        tickLabelFormatter: function tickLabelFormatter(d) {\n          return d;\n        },\n        ticks: []\n      } : _p,\n      type = cfg.type;\n    this.graph = graph;\n    this.canvas = canvas;\n    this.group = group;\n    this.timeBarType = type;\n    // position size\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n    this.ticks = tick.ticks;\n    this.trendCfg = trendCfg;\n    this.controllerCfg = controllerCfg;\n    this.currentSpeed = controllerCfg.speed || 1;\n    this.tickLabelFormatter = tick.tickLabelFormatter;\n    // style\n    if (type === 'trend') {\n      this.backgroundStyle = __assign(__assign({}, BACKGROUND_STYLE), backgroundStyle);\n    } else if (type === 'simple') {\n      this.backgroundStyle = __assign(__assign({}, SIMPLE_BACKGROUND_STYLE), backgroundStyle);\n    }\n    this.foregroundStyle = __assign(__assign({}, FOREGROUND_STYLE), foregroundStyle);\n    this.handlerStyle = __assign(__assign({}, HANDLER_STYLE), handlerStyle);\n    this.textStyle = __assign(__assign({}, TEXT_STYLE), textStyle);\n    this.tickLabelStyle = __assign(__assign({}, TICK_LABEL_STYLE), tick.tickLabelStyle);\n    this.tickLineStyle = __assign(__assign({}, TICK_LINE_STYLE), tick.tickLineStyle);\n    this.currentMode = controllerCfg.defaultTimeType || TIME_TYPE.RANGE;\n    // 初始信息\n    this.start = start;\n    this.end = end;\n    this.minText = minText;\n    this.maxText = maxText;\n    // 初始化 fontFamily，如果有浏览器，取 body 上的字体，防止文字更新时局部渲染造成的重影\n    this.fontFamily = typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif';\n    this.renderSlider();\n  }\n  /**\n   * 更新配置\n   * @param cfg\n   */\n  TrendTimeBar.prototype.update = function (cfg) {\n    var x = cfg.x,\n      y = cfg.y,\n      width = cfg.width,\n      height = cfg.height,\n      minText = cfg.minText,\n      maxText = cfg.maxText,\n      start = cfg.start,\n      end = cfg.end;\n    // start、end 只能是 0~1 范围\n    this.start = Math.min(1, Math.max(start, 0));\n    this.end = Math.min(1, Math.max(end, 0));\n    // 如果传了则更新，没有传则不更新\n    // @ts-ignore\n    assign(this, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      minText: minText,\n      maxText: maxText\n    });\n    // 更新 ui，不自动绘制\n    this.updateUI();\n  };\n  TrendTimeBar.prototype.setText = function (minText, maxText) {\n    this.minTextShape.attr('text', minText);\n    this.maxTextShape.attr('text', maxText);\n  };\n  /**\n   * 初始化组件结构\n   * @private\n   */\n  TrendTimeBar.prototype.renderSlider = function () {\n    var _this = this;\n    var _a = this,\n      width = _a.width,\n      height = _a.height,\n      timeBarType = _a.timeBarType;\n    // 趋势图数据\n    if (timeBarType === 'trend' && size(get(this.trendCfg, 'data'))) {\n      var trendComponent = new Trend(__assign(__assign({\n        x: this.x,\n        y: this.y,\n        width: width,\n        height: height\n      }, this.trendCfg), {\n        group: this.group\n      }));\n      this.trendComponent = trendComponent;\n    }\n    var sliderGroup = this.group.addGroup({\n      name: 'slider-group'\n    });\n    // 1. 背景\n    sliderGroup.addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, this.backgroundStyle),\n      name: 'background'\n    });\n    var textGroup = this.group.addGroup();\n    // 2. 左右文字\n    if (timeBarType === 'trend') {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: height / 2 + this.y,\n          textAlign: 'right',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'min-text-shape'\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: height / 2 + this.y,\n          textAlign: 'left',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'max-text-shape'\n      });\n    } else {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'min-text-shape'\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif',\n          stroke: '#fff',\n          lineWidth: 5\n        }, this.textStyle),\n        capture: false,\n        name: 'max-text-shape'\n      });\n    }\n    // 3. 前景 选中背景框\n    this.foregroundShape = this.group.addGroup().addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: this.y,\n        height: height\n      }, this.foregroundStyle),\n      name: 'foreground-shape'\n    });\n    this.foregroundShape.on('mousedown', function (e) {\n      e.target.attr('cursor', 'grabbing');\n    });\n    this.foregroundShape.on('mouseup', function (e) {\n      e.target.attr('cursor', _this.foregroundStyle.cursor || 'grab');\n    });\n    // 滑块相关的大小信息\n    var handlerWidth = get(this.handlerStyle, 'width', 2);\n    var handlerHeight = get(this.handlerStyle, 'height', 24);\n    var minHandleGroup = this.group.addGroup({\n      name: 'minHandlerShape'\n    });\n    // 4. 左右滑块\n    this.minHandlerShape = new Handler({\n      name: 'minHandlerShape',\n      group: minHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    });\n    var maxHandleGroup = this.group.addGroup({\n      name: 'maxHandlerShape'\n    });\n    this.maxHandlerShape = new Handler({\n      name: 'maxHandlerShape',\n      group: maxHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    });\n    // 缩略图下面的时间刻度\n    var tickData = this.ticks;\n    var interval = width / (tickData.length - 1);\n    this.tickPosList = [];\n    if (this.textList && this.textList.length) {\n      this.textList.forEach(function (text) {\n        text.destroy();\n      });\n    }\n    var lastX = -Infinity;\n    var rotate = this.tickLabelStyle.rotate;\n    delete this.tickLabelStyle.rotate;\n    this.textList = tickData.map(function (data, index) {\n      _this.tickPosList.push(_this.x + index * interval);\n      var label;\n      if (_this.tickLabelFormatter) {\n        label = _this.tickLabelFormatter(data);\n        if (!isString(label) && label) {\n          // return true\n          label = data.date;\n        }\n      } else {\n        label = data.date;\n      }\n      // 文本刻度\n      var textX = _this.x + index * interval,\n        textY = _this.y + height + 5;\n      var text = _this.group.addShape('text', {\n        attrs: __assign({\n          x: textX,\n          y: textY,\n          text: label,\n          fontFamily: _this.fontFamily || 'Arial, sans-serif'\n        }, _this.tickLabelStyle),\n        name: 'tick-label'\n      });\n      if (isNumber(rotate) && index !== tickData.length - 1) {\n        var matrix = transform([1, 0, 0, 0, 1, 0, 0, 0, 1], [['t', -textX, -textY], ['r', rotate], ['t', textX - 5, textY + 2]]);\n        text.attr({\n          textAlign: 'left',\n          matrix: matrix\n        });\n      }\n      if (index === 0) {\n        text.attr({\n          textAlign: 'left'\n        });\n      } else if (index !== tickData.length - 1) {\n        text.attr({\n          textAlign: 'right'\n        });\n      }\n      // 文本刻度上面的竖线\n      var line = _this.group.addShape('line', {\n        attrs: __assign({\n          x1: _this.x + index * interval,\n          y1: _this.y + height + 2,\n          x2: _this.x + index * interval,\n          y2: _this.y + height + 6\n        }, _this.tickLineStyle),\n        name: 'tick-line'\n      });\n      line.toBack();\n      var bbox = text.getBBox();\n      // 抽样，标签与标签间距不小于 10\n      if (bbox.minX > lastX) {\n        text.show();\n        line.show();\n        lastX = bbox.minX + bbox.width + 10;\n      } else {\n        text.hide();\n        line.hide();\n      }\n      return text;\n    });\n    // 渲染播放、快进和后退的控制按钮\n    this.controllerBtnGroup = new ControllerBtn(__assign({\n      group: this.group,\n      x: this.x,\n      y: this.y + height + 25,\n      width: width,\n      height: 35\n    }, this.controllerCfg));\n    // 初始化 minText 和 maxText，方便计算它们的 bbox\n    this.updateStartEnd(0);\n    // 根据 start end 更新 ui 的位置信息\n    this.updateUI();\n    // 移动到对应的位置\n    sliderGroup.move(this.x, this.y);\n    // 绑定事件鼠标事件\n    this.bindEvents();\n    if (this.currentMode === TIME_TYPE.SINGLE) {\n      this.minHandlerShape.hide();\n      this.foregroundShape.hide();\n      this.minTextShape.hide();\n    }\n  };\n  /**\n   * 绑定事件：\n   *  - 点击\n   *  - 滑动\n   *  - 拖拽\n   *  - 滚动\n   * @private\n   */\n  TrendTimeBar.prototype.bindEvents = function () {\n    var _this = this;\n    // 1. 左滑块的滑动\n    var minHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'minHandlerShape';\n    });\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.on('minHandlerShape-handler:mousedown', this.onMouseDown(this.minHandlerShape));\n      minHandleShapeGroup.on('minHandlerShape-handler:touchstart', this.onMouseDown(this.minHandlerShape));\n    }\n    var maxHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'maxHandlerShape';\n    });\n    // 2. 右滑块的滑动\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.on('maxHandlerShape-handler:mousedown', this.onMouseDown(this.maxHandlerShape));\n      maxHandleShapeGroup.on('maxHandlerShape-handler:touchstart', this.onMouseDown(this.maxHandlerShape));\n    }\n    // 3. 前景选中区域\n    this.foregroundShape.on('mousedown', this.onMouseDown(this.foregroundShape));\n    this.foregroundShape.on('touchstart', this.onMouseDown(this.foregroundShape));\n    // 播放区按钮控制\n    /** 播放/暂停事件 */\n    this.group.on(\"\".concat(PLAY_PAUSE_BTN, \":click\"), function () {\n      _this.isPlay = !_this.isPlay;\n      _this.currentHandler = _this.maxHandlerShape;\n      _this.changePlayStatus();\n    });\n    // 处理前进一步的事件\n    this.group.on(\"\".concat(NEXT_STEP_BTN, \":click\"), function () {\n      _this.currentHandler = _this.maxHandlerShape;\n      _this.updateStartEnd(0.01);\n      _this.updateUI();\n    });\n    // 处理后退一步的事件\n    this.group.on(\"\".concat(PRE_STEP_BTN, \":click\"), function () {\n      _this.currentHandler = _this.maxHandlerShape;\n      _this.updateStartEnd(-0.01);\n      _this.updateUI();\n    });\n    this.group.on(TIMEBAR_CONFIG_CHANGE, function (_a) {\n      var type = _a.type,\n        speed = _a.speed;\n      _this.currentSpeed = speed;\n      _this.currentMode = type;\n      if (type === TIME_TYPE.SINGLE) {\n        _this.minHandlerShape.hide();\n        _this.foregroundShape.hide();\n        _this.minTextShape.hide();\n      } else if (type === TIME_TYPE.RANGE) {\n        _this.minHandlerShape.show();\n        _this.foregroundShape.show();\n        _this.minTextShape.show();\n      }\n    });\n  };\n  /** 输入当前圆点位置，输出离哪个 tick 的位置最近 */\n  TrendTimeBar.prototype.adjustTickIndex = function (timeSelectX) {\n    for (var i = 0; i < this.tickPosList.length - 1; i++) {\n      if (this.tickPosList[i] <= timeSelectX && timeSelectX <= this.tickPosList[i + 1]) {\n        return Math.abs(this.tickPosList[i] - timeSelectX) < Math.abs(timeSelectX - this.tickPosList[i + 1]) ? i : i + 1;\n      }\n    }\n    return 0;\n  };\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n  TrendTimeBar.prototype.adjustOffsetRange = function (offsetRange) {\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.start;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case this.maxHandlerShape:\n        {\n          var min = 0 - this.end;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case this.foregroundShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      default:\n        return 0;\n    }\n  };\n  /**\n   * 更新起始、结束的控制块位置、文本、范围值（原始值）\n   * @param offsetRange\n   */\n  TrendTimeBar.prototype.updateStartEnd = function (offsetRange) {\n    var minData = this.ticks[this.adjustTickIndex(this.start * this.width)];\n    var maxData = this.ticks[this.adjustTickIndex(this.end * this.width)];\n    if (!this.currentHandler) {\n      this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData === null || minData === void 0 ? void 0 : minData.date;\n      this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData === null || maxData === void 0 ? void 0 : maxData.date;\n      return;\n    }\n    // 操作不同的组件，反馈不一样\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        // 拖动最小滑块时使用当前最大值设置最大值的文本，以便恢复到默认值\n        this.maxText = this.maxTextShape.attr('text');\n        this.start += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        break;\n      case this.maxHandlerShape:\n        // 拖动最大滑块时使用当前最小值设置最小值的文本，以便恢复到默认值\n        this.minText = this.minTextShape.attr('text');\n        this.end += offsetRange;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n      case this.foregroundShape:\n        this.start += offsetRange;\n        this.end += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n      default:\n        break;\n    }\n  };\n  /**\n   * 根据移动的比例来更新 ui，更新范围（0-1 范围的比例值）\n   * @private\n   */\n  TrendTimeBar.prototype.updateUI = function () {\n    var _this = this;\n    if (this.start < 0) {\n      this.start = 0;\n    }\n    if (this.start > 1) {\n      this.start = 1;\n    }\n    if (this.end > 1) {\n      this.end = 1;\n    }\n    if (this.end < 0) {\n      this.end = 0;\n    }\n    var min = this.x + this.start * this.width;\n    var max = this.x + this.end * this.width;\n    // 1. foreground\n    this.foregroundShape.attr('x', min);\n    this.foregroundShape.attr('width', max - min);\n    // 滑块相关的大小信息\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    // 设置文本\n    this.setText(this.minText, this.maxText);\n    var _a = this.dodgeText([min, max]),\n      minAttrs = _a[0],\n      maxAttrs = _a[1];\n    // 2. 左侧滑块和文字位置\n    this.minHandlerShape.setX(min - handlerWidth / 2);\n    each(minAttrs, function (v, k) {\n      return _this.minTextShape.attr(k, v);\n    });\n    // 3. 右侧滑块和文字位置\n    this.maxHandlerShape.setX(max - handlerWidth / 2);\n    each(maxAttrs, function (v, k) {\n      return _this.maxTextShape.attr(k, v);\n    });\n    if (this.currentMode === TIME_TYPE.RANGE) {\n      // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.start, this.end].sort()\n      });\n    } else if (this.currentMode === TIME_TYPE.SINGLE) {\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.end, this.end]\n      });\n    }\n  };\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n  TrendTimeBar.prototype.dodgeText = function (range) {\n    var _a, _b;\n    var TEXTPADDING = 2;\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var minTextShape = this.minTextShape;\n    var maxTextShape = this.maxTextShape;\n    var min = range[0],\n      max = range[1];\n    var sorted = false;\n    // 如果交换了位置，则对应的 min max 也交换\n    if (min > max) {\n      _a = [max, min], min = _a[0], max = _a[1];\n      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n      sorted = true;\n    }\n    // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n    var minBBox = minTextShape.getBBox();\n    var maxBBox = maxTextShape.getBBox();\n    var minAttrs = null;\n    var maxAttrs = null;\n    if (this.timeBarType === 'trend') {\n      minAttrs = min - minBBox.width < this.x + TEXTPADDING ? {\n        x: min + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      } : {\n        x: min - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      };\n      maxAttrs = max + maxBBox.width > this.x + this.width ? {\n        x: max - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      } : {\n        x: max + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      };\n    } else if (this.timeBarType === 'simple') {\n      minAttrs = minTextShape.attr('x') > minBBox.width // 左边滑块文本位置小于其宽度代表文字超过左边届\n      ? {\n        x: min,\n        textAlign: 'center'\n      } : {\n        x: min,\n        textAlign: 'left'\n      };\n      maxAttrs = maxTextShape.attr('x') > this.width - maxBBox.width // 有边滑块文本位置大于宽度代表文字超过右边界\n      ? {\n        x: max,\n        textAlign: 'right'\n      } : {\n        x: max,\n        textAlign: 'center'\n      };\n    }\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  };\n  TrendTimeBar.prototype.startPlay = function () {\n    var _this = this;\n    return typeof window !== 'undefined' ? window.requestAnimationFrame(function () {\n      var _a = _this,\n        ticks = _a.ticks,\n        width = _a.width;\n      var speed = _this.currentSpeed;\n      var tickInterval = width / ticks.length;\n      var offsetX = tickInterval / ((10 - speed) * 1000 / 60);\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width);\n      _this.updateStartEnd(offsetXRange);\n      _this.updateUI();\n      if (_this.isPlay) {\n        _this.playHandler = _this.startPlay();\n      }\n    }) : undefined;\n  };\n  TrendTimeBar.prototype.changePlayStatus = function (isSync) {\n    if (isSync === void 0) {\n      isSync = true;\n    }\n    this.controllerBtnGroup.playButton.update({\n      isPlay: this.isPlay\n    });\n    if (this.isPlay) {\n      // 开始播放\n      this.playHandler = this.startPlay();\n      this.graph.emit(TIMELINE_START, null);\n    } else {\n      // 结束播放\n      if (this.playHandler) {\n        if (typeof window !== 'undefined') window.cancelAnimationFrame(this.playHandler);\n        if (isSync) {\n          this.graph.emit(TIMELINE_END, null);\n        }\n      }\n    }\n  };\n  TrendTimeBar.prototype.destory = function () {\n    this.graph.off(VALUE_CHANGE, function () {});\n    var group = this.group;\n    var minHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'minHandlerShape';\n    });\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.off('minHandlerShape-handler:mousedown');\n      minHandleShapeGroup.off('minHandlerShape-handler:touchstart');\n      minHandleShapeGroup.destroy();\n    }\n    var maxHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'maxHandlerShape';\n    });\n    // 2. 右滑块的滑动\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.off('maxHandlerShape-handler:mousedown');\n      maxHandleShapeGroup.off('maxHandlerShape-handler:touchstart');\n      maxHandleShapeGroup.destroy();\n    }\n    // 3. 前景选中区域\n    this.foregroundShape.off('mousedown');\n    this.foregroundShape.off('touchstart');\n    this.foregroundShape.destroy();\n    group.off(\"\".concat(PLAY_PAUSE_BTN, \":click\"));\n    group.off(\"\".concat(NEXT_STEP_BTN, \":click\"));\n    group.off(\"\".concat(PRE_STEP_BTN, \":click\"));\n    group.off(TIMEBAR_CONFIG_CHANGE);\n    group.destroy();\n    if (this.trendComponent) {\n      this.trendComponent.destory();\n    }\n  };\n  return TrendTimeBar;\n}();\nexport default TrendTimeBar;"],"mappings":";AAAA,IAAIA,QAAQ,GAAG,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAI,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,CAAC,EAAE;IACvC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACnDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAC9E;IACA,OAAON,CAAC;EACV,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AACxC,CAAC;AACD,SAASO,GAAG,EAAEC,IAAI,EAAEb,MAAM,EAAEc,IAAI,EAAEC,QAAQ,QAAQ,YAAY;AAC9D,SAASC,GAAG,QAAQ,mBAAmB;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,aAAa,IAAIC,SAAS,QAAQ,iBAAiB;AAC1D,SAASC,YAAY,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,aAAa,EAAEC,YAAY,EAAEC,YAAY,QAAQ,YAAY;AAC3I,IAAIC,SAAS,GAAGb,GAAG,CAACa,SAAS;AAC7B;AACA;AACA;AACA,OAAO,IAAIC,gBAAgB,GAAG;EAC5BC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE;AACX,CAAC;AACD,IAAIC,uBAAuB,GAAG;EAC5BF,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,IAAI;EACbE,MAAM,EAAE;AACV,CAAC;AACD,OAAO,IAAIC,gBAAgB,GAAG;EAC5BJ,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,GAAG;EACZI,MAAM,EAAE;AACV,CAAC;AACD,OAAO,IAAIC,qBAAqB,GAAG,CAAC;AACpC,OAAO,IAAIC,aAAa,GAAG;EACzBC,KAAK,EAAEF,qBAAqB;EAC5BG,MAAM,EAAE;AACV,CAAC;AACD,OAAO,IAAIC,UAAU,GAAG;EACtBC,YAAY,EAAE,QAAQ;EACtBX,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE;AACX,CAAC;AACD,OAAO,IAAIW,gBAAgB,GAAG;EAC5BC,SAAS,EAAE,QAAQ;EACnBF,YAAY,EAAE,KAAK;EACnBX,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE;AACX,CAAC;AACD,OAAO,IAAIa,eAAe,GAAG;EAC3BC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE;AACV,CAAC;AACD,IAAIC,YAAY,GAAG,aAAa,YAAY;EAC1C,SAASA,YAAYA,CAACC,GAAG,EAAE;IACzB,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,WAAW,GAAG,UAAUC,OAAO,EAAE;MACpC,OAAO,UAAUC,CAAC,EAAE;QAClB;QACAJ,KAAK,CAACK,cAAc,GAAGF,OAAO;QAC9B,IAAIG,KAAK,GAAGF,CAAC,CAACG,aAAa;QAC3B;QACAD,KAAK,CAACE,eAAe,CAAC,CAAC;QACvBF,KAAK,CAACG,cAAc,CAAC,CAAC;QACtB;QACAT,KAAK,CAACC,KAAK,GAAGvC,GAAG,CAAC4C,KAAK,EAAE,iBAAiB,EAAEA,KAAK,CAACI,KAAK,CAAC;QACxD;QACA,IAAIC,YAAY,GAAGX,KAAK,CAACY,MAAM,CAAClD,GAAG,CAAC,WAAW,CAAC;QAChDiD,YAAY,CAACE,gBAAgB,CAAC,WAAW,EAAEb,KAAK,CAACc,WAAW,CAAC;QAC7DH,YAAY,CAACE,gBAAgB,CAAC,SAAS,EAAEb,KAAK,CAACe,SAAS,CAAC;QACzDJ,YAAY,CAACE,gBAAgB,CAAC,YAAY,EAAEb,KAAK,CAACe,SAAS,CAAC;QAC5D;QACAJ,YAAY,CAACE,gBAAgB,CAAC,WAAW,EAAEb,KAAK,CAACc,WAAW,CAAC;QAC7DH,YAAY,CAACE,gBAAgB,CAAC,UAAU,EAAEb,KAAK,CAACe,SAAS,CAAC;QAC1DJ,YAAY,CAACE,gBAAgB,CAAC,aAAa,EAAEb,KAAK,CAACe,SAAS,CAAC;MAC/D,CAAC;IACH,CAAC;IACD,IAAI,CAACD,WAAW,GAAG,UAAUV,CAAC,EAAE;MAC9B;MACAA,CAAC,CAACI,eAAe,CAAC,CAAC;MACnBJ,CAAC,CAACK,cAAc,CAAC,CAAC;MAClB,IAAIO,CAAC,GAAGtD,GAAG,CAAC0C,CAAC,EAAE,iBAAiB,EAAEA,CAAC,CAACM,KAAK,CAAC;MAC1C;MACA,IAAIO,OAAO,GAAGD,CAAC,GAAGhB,KAAK,CAACC,KAAK;MAC7B,IAAIiB,YAAY,GAAGlB,KAAK,CAACmB,iBAAiB,CAACF,OAAO,GAAGjB,KAAK,CAACX,KAAK,CAAC;MACjE;MACAW,KAAK,CAACoB,cAAc,CAACF,YAAY,CAAC;MAClC;MACAlB,KAAK,CAACqB,QAAQ,CAAC,CAAC;MAChBrB,KAAK,CAACC,KAAK,GAAGe,CAAC;IACjB,CAAC;IACD,IAAI,CAACD,SAAS,GAAG,YAAY;MAC3B;MACA,IAAIf,KAAK,CAACK,cAAc,EAAE;QACxBL,KAAK,CAACK,cAAc,GAAGiB,SAAS;MAClC;MACA,IAAIX,YAAY,GAAGX,KAAK,CAACY,MAAM,CAAClD,GAAG,CAAC,WAAW,CAAC;MAChD,IAAIiD,YAAY,EAAE;QAChBA,YAAY,CAACY,mBAAmB,CAAC,WAAW,EAAEvB,KAAK,CAACc,WAAW,CAAC;QAChEH,YAAY,CAACY,mBAAmB,CAAC,SAAS,EAAEvB,KAAK,CAACe,SAAS,CAAC;QAC5D;QACAJ,YAAY,CAACY,mBAAmB,CAAC,YAAY,EAAEvB,KAAK,CAACe,SAAS,CAAC;QAC/D;QACAJ,YAAY,CAACY,mBAAmB,CAAC,WAAW,EAAEvB,KAAK,CAACc,WAAW,CAAC;QAChEH,YAAY,CAACY,mBAAmB,CAAC,UAAU,EAAEvB,KAAK,CAACe,SAAS,CAAC;QAC7DJ,YAAY,CAACY,mBAAmB,CAAC,aAAa,EAAEvB,KAAK,CAACe,SAAS,CAAC;MAClE;IACF,CAAC;IACD,IAAIS,EAAE,GAAGzB,GAAG,CAACiB,CAAC;MACZA,CAAC,GAAGQ,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;MAC1BC,EAAE,GAAG1B,GAAG,CAAC2B,CAAC;MACVA,CAAC,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;MAC1BE,EAAE,GAAG5B,GAAG,CAACV,KAAK;MACdA,KAAK,GAAGsC,EAAE,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGA,EAAE;MAChCrC,MAAM,GAAGS,GAAG,CAACT,MAAM;MACnBsC,EAAE,GAAG7B,GAAG,CAAC8B,OAAO;MAChBA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;MACjCE,QAAQ,GAAG/B,GAAG,CAAC+B,QAAQ;MACvBC,EAAE,GAAGhC,GAAG,CAACiC,aAAa;MACtBA,aAAa,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG;QAC9BE,KAAK,EAAE;MACT,CAAC,GAAGF,EAAE;MACNG,EAAE,GAAGnC,GAAG,CAACoC,eAAe;MACxBA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MACzCE,EAAE,GAAGrC,GAAG,CAACsC,eAAe;MACxBA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MACzCE,EAAE,GAAGvC,GAAG,CAACwC,YAAY;MACrBA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MACtCE,EAAE,GAAGzC,GAAG,CAAC0C,SAAS;MAClBA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MACnC;MACAE,EAAE,GAAG3C,GAAG,CAAC4C,KAAK;MACd;MACAA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;MAC9BE,EAAE,GAAG7C,GAAG,CAAC8C,GAAG;MACZA,GAAG,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;MAC5BE,EAAE,GAAG/C,GAAG,CAACgD,OAAO;MAChBA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;MACjCE,EAAE,GAAGjD,GAAG,CAACkD,OAAO;MAChBA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;MACjCE,KAAK,GAAGnD,GAAG,CAACmD,KAAK;MACjBC,KAAK,GAAGpD,GAAG,CAACoD,KAAK;MACjBvC,MAAM,GAAGb,GAAG,CAACa,MAAM;MACnBwC,EAAE,GAAGrD,GAAG,CAACsD,IAAI;MACbA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG;QACrBE,cAAc,EAAE,CAAC,CAAC;QAClBC,aAAa,EAAE,CAAC,CAAC;QACjBC,kBAAkB,EAAE,SAASA,kBAAkBA,CAACC,CAAC,EAAE;UACjD,OAAOA,CAAC;QACV,CAAC;QACDC,KAAK,EAAE;MACT,CAAC,GAAGN,EAAE;MACNO,IAAI,GAAG5D,GAAG,CAAC4D,IAAI;IACjB,IAAI,CAACR,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACvC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACsC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACU,WAAW,GAAGD,IAAI;IACvB;IACA,IAAI,CAAC3C,CAAC,GAAGA,CAAC;IACV,IAAI,CAACU,CAAC,GAAGA,CAAC;IACV,IAAI,CAACrC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACuC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC6B,KAAK,GAAGL,IAAI,CAACK,KAAK;IACvB,IAAI,CAAC5B,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAC6B,YAAY,GAAG7B,aAAa,CAACC,KAAK,IAAI,CAAC;IAC5C,IAAI,CAACuB,kBAAkB,GAAGH,IAAI,CAACG,kBAAkB;IACjD;IACA,IAAIG,IAAI,KAAK,OAAO,EAAE;MACpB,IAAI,CAACxB,eAAe,GAAGvF,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEgC,gBAAgB,CAAC,EAAEuD,eAAe,CAAC;IAClF,CAAC,MAAM,IAAIwB,IAAI,KAAK,QAAQ,EAAE;MAC5B,IAAI,CAACxB,eAAe,GAAGvF,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEmC,uBAAuB,CAAC,EAAEoD,eAAe,CAAC;IACzF;IACA,IAAI,CAACE,eAAe,GAAGzF,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEqC,gBAAgB,CAAC,EAAEoD,eAAe,CAAC;IAChF,IAAI,CAACE,YAAY,GAAG3F,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEwC,aAAa,CAAC,EAAEmD,YAAY,CAAC;IACvE,IAAI,CAACE,SAAS,GAAG7F,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2C,UAAU,CAAC,EAAEkD,SAAS,CAAC;IAC9D,IAAI,CAACa,cAAc,GAAG1G,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6C,gBAAgB,CAAC,EAAE4D,IAAI,CAACC,cAAc,CAAC;IACnF,IAAI,CAACC,aAAa,GAAG3G,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+C,eAAe,CAAC,EAAE0D,IAAI,CAACE,aAAa,CAAC;IAChF,IAAI,CAACO,WAAW,GAAG9B,aAAa,CAAC+B,eAAe,IAAI5F,SAAS,CAAC6F,KAAK;IACnE;IACA,IAAI,CAACrB,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,GAAG,GAAGA,GAAG;IACd,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB;IACA,IAAI,CAACgB,UAAU,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,gBAAgB,CAACC,QAAQ,CAACC,IAAI,EAAE,IAAI,CAAC,CAACC,gBAAgB,CAAC,aAAa,CAAC,IAAI,mBAAmB,GAAG,mBAAmB;IAC3K,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB;EACA;AACF;AACA;AACA;EACEzE,YAAY,CAACxC,SAAS,CAACkH,MAAM,GAAG,UAAUzE,GAAG,EAAE;IAC7C,IAAIiB,CAAC,GAAGjB,GAAG,CAACiB,CAAC;MACXU,CAAC,GAAG3B,GAAG,CAAC2B,CAAC;MACTrC,KAAK,GAAGU,GAAG,CAACV,KAAK;MACjBC,MAAM,GAAGS,GAAG,CAACT,MAAM;MACnByD,OAAO,GAAGhD,GAAG,CAACgD,OAAO;MACrBE,OAAO,GAAGlD,GAAG,CAACkD,OAAO;MACrBN,KAAK,GAAG5C,GAAG,CAAC4C,KAAK;MACjBE,GAAG,GAAG9C,GAAG,CAAC8C,GAAG;IACf;IACA,IAAI,CAACF,KAAK,GAAG8B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAChC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC5C,IAAI,CAACE,GAAG,GAAG4B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC9B,GAAG,EAAE,CAAC,CAAC,CAAC;IACxC;IACA;IACA/F,MAAM,CAAC,IAAI,EAAE;MACXkE,CAAC,EAAEA,CAAC;MACJU,CAAC,EAAEA,CAAC;MACJrC,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdyD,OAAO,EAAEA,OAAO;MAChBE,OAAO,EAAEA;IACX,CAAC,CAAC;IACF;IACA,IAAI,CAAC5B,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDvB,YAAY,CAACxC,SAAS,CAACsH,OAAO,GAAG,UAAU7B,OAAO,EAAEE,OAAO,EAAE;IAC3D,IAAI,CAAC4B,YAAY,CAACC,IAAI,CAAC,MAAM,EAAE/B,OAAO,CAAC;IACvC,IAAI,CAACgC,YAAY,CAACD,IAAI,CAAC,MAAM,EAAE7B,OAAO,CAAC;EACzC,CAAC;EACD;AACF;AACA;AACA;EACEnD,YAAY,CAACxC,SAAS,CAACiH,YAAY,GAAG,YAAY;IAChD,IAAIvE,KAAK,GAAG,IAAI;IAChB,IAAIwB,EAAE,GAAG,IAAI;MACXnC,KAAK,GAAGmC,EAAE,CAACnC,KAAK;MAChBC,MAAM,GAAGkC,EAAE,CAAClC,MAAM;MAClBsE,WAAW,GAAGpC,EAAE,CAACoC,WAAW;IAC9B;IACA,IAAIA,WAAW,KAAK,OAAO,IAAIjG,IAAI,CAACD,GAAG,CAAC,IAAI,CAACoE,QAAQ,EAAE,MAAM,CAAC,CAAC,EAAE;MAC/D,IAAIkD,cAAc,GAAG,IAAIjH,KAAK,CAACnB,QAAQ,CAACA,QAAQ,CAAC;QAC/CoE,CAAC,EAAE,IAAI,CAACA,CAAC;QACTU,CAAC,EAAE,IAAI,CAACA,CAAC;QACTrC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,EAAE,IAAI,CAACwC,QAAQ,CAAC,EAAE;QACjBoB,KAAK,EAAE,IAAI,CAACA;MACd,CAAC,CAAC,CAAC;MACH,IAAI,CAAC8B,cAAc,GAAGA,cAAc;IACtC;IACA,IAAIC,WAAW,GAAG,IAAI,CAAC/B,KAAK,CAACgC,QAAQ,CAAC;MACpCC,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACAF,WAAW,CAACG,QAAQ,CAAC,MAAM,EAAE;MAC3BC,KAAK,EAAEzI,QAAQ,CAAC;QACdoE,CAAC,EAAE,CAAC;QACJU,CAAC,EAAE,CAAC;QACJrC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,EAAE,IAAI,CAAC6C,eAAe,CAAC;MACxBgD,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAIG,SAAS,GAAG,IAAI,CAACpC,KAAK,CAACgC,QAAQ,CAAC,CAAC;IACrC;IACA,IAAItB,WAAW,KAAK,OAAO,EAAE;MAC3B,IAAI,CAACiB,YAAY,GAAGS,SAAS,CAACF,QAAQ,CAAC,MAAM,EAAE;QAC7CC,KAAK,EAAEzI,QAAQ,CAAC;UACdoE,CAAC,EAAE,CAAC;UACJU,CAAC,EAAEpC,MAAM,GAAG,CAAC,GAAG,IAAI,CAACoC,CAAC;UACtBhC,SAAS,EAAE,OAAO;UAClB6F,IAAI,EAAE,IAAI,CAACxC,OAAO;UAClByC,MAAM,EAAE,KAAK;UACbvB,UAAU,EAAE,IAAI,CAACA,UAAU,IAAI,mBAAmB;UAClDpE,MAAM,EAAE,MAAM;UACdD,SAAS,EAAE;QACb,CAAC,EAAE,IAAI,CAAC6C,SAAS,CAAC;QAClBgD,OAAO,EAAE,KAAK;QACdN,IAAI,EAAE;MACR,CAAC,CAAC;MACF,IAAI,CAACJ,YAAY,GAAGO,SAAS,CAACF,QAAQ,CAAC,MAAM,EAAE;QAC7CC,KAAK,EAAEzI,QAAQ,CAAC;UACd8E,CAAC,EAAEpC,MAAM,GAAG,CAAC,GAAG,IAAI,CAACoC,CAAC;UACtBhC,SAAS,EAAE,MAAM;UACjB6F,IAAI,EAAE,IAAI,CAACtC,OAAO;UAClBuC,MAAM,EAAE,KAAK;UACbvB,UAAU,EAAE,IAAI,CAACA,UAAU,IAAI,mBAAmB;UAClDpE,MAAM,EAAE,MAAM;UACdD,SAAS,EAAE;QACb,CAAC,EAAE,IAAI,CAAC6C,SAAS,CAAC;QAClBgD,OAAO,EAAE,KAAK;QACdN,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACN,YAAY,GAAGS,SAAS,CAACF,QAAQ,CAAC,MAAM,EAAE;QAC7CC,KAAK,EAAEzI,QAAQ,CAAC;UACdoE,CAAC,EAAE,CAAC;UACJU,CAAC,EAAE,IAAI,CAACA,CAAC,GAAG,EAAE;UACdhC,SAAS,EAAE,QAAQ;UACnB6F,IAAI,EAAE,IAAI,CAACxC,OAAO;UAClByC,MAAM,EAAE,KAAK;UACbvB,UAAU,EAAE,IAAI,CAACA,UAAU,IAAI,mBAAmB;UAClDpE,MAAM,EAAE,MAAM;UACdD,SAAS,EAAE;QACb,CAAC,EAAE,IAAI,CAAC6C,SAAS,CAAC;QAClBgD,OAAO,EAAE,KAAK;QACdN,IAAI,EAAE;MACR,CAAC,CAAC;MACF,IAAI,CAACJ,YAAY,GAAGO,SAAS,CAACF,QAAQ,CAAC,MAAM,EAAE;QAC7CC,KAAK,EAAEzI,QAAQ,CAAC;UACd8E,CAAC,EAAE,IAAI,CAACA,CAAC,GAAG,EAAE;UACdhC,SAAS,EAAE,QAAQ;UACnB6F,IAAI,EAAE,IAAI,CAACtC,OAAO;UAClBuC,MAAM,EAAE,KAAK;UACbvB,UAAU,EAAE,IAAI,CAACA,UAAU,IAAI,mBAAmB;UAClDpE,MAAM,EAAE,MAAM;UACdD,SAAS,EAAE;QACb,CAAC,EAAE,IAAI,CAAC6C,SAAS,CAAC;QAClBgD,OAAO,EAAE,KAAK;QACdN,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IACA;IACA,IAAI,CAACO,eAAe,GAAG,IAAI,CAACxC,KAAK,CAACgC,QAAQ,CAAC,CAAC,CAACE,QAAQ,CAAC,MAAM,EAAE;MAC5DC,KAAK,EAAEzI,QAAQ,CAAC;QACdoE,CAAC,EAAE,CAAC;QACJU,CAAC,EAAE,IAAI,CAACA,CAAC;QACTpC,MAAM,EAAEA;MACV,CAAC,EAAE,IAAI,CAAC+C,eAAe,CAAC;MACxB8C,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAI,CAACO,eAAe,CAACC,EAAE,CAAC,WAAW,EAAE,UAAUvF,CAAC,EAAE;MAChDA,CAAC,CAACwF,MAAM,CAACd,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC;IACrC,CAAC,CAAC;IACF,IAAI,CAACY,eAAe,CAACC,EAAE,CAAC,SAAS,EAAE,UAAUvF,CAAC,EAAE;MAC9CA,CAAC,CAACwF,MAAM,CAACd,IAAI,CAAC,QAAQ,EAAE9E,KAAK,CAACqC,eAAe,CAACnD,MAAM,IAAI,MAAM,CAAC;IACjE,CAAC,CAAC;IACF;IACA,IAAI2G,YAAY,GAAGnI,GAAG,CAAC,IAAI,CAAC6E,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;IACrD,IAAIuD,aAAa,GAAGpI,GAAG,CAAC,IAAI,CAAC6E,YAAY,EAAE,QAAQ,EAAE,EAAE,CAAC;IACxD,IAAIwD,cAAc,GAAG,IAAI,CAAC7C,KAAK,CAACgC,QAAQ,CAAC;MACvCC,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACA,IAAI,CAACa,eAAe,GAAG,IAAIhI,OAAO,CAAC;MACjCmH,IAAI,EAAE,iBAAiB;MACvBjC,KAAK,EAAE6C,cAAc;MACrBpC,IAAI,EAAEC,WAAW;MACjB5C,CAAC,EAAE,IAAI,CAACA,CAAC;MACTU,CAAC,EAAE,IAAI,CAACA,CAAC;MACTrC,KAAK,EAAEwG,YAAY;MACnBvG,MAAM,EAAEwG,aAAa;MACrBG,KAAK,EAAE,IAAI,CAAC1D;IACd,CAAC,CAAC;IACF,IAAI2D,cAAc,GAAG,IAAI,CAAChD,KAAK,CAACgC,QAAQ,CAAC;MACvCC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAI,CAACgB,eAAe,GAAG,IAAInI,OAAO,CAAC;MACjCmH,IAAI,EAAE,iBAAiB;MACvBjC,KAAK,EAAEgD,cAAc;MACrBvC,IAAI,EAAEC,WAAW;MACjB5C,CAAC,EAAE,IAAI,CAACA,CAAC;MACTU,CAAC,EAAE,IAAI,CAACA,CAAC;MACTrC,KAAK,EAAEwG,YAAY;MACnBvG,MAAM,EAAEwG,aAAa;MACrBG,KAAK,EAAE,IAAI,CAAC1D;IACd,CAAC,CAAC;IACF;IACA,IAAI6D,QAAQ,GAAG,IAAI,CAAC1C,KAAK;IACzB,IAAI2C,QAAQ,GAAGhH,KAAK,IAAI+G,QAAQ,CAAChJ,MAAM,GAAG,CAAC,CAAC;IAC5C,IAAI,CAACkJ,WAAW,GAAG,EAAE;IACrB,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACnJ,MAAM,EAAE;MACzC,IAAI,CAACmJ,QAAQ,CAACC,OAAO,CAAC,UAAUjB,IAAI,EAAE;QACpCA,IAAI,CAACkB,OAAO,CAAC,CAAC;MAChB,CAAC,CAAC;IACJ;IACA,IAAIC,KAAK,GAAG,CAACC,QAAQ;IACrB,IAAIC,MAAM,GAAG,IAAI,CAACtD,cAAc,CAACsD,MAAM;IACvC,OAAO,IAAI,CAACtD,cAAc,CAACsD,MAAM;IACjC,IAAI,CAACL,QAAQ,GAAGH,QAAQ,CAACS,GAAG,CAAC,UAAUC,IAAI,EAAEC,KAAK,EAAE;MAClD/G,KAAK,CAACsG,WAAW,CAACU,IAAI,CAAChH,KAAK,CAACgB,CAAC,GAAG+F,KAAK,GAAGV,QAAQ,CAAC;MAClD,IAAIY,KAAK;MACT,IAAIjH,KAAK,CAACwD,kBAAkB,EAAE;QAC5ByD,KAAK,GAAGjH,KAAK,CAACwD,kBAAkB,CAACsD,IAAI,CAAC;QACtC,IAAI,CAAC7I,QAAQ,CAACgJ,KAAK,CAAC,IAAIA,KAAK,EAAE;UAC7B;UACAA,KAAK,GAAGH,IAAI,CAACI,IAAI;QACnB;MACF,CAAC,MAAM;QACLD,KAAK,GAAGH,IAAI,CAACI,IAAI;MACnB;MACA;MACA,IAAIC,KAAK,GAAGnH,KAAK,CAACgB,CAAC,GAAG+F,KAAK,GAAGV,QAAQ;QACpCe,KAAK,GAAGpH,KAAK,CAAC0B,CAAC,GAAGpC,MAAM,GAAG,CAAC;MAC9B,IAAIiG,IAAI,GAAGvF,KAAK,CAACkD,KAAK,CAACkC,QAAQ,CAAC,MAAM,EAAE;QACtCC,KAAK,EAAEzI,QAAQ,CAAC;UACdoE,CAAC,EAAEmG,KAAK;UACRzF,CAAC,EAAE0F,KAAK;UACR7B,IAAI,EAAE0B,KAAK;UACXhD,UAAU,EAAEjE,KAAK,CAACiE,UAAU,IAAI;QAClC,CAAC,EAAEjE,KAAK,CAACsD,cAAc,CAAC;QACxB6B,IAAI,EAAE;MACR,CAAC,CAAC;MACF,IAAItH,QAAQ,CAAC+I,MAAM,CAAC,IAAIG,KAAK,KAAKX,QAAQ,CAAChJ,MAAM,GAAG,CAAC,EAAE;QACrD,IAAIiK,MAAM,GAAG1I,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAACwI,KAAK,EAAE,CAACC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAER,MAAM,CAAC,EAAE,CAAC,GAAG,EAAEO,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACxH7B,IAAI,CAACT,IAAI,CAAC;UACRpF,SAAS,EAAE,MAAM;UACjB2H,MAAM,EAAEA;QACV,CAAC,CAAC;MACJ;MACA,IAAIN,KAAK,KAAK,CAAC,EAAE;QACfxB,IAAI,CAACT,IAAI,CAAC;UACRpF,SAAS,EAAE;QACb,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIqH,KAAK,KAAKX,QAAQ,CAAChJ,MAAM,GAAG,CAAC,EAAE;QACxCmI,IAAI,CAACT,IAAI,CAAC;UACRpF,SAAS,EAAE;QACb,CAAC,CAAC;MACJ;MACA;MACA,IAAI4H,IAAI,GAAGtH,KAAK,CAACkD,KAAK,CAACkC,QAAQ,CAAC,MAAM,EAAE;QACtCC,KAAK,EAAEzI,QAAQ,CAAC;UACd2K,EAAE,EAAEvH,KAAK,CAACgB,CAAC,GAAG+F,KAAK,GAAGV,QAAQ;UAC9BmB,EAAE,EAAExH,KAAK,CAAC0B,CAAC,GAAGpC,MAAM,GAAG,CAAC;UACxBmI,EAAE,EAAEzH,KAAK,CAACgB,CAAC,GAAG+F,KAAK,GAAGV,QAAQ;UAC9BqB,EAAE,EAAE1H,KAAK,CAAC0B,CAAC,GAAGpC,MAAM,GAAG;QACzB,CAAC,EAAEU,KAAK,CAACuD,aAAa,CAAC;QACvB4B,IAAI,EAAE;MACR,CAAC,CAAC;MACFmC,IAAI,CAACK,MAAM,CAAC,CAAC;MACb,IAAIC,IAAI,GAAGrC,IAAI,CAACsC,OAAO,CAAC,CAAC;MACzB;MACA,IAAID,IAAI,CAACE,IAAI,GAAGpB,KAAK,EAAE;QACrBnB,IAAI,CAACwC,IAAI,CAAC,CAAC;QACXT,IAAI,CAACS,IAAI,CAAC,CAAC;QACXrB,KAAK,GAAGkB,IAAI,CAACE,IAAI,GAAGF,IAAI,CAACvI,KAAK,GAAG,EAAE;MACrC,CAAC,MAAM;QACLkG,IAAI,CAACyC,IAAI,CAAC,CAAC;QACXV,IAAI,CAACU,IAAI,CAAC,CAAC;MACb;MACA,OAAOzC,IAAI;IACb,CAAC,CAAC;IACF;IACA,IAAI,CAAC0C,kBAAkB,GAAG,IAAI/J,aAAa,CAACtB,QAAQ,CAAC;MACnDsG,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBlC,CAAC,EAAE,IAAI,CAACA,CAAC;MACTU,CAAC,EAAE,IAAI,CAACA,CAAC,GAAGpC,MAAM,GAAG,EAAE;MACvBD,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAE;IACV,CAAC,EAAE,IAAI,CAAC0C,aAAa,CAAC,CAAC;IACvB;IACA,IAAI,CAACZ,cAAc,CAAC,CAAC,CAAC;IACtB;IACA,IAAI,CAACC,QAAQ,CAAC,CAAC;IACf;IACA4D,WAAW,CAACiD,IAAI,CAAC,IAAI,CAAClH,CAAC,EAAE,IAAI,CAACU,CAAC,CAAC;IAChC;IACA,IAAI,CAACyG,UAAU,CAAC,CAAC;IACjB,IAAI,IAAI,CAACrE,WAAW,KAAK3F,SAAS,CAACiK,MAAM,EAAE;MACzC,IAAI,CAACpC,eAAe,CAACgC,IAAI,CAAC,CAAC;MAC3B,IAAI,CAACtC,eAAe,CAACsC,IAAI,CAAC,CAAC;MAC3B,IAAI,CAACnD,YAAY,CAACmD,IAAI,CAAC,CAAC;IAC1B;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACElI,YAAY,CAACxC,SAAS,CAAC6K,UAAU,GAAG,YAAY;IAC9C,IAAInI,KAAK,GAAG,IAAI;IAChB;IACA,IAAIqI,mBAAmB,GAAG,IAAI,CAACnF,KAAK,CAACoF,IAAI,CAAC,UAAUpF,KAAK,EAAE;MACzD,OAAOA,KAAK,CAACxF,GAAG,CAAC,MAAM,CAAC,KAAK,iBAAiB;IAChD,CAAC,CAAC;IACF,IAAI2K,mBAAmB,EAAE;MACvBA,mBAAmB,CAAC1C,EAAE,CAAC,mCAAmC,EAAE,IAAI,CAACzF,WAAW,CAAC,IAAI,CAAC8F,eAAe,CAAC,CAAC;MACnGqC,mBAAmB,CAAC1C,EAAE,CAAC,oCAAoC,EAAE,IAAI,CAACzF,WAAW,CAAC,IAAI,CAAC8F,eAAe,CAAC,CAAC;IACtG;IACA,IAAIuC,mBAAmB,GAAG,IAAI,CAACrF,KAAK,CAACoF,IAAI,CAAC,UAAUpF,KAAK,EAAE;MACzD,OAAOA,KAAK,CAACxF,GAAG,CAAC,MAAM,CAAC,KAAK,iBAAiB;IAChD,CAAC,CAAC;IACF;IACA,IAAI6K,mBAAmB,EAAE;MACvBA,mBAAmB,CAAC5C,EAAE,CAAC,mCAAmC,EAAE,IAAI,CAACzF,WAAW,CAAC,IAAI,CAACiG,eAAe,CAAC,CAAC;MACnGoC,mBAAmB,CAAC5C,EAAE,CAAC,oCAAoC,EAAE,IAAI,CAACzF,WAAW,CAAC,IAAI,CAACiG,eAAe,CAAC,CAAC;IACtG;IACA;IACA,IAAI,CAACT,eAAe,CAACC,EAAE,CAAC,WAAW,EAAE,IAAI,CAACzF,WAAW,CAAC,IAAI,CAACwF,eAAe,CAAC,CAAC;IAC5E,IAAI,CAACA,eAAe,CAACC,EAAE,CAAC,YAAY,EAAE,IAAI,CAACzF,WAAW,CAAC,IAAI,CAACwF,eAAe,CAAC,CAAC;IAC7E;IACA;IACA,IAAI,CAACxC,KAAK,CAACyC,EAAE,CAAC,EAAE,CAAC6C,MAAM,CAACjK,cAAc,EAAE,QAAQ,CAAC,EAAE,YAAY;MAC7DyB,KAAK,CAACyI,MAAM,GAAG,CAACzI,KAAK,CAACyI,MAAM;MAC5BzI,KAAK,CAACK,cAAc,GAAGL,KAAK,CAACmG,eAAe;MAC5CnG,KAAK,CAAC0I,gBAAgB,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF;IACA,IAAI,CAACxF,KAAK,CAACyC,EAAE,CAAC,EAAE,CAAC6C,MAAM,CAAChK,aAAa,EAAE,QAAQ,CAAC,EAAE,YAAY;MAC5DwB,KAAK,CAACK,cAAc,GAAGL,KAAK,CAACmG,eAAe;MAC5CnG,KAAK,CAACoB,cAAc,CAAC,IAAI,CAAC;MAC1BpB,KAAK,CAACqB,QAAQ,CAAC,CAAC;IAClB,CAAC,CAAC;IACF;IACA,IAAI,CAAC6B,KAAK,CAACyC,EAAE,CAAC,EAAE,CAAC6C,MAAM,CAAC/J,YAAY,EAAE,QAAQ,CAAC,EAAE,YAAY;MAC3DuB,KAAK,CAACK,cAAc,GAAGL,KAAK,CAACmG,eAAe;MAC5CnG,KAAK,CAACoB,cAAc,CAAC,CAAC,IAAI,CAAC;MAC3BpB,KAAK,CAACqB,QAAQ,CAAC,CAAC;IAClB,CAAC,CAAC;IACF,IAAI,CAAC6B,KAAK,CAACyC,EAAE,CAACrH,qBAAqB,EAAE,UAAUkD,EAAE,EAAE;MACjD,IAAImC,IAAI,GAAGnC,EAAE,CAACmC,IAAI;QAChB1B,KAAK,GAAGT,EAAE,CAACS,KAAK;MAClBjC,KAAK,CAAC6D,YAAY,GAAG5B,KAAK;MAC1BjC,KAAK,CAAC8D,WAAW,GAAGH,IAAI;MACxB,IAAIA,IAAI,KAAKxF,SAAS,CAACiK,MAAM,EAAE;QAC7BpI,KAAK,CAACgG,eAAe,CAACgC,IAAI,CAAC,CAAC;QAC5BhI,KAAK,CAAC0F,eAAe,CAACsC,IAAI,CAAC,CAAC;QAC5BhI,KAAK,CAAC6E,YAAY,CAACmD,IAAI,CAAC,CAAC;MAC3B,CAAC,MAAM,IAAIrE,IAAI,KAAKxF,SAAS,CAAC6F,KAAK,EAAE;QACnChE,KAAK,CAACgG,eAAe,CAAC+B,IAAI,CAAC,CAAC;QAC5B/H,KAAK,CAAC0F,eAAe,CAACqC,IAAI,CAAC,CAAC;QAC5B/H,KAAK,CAAC6E,YAAY,CAACkD,IAAI,CAAC,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC;EACD;EACAjI,YAAY,CAACxC,SAAS,CAACqL,eAAe,GAAG,UAAUC,WAAW,EAAE;IAC9D,KAAK,IAAI3L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACqJ,WAAW,CAAClJ,MAAM,GAAG,CAAC,EAAEH,CAAC,EAAE,EAAE;MACpD,IAAI,IAAI,CAACqJ,WAAW,CAACrJ,CAAC,CAAC,IAAI2L,WAAW,IAAIA,WAAW,IAAI,IAAI,CAACtC,WAAW,CAACrJ,CAAC,GAAG,CAAC,CAAC,EAAE;QAChF,OAAOwH,IAAI,CAACoE,GAAG,CAAC,IAAI,CAACvC,WAAW,CAACrJ,CAAC,CAAC,GAAG2L,WAAW,CAAC,GAAGnE,IAAI,CAACoE,GAAG,CAACD,WAAW,GAAG,IAAI,CAACtC,WAAW,CAACrJ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC;MAClH;IACF;IACA,OAAO,CAAC;EACV,CAAC;EACD;AACF;AACA;AACA;EACE6C,YAAY,CAACxC,SAAS,CAAC6D,iBAAiB,GAAG,UAAU2H,WAAW,EAAE;IAChE;IACA,QAAQ,IAAI,CAACzI,cAAc;MACzB,KAAK,IAAI,CAAC2F,eAAe;QACvB;UACE,IAAItB,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC/B,KAAK;UACxB,IAAIgC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAChC,KAAK;UACxB,OAAO8B,IAAI,CAACC,GAAG,CAACC,GAAG,EAAEF,IAAI,CAACE,GAAG,CAACD,GAAG,EAAEoE,WAAW,CAAC,CAAC;QAClD;MACF,KAAK,IAAI,CAAC3C,eAAe;QACvB;UACE,IAAIzB,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC7B,GAAG;UACtB,IAAI8B,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC9B,GAAG;UACtB,OAAO4B,IAAI,CAACC,GAAG,CAACC,GAAG,EAAEF,IAAI,CAACE,GAAG,CAACD,GAAG,EAAEoE,WAAW,CAAC,CAAC;QAClD;MACF,KAAK,IAAI,CAACpD,eAAe;QACvB;UACE,IAAIhB,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC/B,KAAK;UACxB,IAAIgC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC9B,GAAG;UACtB,OAAO4B,IAAI,CAACC,GAAG,CAACC,GAAG,EAAEF,IAAI,CAACE,GAAG,CAACD,GAAG,EAAEoE,WAAW,CAAC,CAAC;QAClD;MACF;QACE,OAAO,CAAC;IACZ;EACF,CAAC;EACD;AACF;AACA;AACA;EACEhJ,YAAY,CAACxC,SAAS,CAAC8D,cAAc,GAAG,UAAU0H,WAAW,EAAE;IAC7D,IAAIC,OAAO,GAAG,IAAI,CAACrF,KAAK,CAAC,IAAI,CAACiF,eAAe,CAAC,IAAI,CAAChG,KAAK,GAAG,IAAI,CAACtD,KAAK,CAAC,CAAC;IACvE,IAAI2J,OAAO,GAAG,IAAI,CAACtF,KAAK,CAAC,IAAI,CAACiF,eAAe,CAAC,IAAI,CAAC9F,GAAG,GAAG,IAAI,CAACxD,KAAK,CAAC,CAAC;IACrE,IAAI,CAAC,IAAI,CAACgB,cAAc,EAAE;MACxB,IAAI,CAAC0C,OAAO,GAAG,IAAI,CAACS,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACuF,OAAO,CAAC,GAAGA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC7B,IAAI;MAC1I,IAAI,CAACjE,OAAO,GAAG,IAAI,CAACO,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACwF,OAAO,CAAC,GAAGA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC9B,IAAI;MAC1I;IACF;IACA;IACA,QAAQ,IAAI,CAAC7G,cAAc;MACzB,KAAK,IAAI,CAAC2F,eAAe;QACvB;QACA,IAAI,CAAC/C,OAAO,GAAG,IAAI,CAAC8B,YAAY,CAACD,IAAI,CAAC,MAAM,CAAC;QAC7C,IAAI,CAACnC,KAAK,IAAImG,WAAW;QACzB,IAAI,CAAC/F,OAAO,GAAG,IAAI,CAACS,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACuF,OAAO,CAAC,GAAGA,OAAO,CAAC7B,IAAI;QACxF;MACF,KAAK,IAAI,CAACf,eAAe;QACvB;QACA,IAAI,CAACpD,OAAO,GAAG,IAAI,CAAC8B,YAAY,CAACC,IAAI,CAAC,MAAM,CAAC;QAC7C,IAAI,CAACjC,GAAG,IAAIiG,WAAW;QACvB,IAAI,CAAC7F,OAAO,GAAG,IAAI,CAACO,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACwF,OAAO,CAAC,GAAGA,OAAO,CAAC9B,IAAI;QACxF;MACF,KAAK,IAAI,CAACxB,eAAe;QACvB,IAAI,CAAC/C,KAAK,IAAImG,WAAW;QACzB,IAAI,CAACjG,GAAG,IAAIiG,WAAW;QACvB,IAAI,CAAC/F,OAAO,GAAG,IAAI,CAACS,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACuF,OAAO,CAAC,GAAGA,OAAO,CAAC7B,IAAI;QACxF,IAAI,CAACjE,OAAO,GAAG,IAAI,CAACO,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACwF,OAAO,CAAC,GAAGA,OAAO,CAAC9B,IAAI;QACxF;MACF;QACE;IACJ;EACF,CAAC;EACD;AACF;AACA;AACA;EACEpH,YAAY,CAACxC,SAAS,CAAC+D,QAAQ,GAAG,YAAY;IAC5C,IAAIrB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAAC2C,KAAK,GAAG,CAAC,EAAE;MAClB,IAAI,CAACA,KAAK,GAAG,CAAC;IAChB;IACA,IAAI,IAAI,CAACA,KAAK,GAAG,CAAC,EAAE;MAClB,IAAI,CAACA,KAAK,GAAG,CAAC;IAChB;IACA,IAAI,IAAI,CAACE,GAAG,GAAG,CAAC,EAAE;MAChB,IAAI,CAACA,GAAG,GAAG,CAAC;IACd;IACA,IAAI,IAAI,CAACA,GAAG,GAAG,CAAC,EAAE;MAChB,IAAI,CAACA,GAAG,GAAG,CAAC;IACd;IACA,IAAI6B,GAAG,GAAG,IAAI,CAAC1D,CAAC,GAAG,IAAI,CAAC2B,KAAK,GAAG,IAAI,CAACtD,KAAK;IAC1C,IAAIsF,GAAG,GAAG,IAAI,CAAC3D,CAAC,GAAG,IAAI,CAAC6B,GAAG,GAAG,IAAI,CAACxD,KAAK;IACxC;IACA,IAAI,CAACqG,eAAe,CAACZ,IAAI,CAAC,GAAG,EAAEJ,GAAG,CAAC;IACnC,IAAI,CAACgB,eAAe,CAACZ,IAAI,CAAC,OAAO,EAAEH,GAAG,GAAGD,GAAG,CAAC;IAC7C;IACA,IAAImB,YAAY,GAAGnI,GAAG,CAAC,IAAI,CAAC6E,YAAY,EAAE,OAAO,EAAEpD,qBAAqB,CAAC;IACzE;IACA,IAAI,CAACyF,OAAO,CAAC,IAAI,CAAC7B,OAAO,EAAE,IAAI,CAACE,OAAO,CAAC;IACxC,IAAIzB,EAAE,GAAG,IAAI,CAACyH,SAAS,CAAC,CAACvE,GAAG,EAAEC,GAAG,CAAC,CAAC;MACjCuE,QAAQ,GAAG1H,EAAE,CAAC,CAAC,CAAC;MAChB2H,QAAQ,GAAG3H,EAAE,CAAC,CAAC,CAAC;IAClB;IACA,IAAI,CAACwE,eAAe,CAACoD,IAAI,CAAC1E,GAAG,GAAGmB,YAAY,GAAG,CAAC,CAAC;IACjDjI,IAAI,CAACsL,QAAQ,EAAE,UAAUG,CAAC,EAAEC,CAAC,EAAE;MAC7B,OAAOtJ,KAAK,CAAC6E,YAAY,CAACC,IAAI,CAACwE,CAAC,EAAED,CAAC,CAAC;IACtC,CAAC,CAAC;IACF;IACA,IAAI,CAAClD,eAAe,CAACiD,IAAI,CAACzE,GAAG,GAAGkB,YAAY,GAAG,CAAC,CAAC;IACjDjI,IAAI,CAACuL,QAAQ,EAAE,UAAUE,CAAC,EAAEC,CAAC,EAAE;MAC7B,OAAOtJ,KAAK,CAAC+E,YAAY,CAACD,IAAI,CAACwE,CAAC,EAAED,CAAC,CAAC;IACtC,CAAC,CAAC;IACF,IAAI,IAAI,CAACvF,WAAW,KAAK3F,SAAS,CAAC6F,KAAK,EAAE;MACxC;MACA,IAAI,CAACb,KAAK,CAACoG,IAAI,CAACnL,YAAY,EAAE;QAC5BoL,KAAK,EAAE,CAAC,IAAI,CAAC7G,KAAK,EAAE,IAAI,CAACE,GAAG,CAAC,CAAC4G,IAAI,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,IAAI,CAAC3F,WAAW,KAAK3F,SAAS,CAACiK,MAAM,EAAE;MAChD,IAAI,CAACjF,KAAK,CAACoG,IAAI,CAACnL,YAAY,EAAE;QAC5BoL,KAAK,EAAE,CAAC,IAAI,CAAC3G,GAAG,EAAE,IAAI,CAACA,GAAG;MAC5B,CAAC,CAAC;IACJ;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;EACE/C,YAAY,CAACxC,SAAS,CAAC2L,SAAS,GAAG,UAAUS,KAAK,EAAE;IAClD,IAAIlI,EAAE,EAAEC,EAAE;IACV,IAAIkI,WAAW,GAAG,CAAC;IACnB,IAAI9D,YAAY,GAAGnI,GAAG,CAAC,IAAI,CAAC6E,YAAY,EAAE,OAAO,EAAEpD,qBAAqB,CAAC;IACzE,IAAI0F,YAAY,GAAG,IAAI,CAACA,YAAY;IACpC,IAAIE,YAAY,GAAG,IAAI,CAACA,YAAY;IACpC,IAAIL,GAAG,GAAGgF,KAAK,CAAC,CAAC,CAAC;MAChB/E,GAAG,GAAG+E,KAAK,CAAC,CAAC,CAAC;IAChB,IAAIE,MAAM,GAAG,KAAK;IAClB;IACA,IAAIlF,GAAG,GAAGC,GAAG,EAAE;MACbnD,EAAE,GAAG,CAACmD,GAAG,EAAED,GAAG,CAAC,EAAEA,GAAG,GAAGlD,EAAE,CAAC,CAAC,CAAC,EAAEmD,GAAG,GAAGnD,EAAE,CAAC,CAAC,CAAC;MACzCC,EAAE,GAAG,CAACsD,YAAY,EAAEF,YAAY,CAAC,EAAEA,YAAY,GAAGpD,EAAE,CAAC,CAAC,CAAC,EAAEsD,YAAY,GAAGtD,EAAE,CAAC,CAAC,CAAC;MAC7EmI,MAAM,GAAG,IAAI;IACf;IACA;IACA,IAAIC,OAAO,GAAGhF,YAAY,CAACgD,OAAO,CAAC,CAAC;IACpC,IAAIiC,OAAO,GAAG/E,YAAY,CAAC8C,OAAO,CAAC,CAAC;IACpC,IAAIqB,QAAQ,GAAG,IAAI;IACnB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAI,IAAI,CAACvF,WAAW,KAAK,OAAO,EAAE;MAChCsF,QAAQ,GAAGxE,GAAG,GAAGmF,OAAO,CAACxK,KAAK,GAAG,IAAI,CAAC2B,CAAC,GAAG2I,WAAW,GAAG;QACtD3I,CAAC,EAAE0D,GAAG,GAAGmB,YAAY,GAAG,CAAC,GAAG8D,WAAW;QACvCjK,SAAS,EAAE;MACb,CAAC,GAAG;QACFsB,CAAC,EAAE0D,GAAG,GAAGmB,YAAY,GAAG,CAAC,GAAG8D,WAAW;QACvCjK,SAAS,EAAE;MACb,CAAC;MACDyJ,QAAQ,GAAGxE,GAAG,GAAGmF,OAAO,CAACzK,KAAK,GAAG,IAAI,CAAC2B,CAAC,GAAG,IAAI,CAAC3B,KAAK,GAAG;QACrD2B,CAAC,EAAE2D,GAAG,GAAGkB,YAAY,GAAG,CAAC,GAAG8D,WAAW;QACvCjK,SAAS,EAAE;MACb,CAAC,GAAG;QACFsB,CAAC,EAAE2D,GAAG,GAAGkB,YAAY,GAAG,CAAC,GAAG8D,WAAW;QACvCjK,SAAS,EAAE;MACb,CAAC;IACH,CAAC,MAAM,IAAI,IAAI,CAACkE,WAAW,KAAK,QAAQ,EAAE;MACxCsF,QAAQ,GAAGrE,YAAY,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG+E,OAAO,CAACxK,KAAK,CAAC;MAAA,EAChD;QACA2B,CAAC,EAAE0D,GAAG;QACNhF,SAAS,EAAE;MACb,CAAC,GAAG;QACFsB,CAAC,EAAE0D,GAAG;QACNhF,SAAS,EAAE;MACb,CAAC;MACDyJ,QAAQ,GAAGpE,YAAY,CAACD,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAACzF,KAAK,GAAGyK,OAAO,CAACzK,KAAK,CAAC;MAAA,EAC7D;QACA2B,CAAC,EAAE2D,GAAG;QACNjF,SAAS,EAAE;MACb,CAAC,GAAG;QACFsB,CAAC,EAAE2D,GAAG;QACNjF,SAAS,EAAE;MACb,CAAC;IACH;IACA,OAAO,CAACkK,MAAM,GAAG,CAACV,QAAQ,EAAEC,QAAQ,CAAC,GAAG,CAACA,QAAQ,EAAED,QAAQ,CAAC;EAC9D,CAAC;EACDpJ,YAAY,CAACxC,SAAS,CAACyM,SAAS,GAAG,YAAY;IAC7C,IAAI/J,KAAK,GAAG,IAAI;IAChB,OAAO,OAAOkE,MAAM,KAAK,WAAW,GAAGA,MAAM,CAAC8F,qBAAqB,CAAC,YAAY;MAC9E,IAAIxI,EAAE,GAAGxB,KAAK;QACZ0D,KAAK,GAAGlC,EAAE,CAACkC,KAAK;QAChBrE,KAAK,GAAGmC,EAAE,CAACnC,KAAK;MAClB,IAAI4C,KAAK,GAAGjC,KAAK,CAAC6D,YAAY;MAC9B,IAAIoG,YAAY,GAAG5K,KAAK,GAAGqE,KAAK,CAACtG,MAAM;MACvC,IAAI6D,OAAO,GAAGgJ,YAAY,IAAI,CAAC,EAAE,GAAGhI,KAAK,IAAI,IAAI,GAAG,EAAE,CAAC;MACvD,IAAIf,YAAY,GAAGlB,KAAK,CAACmB,iBAAiB,CAACF,OAAO,GAAGjB,KAAK,CAACX,KAAK,CAAC;MACjEW,KAAK,CAACoB,cAAc,CAACF,YAAY,CAAC;MAClClB,KAAK,CAACqB,QAAQ,CAAC,CAAC;MAChB,IAAIrB,KAAK,CAACyI,MAAM,EAAE;QAChBzI,KAAK,CAACkK,WAAW,GAAGlK,KAAK,CAAC+J,SAAS,CAAC,CAAC;MACvC;IACF,CAAC,CAAC,GAAGzI,SAAS;EAChB,CAAC;EACDxB,YAAY,CAACxC,SAAS,CAACoL,gBAAgB,GAAG,UAAUyB,MAAM,EAAE;IAC1D,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;MACrBA,MAAM,GAAG,IAAI;IACf;IACA,IAAI,CAAClC,kBAAkB,CAACmC,UAAU,CAAC5F,MAAM,CAAC;MACxCiE,MAAM,EAAE,IAAI,CAACA;IACf,CAAC,CAAC;IACF,IAAI,IAAI,CAACA,MAAM,EAAE;MACf;MACA,IAAI,CAACyB,WAAW,GAAG,IAAI,CAACH,SAAS,CAAC,CAAC;MACnC,IAAI,CAAC5G,KAAK,CAACoG,IAAI,CAAClL,cAAc,EAAE,IAAI,CAAC;IACvC,CAAC,MAAM;MACL;MACA,IAAI,IAAI,CAAC6L,WAAW,EAAE;QACpB,IAAI,OAAOhG,MAAM,KAAK,WAAW,EAAEA,MAAM,CAACmG,oBAAoB,CAAC,IAAI,CAACH,WAAW,CAAC;QAChF,IAAIC,MAAM,EAAE;UACV,IAAI,CAAChH,KAAK,CAACoG,IAAI,CAAC7K,YAAY,EAAE,IAAI,CAAC;QACrC;MACF;IACF;EACF,CAAC;EACDoB,YAAY,CAACxC,SAAS,CAACgN,OAAO,GAAG,YAAY;IAC3C,IAAI,CAACnH,KAAK,CAACoH,GAAG,CAACnM,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;IAC5C,IAAI8E,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAImF,mBAAmB,GAAGnF,KAAK,CAACoF,IAAI,CAAC,UAAUkC,CAAC,EAAE;MAChD,OAAOA,CAAC,CAAC9M,GAAG,CAAC,MAAM,CAAC,KAAK,iBAAiB;IAC5C,CAAC,CAAC;IACF,IAAI2K,mBAAmB,EAAE;MACvBA,mBAAmB,CAACkC,GAAG,CAAC,mCAAmC,CAAC;MAC5DlC,mBAAmB,CAACkC,GAAG,CAAC,oCAAoC,CAAC;MAC7DlC,mBAAmB,CAAC5B,OAAO,CAAC,CAAC;IAC/B;IACA,IAAI8B,mBAAmB,GAAGrF,KAAK,CAACoF,IAAI,CAAC,UAAUkC,CAAC,EAAE;MAChD,OAAOA,CAAC,CAAC9M,GAAG,CAAC,MAAM,CAAC,KAAK,iBAAiB;IAC5C,CAAC,CAAC;IACF;IACA,IAAI6K,mBAAmB,EAAE;MACvBA,mBAAmB,CAACgC,GAAG,CAAC,mCAAmC,CAAC;MAC5DhC,mBAAmB,CAACgC,GAAG,CAAC,oCAAoC,CAAC;MAC7DhC,mBAAmB,CAAC9B,OAAO,CAAC,CAAC;IAC/B;IACA;IACA,IAAI,CAACf,eAAe,CAAC6E,GAAG,CAAC,WAAW,CAAC;IACrC,IAAI,CAAC7E,eAAe,CAAC6E,GAAG,CAAC,YAAY,CAAC;IACtC,IAAI,CAAC7E,eAAe,CAACe,OAAO,CAAC,CAAC;IAC9BvD,KAAK,CAACqH,GAAG,CAAC,EAAE,CAAC/B,MAAM,CAACjK,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC9C2E,KAAK,CAACqH,GAAG,CAAC,EAAE,CAAC/B,MAAM,CAAChK,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC7C0E,KAAK,CAACqH,GAAG,CAAC,EAAE,CAAC/B,MAAM,CAAC/J,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC5CyE,KAAK,CAACqH,GAAG,CAACjM,qBAAqB,CAAC;IAChC4E,KAAK,CAACuD,OAAO,CAAC,CAAC;IACf,IAAI,IAAI,CAACzB,cAAc,EAAE;MACvB,IAAI,CAACA,cAAc,CAACsF,OAAO,CAAC,CAAC;IAC/B;EACF,CAAC;EACD,OAAOxK,YAAY;AACrB,CAAC,CAAC,CAAC;AACH,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}