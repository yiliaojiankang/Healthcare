{"ast":null,"code":"import { registerParser, registerTransform } from \"./factory\";\nimport csv from \"./parser/csv\";\nimport geojson from \"./parser/geojson\";\nimport geojsonVTTile from \"./parser/geojsonvt\";\nimport image from \"./parser/image\";\nimport json from \"./parser/json\";\nimport jsonTile from \"./parser/jsonTile\";\nimport mapboxVectorTile from \"./parser/mvt\";\nimport raster from \"./parser/raster\";\nimport rasterTile, { rasterDataTypes } from \"./parser/raster-tile\";\nimport rasterRgb from \"./parser/rasterRgb\";\nimport testTile from \"./parser/testTile\";\nimport rgb from \"./parser/raster/rgb\";\nimport ndi from \"./parser/raster/ndi\";\nimport Source from \"./source\";\nimport { cluster } from \"./transform/cluster\";\nimport { filter } from \"./transform/filter\";\nimport { aggregatorToGrid } from \"./transform/grid\";\nimport { pointToHexbin } from \"./transform/hexagon\";\nimport { join } from \"./transform/join\";\nimport { map } from \"./transform/map\";\nexport { getParser, getTransform, registerParser, registerTransform } from \"./factory\";\nexport * from \"./interface\";\nexport * from \"./source/index\";\nexport { rasterDataTypes };\nregisterParser('rasterTile', rasterTile);\nregisterParser('mvt', mapboxVectorTile);\nregisterParser('geojsonvt', geojsonVTTile);\nregisterParser('testTile', testTile);\nregisterParser('geojson', geojson);\nregisterParser('jsonTile', jsonTile);\nregisterParser('image', image);\nregisterParser('csv', csv);\nregisterParser('json', json);\nregisterParser('raster', raster);\nregisterParser('rasterRgb', rasterRgb);\nregisterParser('rgb', rgb);\nregisterParser('ndi', ndi);\nregisterTransform('cluster', cluster);\nregisterTransform('filter', filter);\nregisterTransform('join', join);\nregisterTransform('map', map);\nregisterTransform('grid', aggregatorToGrid);\nregisterTransform('hexagon', pointToHexbin);\nexport default Source;","map":{"version":3,"names":["registerParser","registerTransform","csv","geojson","geojsonVTTile","image","json","jsonTile","mapboxVectorTile","raster","rasterTile","rasterDataTypes","rasterRgb","testTile","rgb","ndi","Source","cluster","filter","aggregatorToGrid","pointToHexbin","join","map","getParser","getTransform"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-source/es/index.js"],"sourcesContent":["import { registerParser, registerTransform } from \"./factory\";\nimport csv from \"./parser/csv\";\nimport geojson from \"./parser/geojson\";\nimport geojsonVTTile from \"./parser/geojsonvt\";\nimport image from \"./parser/image\";\nimport json from \"./parser/json\";\nimport jsonTile from \"./parser/jsonTile\";\nimport mapboxVectorTile from \"./parser/mvt\";\nimport raster from \"./parser/raster\";\nimport rasterTile, { rasterDataTypes } from \"./parser/raster-tile\";\nimport rasterRgb from \"./parser/rasterRgb\";\nimport testTile from \"./parser/testTile\";\nimport rgb from \"./parser/raster/rgb\";\nimport ndi from \"./parser/raster/ndi\";\nimport Source from \"./source\";\nimport { cluster } from \"./transform/cluster\";\nimport { filter } from \"./transform/filter\";\nimport { aggregatorToGrid } from \"./transform/grid\";\nimport { pointToHexbin } from \"./transform/hexagon\";\nimport { join } from \"./transform/join\";\nimport { map } from \"./transform/map\";\nexport { getParser, getTransform, registerParser, registerTransform } from \"./factory\";\nexport * from \"./interface\";\nexport * from \"./source/index\";\nexport { rasterDataTypes };\nregisterParser('rasterTile', rasterTile);\nregisterParser('mvt', mapboxVectorTile);\nregisterParser('geojsonvt', geojsonVTTile);\nregisterParser('testTile', testTile);\nregisterParser('geojson', geojson);\nregisterParser('jsonTile', jsonTile);\nregisterParser('image', image);\nregisterParser('csv', csv);\nregisterParser('json', json);\nregisterParser('raster', raster);\nregisterParser('rasterRgb', rasterRgb);\nregisterParser('rgb', rgb);\nregisterParser('ndi', ndi);\nregisterTransform('cluster', cluster);\nregisterTransform('filter', filter);\nregisterTransform('join', join);\nregisterTransform('map', map);\nregisterTransform('grid', aggregatorToGrid);\nregisterTransform('hexagon', pointToHexbin);\nexport default Source;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAC7D,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,gBAAgB,MAAM,cAAc;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,UAAU,IAAIC,eAAe,QAAQ,sBAAsB;AAClE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,SAAS,EAAEC,YAAY,EAAExB,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AACtF,cAAc,aAAa;AAC3B,cAAc,gBAAgB;AAC9B,SAASU,eAAe;AACxBX,cAAc,CAAC,YAAY,EAAEU,UAAU,CAAC;AACxCV,cAAc,CAAC,KAAK,EAAEQ,gBAAgB,CAAC;AACvCR,cAAc,CAAC,WAAW,EAAEI,aAAa,CAAC;AAC1CJ,cAAc,CAAC,UAAU,EAAEa,QAAQ,CAAC;AACpCb,cAAc,CAAC,SAAS,EAAEG,OAAO,CAAC;AAClCH,cAAc,CAAC,UAAU,EAAEO,QAAQ,CAAC;AACpCP,cAAc,CAAC,OAAO,EAAEK,KAAK,CAAC;AAC9BL,cAAc,CAAC,KAAK,EAAEE,GAAG,CAAC;AAC1BF,cAAc,CAAC,MAAM,EAAEM,IAAI,CAAC;AAC5BN,cAAc,CAAC,QAAQ,EAAES,MAAM,CAAC;AAChCT,cAAc,CAAC,WAAW,EAAEY,SAAS,CAAC;AACtCZ,cAAc,CAAC,KAAK,EAAEc,GAAG,CAAC;AAC1Bd,cAAc,CAAC,KAAK,EAAEe,GAAG,CAAC;AAC1Bd,iBAAiB,CAAC,SAAS,EAAEgB,OAAO,CAAC;AACrChB,iBAAiB,CAAC,QAAQ,EAAEiB,MAAM,CAAC;AACnCjB,iBAAiB,CAAC,MAAM,EAAEoB,IAAI,CAAC;AAC/BpB,iBAAiB,CAAC,KAAK,EAAEqB,GAAG,CAAC;AAC7BrB,iBAAiB,CAAC,MAAM,EAAEkB,gBAAgB,CAAC;AAC3ClB,iBAAiB,CAAC,SAAS,EAAEmB,aAAa,CAAC;AAC3C,eAAeJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}