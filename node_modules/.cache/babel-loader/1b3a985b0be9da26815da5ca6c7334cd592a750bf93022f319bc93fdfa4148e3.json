{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { distance, piMod } from './util';\nimport ellipse from './ellipse';\n// 偏导数 x\nfunction derivativeXAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle) {\n  return -1 * rx * Math.cos(xRotation) * Math.sin(angle) - ry * Math.sin(xRotation) * Math.cos(angle);\n}\n// 偏导数 y\nfunction derivativeYAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle) {\n  return -1 * rx * Math.sin(xRotation) * Math.sin(angle) + ry * Math.cos(xRotation) * Math.cos(angle);\n}\n// x 的极值\nfunction xExtrema(rx, ry, xRotation) {\n  return Math.atan(-ry / rx * Math.tan(xRotation));\n}\n// y 的极值\nfunction yExtrema(rx, ry, xRotation) {\n  return Math.atan(ry / (rx * Math.tan(xRotation)));\n}\n// 根据角度求 x 坐标\nfunction xAt(cx, cy, rx, ry, xRotation, angle) {\n  return rx * Math.cos(xRotation) * Math.cos(angle) - ry * Math.sin(xRotation) * Math.sin(angle) + cx;\n}\n// 根据角度求 y 坐标\nfunction yAt(cx, cy, rx, ry, xRotation, angle) {\n  return rx * Math.sin(xRotation) * Math.cos(angle) + ry * Math.cos(xRotation) * Math.sin(angle) + cy;\n}\n// 获取点在椭圆上的角度\nfunction getAngle(rx, ry, x0, y0) {\n  var angle = Math.atan2(y0 * rx, x0 * ry);\n  // 转换到 0 - 2PI 内\n  return (angle + Math.PI * 2) % (Math.PI * 2);\n}\n// 根据角度获取，x,y\nfunction getPoint(rx, ry, angle) {\n  return {\n    x: rx * Math.cos(angle),\n    y: ry * Math.sin(angle)\n  };\n}\n// 旋转\nfunction rotate(x, y, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return [x * cos - y * sin, x * sin + y * cos];\n}\nexport default {\n  /**\n   * 计算包围盒\n   * @param {number} cx         圆心 x\n   * @param {number} cy         圆心 y\n   * @param {number} rx         x 轴方向的半径\n   * @param {number} ry         y 轴方向的半径\n   * @param {number} xRotation  旋转角度\n   * @param {number} startAngle 起始角度\n   * @param {number} endAngle   结束角度\n   * @return {object} 包围盒对象\n   */\n  box: function (cx, cy, rx, ry, xRotation, startAngle, endAngle) {\n    var xDim = xExtrema(rx, ry, xRotation);\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var xs = [startAngle, endAngle];\n    for (var i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n      var xAngle = xDim + i;\n      if (startAngle < endAngle) {\n        if (startAngle < xAngle && xAngle < endAngle) {\n          xs.push(xAngle);\n        }\n      } else {\n        if (endAngle < xAngle && xAngle < startAngle) {\n          xs.push(xAngle);\n        }\n      }\n    }\n    for (var i = 0; i < xs.length; i++) {\n      var x = xAt(cx, cy, rx, ry, xRotation, xs[i]);\n      if (x < minX) {\n        minX = x;\n      }\n      if (x > maxX) {\n        maxX = x;\n      }\n    }\n    var yDim = yExtrema(rx, ry, xRotation);\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var ys = [startAngle, endAngle];\n    for (var i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n      var yAngle = yDim + i;\n      if (startAngle < endAngle) {\n        if (startAngle < yAngle && yAngle < endAngle) {\n          ys.push(yAngle);\n        }\n      } else {\n        if (endAngle < yAngle && yAngle < startAngle) {\n          ys.push(yAngle);\n        }\n      }\n    }\n    for (var i = 0; i < ys.length; i++) {\n      var y = yAt(cx, cy, rx, ry, xRotation, ys[i]);\n      if (y < minY) {\n        minY = y;\n      }\n      if (y > maxY) {\n        maxY = y;\n      }\n    }\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  },\n  /**\n   * 获取圆弧的长度，计算圆弧长度时不考虑旋转角度，\n   * 仅跟 rx, ry, startAngle, endAngle 相关\n   * @param {number} cx         圆心 x\n   * @param {number} cy         圆心 y\n   * @param {number} rx         x 轴方向的半径\n   * @param {number} ry         y 轴方向的半径\n   * @param {number} xRotation  旋转角度\n   * @param {number} startAngle 起始角度\n   * @param {number} endAngle   结束角度\n   */\n  length: function (cx, cy, rx, ry, xRotation, startAngle, endAngle) {},\n  /**\n   * 获取指定点到圆弧的最近距离的点\n   * @param {number} cx         圆心 x\n   * @param {number} cy         圆心 y\n   * @param {number} rx         x 轴方向的半径\n   * @param {number} ry         y 轴方向的半径\n   * @param {number} xRotation  旋转角度\n   * @param {number} startAngle 起始角度\n   * @param {number} endAngle   结束角度\n   * @param {number} x0         指定点的 x\n   * @param {number} y0         指定点的 y\n   * @return {object} 到指定点最近距离的点\n   */\n  nearestPoint: function (cx, cy, rx, ry, xRotation, startAngle, endAngle, x0, y0) {\n    // 将最近距离问题转换成到椭圆中心 0,0 没有旋转的椭圆问题\n    var relativeVector = rotate(x0 - cx, y0 - cy, -xRotation);\n    var x1 = relativeVector[0],\n      y1 = relativeVector[1];\n    // 计算点到椭圆的最近的点\n    var relativePoint = ellipse.nearestPoint(0, 0, rx, ry, x1, y1);\n    // 获取点在椭圆上的角度\n    var angle = getAngle(rx, ry, relativePoint.x, relativePoint.y);\n    // 点没有在圆弧上\n    if (angle < startAngle) {\n      // 小于起始圆弧\n      relativePoint = getPoint(rx, ry, startAngle);\n    } else if (angle > endAngle) {\n      // 大于结束圆弧\n      relativePoint = getPoint(rx, ry, endAngle);\n    }\n    // 旋转到 xRotation 的角度\n    var vector = rotate(relativePoint.x, relativePoint.y, xRotation);\n    return {\n      x: vector[0] + cx,\n      y: vector[1] + cy\n    };\n  },\n  pointDistance: function (cx, cy, rx, ry, xRotation, startAngle, endAngle, x0, y0) {\n    var nearestPoint = this.nearestPoint(cx, cy, rx, ry, x0, y0);\n    return distance(nearestPoint.x, nearestPoint.y, x0, y0);\n  },\n  pointAt: function (cx, cy, rx, ry, xRotation, startAngle, endAngle, t) {\n    var angle = (endAngle - startAngle) * t + startAngle;\n    return {\n      x: xAt(cx, cy, rx, ry, xRotation, angle),\n      y: yAt(cx, cy, rx, ry, xRotation, angle)\n    };\n  },\n  tangentAngle: function (cx, cy, rx, ry, xRotation, startAngle, endAngle, t) {\n    var angle = (endAngle - startAngle) * t + startAngle;\n    var dx = derivativeXAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle);\n    var dy = derivativeYAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle);\n    return piMod(Math.atan2(dy, dx));\n  }\n};","map":{"version":3,"names":["distance","piMod","ellipse","derivativeXAt","cx","cy","rx","ry","xRotation","startAngle","endAngle","angle","Math","cos","sin","derivativeYAt","xExtrema","atan","tan","yExtrema","xAt","yAt","getAngle","x0","y0","atan2","PI","getPoint","x","y","rotate","box","xDim","minX","Infinity","maxX","xs","i","xAngle","push","length","yDim","minY","maxY","ys","yAngle","width","height","nearestPoint","relativeVector","x1","y1","relativePoint","vector","pointDistance","pointAt","t","tangentAngle","dx","dy"],"sources":["../src/arc.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}