{"ast":null,"code":"import { Mix } from './plots/mix';\n/** 实验室图表所处的阶段 */\nexport var Stage;\n(function (Stage) {\n  Stage[\"DEV\"] = \"DEV\";\n  Stage[\"BETA\"] = \"BETA\";\n  Stage[\"STABLE\"] = \"STABLE\";\n})(Stage || (Stage = {}));\n/**\n * 不同阶段打印一些消息给开发者\n * @param stage\n */\nexport function notice(stage, plotType) {\n  console.warn(stage === Stage.DEV ? \"Plot '\".concat(plotType, \"' is in DEV stage, just give us issues.\") : stage === Stage.BETA ? \"Plot '\".concat(plotType, \"' is in BETA stage, DO NOT use it in production env.\") : stage === Stage.STABLE ? \"Plot '\".concat(plotType, \"' is in STABLE stage, import it by \\\"import { \").concat(plotType, \" } from '@antv/g2plot'\\\".\") : 'invalid Stage type.');\n}\n/**\n * 实验室图表，实验室中的图表分成不同的阶段。\n */\nvar Lab = /** @class */function () {\n  function Lab() {}\n  Object.defineProperty(Lab, \"MultiView\", {\n    get: function () {\n      notice(Stage.STABLE, 'MultiView');\n      return Mix;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Lab;\n}();\nexport { Lab };","map":{"version":3,"names":["Mix","Stage","notice","stage","plotType","console","warn","DEV","concat","BETA","STABLE","Lab","Object","defineProperty","get"],"sources":["../src/lab.ts"],"sourcesContent":["import { Mix } from './plots/mix';\n\n/** 实验室图表所处的阶段 */\nexport enum Stage {\n  DEV = 'DEV',\n  BETA = 'BETA',\n  STABLE = 'STABLE',\n}\n\n/**\n * 不同阶段打印一些消息给开发者\n * @param stage\n */\nexport function notice(stage: Stage, plotType: string) {\n  console.warn(\n    stage === Stage.DEV\n      ? `Plot '${plotType}' is in DEV stage, just give us issues.`\n      : stage === Stage.BETA\n      ? `Plot '${plotType}' is in BETA stage, DO NOT use it in production env.`\n      : stage === Stage.STABLE\n      ? `Plot '${plotType}' is in STABLE stage, import it by \"import { ${plotType} } from '@antv/g2plot'\".`\n      : 'invalid Stage type.'\n  );\n}\n\n/**\n * 实验室图表，实验室中的图表分成不同的阶段。\n */\nexport class Lab {\n  static get MultiView() {\n    notice(Stage.STABLE, 'MultiView');\n    return Mix;\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,aAAa;AAEjC;AACA,WAAYC,KAIX;AAJD,WAAYA,KAAK;EACfA,KAAA,eAAW;EACXA,KAAA,iBAAa;EACbA,KAAA,qBAAiB;AACnB,CAAC,EAJWA,KAAK,KAALA,KAAK;AAMjB;;;;AAIA,OAAM,SAAUC,MAAMA,CAACC,KAAY,EAAEC,QAAgB;EACnDC,OAAO,CAACC,IAAI,CACVH,KAAK,KAAKF,KAAK,CAACM,GAAG,GACf,SAAAC,MAAA,CAASJ,QAAQ,4CAAyC,GAC1DD,KAAK,KAAKF,KAAK,CAACQ,IAAI,GACpB,SAAAD,MAAA,CAASJ,QAAQ,yDAAsD,GACvED,KAAK,KAAKF,KAAK,CAACS,MAAM,GACtB,SAAAF,MAAA,CAASJ,QAAQ,oDAAAI,MAAA,CAAgDJ,QAAQ,8BAA0B,GACnG,qBAAqB,CAC1B;AACH;AAEA;;;AAGA,IAAAO,GAAA;EAAA,SAAAA,IAAA,GAKA;EAJEC,MAAA,CAAAC,cAAA,CAAWF,GAAA,aAAS;SAApB,SAAAG,CAAA;MACEZ,MAAM,CAACD,KAAK,CAACS,MAAM,EAAE,WAAW,CAAC;MACjC,OAAOV,GAAG;IACZ,CAAC;;;;EACH,OAAAW,GAAC;AAAD,CAAC,CALD"},"metadata":{},"sourceType":"module","externalDependencies":[]}