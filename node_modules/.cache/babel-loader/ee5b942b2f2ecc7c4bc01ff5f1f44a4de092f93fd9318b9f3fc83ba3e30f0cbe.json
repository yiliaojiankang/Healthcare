{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { BlendFactor, BlendMode, ChannelWriteMask, CompareFunction, CullMode, Format, StencilOp, TransparentBlack, VertexStepMode, ViewportOrigin } from '@antv/g-device-api';\nimport { gl } from '@antv/l7-core';\nimport { lodashUtil } from '@antv/l7-utils';\nimport DeviceFramebuffer from \"./DeviceFramebuffer\";\nimport DeviceTexture2D from \"./DeviceTexture2D\";\nimport { blendEquationMap, blendFuncMap, cullFaceMap, depthFuncMap, primitiveMap, sizeFormatMap, stencilFuncMap, stencilOpMap } from \"./constants\";\nvar isPlainObject = lodashUtil.isPlainObject,\n  isTypedArray = lodashUtil.isTypedArray;\nvar DeviceModel = /*#__PURE__*/function () {\n  function DeviceModel(device, options, service) {\n    var _this = this;\n    _classCallCheck(this, DeviceModel);\n    _defineProperty(this, \"destroyed\", false);\n    _defineProperty(this, \"uniforms\", {});\n    _defineProperty(this, \"vertexBuffers\", []);\n    this.device = device;\n    this.options = options;\n    this.service = service;\n    var vs = options.vs,\n      fs = options.fs,\n      attributes = options.attributes,\n      uniforms = options.uniforms,\n      count = options.count,\n      elements = options.elements,\n      diagnosticDerivativeUniformityEnabled = options.diagnosticDerivativeUniformityEnabled;\n    this.options = options;\n    var diagnosticDerivativeUniformityHeader = diagnosticDerivativeUniformityEnabled ? '' : this.service['viewportOrigin'] === ViewportOrigin.UPPER_LEFT ? 'diagnostic(off,derivative_uniformity);' : '';\n    this.program = service.renderCache.createProgram({\n      vertex: {\n        glsl: vs\n      },\n      fragment: {\n        glsl: fs,\n        postprocess: function postprocess(fs) {\n          return diagnosticDerivativeUniformityHeader + fs;\n        }\n      }\n    });\n    if (uniforms) {\n      this.uniforms = this.extractUniforms(uniforms);\n    }\n    var vertexBufferDescriptors = [];\n\n    // Infer count from data if not provided.\n    var inferredCount = 0;\n    Object.keys(attributes).forEach(function (name) {\n      var attribute = attributes[name];\n      var buffer = attribute.get();\n      // Bind at each frame.\n      _this.vertexBuffers.push(buffer.get());\n      var _attribute$attribute = attribute['attribute'],\n        _attribute$attribute$ = _attribute$attribute.offset,\n        offset = _attribute$attribute$ === void 0 ? 0 : _attribute$attribute$,\n        _attribute$attribute$2 = _attribute$attribute.stride,\n        stride = _attribute$attribute$2 === void 0 ? 0 : _attribute$attribute$2,\n        _attribute$attribute$3 = _attribute$attribute.size,\n        size = _attribute$attribute$3 === void 0 ? 1 : _attribute$attribute$3,\n        _attribute$attribute$4 = _attribute$attribute.divisor,\n        divisor = _attribute$attribute$4 === void 0 ? 0 : _attribute$attribute$4,\n        _attribute$attribute$5 = _attribute$attribute.shaderLocation,\n        shaderLocation = _attribute$attribute$5 === void 0 ? 0 : _attribute$attribute$5;\n      vertexBufferDescriptors.push({\n        arrayStride: stride || size * 4,\n        // TODO: L7 hasn't use instanced array for now.\n        stepMode: VertexStepMode.VERTEX,\n        attributes: [{\n          format: sizeFormatMap[size],\n          shaderLocation: shaderLocation,\n          offset: offset,\n          divisor: divisor\n        }]\n      });\n      inferredCount = buffer['size'] / size;\n    });\n    if (!count) {\n      this.options.count = inferredCount;\n    }\n    if (elements) {\n      this.indexBuffer = elements.get();\n    }\n    var inputLayout = service.renderCache.createInputLayout({\n      vertexBufferDescriptors: vertexBufferDescriptors,\n      indexBufferFormat: elements ? Format.U32_R : null,\n      program: this.program\n    });\n    this.inputLayout = inputLayout;\n    this.pipeline = this.createPipeline(options);\n  }\n  _createClass(DeviceModel, [{\n    key: \"createPipeline\",\n    value: function createPipeline(options, pick) {\n      var _options$primitive = options.primitive,\n        primitive = _options$primitive === void 0 ? gl.TRIANGLES : _options$primitive,\n        depth = options.depth,\n        cull = options.cull,\n        blend = options.blend,\n        stencil = options.stencil;\n      var depthParams = this.initDepthDrawParams({\n        depth: depth\n      });\n      var depthEnabled = !!(depthParams && depthParams.enable);\n      var cullParams = this.initCullDrawParams({\n        cull: cull\n      });\n      var cullEnabled = !!(cullParams && cullParams.enable);\n      // Disable blend when picking.\n      var blendParams = this.getBlendDrawParams({\n        blend: blend\n      });\n      var blendEnabled = !!(blendParams && blendParams.enable);\n      var stencilParams = this.getStencilDrawParams({\n        stencil: stencil\n      });\n      var stencilEnabled = !!(stencilParams && stencilParams.enable);\n      return this.device.createRenderPipeline({\n        // return this.service.renderCache.createRenderPipeline({\n        inputLayout: this.inputLayout,\n        program: this.program,\n        topology: primitiveMap[primitive],\n        colorAttachmentFormats: [Format.U8_RGBA_RT],\n        depthStencilAttachmentFormat: Format.D24_S8,\n        megaStateDescriptor: {\n          attachmentsState: [pick ? {\n            channelWriteMask: ChannelWriteMask.ALL,\n            rgbBlendState: {\n              blendMode: BlendMode.ADD,\n              blendSrcFactor: BlendFactor.ONE,\n              blendDstFactor: BlendFactor.ZERO\n            },\n            alphaBlendState: {\n              blendMode: BlendMode.ADD,\n              blendSrcFactor: BlendFactor.ONE,\n              blendDstFactor: BlendFactor.ZERO\n            }\n          } : {\n            channelWriteMask: stencilEnabled && stencilParams.opFront.zpass === StencilOp.REPLACE ? ChannelWriteMask.NONE : ChannelWriteMask.ALL,\n            rgbBlendState: {\n              blendMode: blendEnabled && blendParams.equation.rgb || BlendMode.ADD,\n              blendSrcFactor: blendEnabled && blendParams.func.srcRGB || BlendFactor.SRC_ALPHA,\n              blendDstFactor: blendEnabled && blendParams.func.dstRGB || BlendFactor.ONE_MINUS_SRC_ALPHA\n            },\n            alphaBlendState: {\n              blendMode: blendEnabled && blendParams.equation.alpha || BlendMode.ADD,\n              blendSrcFactor: blendEnabled && blendParams.func.srcAlpha || BlendFactor.ONE,\n              blendDstFactor: blendEnabled && blendParams.func.dstAlpha || BlendFactor.ONE\n            }\n          }],\n          blendConstant: blendEnabled ? TransparentBlack : undefined,\n          depthWrite: depthEnabled,\n          depthCompare: depthEnabled && depthParams.func || CompareFunction.LESS,\n          cullMode: cullEnabled && cullParams.face || CullMode.NONE,\n          stencilWrite: stencilEnabled,\n          stencilFront: {\n            compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n            passOp: stencilParams.opFront.zpass,\n            failOp: stencilParams.opFront.fail,\n            depthFailOp: stencilParams.opFront.zfail,\n            mask: stencilParams.opFront.mask\n          },\n          stencilBack: {\n            compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n            passOp: stencilParams.opBack.zpass,\n            failOp: stencilParams.opBack.fail,\n            depthFailOp: stencilParams.opBack.zfail,\n            mask: stencilParams.opBack.mask\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateAttributesAndElements\",\n    value: function updateAttributesAndElements() {}\n\n    /**\n     * No need to implement this method, you should update data on `Attribute` like this:\n     *\n     * @example\n     * ```ts\n     * attribute.updateBuffer({\n     *   data: [],\n     *   offset: 0,\n     * });\n     * ```\n     */\n  }, {\n    key: \"updateAttributes\",\n    value: function updateAttributes() {}\n  }, {\n    key: \"addUniforms\",\n    value: function addUniforms(uniforms) {\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), this.extractUniforms(uniforms));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(options, pick) {\n      var _this2 = this;\n      var mergedOptions = _objectSpread(_objectSpread({}, this.options), options);\n      var _mergedOptions$count = mergedOptions.count,\n        count = _mergedOptions$count === void 0 ? 0 : _mergedOptions$count,\n        instances = mergedOptions.instances,\n        elements = mergedOptions.elements,\n        _mergedOptions$unifor = mergedOptions.uniforms,\n        uniforms = _mergedOptions$unifor === void 0 ? {} : _mergedOptions$unifor,\n        uniformBuffers = mergedOptions.uniformBuffers,\n        textures = mergedOptions.textures;\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), this.extractUniforms(uniforms));\n      var _this$service = this.service,\n        renderPass = _this$service.renderPass,\n        currentFramebuffer = _this$service.currentFramebuffer,\n        width = _this$service.width,\n        height = _this$service.height,\n        renderCache = _this$service.renderCache;\n\n      // TODO: Recreate pipeline only when blend / cull changed.\n      this.pipeline = this.createPipeline(mergedOptions, pick);\n\n      // const height = this.device['swapChainHeight'];\n      var device = this.service['device'];\n      // @ts-ignore\n      var tmpHeight = device['swapChainHeight'];\n      // @ts-ignore\n      device['swapChainHeight'] = (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer['height']) || height;\n      renderPass.setViewport(0, 0, (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer['width']) || width, (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer['height']) || height);\n\n      // @ts-ignore\n      device['swapChainHeight'] = tmpHeight;\n      renderPass.setPipeline(this.pipeline);\n      renderPass.setStencilReference(1);\n      renderPass.setVertexInput(this.inputLayout, this.vertexBuffers.map(function (buffer) {\n        return {\n          buffer: buffer\n        };\n      }), elements ? {\n        buffer: this.indexBuffer,\n        offset: 0\n      } : null);\n      if (uniformBuffers) {\n        // this.bindings = device.createBindings({\n        this.bindings = renderCache.createBindings({\n          pipeline: this.pipeline,\n          uniformBufferBindings: uniformBuffers.map(function (uniformBuffer, i) {\n            var buffer = uniformBuffer;\n            return {\n              binding: i,\n              buffer: buffer.get(),\n              size: buffer['size']\n            };\n          }),\n          samplerBindings: textures === null || textures === void 0 ? void 0 : textures.map(function (t) {\n            return {\n              texture: t['texture'],\n              sampler: t['sampler']\n            };\n          })\n        });\n      }\n      if (this.bindings) {\n        renderPass.setBindings(this.bindings);\n        // Compatible to WebGL1.\n        Object.keys(this.uniforms).forEach(function (uniformName) {\n          var uniform = _this2.uniforms[uniformName];\n          if (uniform instanceof DeviceTexture2D) {\n            // @ts-ignore\n            _this2.uniforms[uniformName] = uniform.get();\n          } else if (uniform instanceof DeviceFramebuffer) {\n            // @ts-ignore\n            _this2.uniforms[uniformName] = uniform.get()['texture'];\n          }\n        });\n        this.program.setUniformsLegacy(this.uniforms);\n      }\n      if (elements) {\n        var indexCount = elements['count'];\n        if (indexCount === 0) {\n          renderPass.draw(count, instances);\n        } else {\n          renderPass.drawIndexed(indexCount, instances);\n        }\n      } else {\n        renderPass.draw(count, instances);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$vertexBuffers, _this$indexBuffer, _this$bindings;\n      this.program.destroy();\n      (_this$vertexBuffers = this.vertexBuffers) === null || _this$vertexBuffers === void 0 || _this$vertexBuffers.forEach(function (buffer) {\n        return buffer.destroy();\n      });\n      (_this$indexBuffer = this.indexBuffer) === null || _this$indexBuffer === void 0 || _this$indexBuffer.destroy();\n      (_this$bindings = this.bindings) === null || _this$bindings === void 0 || _this$bindings.destroy();\n      this.inputLayout.destroy();\n      this.pipeline.destroy();\n      this.destroyed = true;\n    }\n  }, {\n    key: \"initDepthDrawParams\",\n    value: function initDepthDrawParams(_ref) {\n      var depth = _ref.depth;\n      if (depth) {\n        return {\n          enable: depth.enable === undefined ? true : !!depth.enable,\n          mask: depth.mask === undefined ? true : !!depth.mask,\n          func: depthFuncMap[depth.func || gl.LESS],\n          range: depth.range || [0, 1]\n        };\n      }\n    }\n  }, {\n    key: \"getBlendDrawParams\",\n    value: function getBlendDrawParams(_ref2) {\n      var blend = _ref2.blend;\n      var _ref3 = blend || {},\n        enable = _ref3.enable,\n        func = _ref3.func,\n        equation = _ref3.equation,\n        _ref3$color = _ref3.color,\n        color = _ref3$color === void 0 ? [0, 0, 0, 0] : _ref3$color;\n      return {\n        enable: !!enable,\n        func: {\n          srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n          srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n          dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n          dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n        },\n        equation: {\n          rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n          alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n        },\n        color: color\n      };\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n     */\n  }, {\n    key: \"getStencilDrawParams\",\n    value: function getStencilDrawParams(_ref4) {\n      var stencil = _ref4.stencil;\n      var _ref5 = stencil || {},\n        enable = _ref5.enable,\n        _ref5$mask = _ref5.mask,\n        mask = _ref5$mask === void 0 ? 0xffffffff : _ref5$mask,\n        _ref5$func = _ref5.func,\n        func = _ref5$func === void 0 ? {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: 0xffffffff\n        } : _ref5$func,\n        _ref5$opFront = _ref5.opFront,\n        opFront = _ref5$opFront === void 0 ? {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP\n        } : _ref5$opFront,\n        _ref5$opBack = _ref5.opBack,\n        opBack = _ref5$opBack === void 0 ? {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP\n        } : _ref5$opBack;\n      return {\n        enable: !!enable,\n        mask: mask,\n        func: _objectSpread(_objectSpread({}, func), {}, {\n          cmp: stencilFuncMap[func.cmp]\n        }),\n        opFront: {\n          fail: stencilOpMap[opFront.fail],\n          zfail: stencilOpMap[opFront.zfail],\n          zpass: stencilOpMap[opFront.zpass],\n          mask: func.mask\n        },\n        opBack: {\n          fail: stencilOpMap[opBack.fail],\n          zfail: stencilOpMap[opBack.zfail],\n          zpass: stencilOpMap[opBack.zpass],\n          mask: func.mask\n        }\n      };\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n     */\n  }, {\n    key: \"initCullDrawParams\",\n    value: function initCullDrawParams(_ref6) {\n      var cull = _ref6.cull;\n      if (cull) {\n        var enable = cull.enable,\n          _cull$face = cull.face,\n          face = _cull$face === void 0 ? gl.BACK : _cull$face;\n        return {\n          enable: !!enable,\n          face: cullFaceMap[face]\n        };\n      }\n    }\n\n    /**\n     * 考虑结构体命名, eg:\n     * a: { b: 1 }  ->  'a.b'\n     * a: [ { b: 1 } ] -> 'a[0].b'\n     */\n  }, {\n    key: \"extractUniforms\",\n    value: function extractUniforms(uniforms) {\n      var _this3 = this;\n      var extractedUniforms = {};\n      Object.keys(uniforms).forEach(function (uniformName) {\n        _this3.extractUniformsRecursively(uniformName, uniforms[uniformName], extractedUniforms, '');\n      });\n      return extractedUniforms;\n    }\n  }, {\n    key: \"extractUniformsRecursively\",\n    value: function extractUniformsRecursively(uniformName, uniformValue, uniforms, prefix) {\n      var _this4 = this;\n      if (uniformValue === null || typeof uniformValue === 'number' ||\n      // u_A: 1\n      typeof uniformValue === 'boolean' ||\n      // u_A: false\n      Array.isArray(uniformValue) && typeof uniformValue[0] === 'number' ||\n      // u_A: [1, 2, 3]\n      isTypedArray(uniformValue) ||\n      // u_A: Float32Array\n      // @ts-ignore\n      uniformValue === '' || 'resize' in uniformValue) {\n        uniforms[\"\".concat(prefix && prefix + '.').concat(uniformName)] = uniformValue;\n        return;\n      }\n\n      // u_Struct.a.b.c\n      if (isPlainObject(uniformValue)) {\n        Object.keys(uniformValue).forEach(function (childName) {\n          _this4.extractUniformsRecursively(childName,\n          // @ts-ignore\n          uniformValue[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName));\n        });\n      }\n\n      // u_Struct[0].a\n      if (Array.isArray(uniformValue)) {\n        uniformValue.forEach(function (child, idx) {\n          Object.keys(child).forEach(function (childName) {\n            _this4.extractUniformsRecursively(childName,\n            // @ts-ignore\n            child[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName, \"[\").concat(idx, \"]\"));\n          });\n        });\n      }\n    }\n  }]);\n  return DeviceModel;\n}();\nexport { DeviceModel as default };","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_defineProperty","BlendFactor","BlendMode","ChannelWriteMask","CompareFunction","CullMode","Format","StencilOp","TransparentBlack","VertexStepMode","ViewportOrigin","gl","lodashUtil","DeviceFramebuffer","DeviceTexture2D","blendEquationMap","blendFuncMap","cullFaceMap","depthFuncMap","primitiveMap","sizeFormatMap","stencilFuncMap","stencilOpMap","isPlainObject","isTypedArray","DeviceModel","device","options","service","_this","vs","fs","attributes","uniforms","count","elements","diagnosticDerivativeUniformityEnabled","diagnosticDerivativeUniformityHeader","UPPER_LEFT","program","renderCache","createProgram","vertex","glsl","fragment","postprocess","extractUniforms","vertexBufferDescriptors","inferredCount","Object","keys","forEach","name","attribute","buffer","get","vertexBuffers","push","_attribute$attribute","_attribute$attribute$","offset","_attribute$attribute$2","stride","_attribute$attribute$3","size","_attribute$attribute$4","divisor","_attribute$attribute$5","shaderLocation","arrayStride","stepMode","VERTEX","format","indexBuffer","inputLayout","createInputLayout","indexBufferFormat","U32_R","pipeline","createPipeline","key","value","pick","_options$primitive","primitive","TRIANGLES","depth","cull","blend","stencil","depthParams","initDepthDrawParams","depthEnabled","enable","cullParams","initCullDrawParams","cullEnabled","blendParams","getBlendDrawParams","blendEnabled","stencilParams","getStencilDrawParams","stencilEnabled","createRenderPipeline","topology","colorAttachmentFormats","U8_RGBA_RT","depthStencilAttachmentFormat","D24_S8","megaStateDescriptor","attachmentsState","channelWriteMask","ALL","rgbBlendState","blendMode","ADD","blendSrcFactor","ONE","blendDstFactor","ZERO","alphaBlendState","opFront","zpass","REPLACE","NONE","equation","rgb","func","srcRGB","SRC_ALPHA","dstRGB","ONE_MINUS_SRC_ALPHA","alpha","srcAlpha","dstAlpha","blendConstant","undefined","depthWrite","depthCompare","LESS","cullMode","face","stencilWrite","stencilFront","compare","cmp","ALWAYS","passOp","failOp","fail","depthFailOp","zfail","mask","stencilBack","opBack","updateAttributesAndElements","updateAttributes","addUniforms","draw","_this2","mergedOptions","_mergedOptions$count","instances","_mergedOptions$unifor","uniformBuffers","textures","_this$service","renderPass","currentFramebuffer","width","height","tmpHeight","setViewport","setPipeline","setStencilReference","setVertexInput","map","bindings","createBindings","uniformBufferBindings","uniformBuffer","i","binding","samplerBindings","t","texture","sampler","setBindings","uniformName","uniform","setUniformsLegacy","indexCount","drawIndexed","destroy","_this$vertexBuffers","_this$indexBuffer","_this$bindings","destroyed","_ref","range","_ref2","_ref3","_ref3$color","color","FUNC_ADD","_ref4","_ref5","_ref5$mask","_ref5$func","ref","_ref5$opFront","KEEP","_ref5$opBack","_ref6","_cull$face","BACK","_this3","extractedUniforms","extractUniformsRecursively","uniformValue","prefix","_this4","Array","isArray","concat","childName","child","idx","default"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/l7-renderer/es/device/DeviceModel.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { BlendFactor, BlendMode, ChannelWriteMask, CompareFunction, CullMode, Format, StencilOp, TransparentBlack, VertexStepMode, ViewportOrigin } from '@antv/g-device-api';\nimport { gl } from '@antv/l7-core';\nimport { lodashUtil } from '@antv/l7-utils';\nimport DeviceFramebuffer from \"./DeviceFramebuffer\";\nimport DeviceTexture2D from \"./DeviceTexture2D\";\nimport { blendEquationMap, blendFuncMap, cullFaceMap, depthFuncMap, primitiveMap, sizeFormatMap, stencilFuncMap, stencilOpMap } from \"./constants\";\nvar isPlainObject = lodashUtil.isPlainObject,\n  isTypedArray = lodashUtil.isTypedArray;\nvar DeviceModel = /*#__PURE__*/function () {\n  function DeviceModel(device, options, service) {\n    var _this = this;\n    _classCallCheck(this, DeviceModel);\n    _defineProperty(this, \"destroyed\", false);\n    _defineProperty(this, \"uniforms\", {});\n    _defineProperty(this, \"vertexBuffers\", []);\n    this.device = device;\n    this.options = options;\n    this.service = service;\n    var vs = options.vs,\n      fs = options.fs,\n      attributes = options.attributes,\n      uniforms = options.uniforms,\n      count = options.count,\n      elements = options.elements,\n      diagnosticDerivativeUniformityEnabled = options.diagnosticDerivativeUniformityEnabled;\n    this.options = options;\n    var diagnosticDerivativeUniformityHeader = diagnosticDerivativeUniformityEnabled ? '' : this.service['viewportOrigin'] === ViewportOrigin.UPPER_LEFT ? 'diagnostic(off,derivative_uniformity);' : '';\n    this.program = service.renderCache.createProgram({\n      vertex: {\n        glsl: vs\n      },\n      fragment: {\n        glsl: fs,\n        postprocess: function postprocess(fs) {\n          return diagnosticDerivativeUniformityHeader + fs;\n        }\n      }\n    });\n    if (uniforms) {\n      this.uniforms = this.extractUniforms(uniforms);\n    }\n    var vertexBufferDescriptors = [];\n\n    // Infer count from data if not provided.\n    var inferredCount = 0;\n    Object.keys(attributes).forEach(function (name) {\n      var attribute = attributes[name];\n      var buffer = attribute.get();\n      // Bind at each frame.\n      _this.vertexBuffers.push(buffer.get());\n      var _attribute$attribute = attribute['attribute'],\n        _attribute$attribute$ = _attribute$attribute.offset,\n        offset = _attribute$attribute$ === void 0 ? 0 : _attribute$attribute$,\n        _attribute$attribute$2 = _attribute$attribute.stride,\n        stride = _attribute$attribute$2 === void 0 ? 0 : _attribute$attribute$2,\n        _attribute$attribute$3 = _attribute$attribute.size,\n        size = _attribute$attribute$3 === void 0 ? 1 : _attribute$attribute$3,\n        _attribute$attribute$4 = _attribute$attribute.divisor,\n        divisor = _attribute$attribute$4 === void 0 ? 0 : _attribute$attribute$4,\n        _attribute$attribute$5 = _attribute$attribute.shaderLocation,\n        shaderLocation = _attribute$attribute$5 === void 0 ? 0 : _attribute$attribute$5;\n      vertexBufferDescriptors.push({\n        arrayStride: stride || size * 4,\n        // TODO: L7 hasn't use instanced array for now.\n        stepMode: VertexStepMode.VERTEX,\n        attributes: [{\n          format: sizeFormatMap[size],\n          shaderLocation: shaderLocation,\n          offset: offset,\n          divisor: divisor\n        }]\n      });\n      inferredCount = buffer['size'] / size;\n    });\n    if (!count) {\n      this.options.count = inferredCount;\n    }\n    if (elements) {\n      this.indexBuffer = elements.get();\n    }\n    var inputLayout = service.renderCache.createInputLayout({\n      vertexBufferDescriptors: vertexBufferDescriptors,\n      indexBufferFormat: elements ? Format.U32_R : null,\n      program: this.program\n    });\n    this.inputLayout = inputLayout;\n    this.pipeline = this.createPipeline(options);\n  }\n  _createClass(DeviceModel, [{\n    key: \"createPipeline\",\n    value: function createPipeline(options, pick) {\n      var _options$primitive = options.primitive,\n        primitive = _options$primitive === void 0 ? gl.TRIANGLES : _options$primitive,\n        depth = options.depth,\n        cull = options.cull,\n        blend = options.blend,\n        stencil = options.stencil;\n      var depthParams = this.initDepthDrawParams({\n        depth: depth\n      });\n      var depthEnabled = !!(depthParams && depthParams.enable);\n      var cullParams = this.initCullDrawParams({\n        cull: cull\n      });\n      var cullEnabled = !!(cullParams && cullParams.enable);\n      // Disable blend when picking.\n      var blendParams = this.getBlendDrawParams({\n        blend: blend\n      });\n      var blendEnabled = !!(blendParams && blendParams.enable);\n      var stencilParams = this.getStencilDrawParams({\n        stencil: stencil\n      });\n      var stencilEnabled = !!(stencilParams && stencilParams.enable);\n      return this.device.createRenderPipeline({\n        // return this.service.renderCache.createRenderPipeline({\n        inputLayout: this.inputLayout,\n        program: this.program,\n        topology: primitiveMap[primitive],\n        colorAttachmentFormats: [Format.U8_RGBA_RT],\n        depthStencilAttachmentFormat: Format.D24_S8,\n        megaStateDescriptor: {\n          attachmentsState: [pick ? {\n            channelWriteMask: ChannelWriteMask.ALL,\n            rgbBlendState: {\n              blendMode: BlendMode.ADD,\n              blendSrcFactor: BlendFactor.ONE,\n              blendDstFactor: BlendFactor.ZERO\n            },\n            alphaBlendState: {\n              blendMode: BlendMode.ADD,\n              blendSrcFactor: BlendFactor.ONE,\n              blendDstFactor: BlendFactor.ZERO\n            }\n          } : {\n            channelWriteMask: stencilEnabled && stencilParams.opFront.zpass === StencilOp.REPLACE ? ChannelWriteMask.NONE : ChannelWriteMask.ALL,\n            rgbBlendState: {\n              blendMode: blendEnabled && blendParams.equation.rgb || BlendMode.ADD,\n              blendSrcFactor: blendEnabled && blendParams.func.srcRGB || BlendFactor.SRC_ALPHA,\n              blendDstFactor: blendEnabled && blendParams.func.dstRGB || BlendFactor.ONE_MINUS_SRC_ALPHA\n            },\n            alphaBlendState: {\n              blendMode: blendEnabled && blendParams.equation.alpha || BlendMode.ADD,\n              blendSrcFactor: blendEnabled && blendParams.func.srcAlpha || BlendFactor.ONE,\n              blendDstFactor: blendEnabled && blendParams.func.dstAlpha || BlendFactor.ONE\n            }\n          }],\n          blendConstant: blendEnabled ? TransparentBlack : undefined,\n          depthWrite: depthEnabled,\n          depthCompare: depthEnabled && depthParams.func || CompareFunction.LESS,\n          cullMode: cullEnabled && cullParams.face || CullMode.NONE,\n          stencilWrite: stencilEnabled,\n          stencilFront: {\n            compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n            passOp: stencilParams.opFront.zpass,\n            failOp: stencilParams.opFront.fail,\n            depthFailOp: stencilParams.opFront.zfail,\n            mask: stencilParams.opFront.mask\n          },\n          stencilBack: {\n            compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n            passOp: stencilParams.opBack.zpass,\n            failOp: stencilParams.opBack.fail,\n            depthFailOp: stencilParams.opBack.zfail,\n            mask: stencilParams.opBack.mask\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateAttributesAndElements\",\n    value: function updateAttributesAndElements() {}\n\n    /**\n     * No need to implement this method, you should update data on `Attribute` like this:\n     *\n     * @example\n     * ```ts\n     * attribute.updateBuffer({\n     *   data: [],\n     *   offset: 0,\n     * });\n     * ```\n     */\n  }, {\n    key: \"updateAttributes\",\n    value: function updateAttributes() {}\n  }, {\n    key: \"addUniforms\",\n    value: function addUniforms(uniforms) {\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), this.extractUniforms(uniforms));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(options, pick) {\n      var _this2 = this;\n      var mergedOptions = _objectSpread(_objectSpread({}, this.options), options);\n      var _mergedOptions$count = mergedOptions.count,\n        count = _mergedOptions$count === void 0 ? 0 : _mergedOptions$count,\n        instances = mergedOptions.instances,\n        elements = mergedOptions.elements,\n        _mergedOptions$unifor = mergedOptions.uniforms,\n        uniforms = _mergedOptions$unifor === void 0 ? {} : _mergedOptions$unifor,\n        uniformBuffers = mergedOptions.uniformBuffers,\n        textures = mergedOptions.textures;\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), this.extractUniforms(uniforms));\n      var _this$service = this.service,\n        renderPass = _this$service.renderPass,\n        currentFramebuffer = _this$service.currentFramebuffer,\n        width = _this$service.width,\n        height = _this$service.height,\n        renderCache = _this$service.renderCache;\n\n      // TODO: Recreate pipeline only when blend / cull changed.\n      this.pipeline = this.createPipeline(mergedOptions, pick);\n\n      // const height = this.device['swapChainHeight'];\n      var device = this.service['device'];\n      // @ts-ignore\n      var tmpHeight = device['swapChainHeight'];\n      // @ts-ignore\n      device['swapChainHeight'] = (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer['height']) || height;\n      renderPass.setViewport(0, 0, (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer['width']) || width, (currentFramebuffer === null || currentFramebuffer === void 0 ? void 0 : currentFramebuffer['height']) || height);\n\n      // @ts-ignore\n      device['swapChainHeight'] = tmpHeight;\n      renderPass.setPipeline(this.pipeline);\n      renderPass.setStencilReference(1);\n      renderPass.setVertexInput(this.inputLayout, this.vertexBuffers.map(function (buffer) {\n        return {\n          buffer: buffer\n        };\n      }), elements ? {\n        buffer: this.indexBuffer,\n        offset: 0\n      } : null);\n      if (uniformBuffers) {\n        // this.bindings = device.createBindings({\n        this.bindings = renderCache.createBindings({\n          pipeline: this.pipeline,\n          uniformBufferBindings: uniformBuffers.map(function (uniformBuffer, i) {\n            var buffer = uniformBuffer;\n            return {\n              binding: i,\n              buffer: buffer.get(),\n              size: buffer['size']\n            };\n          }),\n          samplerBindings: textures === null || textures === void 0 ? void 0 : textures.map(function (t) {\n            return {\n              texture: t['texture'],\n              sampler: t['sampler']\n            };\n          })\n        });\n      }\n      if (this.bindings) {\n        renderPass.setBindings(this.bindings);\n        // Compatible to WebGL1.\n        Object.keys(this.uniforms).forEach(function (uniformName) {\n          var uniform = _this2.uniforms[uniformName];\n          if (uniform instanceof DeviceTexture2D) {\n            // @ts-ignore\n            _this2.uniforms[uniformName] = uniform.get();\n          } else if (uniform instanceof DeviceFramebuffer) {\n            // @ts-ignore\n            _this2.uniforms[uniformName] = uniform.get()['texture'];\n          }\n        });\n        this.program.setUniformsLegacy(this.uniforms);\n      }\n      if (elements) {\n        var indexCount = elements['count'];\n        if (indexCount === 0) {\n          renderPass.draw(count, instances);\n        } else {\n          renderPass.drawIndexed(indexCount, instances);\n        }\n      } else {\n        renderPass.draw(count, instances);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$vertexBuffers, _this$indexBuffer, _this$bindings;\n      this.program.destroy();\n      (_this$vertexBuffers = this.vertexBuffers) === null || _this$vertexBuffers === void 0 || _this$vertexBuffers.forEach(function (buffer) {\n        return buffer.destroy();\n      });\n      (_this$indexBuffer = this.indexBuffer) === null || _this$indexBuffer === void 0 || _this$indexBuffer.destroy();\n      (_this$bindings = this.bindings) === null || _this$bindings === void 0 || _this$bindings.destroy();\n      this.inputLayout.destroy();\n      this.pipeline.destroy();\n      this.destroyed = true;\n    }\n  }, {\n    key: \"initDepthDrawParams\",\n    value: function initDepthDrawParams(_ref) {\n      var depth = _ref.depth;\n      if (depth) {\n        return {\n          enable: depth.enable === undefined ? true : !!depth.enable,\n          mask: depth.mask === undefined ? true : !!depth.mask,\n          func: depthFuncMap[depth.func || gl.LESS],\n          range: depth.range || [0, 1]\n        };\n      }\n    }\n  }, {\n    key: \"getBlendDrawParams\",\n    value: function getBlendDrawParams(_ref2) {\n      var blend = _ref2.blend;\n      var _ref3 = blend || {},\n        enable = _ref3.enable,\n        func = _ref3.func,\n        equation = _ref3.equation,\n        _ref3$color = _ref3.color,\n        color = _ref3$color === void 0 ? [0, 0, 0, 0] : _ref3$color;\n      return {\n        enable: !!enable,\n        func: {\n          srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n          srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n          dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n          dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n        },\n        equation: {\n          rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n          alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n        },\n        color: color\n      };\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n     */\n  }, {\n    key: \"getStencilDrawParams\",\n    value: function getStencilDrawParams(_ref4) {\n      var stencil = _ref4.stencil;\n      var _ref5 = stencil || {},\n        enable = _ref5.enable,\n        _ref5$mask = _ref5.mask,\n        mask = _ref5$mask === void 0 ? 0xffffffff : _ref5$mask,\n        _ref5$func = _ref5.func,\n        func = _ref5$func === void 0 ? {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: 0xffffffff\n        } : _ref5$func,\n        _ref5$opFront = _ref5.opFront,\n        opFront = _ref5$opFront === void 0 ? {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP\n        } : _ref5$opFront,\n        _ref5$opBack = _ref5.opBack,\n        opBack = _ref5$opBack === void 0 ? {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP\n        } : _ref5$opBack;\n      return {\n        enable: !!enable,\n        mask: mask,\n        func: _objectSpread(_objectSpread({}, func), {}, {\n          cmp: stencilFuncMap[func.cmp]\n        }),\n        opFront: {\n          fail: stencilOpMap[opFront.fail],\n          zfail: stencilOpMap[opFront.zfail],\n          zpass: stencilOpMap[opFront.zpass],\n          mask: func.mask\n        },\n        opBack: {\n          fail: stencilOpMap[opBack.fail],\n          zfail: stencilOpMap[opBack.zfail],\n          zpass: stencilOpMap[opBack.zpass],\n          mask: func.mask\n        }\n      };\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n     */\n  }, {\n    key: \"initCullDrawParams\",\n    value: function initCullDrawParams(_ref6) {\n      var cull = _ref6.cull;\n      if (cull) {\n        var enable = cull.enable,\n          _cull$face = cull.face,\n          face = _cull$face === void 0 ? gl.BACK : _cull$face;\n        return {\n          enable: !!enable,\n          face: cullFaceMap[face]\n        };\n      }\n    }\n\n    /**\n     * 考虑结构体命名, eg:\n     * a: { b: 1 }  ->  'a.b'\n     * a: [ { b: 1 } ] -> 'a[0].b'\n     */\n  }, {\n    key: \"extractUniforms\",\n    value: function extractUniforms(uniforms) {\n      var _this3 = this;\n      var extractedUniforms = {};\n      Object.keys(uniforms).forEach(function (uniformName) {\n        _this3.extractUniformsRecursively(uniformName, uniforms[uniformName], extractedUniforms, '');\n      });\n      return extractedUniforms;\n    }\n  }, {\n    key: \"extractUniformsRecursively\",\n    value: function extractUniformsRecursively(uniformName, uniformValue, uniforms, prefix) {\n      var _this4 = this;\n      if (uniformValue === null || typeof uniformValue === 'number' ||\n      // u_A: 1\n      typeof uniformValue === 'boolean' ||\n      // u_A: false\n      Array.isArray(uniformValue) && typeof uniformValue[0] === 'number' ||\n      // u_A: [1, 2, 3]\n      isTypedArray(uniformValue) ||\n      // u_A: Float32Array\n      // @ts-ignore\n      uniformValue === '' || 'resize' in uniformValue) {\n        uniforms[\"\".concat(prefix && prefix + '.').concat(uniformName)] = uniformValue;\n        return;\n      }\n\n      // u_Struct.a.b.c\n      if (isPlainObject(uniformValue)) {\n        Object.keys(uniformValue).forEach(function (childName) {\n          _this4.extractUniformsRecursively(childName,\n          // @ts-ignore\n          uniformValue[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName));\n        });\n      }\n\n      // u_Struct[0].a\n      if (Array.isArray(uniformValue)) {\n        uniformValue.forEach(function (child, idx) {\n          Object.keys(child).forEach(function (childName) {\n            _this4.extractUniformsRecursively(childName,\n            // @ts-ignore\n            child[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName, \"[\").concat(idx, \"]\"));\n          });\n        });\n      }\n    }\n  }]);\n  return DeviceModel;\n}();\nexport { DeviceModel as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}