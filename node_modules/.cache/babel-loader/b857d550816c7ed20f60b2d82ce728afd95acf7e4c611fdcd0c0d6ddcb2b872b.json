{"ast":null,"code":"import WebMercatorViewport from './web-mercator-viewport';\nimport { mod } from './math-utils';\nvar MAX_LATITUDE = 85.05113;\nvar MIN_LATITUDE = -85.05113;\nexport default function normalizeViewportProps(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    longitude = _ref.longitude,\n    latitude = _ref.latitude,\n    zoom = _ref.zoom,\n    _ref$pitch = _ref.pitch,\n    pitch = _ref$pitch === void 0 ? 0 : _ref$pitch,\n    _ref$bearing = _ref.bearing,\n    bearing = _ref$bearing === void 0 ? 0 : _ref$bearing;\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n  var flatViewport = new WebMercatorViewport({\n    width: width,\n    height: height,\n    longitude: longitude,\n    latitude: latitude,\n    zoom: zoom\n  });\n  var topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  var bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  var shiftY = 0;\n  if (bottomY - topY < height) {\n    zoom += Math.log2(height / (bottomY - topY));\n    flatViewport = new WebMercatorViewport({\n      width: width,\n      height: height,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom\n    });\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n  if (topY > 0) {\n    shiftY = topY;\n  } else if (bottomY < height) {\n    shiftY = bottomY - height;\n  }\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n  return {\n    width: width,\n    height: height,\n    longitude: longitude,\n    latitude: latitude,\n    zoom: zoom,\n    pitch: pitch,\n    bearing: bearing\n  };\n}","map":{"version":3,"names":["WebMercatorViewport","mod","MAX_LATITUDE","MIN_LATITUDE","normalizeViewportProps","_ref","width","height","longitude","latitude","zoom","_ref$pitch","pitch","_ref$bearing","bearing","flatViewport","topY","project","bottomY","shiftY","Math","log2","unproject"],"sources":["../../src/normalize-viewport-props.js"],"sourcesContent":["import WebMercatorViewport from './web-mercator-viewport';\nimport {mod}  from './math-utils';\n\n// defined by mapbox-gl\nconst MAX_LATITUDE = 85.05113;\nconst MIN_LATITUDE = -85.05113;\n\n// Apply mathematical constraints to viewport props\n/* eslint-disable complexity */\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  let flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  let topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  let bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  let shiftY = 0;\n\n  if (bottomY - topY < height) {\n    // Map height must not be smaller than viewport height\n    // Zoom out map to fit map height into viewport\n    zoom += Math.log2(height / (bottomY - topY));\n\n    // Calculate top and bottom using new zoom\n    flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n  if (topY > 0) {\n    // Compensate for white gap on top\n    shiftY = topY;\n  } else if (bottomY < height) {\n    // Compensate for white gap on bottom\n    shiftY = bottomY - height;\n  }\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}