{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findShortestPath = exports.findAllPath = void 0;\nvar _dijkstra = _interopRequireDefault(require(\"./dijkstra\"));\nvar _util = require(\"./util\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar findShortestPath = function findShortestPath(graphData, start, end, directed, weightPropertyName) {\n  var _a = (0, _dijkstra.default)(graphData, start, directed, weightPropertyName),\n    length = _a.length,\n    path = _a.path,\n    allPath = _a.allPath;\n  return {\n    length: length[end],\n    path: path[end],\n    allPath: allPath[end]\n  };\n};\nexports.findShortestPath = findShortestPath;\nvar findAllPath = function findAllPath(graphData, start, end, directed) {\n  var _a;\n  if (start === end) return [[start]];\n  var _b = graphData.edges,\n    edges = _b === void 0 ? [] : _b;\n  var visited = [start];\n  var isVisited = (_a = {}, _a[start] = true, _a);\n  var stack = []; // 辅助栈，用于存储访问过的节点的邻居节点\n  var allPath = [];\n  var neighbors = directed ? (0, _util.getNeighbors)(start, edges, 'target') : (0, _util.getNeighbors)(start, edges);\n  stack.push(neighbors);\n  while (visited.length > 0 && stack.length > 0) {\n    var children = stack[stack.length - 1];\n    if (children.length) {\n      var child = children.shift();\n      if (child) {\n        visited.push(child);\n        isVisited[child] = true;\n        neighbors = directed ? (0, _util.getNeighbors)(child, edges, 'target') : (0, _util.getNeighbors)(child, edges);\n        stack.push(neighbors.filter(function (neighbor) {\n          return !isVisited[neighbor];\n        }));\n      }\n    } else {\n      var node = visited.pop();\n      isVisited[node] = false;\n      stack.pop();\n      continue;\n    }\n    if (visited[visited.length - 1] === end) {\n      var path = visited.map(function (node) {\n        return node;\n      });\n      allPath.push(path);\n      var node = visited.pop();\n      isVisited[node] = false;\n      stack.pop();\n    }\n  }\n  return allPath;\n};\nexports.findAllPath = findAllPath;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","findShortestPath","findAllPath","_dijkstra","_interopRequireDefault","_util","obj","__esModule","default","graphData","start","end","directed","weightPropertyName","_a","length","path","allPath","_b","edges","visited","isVisited","stack","neighbors","getNeighbors","push","children","child","shift","filter","neighbor","node","pop","map"],"sources":["D:/桌面文件/C4大赛/作品源代码/vue/node_modules/@antv/algorithm/lib/find-path.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findShortestPath = exports.findAllPath = void 0;\nvar _dijkstra = _interopRequireDefault(require(\"./dijkstra\"));\nvar _util = require(\"./util\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar findShortestPath = function findShortestPath(graphData, start, end, directed, weightPropertyName) {\n  var _a = (0, _dijkstra.default)(graphData, start, directed, weightPropertyName),\n    length = _a.length,\n    path = _a.path,\n    allPath = _a.allPath;\n  return {\n    length: length[end],\n    path: path[end],\n    allPath: allPath[end]\n  };\n};\nexports.findShortestPath = findShortestPath;\nvar findAllPath = function findAllPath(graphData, start, end, directed) {\n  var _a;\n  if (start === end) return [[start]];\n  var _b = graphData.edges,\n    edges = _b === void 0 ? [] : _b;\n  var visited = [start];\n  var isVisited = (_a = {}, _a[start] = true, _a);\n  var stack = []; // 辅助栈，用于存储访问过的节点的邻居节点\n  var allPath = [];\n  var neighbors = directed ? (0, _util.getNeighbors)(start, edges, 'target') : (0, _util.getNeighbors)(start, edges);\n  stack.push(neighbors);\n  while (visited.length > 0 && stack.length > 0) {\n    var children = stack[stack.length - 1];\n    if (children.length) {\n      var child = children.shift();\n      if (child) {\n        visited.push(child);\n        isVisited[child] = true;\n        neighbors = directed ? (0, _util.getNeighbors)(child, edges, 'target') : (0, _util.getNeighbors)(child, edges);\n        stack.push(neighbors.filter(function (neighbor) {\n          return !isVisited[neighbor];\n        }));\n      }\n    } else {\n      var node = visited.pop();\n      isVisited[node] = false;\n      stack.pop();\n      continue;\n    }\n    if (visited[visited.length - 1] === end) {\n      var path = visited.map(function (node) {\n        return node;\n      });\n      allPath.push(path);\n      var node = visited.pop();\n      isVisited[node] = false;\n      stack.pop();\n    }\n  }\n  return allPath;\n};\nexports.findAllPath = findAllPath;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}