{"ast":null,"code":"import { lowerCase } from '@antv/util';\nexport { Facet } from './facet';\n/**\n * 所有的 Facet 类\n */\nvar Facets = {};\n/**\n * 根据 type 获取 facet 类\n * @param type 分面类型\n */\nexport var getFacet = function (type) {\n  return Facets[lowerCase(type)];\n};\n/**\n * 注册一个 Facet 类\n * @param type 分面类型\n * @param ctor 分面类\n */\nexport var registerFacet = function (type, ctor) {\n  Facets[lowerCase(type)] = ctor;\n};","map":{"version":3,"names":["lowerCase","Facet","Facets","getFacet","type","registerFacet","ctor"],"sources":["../../src/facet/index.ts"],"sourcesContent":["import { lowerCase } from '@antv/util';\nimport { FacetCtor } from '../interface';\nexport { Facet } from './facet';\n\n/**\n * 所有的 Facet 类\n */\nconst Facets: Record<string, FacetCtor> = {};\n\n/**\n * 根据 type 获取 facet 类\n * @param type 分面类型\n */\nexport const getFacet = (type: string): FacetCtor => {\n  return Facets[lowerCase(type)];\n};\n\n/**\n * 注册一个 Facet 类\n * @param type 分面类型\n * @param ctor 分面类\n */\nexport const registerFacet = (type: string, ctor: FacetCtor) => {\n  Facets[lowerCase(type)] = ctor;\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,SAASC,KAAK,QAAQ,SAAS;AAE/B;;;AAGA,IAAMC,MAAM,GAA8B,EAAE;AAE5C;;;;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAAA,CAACC,IAAY;EACnC,OAAOF,MAAM,CAACF,SAAS,CAACI,IAAI,CAAC,CAAC;AAChC,CAAC;AAED;;;;;AAKA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAACD,IAAY,EAAEE,IAAe;EACzDJ,MAAM,CAACF,SAAS,CAACI,IAAI,CAAC,CAAC,GAAGE,IAAI;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}