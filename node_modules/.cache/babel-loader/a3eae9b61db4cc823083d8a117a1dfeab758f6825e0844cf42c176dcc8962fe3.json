{"ast":null,"code":"import Attribute from './attributes/base';\n// 所有的 attribute map\nvar ATTRIBUTE_MAP = {};\n/**\n * 通过类型获得 Attribute 类\n * @param type\n */\nvar getAttribute = function (type) {\n  return ATTRIBUTE_MAP[type.toLowerCase()];\n};\nvar registerAttribute = function (type, ctor) {\n  // 注册的时候，需要校验 type 重名，不区分大小写\n  if (getAttribute(type)) {\n    throw new Error(\"Attribute type '\".concat(type, \"' existed.\"));\n  }\n  // 存储到 map 中\n  ATTRIBUTE_MAP[type.toLowerCase()] = ctor;\n};\nexport { getAttribute, registerAttribute, Attribute };\nexport * from './interface';","map":{"version":3,"names":["Attribute","ATTRIBUTE_MAP","getAttribute","type","toLowerCase","registerAttribute","ctor","Error","concat"],"sources":["../src/factory.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,SAAmC,MAAM,mBAAmB;AAMnE;AACA,IAAMC,aAAa,GAAqB,EAAE;AAE1C;;;;AAIA,IAAMC,YAAY,GAAG,SAAAA,CAACC,IAAY;EAChC,OAAOF,aAAa,CAACE,IAAI,CAACC,WAAW,EAAE,CAAC;AAC1C,CAAC;AAED,IAAMC,iBAAiB,GAAG,SAAAA,CAACF,IAAY,EAAEG,IAA0B;EACjE;EACA,IAAIJ,YAAY,CAACC,IAAI,CAAC,EAAE;IACtB,MAAM,IAAII,KAAK,CAAC,mBAAAC,MAAA,CAAmBL,IAAI,eAAY,CAAC;;EAEtD;EACAF,aAAa,CAACE,IAAI,CAACC,WAAW,EAAE,CAAC,GAAGE,IAAI;AAC1C,CAAC;AAED,SAASJ,YAAY,EAAEG,iBAAiB,EAAEL,SAAS;AACnD,cAAc,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}