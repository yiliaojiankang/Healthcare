{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign } from '../../utils';\n/**\n * 获取柱子 path\n * @param points\n */\nfunction getRectPath(points) {\n  var path = [];\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n    if (point) {\n      var action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n  var first = points[0];\n  path.push(['L', first.x, first.y]);\n  path.push(['z']);\n  return path;\n}\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\nfunction getFillAttrs(cfg) {\n  return deepAssign({}, cfg.defaultStyle, cfg.style, {\n    fill: cfg.color\n  });\n}\nregisterShape('interval', 'waterfall', {\n  draw: function (cfg, container) {\n    var customInfo = cfg.customInfo,\n      points = cfg.points,\n      nextPoints = cfg.nextPoints;\n    var group = container.addGroup();\n    // ① 绘制柱体\n    var rectPath = this.parsePath(getRectPath(points));\n    var fillAttrs = getFillAttrs(cfg);\n    group.addShape('path', {\n      attrs: __assign(__assign({}, fillAttrs), {\n        path: rectPath\n      })\n    });\n    // ② 绘制连接线\n    var leaderLineCfg = get(customInfo, 'leaderLine');\n    if (leaderLineCfg && nextPoints) {\n      var linkPath = [['M', points[2].x, points[2].y], ['L', nextPoints[0].x, nextPoints[0].y]];\n      if (points[2].y === nextPoints[1].y) {\n        linkPath[1] = ['L', nextPoints[1].x, nextPoints[1].y];\n      }\n      linkPath = this.parsePath(linkPath);\n      group.addShape('path', {\n        attrs: __assign({\n          path: linkPath\n        }, leaderLineCfg.style || {})\n      });\n    }\n    return group;\n  }\n});","map":{"version":3,"names":["registerShape","get","deepAssign","getRectPath","points","path","i","length","point","action","push","x","y","first","getFillAttrs","cfg","defaultStyle","style","fill","color","draw","container","customInfo","nextPoints","group","addGroup","rectPath","parsePath","fillAttrs","addShape","attrs","__assign","leaderLineCfg","linkPath"],"sources":["../../../src/plots/waterfall/shape.ts"],"sourcesContent":["import { IGroup } from '@antv/g-base';\nimport { registerShape, Types } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { Point } from '../../types';\nimport { deepAssign } from '../../utils';\n\n/**\n * 获取柱子 path\n * @param points\n */\nfunction getRectPath(points: Point[]) {\n  const path = [];\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n    if (point) {\n      const action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n\n  const first = points[0];\n  path.push(['L', first.x, first.y]);\n  path.push(['z']);\n\n  return path;\n}\n\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\nfunction getFillAttrs(cfg: Types.ShapeInfo) {\n  return deepAssign({}, cfg.defaultStyle, cfg.style, { fill: cfg.color });\n}\n\nregisterShape('interval', 'waterfall', {\n  draw(cfg: Types.ShapeInfo & { points: Point[]; nextPoints: Point[] }, container: IGroup) {\n    const { customInfo, points, nextPoints } = cfg;\n\n    const group = container.addGroup();\n\n    // ① 绘制柱体\n    const rectPath = this.parsePath(getRectPath(points));\n    const fillAttrs = getFillAttrs(cfg);\n\n    group.addShape('path', {\n      attrs: {\n        ...fillAttrs,\n        path: rectPath,\n      },\n    });\n\n    // ② 绘制连接线\n    const leaderLineCfg = get(customInfo, 'leaderLine');\n    if (leaderLineCfg && nextPoints) {\n      let linkPath = [\n        ['M', points[2].x, points[2].y],\n        ['L', nextPoints[0].x, nextPoints[0].y],\n      ];\n\n      if (points[2].y === nextPoints[1].y) {\n        linkPath[1] = ['L', nextPoints[1].x, nextPoints[1].y];\n      }\n\n      linkPath = this.parsePath(linkPath);\n      group.addShape('path', {\n        attrs: {\n          path: linkPath,\n          ...(leaderLineCfg.style || {}),\n        },\n      });\n    }\n\n    return group;\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}